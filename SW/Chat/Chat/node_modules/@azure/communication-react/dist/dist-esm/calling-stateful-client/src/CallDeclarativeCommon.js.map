{"version":3,"file":"CallDeclarativeCommon.js","sourceRoot":"","sources":["../../../../preprocess-dist/calling-stateful-client/src/CallDeclarativeCommon.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { CallContext } from './CallContext';\nimport { CallCommon } from './BetaToStableTypes';\n/* @conditional-compile-remove(close-captions) */ /* @conditional-compile-remove(call-transfer) */\nimport { Features } from '@azure/communication-calling';\n/* @conditional-compile-remove(close-captions) */\nimport { TeamsCaptions } from '@azure/communication-calling';\n/* @conditional-compile-remove(call-transfer) */\nimport { TransferCallFeature, TransferAcceptedEvent, TransferEventArgs } from '@azure/communication-calling';\n/**\n * @private\n */\nexport abstract class ProxyCallCommon implements ProxyHandler<CallCommon> {\n  private _context: CallContext;\n  constructor(context: CallContext) {\n    this._context = context;\n  }\n  public unsubscribe(): void {\n    /** No subscriptions yet. But there will be one for transfer feature soon. */\n  }\n  protected getContext(): CallContext {\n    return this._context;\n  }\n  public get<P extends keyof CallCommon>(target: CallCommon, prop: P): any {\n    switch (prop) {\n      case 'mute':\n        {\n          return this._context.withAsyncErrorTeedToState(async function (...args: Parameters<CallCommon['mute']>) {\n            return await target.mute(...args);\n          }, 'Call.mute');\n        }\n      case 'unmute':\n        {\n          return this._context.withAsyncErrorTeedToState(async function (...args: Parameters<CallCommon['unmute']>) {\n            return await target.unmute(...args);\n          }, 'Call.unmute');\n        }\n      case 'startVideo':\n        {\n          return this._context.withAsyncErrorTeedToState(async function (...args: Parameters<CallCommon['startVideo']>) {\n            return await target.startVideo(...args);\n          }, 'Call.startVideo');\n        }\n      case 'stopVideo':\n        {\n          return this._context.withAsyncErrorTeedToState(async function (...args: Parameters<CallCommon['stopVideo']>) {\n            return await target.stopVideo(...args);\n          }, 'Call.stopVideo');\n        }\n      case 'startScreenSharing':\n        {\n          return this._context.withAsyncErrorTeedToState(async function (...args: Parameters<CallCommon['startScreenSharing']>) {\n            return await target.startScreenSharing(...args);\n          }, 'Call.startScreenSharing');\n        }\n      case 'stopScreenSharing':\n        {\n          return this._context.withAsyncErrorTeedToState(async function (...args: Parameters<CallCommon['stopScreenSharing']>) {\n            return await target.stopScreenSharing(...args);\n          }, 'Call.stopScreenSharing');\n        }\n      case 'hold':\n        {\n          return this._context.withAsyncErrorTeedToState(async function (...args: Parameters<CallCommon['hold']>) {\n            return await target.hold(...args);\n          }, 'Call.hold');\n        }\n      case 'resume':\n        {\n          return this._context.withAsyncErrorTeedToState(async function (...args: Parameters<CallCommon['resume']>) {\n            return await target.resume(...args);\n          }, 'Call.resume');\n        }\n      case 'feature':\n        {\n          // these are mini version of Proxy object - if it grows too big, a real Proxy object should be used.\n          return this._context.withErrorTeedToState((...args: Parameters<CallCommon['feature']>) => {\n            /* @conditional-compile-remove(close-captions) */\n            if (args[0] === Features.Captions) {\n              const captionsFeature = target.feature(Features.Captions).captions;\n              const proxyFeature = new ProxyTeamsCaptions(this._context, target);\n              return {\n                captions: new Proxy(captionsFeature, proxyFeature)\n              };\n            }\n            /* @conditional-compile-remove(call-transfer) */\n            if (args[0] === Features.Transfer) {\n              const transferFeature = target.feature(Features.Transfer);\n              const proxyFeature = new ProxyTransferCallFeature(this._context, target);\n              return new Proxy(transferFeature, proxyFeature);\n            }\n            return target.feature(...args);\n          }, 'Call.feature');\n        }\n      default:\n        return Reflect.get(target, prop);\n    }\n  }\n}\n\n/* @conditional-compile-remove(close-captions) */\n/**\n * @private\n */\nclass ProxyTeamsCaptions implements ProxyHandler<TeamsCaptions> {\n  private _context: CallContext;\n  private _call: CallCommon;\n  constructor(context: CallContext, call: CallCommon) {\n    this._context = context;\n    this._call = call;\n  }\n  public get<P extends keyof TeamsCaptions>(target: TeamsCaptions, prop: P): any {\n    switch (prop) {\n      case 'startCaptions':\n        return this._context.withAsyncErrorTeedToState(async (...args: Parameters<TeamsCaptions['startCaptions']>) => {\n          this._context.setStartCaptionsInProgress(this._call.id, true);\n          const ret = await target.startCaptions(...args);\n          this._context.setSelectedSpokenLanguage(this._call.id, args[0]?.spokenLanguage ?? 'en-us');\n          return ret;\n        }, 'Call.feature');\n        break;\n      case 'stopCaptions':\n        return this._context.withAsyncErrorTeedToState(async (...args: Parameters<TeamsCaptions['stopCaptions']>) => {\n          const ret = await target.stopCaptions(...args);\n          this._context.setIsCaptionActive(this._call.id, false);\n          this._context.setStartCaptionsInProgress(this._call.id, false);\n          this._context.clearCaptions(this._call.id);\n          return ret;\n        }, 'Call.feature');\n      case 'setSpokenLanguage':\n        return this._context.withAsyncErrorTeedToState(async (...args: Parameters<TeamsCaptions['setSpokenLanguage']>) => {\n          const ret = await target.setSpokenLanguage(...args);\n          this._context.setSelectedSpokenLanguage(this._call.id, args[0]);\n          return ret;\n        }, 'Call.feature');\n      case 'setCaptionLanguage':\n        return this._context.withAsyncErrorTeedToState(async (...args: Parameters<TeamsCaptions['setCaptionLanguage']>) => {\n          const ret = await target.setCaptionLanguage(...args);\n          this._context.setSelectedCaptionLanguage(this._call.id, args[0]);\n          return ret;\n        }, 'Call.feature');\n      default:\n        return Reflect.get(target, prop);\n    }\n  }\n}\n/* @conditional-compile-remove(call-transfer) */\n/**\n * @private\n */\nclass ProxyTransferCallFeature implements ProxyHandler<TransferCallFeature> {\n  private _context: CallContext;\n  private _call: CallCommon;\n  constructor(context: CallContext, call: CallCommon) {\n    this._context = context;\n    this._call = call;\n  }\n  public get<P extends keyof TransferCallFeature>(target: TransferCallFeature, prop: P): any {\n    switch (prop) {\n      case 'on':\n        return (...args: Parameters<TransferCallFeature['on']>): void => {\n          const isTransferAccepted = args[0] === 'transferAccepted';\n          if (isTransferAccepted) {\n            const listener = (args[1] as TransferAcceptedEvent);\n            const newListener = (args: TransferEventArgs): void => {\n              this._context.setAcceptedTransfer(this._call.id, {\n                callId: args.targetCall.id,\n                timestamp: new Date()\n              });\n              listener(args);\n            };\n            return target.on('transferAccepted', newListener);\n          }\n        };\n      default:\n        return Reflect.get(target, prop);\n    }\n  }\n}"]}