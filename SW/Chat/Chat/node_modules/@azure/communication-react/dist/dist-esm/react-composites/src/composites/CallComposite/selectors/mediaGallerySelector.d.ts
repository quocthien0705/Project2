import * as reselect from 'reselect';
/**
 * @private
 */
export declare const mediaGallerySelector: ((state: import("..").CallAdapterUiState & import("..").CallAdapterClientState) => {
    isVideoStreamOn: boolean;
}) & reselect.OutputSelectorFields<(args_0: import("../../../../../calling-stateful-client/src").LocalVideoStreamState[] | undefined) => {
    isVideoStreamOn: boolean;
}, {
    clearCache: () => void;
}> & {
    clearCache: () => void;
};
/**
 * Custom selector for this hook to retrieve all the participants that are currently
 * connected to the call.
 */
export declare const getRemoteParticipantsConnectedSelector: ((state: import("..").CallAdapterUiState & import("..").CallAdapterClientState) => import("../../../../../calling-stateful-client/src").RemoteParticipantState[]) & reselect.OutputSelectorFields<(args_0: {
    [keys: string]: import("../../../../../calling-stateful-client/src").RemoteParticipantState;
} | undefined) => import("../../../../../calling-stateful-client/src").RemoteParticipantState[], {
    clearCache: () => void;
}> & {
    clearCache: () => void;
};
//# sourceMappingURL=mediaGallerySelector.d.ts.map