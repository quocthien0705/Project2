import * as reselect from 'reselect';
/**
 * @private
 */
export declare const lobbySelector: ((state: import("..").CallAdapterUiState & import("..").CallAdapterClientState) => {
    localParticipantVideoStream: {
        isAvailable: boolean;
        isMirrored: boolean | undefined;
        renderElement: HTMLElement | undefined;
        activeVideoEffects: import("../../../../../calling-stateful-client/src").LocalVideoStreamVideoEffectsState | undefined;
    };
}) & reselect.OutputSelectorFields<(args_0: {
    isAvailable: boolean;
    isMirrored: boolean | undefined;
    renderElement: HTMLElement | undefined;
    activeVideoEffects: import("../../../../../calling-stateful-client/src").LocalVideoStreamVideoEffectsState | undefined;
}) => {
    localParticipantVideoStream: {
        isAvailable: boolean;
        isMirrored: boolean | undefined;
        renderElement: HTMLElement | undefined;
        activeVideoEffects: import("../../../../../calling-stateful-client/src").LocalVideoStreamVideoEffectsState | undefined;
    };
}, {
    clearCache: () => void;
}> & {
    clearCache: () => void;
};
//# sourceMappingURL=lobbySelector.d.ts.map