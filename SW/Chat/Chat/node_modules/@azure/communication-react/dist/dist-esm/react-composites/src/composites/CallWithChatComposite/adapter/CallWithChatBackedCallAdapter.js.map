{"version":3,"file":"CallWithChatBackedCallAdapter.js","sourceRoot":"","sources":["../../../../../../../preprocess-dist/react-composites/src/composites/CallWithChatComposite/adapter/CallWithChatBackedCallAdapter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { CallWithChatAdapter } from './CallWithChatAdapter';\nimport { CallAdapter, CallAdapterState } from '../../CallComposite';\n/* @conditional-compile-remove(video-background-effects) */\nimport { VideoBackgroundImage, VideoBackgroundEffect } from '../../CallComposite';\nimport { CreateVideoStreamViewResult, VideoStreamOptions } from '@internal/react-components';\nimport { AudioDeviceInfo, VideoDeviceInfo, Call, PermissionConstraints, StartCallOptions } from '@azure/communication-calling';\n/* @conditional-compile-remove(close-captions) */\nimport { StartCaptionsOptions } from '@azure/communication-calling';\nimport { DtmfTone } from '@azure/communication-calling';\nimport { CallWithChatAdapterState } from '../state/CallWithChatAdapterState';\nimport { _toCommunicationIdentifier } from '@internal/acs-ui-common';\nimport { JoinCallOptions, StartCallIdentifier } from '../../CallComposite/adapter/CallAdapter';\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\n/**\n * Facade around the CallWithChatAdapter to satisfy the call adapter interface.\n *\n * @private\n */\nexport class CallWithChatBackedCallAdapter implements CallAdapter {\n  private callWithChatAdapter: CallWithChatAdapter;\n\n  // For onStateChange we must convert CallWithChat state to chat state. This involves creating a new handler to be passed into the onStateChange.\n  // In order to unsubscribe the handler when offStateChange is called we must have a mapping of the original handler to the newly created handler.\n  private eventStore: Map<(state: CallAdapterState) => void, (state: CallWithChatAdapterState) => void> = new Map();\n  constructor(callWithChatAdapter: CallWithChatAdapter) {\n    this.callWithChatAdapter = callWithChatAdapter;\n  }\n  public on = (event: any, listener: any): void => {\n    switch (event) {\n      case 'error':\n        return this.callWithChatAdapter.on('callError', listener);\n      case 'participantsJoined':\n        return this.callWithChatAdapter.on('callParticipantsJoined', listener);\n      case 'participantsLeft':\n        return this.callWithChatAdapter.on('callParticipantsLeft', listener);\n      default:\n        return this.callWithChatAdapter.on(event, listener);\n    }\n  };\n  public off = (event: any, listener: any): void => {\n    switch (event) {\n      case 'error':\n        return this.callWithChatAdapter.off('callError', listener);\n      case 'participantsJoined':\n        return this.callWithChatAdapter.off('callParticipantsJoined', listener);\n      case 'participantsLeft':\n        return this.callWithChatAdapter.off('callParticipantsLeft', listener);\n      default:\n        return this.callWithChatAdapter.off(event, listener);\n    }\n  };\n  public onStateChange = (handler: (state: CallAdapterState) => void): void => {\n    const convertedHandler = (state: CallWithChatAdapterState): void => {\n      handler(callAdapterStateFromCallWithChatAdapterState(state));\n    };\n    this.callWithChatAdapter.onStateChange(convertedHandler);\n    this.eventStore.set(handler, convertedHandler);\n  };\n  public offStateChange = (handler: (state: CallAdapterState) => void): void => {\n    const convertedHandler = this.eventStore.get(handler);\n    convertedHandler && this.callWithChatAdapter.offStateChange(convertedHandler);\n  };\n  public getState = (): CallAdapterState => callAdapterStateFromCallWithChatAdapterState(this.callWithChatAdapter.getState());\n  public dispose = (): void => this.callWithChatAdapter.dispose();\n  public joinCall = (options?: boolean | JoinCallOptions): Call | undefined => {\n    if (typeof options === 'boolean') {\n      return this.callWithChatAdapter.joinCall(options);\n    } else {\n      return this.callWithChatAdapter.joinCall(options);\n    }\n  };\n  public leaveCall = async (forEveryone?: boolean): Promise<void> => await this.callWithChatAdapter.leaveCall(forEveryone);\n  public startCall = (participants: (string | StartCallIdentifier)[], options: StartCallOptions): Call | undefined => {\n    if (participants.every((participant: string | StartCallIdentifier) => typeof participant === 'string')) {\n      return this.callWithChatAdapter.startCall((participants as string[]), options);\n    } else {\n      return this.callWithChatAdapter.startCall((participants as StartCallIdentifier[]), options);\n    }\n  };\n  public setCamera = async (sourceId: VideoDeviceInfo, options?: VideoStreamOptions): Promise<void> => await this.callWithChatAdapter.setCamera(sourceId, options);\n  public setMicrophone = async (sourceId: AudioDeviceInfo): Promise<void> => await this.callWithChatAdapter.setMicrophone(sourceId);\n  public setSpeaker = async (sourceId: AudioDeviceInfo): Promise<void> => await this.callWithChatAdapter.setSpeaker(sourceId);\n  public askDevicePermission = async (constraints: PermissionConstraints): Promise<void> => await this.callWithChatAdapter.askDevicePermission(constraints);\n  public queryCameras = async (): Promise<VideoDeviceInfo[]> => await this.callWithChatAdapter.queryCameras();\n  public queryMicrophones = async (): Promise<AudioDeviceInfo[]> => await this.callWithChatAdapter.queryMicrophones();\n  public querySpeakers = async (): Promise<AudioDeviceInfo[]> => await this.callWithChatAdapter.querySpeakers();\n  public startCamera = async (options?: VideoStreamOptions): Promise<void> => await this.callWithChatAdapter.startCamera(options);\n  public stopCamera = async (): Promise<void> => await this.callWithChatAdapter.stopCamera();\n  public mute = async (): Promise<void> => await this.callWithChatAdapter.mute();\n  public unmute = async (): Promise<void> => await this.callWithChatAdapter.unmute();\n  public startScreenShare = async (): Promise<void> => await this.callWithChatAdapter.startScreenShare();\n  public stopScreenShare = async (): Promise<void> => await this.callWithChatAdapter.stopScreenShare();\n  /* @conditional-compile-remove(raise-hand) */\n  public raiseHand = async (): Promise<void> => await this.callWithChatAdapter.raiseHand();\n  /* @conditional-compile-remove(raise-hand) */\n  public lowerHand = async (): Promise<void> => await this.callWithChatAdapter.lowerHand();\n  public removeParticipant = async (userId: string): Promise<void> => {\n    let participant = userId;\n    await this.callWithChatAdapter.removeParticipant(participant);\n  };\n  public createStreamView = async (remoteUserId?: string, options?: VideoStreamOptions): Promise<void | CreateVideoStreamViewResult> => await this.callWithChatAdapter.createStreamView(remoteUserId, options);\n  public disposeStreamView = async (remoteUserId?: string, options?: VideoStreamOptions): Promise<void> => await this.callWithChatAdapter.disposeStreamView(remoteUserId, options);\n  public disposeScreenShareStreamView(remoteUserId: string): Promise<void> {\n    return this.callWithChatAdapter.disposeScreenShareStreamView(remoteUserId);\n  }\n  public disposeRemoteVideoStreamView(remoteUserId: string): Promise<void> {\n    return this.callWithChatAdapter.disposeRemoteVideoStreamView(remoteUserId);\n  }\n  public disposeLocalVideoStreamView(): Promise<void> {\n    return this.callWithChatAdapter.disposeLocalVideoStreamView();\n  }\n  public sendDtmfTone = async (dtmfTone: DtmfTone): Promise<void> => {\n    await this.callWithChatAdapter.sendDtmfTone(dtmfTone);\n  };\n\n  /* @conditional-compile-remove(close-captions) */\n  public async startCaptions(options?: StartCaptionsOptions): Promise<void> {\n    this.callWithChatAdapter.startCaptions(options);\n  }\n\n  /* @conditional-compile-remove(close-captions) */\n  public async stopCaptions(): Promise<void> {\n    this.callWithChatAdapter.stopCaptions();\n  }\n\n  /* @conditional-compile-remove(close-captions) */\n  public async setCaptionLanguage(language: string): Promise<void> {\n    this.callWithChatAdapter.setCaptionLanguage(language);\n  }\n\n  /* @conditional-compile-remove(close-captions) */\n  public async setSpokenLanguage(language: string): Promise<void> {\n    this.callWithChatAdapter.setSpokenLanguage(language);\n  }\n\n  /* @conditional-compile-remove(video-background-effects) */\n  public async startVideoBackgroundEffect(videoBackgroundEffect: VideoBackgroundEffect): Promise<void> {\n    await this.callWithChatAdapter.startVideoBackgroundEffect(videoBackgroundEffect);\n  }\n  /* @conditional-compile-remove(video-background-effects) */\n  public async stopVideoBackgroundEffects(): Promise<void> {\n    await this.callWithChatAdapter.stopVideoBackgroundEffects();\n  }\n  /* @conditional-compile-remove(video-background-effects) */\n  public updateBackgroundPickerImages(backgroundImages: VideoBackgroundImage[]): void {\n    return this.callWithChatAdapter.updateBackgroundPickerImages(backgroundImages);\n  }\n  /* @conditional-compile-remove(video-background-effects) */\n  public updateSelectedVideoBackgroundEffect(selectedVideoBackground: VideoBackgroundEffect): void {\n    return this.callWithChatAdapter.updateSelectedVideoBackgroundEffect(selectedVideoBackground);\n  }\n}\nfunction callAdapterStateFromCallWithChatAdapterState(callWithChatAdapterState: CallWithChatAdapterState): CallAdapterState {\n  return {\n    isLocalPreviewMicrophoneEnabled: callWithChatAdapterState.isLocalPreviewMicrophoneEnabled,\n    page: callWithChatAdapterState.page,\n    userId: callWithChatAdapterState.userId,\n    displayName: callWithChatAdapterState.displayName,\n    call: callWithChatAdapterState.call,\n    devices: callWithChatAdapterState.devices,\n    isTeamsCall: callWithChatAdapterState.isTeamsCall,\n    /* @conditional-compile-remove(rooms) */\n    isRoomsCall: false,\n    latestErrors: callWithChatAdapterState.latestCallErrors,\n    /* @conditional-compile-remove(video-background-effects) */\n    videoBackgroundImages: callWithChatAdapterState.videoBackgroundImages,\n    /* @conditional-compile-remove(video-background-effects) */\n    onResolveVideoEffectDependency: callWithChatAdapterState.onResolveVideoEffectDependency,\n    /* @conditional-compile-remove(video-background-effects) */\n    selectedVideoBackgroundEffect: callWithChatAdapterState.selectedVideoBackgroundEffect\n  };\n}"]}