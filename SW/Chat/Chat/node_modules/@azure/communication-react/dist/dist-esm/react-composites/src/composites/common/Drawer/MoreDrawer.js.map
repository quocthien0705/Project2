{"version":3,"file":"MoreDrawer.js","sourceRoot":"","sources":["../../../../../../../preprocess-dist/react-composites/src/composites/common/Drawer/MoreDrawer.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport React, { useCallback } from 'react';\n/* @conditional-compile-remove(close-captions) */\nimport { useState } from 'react';\n/* @conditional-compile-remove(control-bar-button-injection) */\nimport { useMemo } from 'react';\nimport { OptionsDevice, _DrawerMenu as DrawerMenu, _DrawerMenuItemProps as DrawerMenuItemProps, _DrawerMenuStyles, SpokenLanguageStrings, CaptionLanguageStrings } from '@internal/react-components';\nimport { VideoGalleryLayout } from '@internal/react-components';\n/* @conditional-compile-remove(close-captions) */\nimport { _StartCaptionsButton, _CaptionsSettingsModal } from '@internal/react-components';\n/* @conditional-compile-remove(raise-hand) */\nimport { RaiseHandButton, RaiseHandButtonProps } from '@internal/react-components';\nimport { AudioDeviceInfo } from '@azure/communication-calling';\n/* @conditional-compile-remove(control-bar-button-injection) */\nimport { CUSTOM_BUTTON_OPTIONS, generateCustomCallDrawerButtons, onFetchCustomButtonPropsTrampoline } from '../ControlBar/CustomButton';\n/* @conditional-compile-remove(PSTN-calls) */ /* @conditional-compile-remove(one-to-n-calling) */ /* @conditional-compile-remove(raise-hand) */\nimport { usePropsFor } from '../../CallComposite/hooks/usePropsFor';\n/* @conditional-compile-remove(PSTN-calls) */ /* @conditional-compile-remove(one-to-n-calling) */ /* @conditional-compile-remove(close-captions) */ /* @conditional-compile-remove(raise-hand) */\nimport { useLocale } from '../../localization';\nimport { isDisabled } from '../../CallComposite/utils';\nimport { CommonCallControlOptions } from '../types/CommonCallControlOptions';\n/* @conditional-compile-remove(close-captions) */\nimport { Stack, Toggle, useTheme } from '@fluentui/react';\n/* @conditional-compile-remove(close-captions) */\nimport { _pxToRem } from '@internal/acs-ui-common';\n/* @conditional-compile-remove(close-captions) */\nimport { useAdaptedSelector } from '../../CallComposite/hooks/useAdaptedSelector';\n/* @conditional-compile-remove(close-captions) */\nimport { _captionSettingsSelector, _startCaptionsButtonSelector } from '@internal/calling-component-bindings';\n/* @conditional-compile-remove(close-captions) */\nimport { useHandlers } from '../../CallComposite/hooks/useHandlers';\n/* @conditional-compile-remove(close-captions) */\nimport { CaptionLanguageSettingsDrawer } from './CaptionLanguageSettingsDrawer';\n/* @conditional-compile-remove(close-captions) */\nimport { themedToggleButtonStyle } from './MoreDrawer.styles';\n/* @conditional-compile-remove(close-captions) */\nimport { _spokenLanguageToCaptionLanguage } from '@internal/react-components';\n/* @conditional-compile-remove(rooms) */\nimport { useAdapter } from '../../CallComposite/adapter/CallAdapterProvider';\nimport { useSelector } from '../../CallComposite/hooks/useSelector';\nimport { getTargetCallees } from '../../CallComposite/selectors/baseSelectors';\nimport { showDtmfDialer } from '../../CallComposite/utils/MediaGalleryUtils';\nimport { SpokenLanguageSettingsDrawer } from './SpokenLanguageSettingsDrawer';\n\n/** @private */\nexport interface MoreDrawerStrings {\n  /**\n   * Label for people drawerMenuItem.\n   */\n  peopleButtonLabel: string;\n  /**\n   * Label for audio device drawerMenuItem.\n   *\n   * @remarks This replaces the microphoneMenuTitle speakers can not be enumerated\n   *\n   */\n  audioDeviceMenuTitle?: string;\n  /**\n   * Label for microphone drawerMenuItem.\n   *\n   * @remarks Only displayed when speakers can be enumerated otherwise audioDeviceMenuTitle is used\n   *\n   */\n  microphoneMenuTitle: string;\n  /**\n   * Label for speaker drawerMenuItem.\n   *\n   * @remarks Only displayed when speakers can be enumerated\n   *\n   */\n  speakerMenuTitle: string;\n  /* @conditional-compile-remove(close-captions) */\n  /**\n   * Label for captions drawerMenuItem\n   *\n   * @remarks Only displayed when in Teams call\n   */\n  captionsMenuTitle: string;\n  /* @conditional-compile-remove(close-captions) */\n  /**\n   * Label for spokenLanguage drawerMenuItem\n   *\n   * @remarks Only displayed when in Teams call, disabled until captions is on\n   */\n  spokenLanguageMenuTitle: string;\n\n  /* @conditional-compile-remove(close-captions) */\n  /**\n   * Label for captionLanguage drawerMenuItem\n   *\n   * @remarks Only displayed when in Teams call, disabled until captions is on\n   */\n  captionLanguageMenuTitle: string;\n\n  /**\n   * Label for gallery options drawerMenuItem\n   */\n  galleryOptionsMenuTitle: string;\n}\n\n/** @private */\nexport interface MoreDrawerDevicesMenuProps {\n  /**\n   * Available microphones for selection\n   */\n  microphones?: OptionsDevice[];\n  /**\n   * Available speakers for selection\n   */\n  speakers?: OptionsDevice[];\n  /**\n   * Microphone that is shown as currently selected\n   */\n  selectedMicrophone?: OptionsDevice;\n  /**\n   * Speaker that is shown as currently selected\n   */\n  selectedSpeaker?: OptionsDevice;\n  /**\n   * Speaker when a speaker is selected\n   */\n  onSelectSpeaker: (device: AudioDeviceInfo) => Promise<void>;\n  /**\n   * Callback when a microphone is selected\n   */\n  onSelectMicrophone: (device: AudioDeviceInfo) => Promise<void>;\n  userSetGalleryLayout?: VideoGalleryLayout;\n  /**\n   * Callback for when the gallery layout is changed\n   */\n  onUserSetGalleryLayout?: (layout: VideoGalleryLayout) => void;\n  /**\n   * Callback to hide and show the dialpad in the more drawer\n   */\n  onSetDialpadPage?: () => void;\n  /**\n   * Whether the dialpad is present in the call\n   */\n  dtmfDialerPresent?: boolean;\n}\n\n/** @private */\nexport interface MoreDrawerProps extends MoreDrawerDevicesMenuProps {\n  onLightDismiss: () => void;\n  onPeopleButtonClicked: () => void;\n  callControls?: boolean | CommonCallControlOptions;\n  onClickShowDialpad?: () => void;\n  /* @conditional-compile-remove(close-captions) */\n  isCaptionsSupported?: boolean;\n  strings: MoreDrawerStrings;\n  disableButtonsForHoldScreen?: boolean;\n}\nconst inferCallWithChatControlOptions = (callWithChatControls?: boolean | CommonCallControlOptions): CommonCallControlOptions | false => {\n  if (callWithChatControls === false) {\n    return false;\n  }\n  const options = callWithChatControls === true || callWithChatControls === undefined ? {} : callWithChatControls;\n  return options;\n};\n\n/** @private */\nexport const MoreDrawer = (props: MoreDrawerProps): JSX.Element => {\n  /* @conditional-compile-remove(close-captions) */\n  const theme = useTheme();\n  /* @conditional-compile-remove(rooms) */\n  const callAdapter = useAdapter();\n  const drawerMenuItems: DrawerMenuItemProps[] = [];\n  const {\n    speakers,\n    onSelectSpeaker,\n    onLightDismiss\n  } = props;\n\n  /* @conditional-compile-remove(PSTN-calls) */ /* @conditional-compile-remove(one-to-n-calling) */ /* @conditional-compile-remove(close-captions) */ /* @conditional-compile-remove(raise-hand) */\n  const localeStrings = useLocale();\n  const callees = useSelector(getTargetCallees);\n  const allowDtmfDialer = showDtmfDialer(callees);\n  const [dtmfDialerChecked, setDtmfDialerChecked] = useState<boolean>(props.dtmfDialerPresent ?? false);\n\n  /* @conditional-compile-remove(raise-hand) */\n  const raiseHandButtonProps = (usePropsFor(RaiseHandButton) as RaiseHandButtonProps);\n  const onSpeakerItemClick = useCallback((_ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement> | undefined, itemKey: string | undefined) => {\n    const selected = speakers?.find(speaker => speaker.id === itemKey);\n    if (selected) {\n      // This is unsafe - we're only passing in part of the argument to the handler.\n      // But this is a known issue in our state.\n      onSelectSpeaker((selected as AudioDeviceInfo));\n    }\n    onLightDismiss();\n  }, [speakers, onSelectSpeaker, onLightDismiss]);\n  const drawerSelectionOptions = inferCallWithChatControlOptions(props.callControls);\n  if (props.speakers && props.speakers.length > 0) {\n    drawerMenuItems.push({\n      itemKey: 'speakers',\n      disabled: props.disableButtonsForHoldScreen,\n      text: props.strings.speakerMenuTitle,\n      iconProps: {\n        iconName: 'MoreDrawerSpeakers'\n      },\n      subMenuProps: props.speakers.map(speaker => ({\n        itemKey: speaker.id,\n        iconProps: {\n          iconName: isDeviceSelected(speaker, props.selectedSpeaker) ? 'MoreDrawerSelectedSpeaker' : 'MoreDrawerSpeakers'\n        },\n        text: speaker.name,\n        onItemClick: onSpeakerItemClick,\n        secondaryIconProps: isDeviceSelected(speaker, props.selectedSpeaker) ? {\n          iconName: 'Accept'\n        } : undefined\n      })),\n      secondaryText: props.selectedSpeaker?.name\n    });\n  }\n  const {\n    microphones,\n    onSelectMicrophone\n  } = props;\n  const onMicrophoneItemClick = useCallback((_ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement> | undefined, itemKey: string | undefined) => {\n    const selected = microphones?.find(mic => mic.id === itemKey);\n    if (selected) {\n      // This is unsafe - we're only passing in part of the argument to the handler.\n      // But this is a known issue in our state.\n      onSelectMicrophone((selected as AudioDeviceInfo));\n    }\n    onLightDismiss();\n  }, [microphones, onSelectMicrophone, onLightDismiss]);\n  if (props.microphones && props.microphones.length > 0) {\n    // Set props as Microphone if speakers can be enumerated else set as Audio Device\n    const speakersAvailable = props.speakers && props.speakers.length > 0;\n    const itemKey = speakersAvailable ? 'microphones' : 'audioDevices';\n    const text = speakersAvailable ? props.strings.microphoneMenuTitle : props.strings.audioDeviceMenuTitle;\n    const iconName = speakersAvailable ? 'MoreDrawerMicrophones' : 'MoreDrawerSpeakers';\n    const selectedIconName = speakersAvailable ? 'MoreDrawerSelectedMicrophone' : 'MoreDrawerSelectedSpeaker';\n    drawerMenuItems.push({\n      itemKey: itemKey,\n      disabled: props.disableButtonsForHoldScreen,\n      text: text,\n      iconProps: {\n        iconName: iconName\n      },\n      subMenuProps: props.microphones.map(mic => ({\n        itemKey: mic.id,\n        iconProps: {\n          iconName: isDeviceSelected(mic, props.selectedMicrophone) ? selectedIconName : iconName\n        },\n        text: mic.name,\n        onItemClick: onMicrophoneItemClick,\n        secondaryIconProps: isDeviceSelected(mic, props.selectedMicrophone) ? {\n          iconName: 'Accept'\n        } : undefined,\n        disabled: drawerSelectionOptions !== false ? isDisabled(drawerSelectionOptions.microphoneButton) : undefined\n      })),\n      secondaryText: props.selectedMicrophone?.name\n    });\n  }\n  const dtmfDialerScreenOption = {\n    itemKey: 'dtmfDialerScreenKey',\n    text: !dtmfDialerChecked ? localeStrings.strings.call.dtmfDialerMoreButtonLabelOn : localeStrings.strings.call.dtmfDialerMoreButtonLabelOff,\n    onItemClick: () => {\n      if (props.onSetDialpadPage) {\n        props.onSetDialpadPage();\n      }\n      setDtmfDialerChecked(!dtmfDialerChecked);\n      onLightDismiss();\n    },\n    iconProps: {\n      iconName: 'DtmfDialpadButton',\n      styles: {\n        root: {\n          lineHeight: 0\n        }\n      }\n    }\n  };\n  /**\n   * Only render the dtmf dialer if the dialpad for PSTN calls is not present\n   */\n  if (props.onSetDialpadPage && allowDtmfDialer) {\n    drawerMenuItems.push(dtmfDialerScreenOption);\n  }\n  const galleryLayoutOptions = {\n    itemKey: 'galleryPositionKey',\n    iconProps: {\n      iconName: 'GalleryOptions',\n      styles: {\n        root: {\n          lineHeight: 0\n        }\n      }\n    },\n    disabled: props.disableButtonsForHoldScreen,\n    text: localeStrings.strings.call.moreButtonGalleryControlLabel,\n    subMenuProps: [{\n      itemKey: 'dynamicSelectionKey',\n      text: localeStrings.strings.call.moreButtonGalleryFloatingLocalLayoutLabel,\n      onItemClick: () => {\n        props.onUserSetGalleryLayout && props.onUserSetGalleryLayout('floatingLocalVideo');\n        onLightDismiss();\n      },\n      iconProps: {\n        iconName: 'FloatingLocalVideoGalleryLayout',\n        styles: {\n          root: {\n            lineHeight: 0\n          }\n        }\n      },\n      secondaryIconProps: props.userSetGalleryLayout === 'floatingLocalVideo' ? {\n        iconName: 'Accept'\n      } : undefined\n    }, {\n      itemKey: 'focusedContentSelectionKey',\n      text: localeStrings.strings.call.moreButtonGalleryFocusedContentLayoutLabel,\n      onItemClick: () => {\n        props.onUserSetGalleryLayout && props.onUserSetGalleryLayout('focusedContent');\n        onLightDismiss();\n      },\n      iconProps: {\n        iconName: 'FocusedContentGalleryLayout',\n        styles: {\n          root: {\n            lineHeight: 0\n          }\n        }\n      },\n      secondaryIconProps: props.userSetGalleryLayout === 'focusedContent' ? {\n        iconName: 'Accept'\n      } : undefined\n    }]\n  };\n  drawerMenuItems.push(galleryLayoutOptions);\n  if (drawerSelectionOptions !== false && isEnabled(drawerSelectionOptions?.peopleButton)) {\n    drawerMenuItems.push({\n      itemKey: 'people',\n      id: 'call-composite-drawer-people-button',\n      text: props.strings.peopleButtonLabel,\n      iconProps: {\n        iconName: 'MoreDrawerPeople'\n      },\n      onItemClick: props.onPeopleButtonClicked,\n      disabled: isDisabled(drawerSelectionOptions.peopleButton) || props.disableButtonsForHoldScreen\n    });\n  }\n  /*@conditional-compile-remove(rooms) */\n  const role = callAdapter.getState().call?.role;\n  /*@conditional-compile-remove(rooms) */\n  const hideRaiseHandButtonInRoomsCall = callAdapter.getState().isRoomsCall && role && ['Consumer', 'Unknown'].includes(role);\n\n  /* @conditional-compile-remove(raise-hand) */\n  if (drawerSelectionOptions !== false && isEnabled(drawerSelectionOptions?.raiseHandButton) && /*@conditional-compile-remove(rooms) */!hideRaiseHandButtonInRoomsCall) {\n    const raiseHandIcon = raiseHandButtonProps.checked ? 'LowerHandContextualMenuItem' : 'RaiseHandContextualMenuItem';\n    drawerMenuItems.push({\n      itemKey: 'raiseHandButtonKey',\n      disabled: props.disableButtonsForHoldScreen || isDisabled(drawerSelectionOptions.raiseHandButton),\n      text: raiseHandButtonProps.checked ? localeStrings.component.strings.raiseHandButton.onLabel : localeStrings.component.strings.raiseHandButton.offLabel,\n      onItemClick: () => {\n        if (raiseHandButtonProps.onToggleRaiseHand) {\n          raiseHandButtonProps.onToggleRaiseHand();\n        }\n        onLightDismiss();\n      },\n      iconProps: {\n        iconName: raiseHandIcon,\n        styles: {\n          root: {\n            lineHeight: 0\n          }\n        }\n      }\n    });\n  }\n\n  /* @conditional-compile-remove(close-captions) */\n  //Captions drawer menu\n  const supportedSpokenLanguageStrings = useLocale().strings.call.spokenLanguageStrings;\n\n  /* @conditional-compile-remove(close-captions) */\n  //Captions drawer menu\n  const supportedCaptionLanguageStrings = useLocale().strings.call.captionLanguageStrings;\n  /* @conditional-compile-remove(close-captions) */\n  const captionSettingsProp = useAdaptedSelector(_captionSettingsSelector);\n  /* @conditional-compile-remove(close-captions) */\n  const startCaptionsButtonHandlers = useHandlers(_StartCaptionsButton);\n  /* @conditional-compile-remove(close-captions) */\n  const captionSettingsHandlers = useHandlers(_CaptionsSettingsModal);\n\n  /* @conditional-compile-remove(close-captions) */\n  const [isSpokenLanguageDrawerOpen, setIsSpokenLanguageDrawerOpen] = useState<boolean>(false);\n\n  /* @conditional-compile-remove(close-captions) */\n  const [isCaptionLanguageDrawerOpen, setIsCaptionLanguageDrawerOpen] = useState<boolean>(false);\n\n  /* @conditional-compile-remove(close-captions) */\n  const [currentSpokenLanguage, setCurrentSpokenLanguage] = useState<keyof SpokenLanguageStrings>(captionSettingsProp.currentSpokenLanguage ?? 'en-us');\n\n  /* @conditional-compile-remove(close-captions) */\n  const [currentCaptionLanguage, setCurrentCaptionLanguage] = useState<keyof CaptionLanguageStrings>(captionSettingsProp.currentCaptionLanguage ?? _spokenLanguageToCaptionLanguage[currentSpokenLanguage]);\n\n  /* @conditional-compile-remove(close-captions) */\n  const onToggleChange = useCallback(async () => {\n    if (!captionSettingsProp.isCaptionsFeatureActive) {\n      await startCaptionsButtonHandlers.onStartCaptions({\n        spokenLanguage: currentSpokenLanguage\n      });\n    } else {\n      startCaptionsButtonHandlers.onStopCaptions();\n    }\n  }, [captionSettingsProp.isCaptionsFeatureActive, startCaptionsButtonHandlers, currentSpokenLanguage]);\n\n  /* @conditional-compile-remove(close-captions) */\n  if (props.isCaptionsSupported) {\n    const captionsDrawerItems: DrawerMenuItemProps[] = [];\n    const spokenLanguageString = supportedSpokenLanguageStrings ? supportedSpokenLanguageStrings[currentSpokenLanguage] : currentSpokenLanguage;\n    const captionLanguageString = supportedCaptionLanguageStrings ? supportedCaptionLanguageStrings[currentCaptionLanguage] : currentCaptionLanguage;\n    drawerMenuItems.push({\n      itemKey: 'captions',\n      id: 'common-call-composite-captions-button',\n      disabled: props.disableButtonsForHoldScreen,\n      text: props.strings.captionsMenuTitle,\n      iconProps: {\n        iconName: 'CaptionsIcon'\n      },\n      subMenuProps: captionsDrawerItems\n    });\n    captionsDrawerItems.push({\n      itemKey: 'ToggleCaptionsKey',\n      text: captionSettingsProp.isCaptionsFeatureActive ? localeStrings.strings.call.startCaptionsButtonTooltipOnContent : localeStrings.strings.call.startCaptionsButtonTooltipOffContent,\n      iconProps: {\n        iconName: captionSettingsProp.isCaptionsFeatureActive ? 'CaptionsOffIcon' : 'CaptionsIcon',\n        styles: {\n          root: {\n            lineHeight: 0\n          }\n        }\n      },\n      onItemClick: onToggleChange,\n      disabled: props.disableButtonsForHoldScreen,\n      secondaryComponent: <Stack verticalFill verticalAlign=\"center\">\n          <Toggle id=\"common-call-composite-captions-toggle-button\" checked={captionSettingsProp.isCaptionsFeatureActive} styles={themedToggleButtonStyle(theme, captionSettingsProp.isCaptionsFeatureActive)} onChange={onToggleChange} />\n        </Stack>\n    });\n    captionsDrawerItems.push({\n      itemKey: 'ChangeSpokenLanguage',\n      text: props.strings.spokenLanguageMenuTitle,\n      id: 'common-call-composite-captions-spoken-settings-button',\n      secondaryText: spokenLanguageString,\n      iconProps: {\n        iconName: 'ChangeSpokenLanguageIcon',\n        styles: {\n          root: {\n            lineHeight: 0\n          }\n        }\n      },\n      disabled: props.disableButtonsForHoldScreen || !captionSettingsProp.isCaptionsFeatureActive,\n      onItemClick: () => {\n        setIsSpokenLanguageDrawerOpen(true);\n      },\n      secondaryIconProps: {\n        iconName: 'ChevronRight',\n        styles: {\n          root: {\n            lineHeight: 0\n          }\n        }\n      }\n    });\n    captionsDrawerItems.push({\n      itemKey: 'ChangeCaptionLanguage',\n      text: props.strings.captionLanguageMenuTitle,\n      id: 'common-call-composite-captions-subtitle-settings-button',\n      secondaryText: captionLanguageString,\n      iconProps: {\n        iconName: 'ChangeCaptionLanguageIcon',\n        styles: {\n          root: {\n            lineHeight: 0\n          }\n        }\n      },\n      disabled: props.disableButtonsForHoldScreen || !captionSettingsProp.isCaptionsFeatureActive,\n      onItemClick: () => {\n        setIsCaptionLanguageDrawerOpen(true);\n      },\n      secondaryIconProps: {\n        iconName: 'ChevronRight',\n        styles: {\n          root: {\n            lineHeight: 0\n          }\n        }\n      }\n    });\n  }\n\n  /* @conditional-compile-remove(control-bar-button-injection) */\n  const customDrawerButtons = useMemo(() => generateCustomCallDrawerButtons(onFetchCustomButtonPropsTrampoline(drawerSelectionOptions !== false ? drawerSelectionOptions : undefined), drawerSelectionOptions !== false ? drawerSelectionOptions?.displayType : undefined), [drawerSelectionOptions]);\n\n  /* @conditional-compile-remove(control-bar-button-injection) */\n  customDrawerButtons['primary'].slice(CUSTOM_BUTTON_OPTIONS.MAX_PRIMARY_MOBILE_CUSTOM_BUTTONS).forEach(element => {\n    drawerMenuItems.push(element);\n  });\n  /* @conditional-compile-remove(control-bar-button-injection) */\n  customDrawerButtons['secondary'].forEach(element => {\n    drawerMenuItems.push(element);\n  });\n  /* @conditional-compile-remove(control-bar-button-injection) */\n  customDrawerButtons['overflow'].forEach(element => {\n    drawerMenuItems.push(element);\n  });\n  /* @conditional-compile-remove(close-captions) */\n  return <>\n      {isSpokenLanguageDrawerOpen && props.isCaptionsSupported && <SpokenLanguageSettingsDrawer onLightDismiss={props.onLightDismiss} selectLanguage={setCurrentSpokenLanguage} setCurrentLanguage={captionSettingsHandlers.onSetSpokenLanguage} currentLanguage={currentSpokenLanguage} strings={{\n      menuTitle: props.strings.spokenLanguageMenuTitle\n    }} supportedLanguageStrings={supportedSpokenLanguageStrings} />}\n      {isCaptionLanguageDrawerOpen && props.isCaptionsSupported && <CaptionLanguageSettingsDrawer onLightDismiss={props.onLightDismiss} selectLanguage={setCurrentCaptionLanguage} setCurrentLanguage={captionSettingsHandlers.onSetCaptionLanguage} currentLanguage={currentCaptionLanguage} strings={{\n      menuTitle: props.strings.captionLanguageMenuTitle\n    }} supportedLanguageStrings={supportedCaptionLanguageStrings} />}\n      {!isSpokenLanguageDrawerOpen && !isCaptionLanguageDrawerOpen && <DrawerMenu items={drawerMenuItems} onLightDismiss={props.onLightDismiss} />}\n    </>;\n  return <DrawerMenu items={drawerMenuItems} onLightDismiss={props.onLightDismiss} />;\n};\nconst isDeviceSelected = (speaker: OptionsDevice, selectedSpeaker?: OptionsDevice): boolean => !!selectedSpeaker && speaker.id === selectedSpeaker.id;\nconst isEnabled = (option: unknown): boolean => option !== false;"]}