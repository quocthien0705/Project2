{"version":3,"file":"RaiseHandSubscriber.js","sourceRoot":"","sources":["../../../../preprocess-dist/calling-stateful-client/src/RaiseHandSubscriber.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAQlC,6CAA6C;AAC7C,OAAO,EAAE,6BAA6B,EAAE,gCAAgC;AACxE,6CAA6C;AAC7C;;GAEG;AACH,MAAM,OAAO,mBAAmB;IAI9B,YAAY,SAAoB,EAAE,OAAoB,EAAE,SAA+B;QAM/E,cAAS,GAAG,GAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YACvD,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,kBAAkB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC3D,CAAC,CAAC;QACK,gBAAW,GAAG,GAAS,EAAE;YAC9B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YACxD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC5D,CAAC,CAAC;QACM,eAAU,GAAG,GAAS,EAAE;YAC9B,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC;YAC3F,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,EAAE,CAAC;gBAC1D,IAAI,CAAC,QAAQ,CAAC,0BAA0B,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,6BAA6B,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC;YACrI,CAAC;QACH,CAAC,CAAC;QACM,gBAAW,GAAG,CAAC,KAA6B,EAAQ,EAAE;YAC5D,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,0BAA0B,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,6BAA6B,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;QAC/H,CAAC,CAAC;QAtBA,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;CAmBF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/* @conditional-compile-remove(raise-hand) */\nimport { RaiseHandCallFeature, RaisedHandChangedEvent } from '@azure/communication-calling';\n/* @conditional-compile-remove(raise-hand) */\nimport { CallContext } from './CallContext';\n/* @conditional-compile-remove(raise-hand) */\nimport { CallIdRef } from './CallIdRef';\n/* @conditional-compile-remove(raise-hand) */\nimport { toFlatCommunicationIdentifier } from '@internal/acs-ui-common';\n/* @conditional-compile-remove(raise-hand) */\n/**\n * @private\n */\nexport class RaiseHandSubscriber {\n  private _callIdRef: CallIdRef;\n  private _context: CallContext;\n  private _raiseHand: RaiseHandCallFeature;\n  constructor(callIdRef: CallIdRef, context: CallContext, raiseHand: RaiseHandCallFeature) {\n    this._callIdRef = callIdRef;\n    this._context = context;\n    this._raiseHand = raiseHand;\n    this.subscribe();\n  }\n  private subscribe = (): void => {\n    this._raiseHand.on('raisedHandEvent', this.raisedHand);\n    this._raiseHand.on('loweredHandEvent', this.loweredHand);\n  };\n  public unsubscribe = (): void => {\n    this._raiseHand.off('raisedHandEvent', this.raisedHand);\n    this._raiseHand.off('loweredHandEvent', this.loweredHand);\n  };\n  private raisedHand = (): void => {\n    this._context.setCallRaisedHands(this._callIdRef.callId, this._raiseHand.getRaisedHands());\n    for (const raisedHand of this._raiseHand.getRaisedHands()) {\n      this._context.setParticipantIsRaisedHand(this._callIdRef.callId, toFlatCommunicationIdentifier(raisedHand.identifier), raisedHand);\n    }\n  };\n  private loweredHand = (event: RaisedHandChangedEvent): void => {\n    this.raisedHand();\n    this._context.setParticipantIsRaisedHand(this._callIdRef.callId, toFlatCommunicationIdentifier(event.identifier), undefined);\n  };\n}"]}