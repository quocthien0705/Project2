{"version":3,"file":"overFlowGalleriesUtils.js","sourceRoot":"","sources":["../../../../../../preprocess-dist/react-components/src/components/utils/overFlowGalleriesUtils.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC;;;;;;;;GAQG;AACH,MAAM,UAAU,SAAS,CAAI,GAAQ,EAAE,UAAkB;IACvD,MAAM,WAAW,GAAU,EAAE,CAAC;IAC9B,IAAI,UAAU,IAAI,CAAC,EAAE,CAAC;QACpB,OAAO,WAAW,CAAC;IACrB,CAAC;IACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC;QAChD,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;IACjD,CAAC;IACD,OAAO,WAAW,CAAC;AACrB,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Helper function to bucketize a given array of items into buckets of a specified size.\n *\n * @param arr array to bucketize\n * @param bucketSize number of children for each bucket\n * @returns nested array of given children\n *\n * @private\n */\nexport function bucketize<T>(arr: T[], bucketSize: number): T[][] {\n  const bucketArray: T[][] = [];\n  if (bucketSize <= 0) {\n    return bucketArray;\n  }\n  for (let i = 0; i < arr.length; i += bucketSize) {\n    bucketArray.push(arr.slice(i, i + bucketSize));\n  }\n  return bucketArray;\n}"]}