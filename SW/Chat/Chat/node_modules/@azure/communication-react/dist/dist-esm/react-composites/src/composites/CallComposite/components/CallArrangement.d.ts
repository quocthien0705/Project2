/// <reference types="react" />
import { _ComplianceBannerProps, ActiveErrorMessage, ErrorBarProps } from "../../../../../react-components/src";
import { VideoGalleryLayout } from "../../../../../react-components/src";
import { AvatarPersonaDataCallback } from '../../common/AvatarPersona';
import { CallControlsProps } from '../components/CallControls';
import { MutedNotificationProps } from './MutedNotification';
import { SidePaneRenderer } from './SidePane/SidePaneProvider';
import { MobileChatSidePaneTabHeaderProps } from '../../common/TabHeader';
import { CapabilitiesChangeNotificationBarProps } from './CapabilitiesChangedNotificationBar';
/**
 * @private
 */
export interface CallArrangementProps {
    id?: string;
    complianceBannerProps: _ComplianceBannerProps;
    errorBarProps: ErrorBarProps | false;
    mutedNotificationProps?: MutedNotificationProps;
    callControlProps: CallControlsProps;
    onRenderGalleryContent: () => JSX.Element;
    dataUiId: string;
    mobileView: boolean;
    modalLayerHostId: string;
    onFetchAvatarPersonaData?: AvatarPersonaDataCallback;
    updateSidePaneRenderer: (renderer: SidePaneRenderer | undefined) => void;
    mobileChatTabHeader?: MobileChatSidePaneTabHeaderProps;
    latestErrors: ActiveErrorMessage[];
    onDismissError: (error: ActiveErrorMessage) => void;
    onUserSetOverflowGalleryPositionChange?: (position: 'Responsive' | 'horizontalTop') => void;
    onUserSetGalleryLayoutChange?: (layout: VideoGalleryLayout) => void;
    userSetGalleryLayout?: VideoGalleryLayout;
    capabilitiesChangedNotificationBarProps?: CapabilitiesChangeNotificationBarProps;
    onCloseChatPane?: () => void;
    onSetDialpadPage?: () => void;
    dtmfDialerPresent?: boolean;
}
/**
 * @private
 */
export declare const CallArrangement: (props: CallArrangementProps) => JSX.Element;
//# sourceMappingURL=CallArrangement.d.ts.map