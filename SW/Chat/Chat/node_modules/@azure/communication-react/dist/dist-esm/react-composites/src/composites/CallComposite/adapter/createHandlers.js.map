{"version":3,"file":"createHandlers.js","sourceRoot":"","sources":["../../../../../../../preprocess-dist/react-composites/src/composites/CallComposite/adapter/createHandlers.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAGlC,OAAO,EAAmB,4BAA4B,EAAE,sDAA6C;AACrG,OAAO,EAAyE,UAAU,EAAE,eAAe,EAAmC,mDAA0C;AASxL;;;;GAIG;AACH,MAAM,UAAU,cAAc,CAA+C,UAA8B,EAAE,SAAoB,EAAE,aAAgD,EAAE,IAA4B,EAAE,2DAA2D,CAC9Q,OAEC;IACC,2CAA2C;IAC3C,IAAI,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;QACtE,OAAQ,4BAA4B,CAAC,UAAU,EAAE,SAAS,EAAE,aAAa,EAAE,IAAI,EAAE,2DAA2D,CAC5I,OAAO,CAA+B,CAAC;IACzC,CAAC;IACD,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;AAC1C,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { CallAgent } from '@azure/communication-calling';\nimport { CallingHandlers, createDefaultCallingHandlers } from '@internal/calling-component-bindings';\nimport { CallCommon, StatefulCallClient, StatefulDeviceManager, TeamsCallAgent, _isACSCall, _isACSCallAgent, _isTeamsCall, _isTeamsCallAgent } from '@internal/calling-stateful-client';\n/* @conditional-compile-remove(video-background-effects) */\nimport { VideoBackgroundEffectsDependency } from '@internal/calling-component-bindings';\n\n/**\n * @private\n */\nexport type CallHandlersOf<AgentType extends CallAgent | TeamsCallAgent> = AgentType extends CallAgent ? CallingHandlers : never;\n\n/**\n * @private\n *\n * This is used to create correct handler for generic agent type\n */\nexport function createHandlers<AgentType extends CallAgent | TeamsCallAgent>(callClient: StatefulCallClient, callAgent: AgentType, deviceManager: StatefulDeviceManager | undefined, call: CallCommon | undefined, /* @conditional-compile-remove(video-background-effects) */\noptions?: {\n  onResolveVideoBackgroundEffectsDependency?: () => Promise<VideoBackgroundEffectsDependency>;\n}): CallHandlersOf<AgentType> {\n  // Call can be either undefined or ACS Call\n  if (_isACSCallAgent(callAgent) && (!call || call && _isACSCall(call))) {\n    return (createDefaultCallingHandlers(callClient, callAgent, deviceManager, call, /* @conditional-compile-remove(video-background-effects) */\n    options) as CallHandlersOf<AgentType>);\n  }\n  throw new Error('Unhandled agent type');\n}"]}