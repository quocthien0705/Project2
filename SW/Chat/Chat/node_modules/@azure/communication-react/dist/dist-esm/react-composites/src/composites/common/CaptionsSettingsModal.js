// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import React from 'react';
/* @conditional-compile-remove(close-captions) */
import { _CaptionsSettingsModal } from "../../../../react-components/src";
/* @conditional-compile-remove(close-captions) */
import { useAdaptedSelector } from '../CallComposite/hooks/useAdaptedSelector';
/* @conditional-compile-remove(close-captions) */
import { useHandlers } from '../CallComposite/hooks/useHandlers';
/* @conditional-compile-remove(close-captions) */
import { useLocale } from '../localization';
/* @conditional-compile-remove(close-captions) */
import { _captionSettingsSelector } from "../../../../calling-component-bindings/src";
/** @private */
export const CaptionsSettingsModal = (props) => {
    /* @conditional-compile-remove(close-captions) */
    const CaptionsSettingsModalProps = useAdaptedSelector(_captionSettingsSelector);
    /* @conditional-compile-remove(close-captions) */
    const handlers = useHandlers(_CaptionsSettingsModal);
    /* @conditional-compile-remove(close-captions) */
    const strings = useLocale().strings.call;
    /* @conditional-compile-remove(close-captions) */
    const modalStrings = {
        captionsSettingsModalTitle: strings.captionsSettingsModalTitle,
        captionsSettingsSpokenLanguageDropdownLabel: strings.captionsSettingsSpokenLanguageDropdownLabel,
        captionsSettingsCaptionLanguageDropdownLabel: strings.captionsSettingsCaptionLanguageDropdownLabel,
        captionsSettingsSpokenLanguageDropdownInfoText: strings.captionsSettingsSpokenLanguageDropdownInfoText,
        captionsSettingsCaptionLanguageDropdownInfoText: strings.captionsSettingsCaptionLanguageDropdownInfoText,
        captionsSettingsConfirmButtonLabel: strings.captionsSettingsConfirmButtonLabel,
        captionsSettingsCancelButtonLabel: strings.captionsSettingsCancelButtonLabel,
        captionsSettingsModalAriaLabel: strings.captionsSettingsModalAriaLabel,
        captionsSettingsCloseModalButtonAriaLabel: strings.captionsSettingsCloseModalButtonAriaLabel
    };
    /* @conditional-compile-remove(close-captions) */
    const spokenLanguageStrings = strings.spokenLanguageStrings;
    /* @conditional-compile-remove(close-captions) */
    const captionLanguageStrings = strings.captionLanguageStrings;
    /* @conditional-compile-remove(close-captions) */
    return React.createElement(_CaptionsSettingsModal, Object.assign({}, CaptionsSettingsModalProps, handlers, { strings: modalStrings, spokenLanguageStrings: spokenLanguageStrings, captionLanguageStrings: captionLanguageStrings, showModal: props.showCaptionsSettingsModal, onDismissCaptionsSettings: props.onDismissCaptionsSettings, changeCaptionLanguage: props.changeCaptionLanguage }));
    return React.createElement(React.Fragment, null);
};
//# sourceMappingURL=CaptionsSettingsModal.js.map