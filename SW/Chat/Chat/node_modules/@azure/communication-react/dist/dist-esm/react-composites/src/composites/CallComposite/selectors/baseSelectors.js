// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { _isPreviewOn } from "../../../../../calling-component-bindings/src";
/**
 * @private
 */
export const getDisplayName = (state) => state.displayName;
/**
 * @private
 */
export const getCallId = (state) => { var _a; return (_a = state.call) === null || _a === void 0 ? void 0 : _a.id; };
/**
 * @private
 */
export const getEndedCall = (state) => state.endedCall;
/**
 * @private
 */
export const getCallStatus = (state) => { var _a, _b; return (_b = (_a = state.call) === null || _a === void 0 ? void 0 : _a.state) !== null && _b !== void 0 ? _b : 'None'; };
/**
 * @private
 */
export const getDeviceManager = (state) => state.devices;
/**
 * @private
 */
export const getIsScreenShareOn = (state) => { var _a, _b; return (_b = (_a = state.call) === null || _a === void 0 ? void 0 : _a.isScreenSharingOn) !== null && _b !== void 0 ? _b : false; };
/* @conditional-compile-remove(raise-hand) */
/**
 * @private
 */
export const getLocalParticipantRaisedHand = (state) => { var _a; return (_a = state.call) === null || _a === void 0 ? void 0 : _a.raiseHand.localParticipantRaisedHand; };
/**
 * @private
 */
export const getCapabilites = (state) => { var _a, _b; return (_b = (_a = state.call) === null || _a === void 0 ? void 0 : _a.capabilitiesFeature) === null || _b === void 0 ? void 0 : _b.capabilities; };
/**
 * @private
 */
export const getIsPreviewCameraOn = (state) => _isPreviewOn(state.devices);
/**
 * @private
 */
export const getMicrophones = (state) => state.devices.microphones;
/**
 * @private
 */
export const getCameras = (state) => state.devices.cameras;
/* @conditional-compile-remove(capabilities) */
/**
 * @private
 */
export const getRole = (state) => { var _a; return (_a = state.call) === null || _a === void 0 ? void 0 : _a.role; };
/**
 * @private
 */
export const getPage = (state) => state.page;
/* @conditional-compile-remove(call-transfer) */
/**
 * @private
 */
export const getTransferCall = (state) => state.acceptedTransferCallState;
/**
 * @private
 */
export const getLocalMicrophoneEnabled = (state) => state.isLocalPreviewMicrophoneEnabled;
/**
 * @private
 */
export const getLocalVideoStreams = (state) => { var _a; return (_a = state.call) === null || _a === void 0 ? void 0 : _a.localVideoStreams; };
/**
 * @private
 */
export const getIsTranscriptionActive = (state) => { var _a; return !!((_a = state.call) === null || _a === void 0 ? void 0 : _a.transcription.isTranscriptionActive); };
/**
 * @private
 */
export const getIsRecordingActive = (state) => { var _a; return !!((_a = state.call) === null || _a === void 0 ? void 0 : _a.recording.isRecordingActive); };
/**
 * @private
 */
export const getUserFacingDiagnostics = (state) => { var _a; return (_a = state.call) === null || _a === void 0 ? void 0 : _a.diagnostics; };
/**
 * @private
 */
export const getDominantSpeakerInfo = (state) => { var _a; return (_a = state.call) === null || _a === void 0 ? void 0 : _a.dominantSpeakers; };
/**
 * @private
 */
export const getRemoteParticipants = (state) => { var _a; return (_a = state.call) === null || _a === void 0 ? void 0 : _a.remoteParticipants; };
/* @conditional-compile-remove(video-background-effects) */
/**
 * @private
 */
export const getSelectedVideoEffect = (state) => state.selectedVideoBackgroundEffect;
/* @conditional-compile-remove(close-captions) */
/** @private */
export const getCaptions = (state) => {
    var _a;
    return (_a = state.call) === null || _a === void 0 ? void 0 : _a.captionsFeature.captions;
};
/* @conditional-compile-remove(close-captions) */
/** @private */
export const getCaptionsStatus = (state) => {
    var _a;
    return (_a = state.call) === null || _a === void 0 ? void 0 : _a.captionsFeature.isCaptionsFeatureActive;
};
/* @conditional-compile-remove(close-captions) */
/** @private */
export const getCurrentCaptionLanguage = (state) => {
    var _a;
    return (_a = state.call) === null || _a === void 0 ? void 0 : _a.captionsFeature.currentCaptionLanguage;
};
/* @conditional-compile-remove(close-captions) */
/** @private */
export const getCurrentSpokenLanguage = (state) => {
    var _a;
    return (_a = state.call) === null || _a === void 0 ? void 0 : _a.captionsFeature.currentSpokenLanguage;
};
/* @conditional-compile-remove(close-captions) */
/** @private */
export const getSupportedCaptionLanguages = (state) => {
    var _a;
    return (_a = state.call) === null || _a === void 0 ? void 0 : _a.captionsFeature.supportedCaptionLanguages;
};
/* @conditional-compile-remove(close-captions) */
/** @private */
export const getSupportedSpokenLanguages = (state) => {
    var _a;
    return (_a = state.call) === null || _a === void 0 ? void 0 : _a.captionsFeature.supportedSpokenLanguages;
};
/* @conditional-compile-remove(close-captions) */
/**
 * @private
 */
export const getIsTeamsCall = (state) => state.isTeamsCall;
/**
 * @private
 */
export const getLatestErrors = (state) => state.latestErrors;
/* @conditional-compile-remove(capabilities) */
/**
 * @private
 */
export const getLatestCapabilitiesChangedInfo = (state) => {
    var _a, _b;
    return (_b = (_a = state.call) === null || _a === void 0 ? void 0 : _a.capabilitiesFeature) === null || _b === void 0 ? void 0 : _b.latestCapabilitiesChangeInfo;
};
/**
 * @private
 */
export const getTargetCallees = (state) => state.targetCallees;
/**
 * @private
 */
export const getStartTime = (state) => { var _a; return (_a = state.call) === null || _a === void 0 ? void 0 : _a.startTime; };
//# sourceMappingURL=baseSelectors.js.map