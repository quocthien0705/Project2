{"version":3,"file":"useLongPress.js","sourceRoot":"","sources":["../../../../../../preprocess-dist/react-components/src/components/utils/useLongPress.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { useMemo, useRef, useState, useCallback, useEffect } from 'react';\n\n/**\n * @private\n */\nexport default function useLongPress(props: {\n  onLongPress: () => void;\n  onClick?: () => void;\n  touchEventsOnly?: boolean;\n}): {\n  onClick: () => void;\n  onMouseDown: () => void;\n  onMouseUp: () => void;\n  onTouchStart: () => void;\n  onTouchEnd: () => void;\n  onKeyDown: () => void;\n  onKeyUp: () => void;\n  onTouchMove: () => void;\n} {\n  const {\n    onClick,\n    onLongPress,\n    touchEventsOnly = false\n  } = props;\n  const timerRef = useRef<ReturnType<typeof setTimeout>>();\n  const [isLongPress, setIsLongPress] = useState(false);\n  const [action, setAction] = useState(false);\n  useEffect(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n    };\n  }, [onClick, onLongPress, touchEventsOnly]);\n  const startPressTimer = useCallback(() => {\n    setIsLongPress(false);\n    timerRef.current = setTimeout(() => {\n      setIsLongPress(true);\n      onLongPress();\n    }, 500);\n  }, [onLongPress]);\n  const handleOnClick = useCallback(() => {\n    if (touchEventsOnly || !onClick) {\n      return;\n    }\n    if (!isLongPress) {\n      onClick();\n    }\n  }, [isLongPress, onClick, touchEventsOnly]);\n  const handleOnKeyDown = useCallback(() => {\n    if (touchEventsOnly) {\n      return;\n    }\n    if (action) {\n      setAction(false);\n      startPressTimer();\n    }\n  }, [action, startPressTimer, touchEventsOnly]);\n  const handleOnKeyUp = useCallback(() => {\n    if (touchEventsOnly) {\n      return;\n    }\n    setAction(true);\n    timerRef.current && clearTimeout(timerRef.current);\n  }, [touchEventsOnly]);\n  const handleOnMouseDown = useCallback(() => {\n    if (touchEventsOnly) {\n      return;\n    }\n    startPressTimer();\n  }, [startPressTimer, touchEventsOnly]);\n  const handleOnMouseUp = useCallback(() => {\n    if (touchEventsOnly) {\n      return;\n    }\n    timerRef.current && clearTimeout(timerRef.current);\n  }, [touchEventsOnly]);\n  const handleOnTouchStart = useCallback(() => {\n    startPressTimer();\n  }, [startPressTimer]);\n  const handleOnTouchEnd = useCallback(() => {\n    if (!isLongPress && onClick) {\n      onClick();\n    }\n    timerRef.current && clearTimeout(timerRef.current);\n  }, [onClick, isLongPress]);\n  const handleOnTouchMove = useCallback(() => {\n    timerRef.current && clearTimeout(timerRef.current);\n  }, []);\n  return useMemo(() => ({\n    onClick: handleOnClick,\n    onMouseDown: handleOnMouseDown,\n    onMouseUp: handleOnMouseUp,\n    onTouchStart: handleOnTouchStart,\n    onTouchEnd: handleOnTouchEnd,\n    onKeyDown: handleOnKeyDown,\n    onKeyUp: handleOnKeyUp,\n    onTouchMove: handleOnTouchMove\n  }), [handleOnClick, handleOnKeyDown, handleOnKeyUp, handleOnMouseDown, handleOnMouseUp, handleOnTouchEnd, handleOnTouchStart, handleOnTouchMove]);\n}"]}