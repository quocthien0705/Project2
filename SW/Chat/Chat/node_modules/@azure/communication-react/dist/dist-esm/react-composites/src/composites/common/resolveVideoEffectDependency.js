// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { BackgroundBlurEffect, BackgroundReplacementEffect } from '@azure/communication-calling-effects';
/* @conditional-compile-remove(video-background-effects) */
/**
 * Dependency resolution for video background effects.
 *
 * @public
 */
export const onResolveVideoEffectDependency = () => __awaiter(void 0, void 0, void 0, function* () {
    const createBackgroundBlurEffect = (config) => {
        return new BackgroundBlurEffect(config);
    };
    const createBackgroundReplacementEffect = (config) => {
        return new BackgroundReplacementEffect(config);
    };
    const VideoBackgroundEffectsDependency = {
        createBackgroundBlurEffect,
        createBackgroundReplacementEffect
    };
    return VideoBackgroundEffectsDependency;
});
//# sourceMappingURL=resolveVideoEffectDependency.js.map