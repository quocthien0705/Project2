{"version":3,"file":"Utils.js","sourceRoot":"","sources":["../../../../../../preprocess-dist/react-components/src/components/ComplianceBanner/Utils.tsx"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAOlC;;;;;;;;;GASG;AACH,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,eAAgC,EAAE,mBAAoC,EAA2B,EAAE;IAChI,IAAI,eAAe,KAAK,IAAI,IAAI,mBAAmB,KAAK,IAAI,EAAE,CAAC;QAC7D,OAAO,qCAAqC,CAAC;IAC/C,CAAC;SAAM,IAAI,eAAe,KAAK,IAAI,IAAI,mBAAmB,KAAK,KAAK,EAAE,CAAC;QACrE,OAAO,mBAAmB,CAAC;IAC7B,CAAC;SAAM,IAAI,eAAe,KAAK,KAAK,IAAI,mBAAmB,KAAK,IAAI,EAAE,CAAC;QACrE,OAAO,uBAAuB,CAAC;IACjC,CAAC;SAAM,IAAI,eAAe,KAAK,IAAI,IAAI,mBAAmB,KAAK,SAAS,EAAE,CAAC;QACzE,OAAO,uCAAuC,CAAC;IACjD,CAAC;SAAM,IAAI,eAAe,KAAK,SAAS,IAAI,mBAAmB,KAAK,IAAI,EAAE,CAAC;QACzE,OAAO,sCAAsC,CAAC;IAChD,CAAC;SAAM,IAAI,eAAe,KAAK,KAAK,IAAI,mBAAmB,KAAK,SAAS,EAAE,CAAC;QAC1E,OAAO,uBAAuB,CAAC;IACjC,CAAC;SAAM,IAAI,eAAe,KAAK,SAAS,IAAI,mBAAmB,KAAK,KAAK,EAAE,CAAC;QAC1E,OAAO,mBAAmB,CAAC;IAC7B,CAAC;SAAM,IAAI,eAAe,KAAK,SAAS,IAAI,mBAAmB,KAAK,SAAS,EAAE,CAAC;QAC9E,OAAO,qCAAqC,CAAC;IAC/C,CAAC;SAAM,CAAC;QACN,OAAO,UAAU,CAAC;IACpB,CAAC;AACH,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * @private\n */\nexport type ComplianceState = 'on' | 'off' | 'stopped';\n\n/**\n * Return different conditions based on the current and previous state of recording and transcribing\n *\n * @param callRecordState - The current call record state: on, off, stopped\n * @param callTranscribeState - The current call transcribe state: on, off, stopped\n *\n * @remarks - The stopped state means: previously on but currently off\n *\n * @private\n */\nexport const computeVariant = (callRecordState: ComplianceState, callTranscribeState: ComplianceState): ComplianceBannerVariant => {\n  if (callRecordState === 'on' && callTranscribeState === 'on') {\n    return 'RECORDING_AND_TRANSCRIPTION_STARTED';\n  } else if (callRecordState === 'on' && callTranscribeState === 'off') {\n    return 'RECORDING_STARTED';\n  } else if (callRecordState === 'off' && callTranscribeState === 'on') {\n    return 'TRANSCRIPTION_STARTED';\n  } else if (callRecordState === 'on' && callTranscribeState === 'stopped') {\n    return 'TRANSCRIPTION_STOPPED_STILL_RECORDING';\n  } else if (callRecordState === 'stopped' && callTranscribeState === 'on') {\n    return 'RECORDING_STOPPED_STILL_TRANSCRIBING';\n  } else if (callRecordState === 'off' && callTranscribeState === 'stopped') {\n    return 'TRANSCRIPTION_STOPPED';\n  } else if (callRecordState === 'stopped' && callTranscribeState === 'off') {\n    return 'RECORDING_STOPPED';\n  } else if (callRecordState === 'stopped' && callTranscribeState === 'stopped') {\n    return 'RECORDING_AND_TRANSCRIPTION_STOPPED';\n  } else {\n    return 'NO_STATE';\n  }\n};\n\n/**\n * @private\n */\nexport type ComplianceBannerVariant = 'NO_STATE' | 'TRANSCRIPTION_STOPPED_STILL_RECORDING' | 'RECORDING_STOPPED_STILL_TRANSCRIBING' | 'RECORDING_AND_TRANSCRIPTION_STOPPED' | 'RECORDING_AND_TRANSCRIPTION_STARTED' | 'TRANSCRIPTION_STARTED' | 'RECORDING_STOPPED' | 'RECORDING_STARTED' | 'TRANSCRIPTION_STOPPED';"]}