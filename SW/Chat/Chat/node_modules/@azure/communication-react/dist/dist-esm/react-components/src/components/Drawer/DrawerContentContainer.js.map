{"version":3,"file":"DrawerContentContainer.js","sourceRoot":"","sources":["../../../../../../preprocess-dist/react-components/src/components/Drawer/DrawerContentContainer.tsx"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAE,eAAe,EAAU,WAAW,EAAE,KAAK,EAAE,IAAI,EAAS,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AACrG,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B;;;;GAIG;AACH,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,KAItC,EAAe,EAAE;;IAChB,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;IACzB,MAAM,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;IAC5C,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC;IAClD,MAAM,UAAU,GAAG,WAAW,CAAC,eAAe,CAAC,eAAe,EAAE,YAAY,CAAC,EAAE,MAAA,KAAK,CAAC,MAAM,0CAAE,IAAI,CAAC,CAAC;IACnG,OAAO,oBAAC,KAAK,IAAC,SAAS,EAAE,UAAU;QAC9B,KAAK,CAAC,OAAO,IAAI,oBAAC,KAAK,IAAC,SAAS,EAAE,WAAW,CAAC,sBAAsB,CAAC;YACnE,oBAAC,IAAI,IAAC,SAAS,EAAE,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAG,KAAK,CAAC,OAAO,CAAQ,CACpE;QACT,KAAK,CAAC,QAAQ,CACT,CAAC;AACb,CAAC,CAAC;AACF,MAAM,eAAe,GAAG,CAAC,eAAuB,EAAE,YAAoB,EAAU,EAAE,CAAC,iBACjF,UAAU,EAAE,eAAe,EAC3B,oBAAoB,EAAE,YAAY,EAClC,mBAAmB,EAAE,YAAY,IAC9B,eAAe,CAAC,WAAW,EAC9B,CAAC;AACH,MAAM,sBAAsB,GAAW;IACrC,SAAS,EAAE,QAAQ;IACnB,KAAK,EAAE,MAAM;IACb,OAAO,EAAE,QAAQ;CAClB,CAAC;AACF,MAAM,aAAa,GAAG,CAAC,KAAY,EAAU,EAAE,CAAC,CAAC;IAC/C,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,gBAAgB;IACrC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ;IACxC,UAAU,EAAE,MAAM;IAClB,UAAU,EAAE,QAAQ;IACpB,QAAQ,EAAE,QAAQ;IAClB,YAAY,EAAE,UAAU;CACzB,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AnimationStyles, IStyle, mergeStyles, Stack, Text, Theme, useTheme } from '@fluentui/react';\nimport React from 'react';\nimport { BaseCustomStyles } from '../../types';\n\n/**\n * Container that holds the content of the drawer\n *\n * @private\n */\nexport const DrawerContentContainer = (props: {\n  children: React.ReactNode;\n  heading?: string;\n  styles?: BaseCustomStyles;\n}): JSX.Element => {\n  const theme = useTheme();\n  const backgroundColor = theme.palette.white;\n  const borderRadius = theme.effects.roundedCorner4;\n  const rootStyles = mergeStyles(containerStyles(backgroundColor, borderRadius), props.styles?.root);\n  return <Stack className={rootStyles}>\n      {props.heading && <Stack className={mergeStyles(headingContainerStyles)}>\n          <Text className={mergeStyles(headingStyles(theme))}>{props.heading}</Text>\n        </Stack>}\n      {props.children}\n    </Stack>;\n};\nconst containerStyles = (backgroundColor: string, borderRadius: string): IStyle => ({\n  background: backgroundColor,\n  borderTopRightRadius: borderRadius,\n  borderTopLeftRadius: borderRadius,\n  ...AnimationStyles.slideUpIn10\n});\nconst headingContainerStyles: IStyle = {\n  textAlign: 'center',\n  width: '100%',\n  padding: '0.5rem'\n};\nconst headingStyles = (theme: Theme): IStyle => ({\n  color: theme.palette.neutralSecondary,\n  fontSize: theme.fonts.smallPlus.fontSize,\n  lineHeight: '1rem',\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis'\n});"]}