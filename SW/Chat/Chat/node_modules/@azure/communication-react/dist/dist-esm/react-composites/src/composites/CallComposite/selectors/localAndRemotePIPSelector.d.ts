import * as reselect from 'reselect';
/**
 * Picture in picture in picture needs to display the most-dominant remote speaker, as well as the local participant video.
 * @private
 */
export declare const localAndRemotePIPSelector: ((state: import("..").CallAdapterUiState & import("..").CallAdapterClientState) => {
    localParticipant: {
        displayName: string | undefined;
        videoStream: {
            isAvailable: boolean;
            isMirrored: boolean | undefined;
            renderElement: HTMLElement | undefined;
            activeVideoEffects: import("../../../../../calling-stateful-client/src").LocalVideoStreamVideoEffectsState | undefined;
        };
        raisedHand: import("../../../../../calling-stateful-client/src").RaisedHandState | undefined;
    };
    dominantRemoteParticipant: import("../../../../../react-components/src").VideoGalleryRemoteParticipant | undefined;
}) & reselect.OutputSelectorFields<(args_0: string | undefined, args_1: import("../../../../../react-components/src").VideoGalleryRemoteParticipant | undefined, args_2: {
    isAvailable: boolean;
    isMirrored: boolean | undefined;
    renderElement: HTMLElement | undefined;
    activeVideoEffects: import("../../../../../calling-stateful-client/src").LocalVideoStreamVideoEffectsState | undefined;
}, args_3: import("../../../../../calling-stateful-client/src").RaisedHandState | undefined) => {
    localParticipant: {
        displayName: string | undefined;
        videoStream: {
            isAvailable: boolean;
            isMirrored: boolean | undefined;
            renderElement: HTMLElement | undefined;
            activeVideoEffects: import("../../../../../calling-stateful-client/src").LocalVideoStreamVideoEffectsState | undefined;
        };
        raisedHand: import("../../../../../calling-stateful-client/src").RaisedHandState | undefined;
    };
    dominantRemoteParticipant: import("../../../../../react-components/src").VideoGalleryRemoteParticipant | undefined;
}, {
    clearCache: () => void;
}> & {
    clearCache: () => void;
};
//# sourceMappingURL=localAndRemotePIPSelector.d.ts.map