{"version":3,"file":"AzureCommunicationCallAdapter.js","sourceRoot":"","sources":["../../../../../../../preprocess-dist/react-composites/src/composites/CallComposite/adapter/AzureCommunicationCallAdapter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { compositeLogger } from '../../../Logger';\nimport { _isInCall, _isInLobbyOrConnecting } from '@internal/calling-component-bindings';\nimport { CallClientState, CallError, CallState, _createStatefulCallClientInner, StatefulCallClient, StatefulDeviceManager, TeamsCall, TeamsCallAgent as BetaTeamsCallAgent, _isACSCall, _isTeamsCall } from '@internal/calling-stateful-client';\n/* @conditional-compile-remove(call-transfer) */\nimport { AcceptedTransfer } from '@internal/calling-stateful-client';\nimport { CallCommon } from '@internal/calling-stateful-client';\nimport { _TelemetryImplementationHint } from '@internal/acs-ui-common';\nimport { AudioOptions, CallAgent, GroupCallLocator, TeamsMeetingLinkLocator, LocalVideoStream as SDKLocalVideoStream, AudioDeviceInfo, VideoDeviceInfo, RemoteParticipant, PermissionConstraints, PropertyChangedEvent, StartCallOptions, VideoOptions, Call } from '@azure/communication-calling';\n/* @conditional-compile-remove(close-captions) */\nimport { TeamsCaptions } from '@azure/communication-calling';\n/* @conditional-compile-remove(call-transfer) */\nimport { TransferEventArgs } from '@azure/communication-calling';\n/* @conditional-compile-remove(close-captions) */\nimport { StartCaptionsOptions, TeamsCaptionsInfo } from '@azure/communication-calling';\n/* @conditional-compile-remove(video-background-effects) */\nimport type { BackgroundBlurConfig, BackgroundReplacementConfig } from '@azure/communication-calling';\n/* @conditional-compile-remove(capabilities) */\nimport type { CapabilitiesChangeInfo } from '@azure/communication-calling';\n/* @conditional-compile-remove(rooms) */\nimport { RoomCallLocator } from '@azure/communication-calling';\n/* @conditional-compile-remove(unsupported-browser) */ /* @conditional-compile-remove(video-background-effects) */ /* @conditional-compile-remove(close-captions) */ /* @conditional-compile-remove(capabilities) */\nimport { Features } from '@azure/communication-calling';\nimport { DtmfTone } from '@azure/communication-calling';\nimport { EventEmitter } from 'events';\nimport { CommonCallAdapter, CallEndedListener, CallIdChangedListener, CallAdapterState, DisplayNameChangedListener, IsMutedChangedListener, IsLocalScreenSharingActiveChangedListener, IsSpeakingChangedListener, ParticipantsJoinedListener, ParticipantsLeftListener, DiagnosticChangedEventListner, CallAdapterCallEndedEvent, CallAdapter, JoinCallOptions, StartCallIdentifier } from './CallAdapter';\n/* @conditional-compile-remove(call-transfer) */\nimport { TransferAcceptedListener } from './CallAdapter';\n/* @conditional-compile-remove(capabilities) */\nimport { CapabilitiesChangedListener } from './CallAdapter';\n/* @conditional-compile-remove(close-captions) */\nimport { CaptionsReceivedListener, IsCaptionsActiveChangedListener, IsCaptionLanguageChangedListener, IsSpokenLanguageChangedListener } from './CallAdapter';\n/* @conditional-compile-remove(video-background-effects) */\nimport { VideoBackgroundImage, VideoBackgroundEffect, VideoBackgroundBlurEffect, VideoBackgroundReplacementEffect } from './CallAdapter';\nimport { getCallCompositePage, getLocatorOrTargetCallees, IsCallEndedPage, isCameraOn } from '../utils';\nimport { CreateVideoStreamViewResult, VideoStreamOptions } from '@internal/react-components';\nimport { toFlatCommunicationIdentifier, _toCommunicationIdentifier, _isValidIdentifier } from '@internal/acs-ui-common';\nimport { CommunicationTokenCredential, CommunicationUserIdentifier, CommunicationIdentifier, MicrosoftTeamsUserIdentifier, isMicrosoftTeamsUserIdentifier, MicrosoftTeamsAppIdentifier, UnknownIdentifier } from '@azure/communication-common';\nimport { ParticipantSubscriber } from './ParticipantSubcriber';\nimport { AdapterError } from '../../common/adapters';\nimport { DiagnosticsForwarder } from './DiagnosticsForwarder';\nimport { useEffect, useRef, useState } from 'react';\nimport { CallHandlersOf, createHandlers } from './createHandlers';\nimport { createProfileStateModifier, OnFetchProfileCallback } from './OnFetchProfileCallback';\n/* @conditional-compile-remove(video-background-effects) */\nimport { getBackgroundEffectFromSelectedEffect } from '../utils';\nimport { getSelectedCameraFromAdapterState } from '../utils';\n/* @conditional-compile-remove(video-background-effects) */\nimport { VideoBackgroundEffectsDependency } from '@internal/calling-component-bindings';\n/* @conditional-compile-remove(calling-sounds) */\nimport { CallingSoundSubscriber } from './CallingSoundSubscriber';\n/* @conditional-compile-remove(calling-sounds) */\nimport { CallingSounds } from './CallAdapter';\ntype CallTypeOf<AgentType extends CallAgent | BetaTeamsCallAgent> = AgentType extends CallAgent ? Call : TeamsCall;\n\n/** Context of call, which is a centralized context for all state updates */\nclass CallContext {\n  private emitter: EventEmitter = new EventEmitter();\n  private state: CallAdapterState;\n  private callId: string | undefined;\n  private displayNameModifier: AdapterStateModifier | undefined;\n  constructor(clientState: CallClientState, isTeamsCall: boolean, /* @conditional-compile-remove(rooms) */\n  isRoomsCall: boolean, options?: {\n    maxListeners?: number;\n    onFetchProfile?: OnFetchProfileCallback;\n    /* @conditional-compile-remove(video-background-effects) */\n    videoBackgroundOptions?: {\n      videoBackgroundImages?: VideoBackgroundImage[];\n      onResolveDependency?: () => Promise<VideoBackgroundEffectsDependency>;\n    };\n    /* @conditional-compile-remove(calling-sounds) */\n    callingSounds?: CallingSounds;\n  }, targetCallees?: StartCallIdentifier[]) {\n    this.state = {\n      isLocalPreviewMicrophoneEnabled: false,\n      userId: clientState.userId,\n      displayName: clientState.callAgent?.displayName,\n      devices: clientState.deviceManager,\n      call: undefined,\n      /* @conditional-compile-remove(calling-sounds) */targetCallees: (targetCallees as CommunicationIdentifier[]),\n      page: 'configuration',\n      latestErrors: clientState.latestErrors,\n      isTeamsCall,\n      /* @conditional-compile-remove(rooms) */isRoomsCall,\n      /* @conditional-compile-remove(video-background-effects) */videoBackgroundImages: options?.videoBackgroundOptions?.videoBackgroundImages,\n      /* @conditional-compile-remove(video-background-effects) */\n      onResolveVideoEffectDependency: options?.videoBackgroundOptions?.onResolveDependency,\n      /* @conditional-compile-remove(video-background-effects) */selectedVideoBackgroundEffect: undefined,\n      cameraStatus: undefined,\n      /* @conditional-compile-remove(calling-sounds) */sounds: options?.callingSounds\n    };\n    this.emitter.setMaxListeners(options?.maxListeners ?? 50);\n    this.bindPublicMethods();\n    this.displayNameModifier = options?.onFetchProfile ? createProfileStateModifier(options.onFetchProfile, () => {\n      this.setState(this.getState());\n    }) : undefined;\n  }\n  private bindPublicMethods(): void {}\n  public onStateChange(handler: (_uiState: CallAdapterState) => void): void {\n    this.emitter.on('stateChanged', handler);\n  }\n  public offStateChange(handler: (_uiState: CallAdapterState) => void): void {\n    this.emitter.off('stateChanged', handler);\n  }\n  public setState(state: CallAdapterState): void {\n    this.state = this.displayNameModifier ? this.displayNameModifier(state) : state;\n    this.emitter.emit('stateChanged', this.state);\n  }\n  public getState(): CallAdapterState {\n    return this.state;\n  }\n  public setIsLocalMicrophoneEnabled(isLocalPreviewMicrophoneEnabled: boolean): void {\n    this.setState({\n      ...this.state,\n      isLocalPreviewMicrophoneEnabled\n    });\n  }\n\n  // This is the key to find current call object in client state\n  public setCurrentCallId(callId: string | undefined): void {\n    this.callId = callId;\n  }\n\n  /* @conditional-compile-remove(calling-sounds) */\n  public setTargetCallee(targetCallees: StartCallIdentifier[]): void {\n    this.setState({\n      ...this.state,\n      targetCallees\n    });\n  }\n  public onCallEnded(handler: (callEndedData: CallAdapterCallEndedEvent) => void): void {\n    this.emitter.on('callEnded', handler);\n  }\n  public offCallEnded(handler: (callEndedData: CallAdapterCallEndedEvent) => void): void {\n    this.emitter.off('callEnded', handler);\n  }\n  public updateClientState(clientState: CallClientState): void {\n    let call = this.callId ? clientState.calls[this.callId] : undefined;\n    const latestEndedCall = clientState.callsEnded ? findLatestEndedCall(clientState.callsEnded) : undefined;\n    // As the state is transitioning to a new state, trigger appropriate callback events.\n    const oldPage = this.state.page;\n    /* @conditional-compile-remove(call-transfer) */\n    const latestAcceptedTransfer = call?.transfer.acceptedTransfers ? findLatestAcceptedTransfer(call.transfer.acceptedTransfers) : undefined;\n    /* @conditional-compile-remove(call-transfer) */\n    const transferCall = latestAcceptedTransfer ? clientState.calls[latestAcceptedTransfer.callId] : undefined;\n    const newPage = getCallCompositePage(call, latestEndedCall, /* @conditional-compile-remove(call-transfer) */transferCall);\n    if (!IsCallEndedPage(oldPage) && IsCallEndedPage(newPage)) {\n      this.emitter.emit('callEnded', {\n        callId: this.callId\n      });\n      // Reset the callId to undefined as the call has ended.\n      this.setCurrentCallId(undefined);\n      // Make sure that the call is set to undefined in the state.\n      call = undefined;\n    }\n    if (this.state.page) {\n      this.setState({\n        ...this.state,\n        userId: clientState.userId,\n        displayName: clientState.callAgent?.displayName,\n        call,\n        page: newPage,\n        endedCall: latestEndedCall,\n        devices: clientState.deviceManager,\n        latestErrors: clientState.latestErrors,\n        cameraStatus: call?.localVideoStreams.find(s => s.mediaStreamType === 'Video') || clientState.deviceManager.unparentedViews.find(s => s.mediaStreamType === 'Video') ? 'On' : 'Off',\n        /* @conditional-compile-remove(call-transfer) */acceptedTransferCallState: transferCall\n      });\n    }\n  }\n  /* @conditional-compile-remove(video-background-effects) */\n  public setBackroundPickerImages(videoBackgroundImages: VideoBackgroundImage[]): void {\n    this.setState({\n      ...this.state,\n      videoBackgroundImages\n    });\n  }\n\n  /* @conditional-compile-remove(video-background-effects) */\n  public setSelectedVideoBackgroundEffect(selectedVideoBackgroundEffect?: VideoBackgroundEffect): void {\n    this.setState({\n      ...this.state,\n      selectedVideoBackgroundEffect\n    });\n  }\n\n  /* @conditional-compile-remove(call-transfer) */\n  public setAcceptedTransferCall(call?: CallState): void {\n    this.setState({\n      ...this.state,\n      acceptedTransferCallState: call\n    });\n  }\n}\nconst findLatestEndedCall = (calls: {\n  [key: string]: CallState;\n}): CallState | undefined => {\n  const callStates = Object.values(calls);\n  if (callStates.length === 0) {\n    return undefined;\n  }\n  let latestCall = callStates[0];\n  for (const call of callStates.slice(1)) {\n    if ((call.endTime?.getTime() ?? 0) > (latestCall.endTime?.getTime() ?? 0)) {\n      latestCall = call;\n    }\n  }\n  return latestCall;\n};\n\n/* @conditional-compile-remove(call-transfer) */\nconst findLatestAcceptedTransfer = (acceptedTransfers: {\n  [key: string]: AcceptedTransfer;\n}): AcceptedTransfer | undefined => {\n  const acceptedTransferValues = Object.values(acceptedTransfers);\n  if (acceptedTransferValues.length === 0) {\n    return undefined;\n  }\n  let latestAcceptedTransfer = acceptedTransferValues[0];\n  for (const acceptedTransfer of acceptedTransferValues.slice(1)) {\n    if ((acceptedTransfer.timestamp?.getTime() ?? 0) > (latestAcceptedTransfer.timestamp?.getTime() ?? 0)) {\n      latestAcceptedTransfer = acceptedTransfer;\n    }\n  }\n  return latestAcceptedTransfer;\n};\n\n/**\n * @private\n */\nexport type AdapterStateModifier = (state: CallAdapterState) => CallAdapterState;\n\n/**\n * @private\n */\nexport class AzureCommunicationCallAdapter<AgentType extends CallAgent | BetaTeamsCallAgent = CallAgent> implements CommonCallAdapter {\n  private callClient: StatefulCallClient;\n  private callAgent: AgentType;\n  private deviceManager: StatefulDeviceManager;\n  private locator?: CallAdapterLocator;\n  targetCallees?: StartCallIdentifier[];\n  // Never use directly, even internally. Use `call` property instead.\n  private _call?: CallCommon;\n  private context: CallContext;\n  private diagnosticsForwarder?: DiagnosticsForwarder;\n  private handlers: CallHandlersOf<AgentType>;\n  private participantSubscribers = new Map<string, ParticipantSubscriber>();\n  private emitter: EventEmitter = new EventEmitter();\n  /* @conditional-compile-remove(calling-sounds) */\n  private callingSoundSubscriber: CallingSoundSubscriber | undefined;\n  private onClientStateChange: (clientState: CallClientState) => void;\n  /* @conditional-compile-remove(video-background-effects) */\n  private onResolveVideoBackgroundEffectsDependency?: () => Promise<VideoBackgroundEffectsDependency>;\n  private get call(): CallCommon | undefined {\n    return this._call;\n  }\n  private set call(newCall: CallCommon | undefined) {\n    this.resetDiagnosticsForwarder(newCall);\n    this._call = newCall;\n  }\n  constructor(callClient: StatefulCallClient, locator: CallAdapterLocator, callAgent: AgentType, deviceManager: StatefulDeviceManager, options?: AzureCommunicationCallAdapterOptions | TeamsAdapterOptions);\n  constructor(callClient: StatefulCallClient, targetCallees: StartCallIdentifier[], callAgent: AgentType, deviceManager: StatefulDeviceManager, options?: AzureCommunicationCallAdapterOptions | TeamsAdapterOptions);\n  constructor(callClient: StatefulCallClient, locatorOrTargetCalless: CallAdapterLocator | StartCallIdentifier[], callAgent: AgentType, deviceManager: StatefulDeviceManager, options?: AzureCommunicationCallAdapterOptions | TeamsAdapterOptions) {\n    this.bindPublicMethods();\n    this.callClient = callClient;\n    this.callAgent = callAgent;\n    this.targetCallees = getLocatorOrTargetCallees(locatorOrTargetCalless) === true ? (locatorOrTargetCalless as StartCallIdentifier[]) : undefined;\n    this.locator = getLocatorOrTargetCallees(locatorOrTargetCalless) === false ? (locatorOrTargetCalless as CallAdapterLocator) : undefined;\n    this.deviceManager = deviceManager;\n    const isTeamsMeeting = this.locator ? 'meetingLink' in this.locator : false;\n\n    /* @conditional-compile-remove(rooms) */\n    const isRoomsCall = this.locator ? 'roomId' in this.locator : false;\n\n    /* @conditional-compile-remove(video-background-effects) */\n    this.onResolveVideoBackgroundEffectsDependency = options?.videoBackgroundOptions?.onResolveDependency;\n    this.context = new CallContext(callClient.getState(), isTeamsMeeting, /* @conditional-compile-remove(rooms) */isRoomsCall, /* @conditional-compile-remove(video-background-effects) */options, this.targetCallees);\n    this.context.onCallEnded(endCallData => this.emitter.emit('callEnded', endCallData));\n    const onStateChange = (clientState: CallClientState): void => {\n      // unsubscribe when the instance gets disposed\n      if (!this) {\n        callClient.offStateChange(onStateChange);\n        return;\n      }\n\n      // `updateClientState` searches for the current call from all the calls in the state using a cached `call.id`\n      // from the call object. `call.id` can change during a call. We must update the cached `call.id` before\n      // calling `updateClientState` so that we find the correct state object for the call even when `call.id`\n      // has changed.\n      // https://github.com/Azure/communication-ui-library/pull/1820\n      if (this.call?.id) {\n        this.context.setCurrentCallId(this.call.id);\n      }\n\n      // If the call connects we need to clean up any previous unparentedViews\n      if ((this.call?.state === 'InLobby' || this.call?.state === 'Connected') && this.callClient.getState().deviceManager.unparentedViews.length > 0) {\n        this.callClient.getState().deviceManager.unparentedViews.forEach(view => {\n          this.callClient.disposeView(undefined, undefined, view);\n        });\n      }\n      this.context.updateClientState(clientState);\n    };\n    this.handlers = createHandlers(callClient, callAgent, deviceManager, undefined, /* @conditional-compile-remove(video-background-effects) */{\n      onResolveVideoBackgroundEffectsDependency: this.onResolveVideoBackgroundEffectsDependency\n    });\n    this.onClientStateChange = onStateChange;\n    this.subscribeDeviceManagerEvents();\n    this.callClient.onStateChange(onStateChange);\n    /* @conditional-compile-remove(call-transfer) */\n    if (this.callAgent.kind === 'CallAgent') {\n      const onCallsUpdated = (args: {\n        added: Call[];\n        removed: Call[];\n      }): void => {\n        if (this.call?.id) {\n          const removedCall = args.removed.find(call => call.id === this.call?.id);\n          if (removedCall) {\n            const removedCallState = this.callClient.getState().callsEnded[removedCall.id];\n            const latestAcceptedTransfer = findLatestAcceptedTransfer(removedCallState.transfer.acceptedTransfers);\n            const _callAgent = (callAgent as CallAgent);\n            const transferCall = _callAgent.calls.find((call: Call) => call.id === latestAcceptedTransfer?.callId);\n            if (transferCall) {\n              this.processNewCall(transferCall);\n            }\n          }\n        }\n      };\n      (this.callAgent as CallAgent).on('callsUpdated', onCallsUpdated);\n    }\n  }\n\n  // TODO: update this to include the 'selectedCameraChanged' when calling adds it to the device manager\n  private subscribeDeviceManagerEvents(): void {\n    this.deviceManager.on('selectedMicrophoneChanged', () => {\n      this.emitter.emit('selectedMicrophoneChanged');\n    });\n    this.deviceManager.on('selectedSpeakerChanged', () => {\n      this.emitter.emit('selectedSpeakerChanged');\n    });\n  }\n  private bindPublicMethods(): void {\n    this.onStateChange.bind(this);\n    this.offStateChange.bind(this);\n    this.getState.bind(this);\n    this.dispose.bind(this);\n    this.joinCall.bind(this);\n    this.leaveCall.bind(this);\n    this.setCamera.bind(this);\n    this.setMicrophone.bind(this);\n    this.setSpeaker.bind(this);\n    this.askDevicePermission.bind(this);\n    this.queryCameras.bind(this);\n    this.queryMicrophones.bind(this);\n    this.querySpeakers.bind(this);\n    this.startCamera.bind(this);\n    this.stopCamera.bind(this);\n    this.mute.bind(this);\n    this.unmute.bind(this);\n    this.startCall.bind(this);\n    this.startScreenShare.bind(this);\n    this.stopScreenShare.bind(this);\n    /* @conditional-compile-remove(raise-hand) */\n    this.raiseHand.bind(this);\n    this.lowerHand.bind(this);\n    this.removeParticipant.bind(this);\n    this.createStreamView.bind(this);\n    this.disposeStreamView.bind(this);\n    this.disposeScreenShareStreamView.bind(this);\n    this.disposeRemoteVideoStreamView.bind(this);\n    this.disposeLocalVideoStreamView.bind(this);\n    this.on.bind(this);\n    this.off.bind(this);\n    this.processNewCall.bind(this);\n    this.sendDtmfTone.bind(this);\n    /* @conditional-compile-remove(close-captions) */\n    {\n      this.startCaptions.bind(this);\n      this.stopCaptions.bind(this);\n      this.setSpokenLanguage.bind(this);\n      this.setCaptionLanguage.bind(this);\n    }\n    /* @conditional-compile-remove(video-background-effects) */\n    this.startVideoBackgroundEffect.bind(this);\n    /* @conditional-compile-remove(video-background-effects) */\n    this.stopVideoBackgroundEffects.bind(this);\n    /* @conditional-compile-remove(video-background-effects) */\n    this.updateBackgroundPickerImages.bind(this);\n  }\n  public dispose(): void {\n    this.resetDiagnosticsForwarder();\n    this.callClient.offStateChange(this.onClientStateChange);\n    this.callAgent.dispose();\n  }\n  public async queryCameras(): Promise<VideoDeviceInfo[]> {\n    const startTime = new Date().getTime();\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      const cameras = await this.deviceManager.getCameras();\n      const endTime = new Date().getTime();\n      compositeLogger.info('time to query cameras', endTime - startTime, 'ms');\n      return cameras;\n    });\n  }\n  public async queryMicrophones(): Promise<AudioDeviceInfo[]> {\n    const startTime = new Date().getTime();\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      const microphones = await this.deviceManager.getMicrophones();\n      const endTime = new Date().getTime();\n      compositeLogger.info('time to query microphones', endTime - startTime, 'ms');\n      return microphones;\n    });\n  }\n  public async querySpeakers(): Promise<AudioDeviceInfo[]> {\n    const startTime = new Date().getTime();\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      const speakers = (await this.deviceManager.isSpeakerSelectionAvailable) ? this.deviceManager.getSpeakers() : [];\n      const endTime = new Date().getTime();\n      compositeLogger.info('time to query speakers', endTime - startTime, 'ms');\n      return speakers;\n    });\n  }\n  public async askDevicePermission(constrain: PermissionConstraints): Promise<void> {\n    const startTime = new Date().getTime();\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      await this.deviceManager.askDevicePermission(constrain);\n      const endTime = new Date().getTime();\n      compositeLogger.info('time to query askDevicePermissions', endTime - startTime, 'ms');\n    });\n  }\n  public joinCall(options?: boolean | JoinCallOptions): CallTypeOf<AgentType> | undefined {\n    if (_isInCall(this.getState().call?.state ?? 'None')) {\n      throw new Error('You are already in the call!');\n    } else if (this.locator === undefined) {\n      throw new Error('Locator is not defined!');\n    }\n    return this.teeErrorToEventEmitter(() => {\n      // Default to keeping camera/mic on if no override argument specified\n      let shouldCameraBeOnInCall = this.getState().cameraStatus === 'On';\n      let shouldMicrophoneBeOnInCall = this.getState().isLocalPreviewMicrophoneEnabled;\n\n      // Apply override arguments\n      if (typeof options === 'boolean') {\n        // Deprecated joinCall API (boolen)\n        shouldMicrophoneBeOnInCall = options;\n      } else if (typeof options === 'object') {\n        // Options bag API\n        if (options.microphoneOn && options.microphoneOn !== 'keep') {\n          shouldMicrophoneBeOnInCall = options.microphoneOn;\n        }\n        if (options.cameraOn && options.cameraOn !== 'keep') {\n          shouldCameraBeOnInCall = options.cameraOn;\n        }\n      }\n      const audioOptions: AudioOptions = {\n        muted: !shouldMicrophoneBeOnInCall\n      };\n      const selectedCamera = getSelectedCameraFromAdapterState(this.getState());\n      const videoOptions: VideoOptions = selectedCamera && shouldCameraBeOnInCall ? {\n        localVideoStreams: [new SDKLocalVideoStream(selectedCamera)]\n      } : {};\n      const call = this._joinCall(audioOptions, videoOptions);\n      this.processNewCall(call);\n      return call;\n    });\n  }\n  private _joinCall(audioOptions: AudioOptions, videoOptions: VideoOptions): CallTypeOf<AgentType> {\n    const isTeamsMeeting = this.locator ? 'meetingLink' in this.locator : false;\n    /* @conditional-compile-remove(rooms) */\n    const isRoomsCall = this.locator ? 'roomId' in this.locator : false;\n    if (isTeamsMeeting) {\n      return (this.callAgent.join((this.locator as TeamsMeetingLinkLocator), {\n        audioOptions,\n        videoOptions\n      }) as CallTypeOf<AgentType>);\n    }\n    /* @conditional-compile-remove(rooms) */\n    if (isRoomsCall) {\n      return (this.callAgent.join((this.locator as RoomCallLocator), {\n        audioOptions,\n        videoOptions\n      }) as CallTypeOf<AgentType>);\n    }\n    return (this.callAgent.join((this.locator as GroupCallLocator), {\n      audioOptions,\n      videoOptions\n    }) as CallTypeOf<AgentType>);\n  }\n  public async createStreamView(remoteUserId?: string, options?: VideoStreamOptions): Promise<void | CreateVideoStreamViewResult> {\n    if (remoteUserId === undefined) {\n      return await this.handlers.onCreateLocalStreamView(options);\n    } else {\n      return await this.handlers.onCreateRemoteStreamView(remoteUserId, options);\n    }\n  }\n  public async disposeStreamView(remoteUserId?: string): Promise<void> {\n    if (remoteUserId === undefined) {\n      await this.handlers.onDisposeLocalStreamView();\n    } else {\n      await this.handlers.onDisposeRemoteStreamView(remoteUserId);\n    }\n  }\n  public async disposeScreenShareStreamView(remoteUserId: string): Promise<void> {\n    await this.handlers.onDisposeRemoteScreenShareStreamView(remoteUserId);\n  }\n  public async disposeRemoteVideoStreamView(remoteUserId: string): Promise<void> {\n    await this.handlers.onDisposeRemoteVideoStreamView(remoteUserId);\n  }\n  public async disposeLocalVideoStreamView(): Promise<void> {\n    await this.handlers.onDisposeLocalStreamView();\n  }\n  public async leaveCall(forEveryone?: boolean): Promise<void> {\n    if (this.getState().page === 'transferring') {\n      const transferCall = this.callAgent.calls.filter(call => call.id === this.getState().acceptedTransferCallState?.id)[0];\n      transferCall?.hangUp();\n    }\n    await this.handlers.onHangUp(forEveryone);\n    this.unsubscribeCallEvents();\n    this.handlers = createHandlers(this.callClient, this.callAgent, this.deviceManager, this.call, /* @conditional-compile-remove(video-background-effects) */{\n      onResolveVideoBackgroundEffectsDependency: this.onResolveVideoBackgroundEffectsDependency\n    });\n    // We set the adapter.call object to undefined immediately when a call is ended.\n    // We do not set the context.callId to undefined because it is a part of the immutable data flow loop.\n    this.call = undefined;\n    this.stopCamera();\n    this.mute();\n  }\n  public async setCamera(device: VideoDeviceInfo, options?: VideoStreamOptions): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      await this.handlers.onSelectCamera(device, options);\n    });\n  }\n  public async setMicrophone(device: AudioDeviceInfo): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      await this.handlers.onSelectMicrophone(device);\n    });\n  }\n  public async setSpeaker(device: AudioDeviceInfo): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      await this.handlers.onSelectSpeaker(device);\n    });\n  }\n  public async startCamera(options?: VideoStreamOptions): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      if (!isCameraOn(this.getState())) {\n        // First kick off the effect on the local device before starting the camera in the call.\n        // This prevents the effect not being applied for a brief moment when the camera is started.\n        /* @conditional-compile-remove(video-background-effects) */\n        {\n          const selectedEffect = this.getState().selectedVideoBackgroundEffect;\n          const selectedCamera = getSelectedCameraFromAdapterState(this.getState());\n          if (selectedEffect && selectedCamera && this.onResolveVideoBackgroundEffectsDependency) {\n            const stream = new SDKLocalVideoStream(selectedCamera);\n            const effect = getBackgroundEffectFromSelectedEffect(selectedEffect, await this.onResolveVideoBackgroundEffectsDependency());\n            if (effect) {\n              await stream.feature(Features.VideoEffects).startEffects(effect);\n            } else {\n              await stream.feature(Features.VideoEffects).stopEffects();\n            }\n          }\n        }\n        await this.handlers.onToggleCamera(options);\n      }\n    });\n  }\n  public async stopCamera(): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      if (isCameraOn(this.getState())) {\n        await this.handlers.onToggleCamera();\n      }\n    });\n  }\n  public async mute(): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      this.context.setIsLocalMicrophoneEnabled(false);\n      if (_isInCall(this.call?.state) && !this.call?.isMuted) {\n        await this.handlers.onToggleMicrophone();\n      }\n    });\n  }\n  public async unmute(): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      this.context.setIsLocalMicrophoneEnabled(true);\n      if ((_isInCall(this.call?.state) || _isInLobbyOrConnecting(this.call?.state)) && this.call?.isMuted) {\n        await this.handlers.onToggleMicrophone();\n      }\n    });\n  }\n  public async startScreenShare(): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      if (!this.call?.isScreenSharingOn) {\n        await this.handlers.onToggleScreenShare();\n      }\n    });\n  }\n  public async stopScreenShare(): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      if (this.call?.isScreenSharingOn) {\n        await this.handlers.onToggleScreenShare();\n      }\n    });\n  }\n\n  /* @conditional-compile-remove(raise-hand) */\n  public async raiseHand(): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      await this.handlers.onToggleRaiseHand();\n    });\n  }\n\n  /* @conditional-compile-remove(raise-hand) */\n  public async lowerHand(): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      await this.handlers.onToggleRaiseHand();\n    });\n  }\n  /* @conditional-compile-remove(video-background-effects) */\n  public async startVideoBackgroundEffect(videoBackgroundEffect: VideoBackgroundEffect): Promise<void> {\n    if (this.isBlurEffect(videoBackgroundEffect)) {\n      const blurConfig = (videoBackgroundEffect as BackgroundBlurConfig);\n      await this.handlers.onBlurVideoBackground(blurConfig);\n    } else if (this.isReplacementEffect(videoBackgroundEffect)) {\n      const replaceConfig = (videoBackgroundEffect as BackgroundReplacementConfig);\n      await this.handlers.onReplaceVideoBackground(replaceConfig);\n    }\n  }\n  /* @conditional-compile-remove(video-background-effects) */\n  public async stopVideoBackgroundEffects(): Promise<void> {\n    await this.handlers.onRemoveVideoBackgroundEffects();\n  }\n  /* @conditional-compile-remove(video-background-effects) */\n  public updateBackgroundPickerImages(backgroundImages: VideoBackgroundImage[]): void {\n    this.context.setBackroundPickerImages(backgroundImages);\n  }\n  /* @conditional-compile-remove(video-background-effects) */\n  public updateSelectedVideoBackgroundEffect(selectedVideoBackground: VideoBackgroundEffect): void {\n    this.context.setSelectedVideoBackgroundEffect(selectedVideoBackground);\n  }\n  public startCall(participants: string[] | (MicrosoftTeamsAppIdentifier | UnknownIdentifier)[], options?: StartCallOptions): CallTypeOf<AgentType> | undefined {\n    if (_isInCall(this.getState().call?.state ?? 'None')) {\n      throw new Error('You are already in the call.');\n    }\n    const isCameraOn = this.getState().cameraStatus === 'On';\n    const selectedCamera = getSelectedCameraFromAdapterState(this.getState());\n    /* we only configure the video options here since the Calling SDK always unmutes the participant when starting a call */\n    const startCallVideoOptions: StartCallOptions = selectedCamera ? {\n      videoOptions: isCameraOn ? {\n        localVideoStreams: [new SDKLocalVideoStream(selectedCamera)]\n      } : undefined\n    } : {};\n    const combinedCallOptions = {\n      ...startCallVideoOptions,\n      ...options\n    };\n    const idsToAdd = participants.map(participant => {\n      const backendId: CommunicationIdentifier = _toCommunicationIdentifier(participant);\n      if ('phoneNumber' in backendId) {\n        if (options?.alternateCallerId === undefined) {\n          throw new Error('Unable to start call, PSTN user present with no alternateCallerId.');\n        }\n      }\n      return backendId;\n    });\n\n    /* @conditional-compile-remove(calling-sounds) */\n    this.context.setTargetCallee((idsToAdd as (MicrosoftTeamsAppIdentifier | UnknownIdentifier)[]));\n    const call = (this.handlers.onStartCall(idsToAdd, combinedCallOptions) as CallTypeOf<AgentType>);\n    if (!call) {\n      throw new Error('Unable to start call.');\n    }\n    this.processNewCall(call);\n    return call;\n  }\n  private processNewCall(call: CallCommon): void {\n    this.call = call;\n    this.context.setCurrentCallId(call.id);\n\n    // Resync state after callId is set\n    this.context.updateClientState(this.callClient.getState());\n    this.handlers = createHandlers(this.callClient, this.callAgent, this.deviceManager, this.call, /* @conditional-compile-remove(video-background-effects) */{\n      onResolveVideoBackgroundEffectsDependency: this.onResolveVideoBackgroundEffectsDependency\n    });\n    this.subscribeCallEvents();\n  }\n  /* @conditional-compile-remove(video-background-effects) */\n  private isBlurEffect(effect: VideoBackgroundEffect): effect is VideoBackgroundBlurEffect {\n    return effect.effectName === 'blur';\n  }\n\n  /* @conditional-compile-remove(video-background-effects) */\n  private isReplacementEffect(effect: VideoBackgroundEffect): effect is VideoBackgroundReplacementEffect {\n    return effect.effectName === 'replacement';\n  }\n  public async removeParticipant(userId: string): Promise<void> {\n    let participant = userId;\n    this.handlers.onRemoveParticipant(participant);\n  }\n  public async sendDtmfTone(dtmfTone: DtmfTone): Promise<void> {\n    this.handlers.onSendDtmfTone(dtmfTone);\n  }\n\n  /* @conditional-compile-remove(close-captions) */\n  public async startCaptions(options?: StartCaptionsOptions): Promise<void> {\n    this.handlers.onStartCaptions(options);\n  }\n\n  /* @conditional-compile-remove(close-captions) */\n  public async stopCaptions(): Promise<void> {\n    this.handlers.onStopCaptions();\n  }\n\n  /* @conditional-compile-remove(close-captions) */\n  public async setCaptionLanguage(language: string): Promise<void> {\n    this.handlers.onSetCaptionLanguage(language);\n  }\n\n  /* @conditional-compile-remove(close-captions) */\n  public async setSpokenLanguage(language: string): Promise<void> {\n    this.handlers.onSetSpokenLanguage(language);\n  }\n  public getState(): CallAdapterState {\n    return this.context.getState();\n  }\n  public onStateChange(handler: (state: CallAdapterState) => void): void {\n    this.context.onStateChange(handler);\n  }\n  public offStateChange(handler: (state: CallAdapterState) => void): void {\n    this.context.offStateChange(handler);\n  }\n  on(event: 'participantsJoined', listener: ParticipantsJoinedListener): void;\n  on(event: 'participantsLeft', listener: ParticipantsLeftListener): void;\n  on(event: 'isMutedChanged', listener: IsMutedChangedListener): void;\n  on(event: 'callIdChanged', listener: CallIdChangedListener): void;\n  on(event: 'isLocalScreenSharingActiveChanged', listener: IsLocalScreenSharingActiveChangedListener): void;\n  on(event: 'displayNameChanged', listener: DisplayNameChangedListener): void;\n  on(event: 'isSpeakingChanged', listener: IsSpeakingChangedListener): void;\n  on(event: 'callEnded', listener: CallEndedListener): void;\n  on(event: 'diagnosticChanged', listener: DiagnosticChangedEventListner): void;\n  on(event: 'selectedMicrophoneChanged', listener: PropertyChangedEvent): void;\n  on(event: 'selectedSpeakerChanged', listener: PropertyChangedEvent): void;\n  on(event: 'error', errorHandler: (e: AdapterError) => void): void;\n  /* @conditional-compile-remove(close-captions) */\n  on(event: 'captionsReceived', listener: CaptionsReceivedListener): void;\n  /* @conditional-compile-remove(close-captions) */\n  on(event: 'isCaptionsActiveChanged', listener: IsCaptionsActiveChangedListener): void;\n  /* @conditional-compile-remove(close-captions) */\n  on(event: 'isCaptionLanguageChanged', listener: IsCaptionLanguageChangedListener): void;\n  /* @conditional-compile-remove(close-captions) */\n  on(event: 'isSpokenLanguageChanged', listener: IsSpokenLanguageChangedListener): void;\n  /* @conditional-compile-remove(call-transfer) */\n  on(event: 'transferAccepted', listener: TransferAcceptedListener): void;\n  /* @conditional-compile-remove(capabilities) */\n  on(event: 'capabilitiesChanged', listener: CapabilitiesChangedListener): void;\n  /* @conditional-compile-remove(capabilities) */\n  on(event: 'roleChanged', listener: PropertyChangedEvent): void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public on(event: string, listener: (e: any) => void): void {\n    this.emitter.on(event, listener);\n  }\n\n  /* @conditional-compile-remove(close-captions) */\n  private subscribeToCaptionEvents(): void {\n    if (this.call && this.call.state === 'Connected' && this.context.getState().isTeamsCall) {\n      const captionsFeature = (this.call?.feature(Features.Captions).captions as TeamsCaptions);\n      captionsFeature.on('CaptionsReceived', this.captionsReceived.bind(this));\n      captionsFeature.on('CaptionsActiveChanged', this.isCaptionsActiveChanged.bind(this));\n      captionsFeature.on('CaptionLanguageChanged', this.isCaptionLanguageChanged.bind(this));\n      captionsFeature.on('SpokenLanguageChanged', this.isSpokenLanguageChanged.bind(this));\n    }\n  }\n\n  /* @conditional-compile-remove(close-captions) */\n  private unsubscribeFromCaptionEvents(): void {\n    if (this.call && this.call.state === 'Connected' && this.context.getState().isTeamsCall) {\n      const captionsFeature = (this.call?.feature(Features.Captions).captions as TeamsCaptions);\n      captionsFeature.off('CaptionsReceived', this.captionsReceived.bind(this));\n      captionsFeature.off('CaptionsActiveChanged', this.isCaptionsActiveChanged.bind(this));\n      captionsFeature.off('CaptionLanguageChanged', this.isCaptionLanguageChanged.bind(this));\n      captionsFeature.off('SpokenLanguageChanged', this.isSpokenLanguageChanged.bind(this));\n      this.call?.off('stateChanged', this.subscribeToCaptionEvents.bind(this));\n    }\n  }\n  private subscribeCallEvents(): void {\n    /* @conditional-compile-remove(calling-sounds) */\n    if (this.call) {\n      this.callingSoundSubscriber = new CallingSoundSubscriber(this.call, this.getState().targetCallees, this.getState().sounds);\n    }\n    this.call?.on('remoteParticipantsUpdated', this.onRemoteParticipantsUpdated.bind(this));\n    this.call?.on('isMutedChanged', this.isMyMutedChanged.bind(this));\n    this.call?.on('isScreenSharingOnChanged', this.isScreenSharingOnChanged.bind(this));\n    this.call?.on('idChanged', this.callIdChanged.bind(this));\n    /* @conditional-compile-remove(close-captions) */\n    this.call?.on('stateChanged', this.subscribeToCaptionEvents.bind(this));\n    /* @conditional-compile-remove(rooms) */\n    this.call?.on('roleChanged', this.roleChanged.bind(this));\n    /* @conditional-compile-remove(call-transfer) */\n    this.call?.feature(Features.Transfer).on('transferAccepted', this.transferAccepted.bind(this));\n    /* @conditional-compile-remove(capabilities) */\n    this.call?.feature(Features.Capabilities).on('capabilitiesChanged', this.capabilitiesChanged.bind(this));\n  }\n  private unsubscribeCallEvents(): void {\n    for (const subscriber of this.participantSubscribers.values()) {\n      subscriber.unsubscribeAll();\n    }\n    this.participantSubscribers.clear();\n    this.call?.off('remoteParticipantsUpdated', this.onRemoteParticipantsUpdated.bind(this));\n    this.call?.off('isMutedChanged', this.isMyMutedChanged.bind(this));\n    this.call?.off('isScreenSharingOnChanged', this.isScreenSharingOnChanged.bind(this));\n    this.call?.off('idChanged', this.callIdChanged.bind(this));\n    /* @conditional-compile-remove(rooms) */\n    this.call?.off('roleChanged', this.roleChanged.bind(this));\n\n    /* @conditional-compile-remove(close-captions) */\n    this.unsubscribeFromCaptionEvents();\n    /* @conditional-compile-remove(calling-sounds) */\n    if (this.callingSoundSubscriber) {\n      this.callingSoundSubscriber.unsubscribeAll();\n    }\n  }\n  private isMyMutedChanged = (): void => {\n    this.emitter.emit('isMutedChanged', {\n      participantId: this.getState().userId,\n      isMuted: this.call?.isMuted\n    });\n  };\n  private onRemoteParticipantsUpdated({\n    added,\n    removed\n  }: {\n    added: RemoteParticipant[];\n    removed: RemoteParticipant[];\n  }): void {\n    if (added && added.length > 0) {\n      this.emitter.emit('participantsJoined', {\n        joined: added\n      });\n    }\n    if (removed && removed.length > 0) {\n      this.emitter.emit('participantsLeft', {\n        removed: removed\n      });\n    }\n    added.forEach(participant => {\n      this.participantSubscribers.set(toFlatCommunicationIdentifier(participant.identifier), new ParticipantSubscriber(participant, this.emitter));\n    });\n    removed.forEach(participant => {\n      const subscriber = this.participantSubscribers.get(toFlatCommunicationIdentifier(participant.identifier));\n      subscriber && subscriber.unsubscribeAll();\n      this.participantSubscribers.delete(toFlatCommunicationIdentifier(participant.identifier));\n    });\n  }\n  private isScreenSharingOnChanged(): void {\n    this.emitter.emit('isLocalScreenSharingActiveChanged', {\n      isScreenSharingOn: this.call?.isScreenSharingOn\n    });\n  }\n\n  /* @conditional-compile-remove(close-captions) */\n  private captionsReceived(captionsInfo: TeamsCaptionsInfo): void {\n    this.emitter.emit('captionsReceived', {\n      captionsInfo\n    });\n  }\n\n  /* @conditional-compile-remove(close-captions) */\n  private isCaptionsActiveChanged(): void {\n    const captionsFeature = (this.call?.feature(Features.Captions).captions as TeamsCaptions);\n    this.emitter.emit('isCaptionsActiveChanged', {\n      isActive: captionsFeature.isCaptionsFeatureActive\n    });\n  }\n\n  /* @conditional-compile-remove(close-captions) */\n  private isSpokenLanguageChanged(): void {\n    const captionsFeature = (this.call?.feature(Features.Captions).captions as TeamsCaptions);\n    this.emitter.emit('isSpokenLanguageChanged', {\n      activeSpokenLanguage: captionsFeature.activeSpokenLanguage\n    });\n  }\n\n  /* @conditional-compile-remove(close-captions) */\n  private isCaptionLanguageChanged(): void {\n    const captionsFeature = (this.call?.feature(Features.Captions).captions as TeamsCaptions);\n    this.emitter.emit('isCaptionLanguageChanged', {\n      activeCaptionLanguage: captionsFeature.activeCaptionLanguage\n    });\n  }\n\n  /* @conditional-compile-remove(call-transfer) */\n  private transferAccepted(args: TransferEventArgs): void {\n    this.emitter.emit('transferAccepted', args);\n  }\n\n  /* @conditional-compile-remove(capabilities) */\n  private capabilitiesChanged(data: CapabilitiesChangeInfo): void {\n    if (data.newValue.turnVideoOn?.isPresent === false) {\n      // Only stop camera when the call state is not on hold. The Calling SDK does not allow us to stop camera when\n      // the call state is on hold.\n      if (this.call?.state !== 'LocalHold' && this.call?.state !== 'RemoteHold') {\n        this.stopCamera();\n      }\n      this.disposeLocalVideoStreamView();\n    }\n    if (data.newValue.unmuteMic?.isPresent === false) {\n      this.mute();\n    }\n    if (data.newValue.shareScreen?.isPresent === false) {\n      this.stopScreenShare();\n    }\n    this.emitter.emit('capabilitiesChanged', data);\n  }\n\n  /* @conditional-compile-remove(rooms) */\n  private roleChanged(): void {\n    if (this.call?.role === 'Consumer') {\n      this.call?.feature(Features.RaiseHand).lowerHand();\n    }\n    this.emitter.emit('roleChanged');\n  }\n  private callIdChanged(): void {\n    this.call?.id && this.emitter.emit('callIdChanged', {\n      callId: this.call.id\n    });\n  }\n  private resetDiagnosticsForwarder(newCall?: CallCommon): void {\n    if (this.diagnosticsForwarder) {\n      this.diagnosticsForwarder.unsubscribe();\n    }\n    if (newCall) {\n      this.diagnosticsForwarder = new DiagnosticsForwarder(this.emitter, newCall);\n    }\n  }\n  off(event: 'participantsJoined', listener: ParticipantsJoinedListener): void;\n  off(event: 'participantsLeft', listener: ParticipantsLeftListener): void;\n  off(event: 'isMutedChanged', listener: IsMutedChangedListener): void;\n  off(event: 'callIdChanged', listener: CallIdChangedListener): void;\n  off(event: 'isLocalScreenSharingActiveChanged', listener: IsLocalScreenSharingActiveChangedListener): void;\n  off(event: 'displayNameChanged', listener: DisplayNameChangedListener): void;\n  off(event: 'isSpeakingChanged', listener: IsSpeakingChangedListener): void;\n  off(event: 'callEnded', listener: CallEndedListener): void;\n  off(event: 'diagnosticChanged', listener: DiagnosticChangedEventListner): void;\n  off(event: 'selectedMicrophoneChanged', listener: PropertyChangedEvent): void;\n  off(event: 'selectedSpeakerChanged', listener: PropertyChangedEvent): void;\n  off(event: 'error', errorHandler: (e: AdapterError) => void): void;\n  /* @conditional-compile-remove(close-captions) */\n  off(event: 'captionsReceived', listener: CaptionsReceivedListener): void;\n  /* @conditional-compile-remove(close-captions) */\n  off(event: 'isCaptionsActiveChanged', listener: IsCaptionsActiveChangedListener): void;\n  /* @conditional-compile-remove(close-captions) */\n  off(event: 'isCaptionLanguageChanged', listener: IsCaptionLanguageChangedListener): void;\n  /* @conditional-compile-remove(close-captions) */\n  off(event: 'isSpokenLanguageChanged', listener: IsSpokenLanguageChangedListener): void;\n  /* @conditional-compile-remove(call-transfer) */\n  off(event: 'transferAccepted', listener: TransferAcceptedListener): void;\n  /* @conditional-compile-remove(capabilities) */\n  off(event: 'capabilitiesChanged', listener: CapabilitiesChangedListener): void;\n  /* @conditional-compile-remove(rooms) */\n  off(event: 'roleChanged', listener: PropertyChangedEvent): void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public off(event: string, listener: (e: any) => void): void {\n    this.emitter.off(event, listener);\n  }\n  private async asyncTeeErrorToEventEmitter<T>(f: () => Promise<T>): Promise<T> {\n    try {\n      return await f();\n    } catch (error) {\n      if (isCallError((error as Error))) {\n        this.emitter.emit('error', (error as AdapterError));\n      }\n      throw error;\n    }\n  }\n  private teeErrorToEventEmitter<T>(f: () => T): T {\n    try {\n      return f();\n    } catch (error) {\n      if (isCallError((error as Error))) {\n        this.emitter.emit('error', (error as AdapterError));\n      }\n      throw error;\n    }\n  }\n}\n/**\n * Locator used by {@link createAzureCommunicationCallAdapter} to locate the call to join\n *\n * @public\n */\nexport type CallAdapterLocator = TeamsMeetingLinkLocator | GroupCallLocator | /* @conditional-compile-remove(rooms) */RoomCallLocator;\n\n/**\n * Common optional parameters to create {@link AzureCommunicationCallAdapter} or {@link TeamsCallAdapter}\n *\n * @public\n */\nexport type CommonCallAdapterOptions = {\n  /* @conditional-compile-remove(video-background-effects) */\n  /**\n   * Default set of background images for background image picker.\n   */\n  videoBackgroundOptions?: {\n    videoBackgroundImages?: VideoBackgroundImage[];\n    onResolveDependency?: () => Promise<VideoBackgroundEffectsDependency>;\n  };\n  /* @conditional-compile-remove(calling-sounds) */\n  /**\n   * Sounds to use for calling events\n   */\n  callingSounds?: CallingSounds;\n};\n\n/**\n * Optional parameters to create {@link AzureCommunicationCallAdapter}\n *\n * @public\n */\nexport type AzureCommunicationCallAdapterOptions = CommonCallAdapterOptions;\n\n/**\n * Arguments for creating the Azure Communication Services implementation of {@link CallAdapter}.\n *\n * Note: `displayName` can be a maximum of 256 characters.\n *\n * @public\n */\nexport type AzureCommunicationCallAdapterArgs = {\n  userId: CommunicationUserIdentifier;\n  displayName: string;\n  credential: CommunicationTokenCredential;\n  locator: CallAdapterLocator;\n  /* @conditional-compile-remove(video-background-effects) */\n  /**\n   * Optional parameters for the {@link AzureCommunicationCallAdapter} created\n   */\n  options?: AzureCommunicationCallAdapterOptions;\n};\n\n/**\n * Arguments for creating the Azure Communication Services implementation of {@link CallAdapter}.\n *\n * These arguments are used to create an outbound call scenarios.\n *\n * Note: `displayName` can be a maximum of 256 characters.\n *\n * @public\n */\nexport type AzureCommunicationOutboundCallAdapterArgs = {\n  userId: CommunicationUserIdentifier;\n  displayName: string;\n  credential: CommunicationTokenCredential;\n  targetCallees: StartCallIdentifier[];\n  /* @conditional-compile-remove(video-background-effects) */\n  /**\n   * Optional parameters for the {@link AzureCommunicationCallAdapter} created\n   */\n  options?: AzureCommunicationCallAdapterOptions;\n};\n\n/**\n * Optional parameters to create {@link TeamsCallAdapter}\n *\n * @public\n */\nexport type TeamsAdapterOptions = CommonCallAdapterOptions;\n\n/**\n * Arguments for creating the Azure Communication Services implementation of {@link TeamsCallAdapter}.\n *\n * @beta\n */\nexport type TeamsCallAdapterArgs = {\n  userId: MicrosoftTeamsUserIdentifier;\n  credential: CommunicationTokenCredential;\n  locator: TeamsMeetingLinkLocator;\n  /**\n   * Optional parameters for the {@link TeamsCallAdapter} created\n   */\n  options?: TeamsAdapterOptions;\n};\n\n/**\n * Create a {@link CallAdapter} backed by Azure Communication Services.\n *\n * This is the default implementation of {@link CallAdapter} provided by this library.\n *\n * Note: `displayName` can be a maximum of 256 characters.\n *\n * @public\n */\nexport async function createAzureCommunicationCallAdapter(args: AzureCommunicationCallAdapterArgs): Promise<CallAdapter>;\n/**\n * Create a {@link CallAdapter} backed by Azure Communication Services.\n *\n * This is the default implementation of {@link CallAdapter} provided by this library.\n *\n * Note: `displayName` can be a maximum of 256 characters.\n *\n * @public\n */\nexport async function createAzureCommunicationCallAdapter(args: AzureCommunicationOutboundCallAdapterArgs): Promise<CallAdapter>;\n/**\n * @public\n */\n/**\n * Create a {@link CallAdapter} backed by Azure Communication Services.\n *\n * This is the default implementation of {@link CallAdapter} provided by this library.\n *\n * Note: `displayName` can be a maximum of 256 characters.\n *\n * @public\n */\nexport async function createAzureCommunicationCallAdapter(args: AzureCommunicationCallAdapterArgs | AzureCommunicationOutboundCallAdapterArgs): Promise<CallAdapter> {\n  if (isMicrosoftTeamsUserIdentifier(args.userId)) {\n    throw new Error('Microsoft Teams user identifier is not supported by AzureCommunicationCallAdapter. Instead use TeamsCallAdapter.');\n  }\n  return _createAzureCommunicationCallAdapterInner({\n    userId: args.userId,\n    displayName: args.displayName,\n    credential: args.credential,\n    locator: (args as AzureCommunicationCallAdapterArgs).locator,\n    targetCallees: (args as AzureCommunicationOutboundCallAdapterArgs).targetCallees,\n    /* @conditional-compile-remove(video-background-effects) */\n    options: args.options\n  });\n}\n\n/**\n * This inner function is used to allow injection of TelemetryImplementationHint without changing the public API.\n *\n * @internal\n */\nexport const _createAzureCommunicationCallAdapterInner = async ({\n  userId,\n  displayName,\n  credential,\n  locator,\n  targetCallees,\n  /* @conditional-compile-remove(video-background-effects) */options,\n  telemetryImplementationHint = 'Call'\n}: {\n  userId: CommunicationUserIdentifier;\n  displayName: string;\n  credential: CommunicationTokenCredential;\n  locator: CallAdapterLocator;\n  targetCallees?: StartCallIdentifier[];\n  /* @conditional-compile-remove(video-background-effects) */options?: AzureCommunicationCallAdapterOptions;\n  telemetryImplementationHint?: _TelemetryImplementationHint;\n}): Promise<CallAdapter> => {\n  if (!_isValidIdentifier(userId)) {\n    throw new Error('Invalid identifier. Please provide valid identifier object.');\n  }\n  const callClient = _createStatefulCallClientInner({\n    userId\n  }, undefined, telemetryImplementationHint);\n  const callAgent = await callClient.createCallAgent(credential, {\n    displayName\n  });\n  let adapter;\n  if (locator) {\n    adapter = createAzureCommunicationCallAdapterFromClient(callClient, callAgent, locator, /* @conditional-compile-remove(video-background-effects) */options);\n  } else {\n    adapter = createAzureCommunicationCallAdapterFromClient(callClient, callAgent, (targetCallees as StartCallIdentifier[]), /* @conditional-compile-remove(video-background-effects) */options);\n  }\n  return adapter;\n};\ntype PartialArgsType<Adapter> = Adapter extends CallAdapter ? Partial<AzureCommunicationCallAdapterArgs> : Partial<TeamsCallAdapterArgs>;\ntype PartialArgsOutboundType<Adapter> = Adapter extends CallAdapter ? Partial<AzureCommunicationOutboundCallAdapterArgs> : Partial<TeamsCallAdapterArgs>;\ntype AdapterOf<AdapterKind extends 'AzureCommunication' | 'Teams'> = AdapterKind extends 'AzureCommunication' ? CallAdapter : never;\n\n/**\n * @private\n */\nfunction useAzureCommunicationCallAdapterGeneric<AdapterKind extends 'AzureCommunication' | 'Teams', Adapter extends AdapterOf<AdapterKind>>(args: PartialArgsType<Adapter>, adapterKind: AdapterKind, afterCreate?: (adapter: Adapter) => Promise<Adapter>, beforeDispose?: (adapter: Adapter) => Promise<void>): Adapter | undefined;\n/**\n * @private\n */\nfunction useAzureCommunicationCallAdapterGeneric<AdapterKind extends 'AzureCommunication' | 'Teams', Adapter extends AdapterOf<AdapterKind>>(args: PartialArgsOutboundType<Adapter>, adapterKind: AdapterKind, afterCreate?: (adapter: Adapter) => Promise<Adapter>, beforeDispose?: (adapter: Adapter) => Promise<void>): Adapter | undefined;\n/**\n * @private\n */\nfunction useAzureCommunicationCallAdapterGeneric<AdapterKind extends 'AzureCommunication' | 'Teams', Adapter extends AdapterOf<AdapterKind>>(args: PartialArgsType<Adapter> | PartialArgsOutboundType<Adapter>, adapterKind: AdapterKind = ('AzureCommunication' as AdapterKind), afterCreate?: (adapter: Adapter) => Promise<Adapter>, beforeDispose?: (adapter: Adapter) => Promise<void>): Adapter | undefined {\n  const {\n    credential,\n    userId\n  } = args;\n  const locator = 'locator' in args ? args.locator : undefined;\n  const targetCallees = 'targetCallees' in args ? args.targetCallees : undefined;\n  const displayName = 'displayName' in args ? args.displayName : undefined;\n  /* @conditional-compile-remove(video-background-effects) */\n  const options = 'options' in args ? args.options : undefined;\n\n  // State update needed to rerender the parent component when a new adapter is created.\n  const [adapter, setAdapter] = useState<Adapter | undefined>(undefined);\n  // Ref needed for cleanup to access the old adapter created asynchronously.\n  const adapterRef = useRef<Adapter | undefined>(undefined);\n  const creatingAdapterRef = useRef<boolean>(false);\n  const afterCreateRef = useRef<((adapter: Adapter) => Promise<Adapter>) | undefined>(undefined);\n  const beforeDisposeRef = useRef<((adapter: Adapter) => Promise<void>) | undefined>(undefined);\n  // These refs are updated on *each* render, so that the latest values\n  // are used in the `useEffect` closures below.\n  // Using a Ref ensures that new values for the callbacks do not trigger the\n  // useEffect blocks, and a new adapter creation / distruction is not triggered.\n  afterCreateRef.current = afterCreate;\n  beforeDisposeRef.current = beforeDispose;\n  useEffect(() => {\n    if (!credential || !locator && !targetCallees || !userId) {\n      return;\n    }\n    if (adapterKind === 'AzureCommunication' && !displayName) {\n      return;\n    }\n    (async () => {\n      if (adapterRef.current) {\n        // Dispose the old adapter when a new one is created.\n        //\n        // This clean up function uses `adapterRef` because `adapter` can not be added to the dependency array of\n        // this `useEffect` -- we do not want to trigger a new adapter creation because of the first adapter\n        // creation.\n        if (beforeDisposeRef.current) {\n          await beforeDisposeRef.current(adapterRef.current);\n        }\n        adapterRef.current.dispose();\n        adapterRef.current = undefined;\n      }\n      let newAdapter: Adapter | undefined = undefined;\n      if (adapterKind === 'AzureCommunication') {\n        // This is just the type check to ensure that displayName is defined.\n        if (!displayName) {\n          throw new Error('Unreachable code, displayName already checked above.');\n        }\n        if (creatingAdapterRef.current) {\n          console.warn('Adapter is already being created, please see storybook for more information: https://azure.github.io/communication-ui-library/?path=/story/troubleshooting--page');\n          return;\n        }\n        creatingAdapterRef.current = true;\n        if (locator) {\n          newAdapter = (await createAzureCommunicationCallAdapter({\n            credential,\n            displayName: displayName,\n            locator,\n            userId: (userId as CommunicationUserIdentifier),\n            /* @conditional-compile-remove(video-background-effects) */options\n          }) as Adapter);\n        } else if (targetCallees) {\n          newAdapter = (await createAzureCommunicationCallAdapter({\n            credential,\n            displayName: displayName,\n            targetCallees,\n            userId: (userId as CommunicationUserIdentifier),\n            /* @conditional-compile-remove(video-background-effects) */options\n          }) as Adapter);\n        }\n      } else if (adapterKind === 'Teams') {\n        if (creatingAdapterRef.current) {\n          console.warn('Adapter is already being created, skipping creation.');\n          return;\n        }\n        creatingAdapterRef.current = true;\n      } else {\n        throw new Error('Unreachable code, unknown adapterKind');\n      }\n      if (!newAdapter) {\n        throw Error('Unreachable code! Get undefined adapter');\n      }\n      if (afterCreateRef.current) {\n        newAdapter = await afterCreateRef.current(newAdapter);\n      }\n      adapterRef.current = newAdapter;\n      creatingAdapterRef.current = false;\n      setAdapter(newAdapter);\n    })();\n  },\n  // Explicitly list all arguments so that caller doesn't have to memoize the `args` object.\n  [adapterRef, afterCreateRef, beforeDisposeRef, adapterKind, credential, locator, userId, displayName, options, targetCallees]);\n\n  // Dispose any existing adapter when the component unmounts.\n  useEffect(() => {\n    return () => {\n      (async () => {\n        if (adapterRef.current) {\n          if (beforeDisposeRef.current) {\n            await beforeDisposeRef.current(adapterRef.current);\n          }\n          adapterRef.current.dispose();\n          adapterRef.current = undefined;\n        }\n      })();\n    };\n  }, []);\n  return adapter;\n}\n\n/**\n * A custom React hook to simplify the creation of {@link CallAdapter}.\n *\n * Similar to {@link createAzureCommunicationCallAdapter}, but takes care of asynchronous\n * creation of the adapter internally.\n *\n * Allows arguments to be undefined so that you can respect the rule-of-hooks and pass in arguments\n * as they are created. The adapter is only created when all arguments are defined.\n *\n * Note that you must memoize the arguments to avoid recreating adapter on each render.\n * See storybook for typical usage examples.\n *\n * @public\n */\nexport const useAzureCommunicationCallAdapter = (args: Partial<AzureCommunicationCallAdapterArgs | AzureCommunicationOutboundCallAdapterArgs>, afterCreate?: (adapter: CallAdapter) => Promise<CallAdapter>, beforeDispose?: (adapter: CallAdapter) => Promise<void>): CallAdapter | undefined => {\n  return useAzureCommunicationCallAdapterGeneric(args, 'AzureCommunication', afterCreate, beforeDispose);\n};\n/**\n * Create a {@link CallAdapter} using the provided {@link StatefulCallClient}.\n *\n * Useful if you want to keep a reference to {@link StatefulCallClient}.\n * Consider using {@link createAzureCommunicationCallAdapter} for a simpler API.\n *\n * @public\n */\nexport async function createAzureCommunicationCallAdapterFromClient(callClient: StatefulCallClient, callAgent: CallAgent, targetCallees: StartCallIdentifier[], /* @conditional-compile-remove(video-background-effects) */options?: AzureCommunicationCallAdapterOptions): Promise<CallAdapter>;\n/**\n * Create a {@link CallAdapter} using the provided {@link StatefulCallClient}.\n *\n * Useful if you want to keep a reference to {@link StatefulCallClient}.\n * Consider using {@link createAzureCommunicationCallAdapter} for a simpler API.\n *\n * @public\n */\nexport async function createAzureCommunicationCallAdapterFromClient(callClient: StatefulCallClient, callAgent: CallAgent, locator: CallAdapterLocator, /* @conditional-compile-remove(video-background-effects) */options?: AzureCommunicationCallAdapterOptions): Promise<CallAdapter>;\n/**\n * Create a {@link CallAdapter} using the provided {@link StatefulCallClient}.\n *\n * Useful if you want to keep a reference to {@link StatefulCallClient}.\n * Consider using {@link createAzureCommunicationCallAdapter} for a simpler API.\n *\n * @public\n */\nexport async function createAzureCommunicationCallAdapterFromClient(callClient: StatefulCallClient, callAgent: CallAgent, locatorOrtargetCallees: CallAdapterLocator | StartCallIdentifier[], /* @conditional-compile-remove(video-background-effects) */options?: AzureCommunicationCallAdapterOptions): Promise<CallAdapter> {\n  const deviceManager = (await callClient.getDeviceManager() as StatefulDeviceManager);\n  await Promise.all([deviceManager.getCameras(), deviceManager.getMicrophones()]);\n  if (deviceManager.isSpeakerSelectionAvailable) {\n    await deviceManager.getSpeakers();\n  }\n  if (getLocatorOrTargetCallees(locatorOrtargetCallees)) {\n    return new AzureCommunicationCallAdapter(callClient, (locatorOrtargetCallees as StartCallIdentifier[]), callAgent, deviceManager, /* @conditional-compile-remove(video-background-effects) */options);\n  } else {\n    return new AzureCommunicationCallAdapter(callClient, (locatorOrtargetCallees as CallAdapterLocator), callAgent, deviceManager, /* @conditional-compile-remove(video-background-effects) */options);\n  }\n}\nconst isCallError = (e: Error): e is CallError => {\n  return 'target' in e && 'innerError' in e;\n};"]}