import { LocalVideoStreamState } from "../../../../../calling-stateful-client/src";
import * as reselect from 'reselect';
/**
 * @private
 */
export declare const localVideoSelector: ((state: import("..").CallAdapterUiState & import("..").CallAdapterClientState) => {
    isAvailable: boolean;
    isMirrored: boolean | undefined;
    renderElement: HTMLElement | undefined;
    activeVideoEffects: import("../../../../../calling-stateful-client/src").LocalVideoStreamVideoEffectsState | undefined;
}) & reselect.OutputSelectorFields<(args_0: {
    callStatus: import("@azure/communication-calling").CallState;
    isScreenShareOn: boolean;
}, args_1: import("../../../../../calling-stateful-client/src").DeviceManagerState, args_2: LocalVideoStreamState[] | undefined) => {
    isAvailable: boolean;
    isMirrored: boolean | undefined;
    renderElement: HTMLElement | undefined;
    activeVideoEffects: import("../../../../../calling-stateful-client/src").LocalVideoStreamVideoEffectsState | undefined;
}, {
    clearCache: () => void;
}> & {
    clearCache: () => void;
};
//# sourceMappingURL=localVideoStreamSelector.d.ts.map