{"version":3,"file":"ModalLocalAndRemotePIP.js","sourceRoot":"","sources":["../../../../../../preprocess-dist/react-composites/src/composites/common/ModalLocalAndRemotePIP.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { concatStyleSets, ContextualMenu, IDragOptions, Stack } from '@fluentui/react';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { LocalAndRemotePIP } from '../CallComposite/components/LocalAndRemotePIP';\nimport { useHandlers } from '../CallComposite/hooks/useHandlers';\nimport { useSelector } from '../CallComposite/hooks/useSelector';\nimport { localAndRemotePIPSelector } from '../CallComposite/selectors/localAndRemotePIPSelector';\nimport { _ModalClone, _ICoordinates } from '@internal/react-components';\n/* @conditional-compile-remove(rooms) */\nimport { _RemoteVideoTile } from '@internal/react-components';\nimport { hiddenStyle, ModalLocalAndRemotePIPStyles, modalStyle, PIPContainerStyle } from './styles/ModalLocalAndRemotePIP.styles';\n/* @conditional-compile-remove(rooms) */\nimport { useAdapter } from '../CallComposite/adapter/CallAdapterProvider';\nimport { useLocale } from '../localization';\n\n/**\n * Drag options for Modal in {@link ModalLocalAndRemotePIP} component\n */\nconst DRAG_OPTIONS: IDragOptions = {\n  moveMenuItemText: 'Move',\n  closeMenuItemText: 'Close',\n  menu: ContextualMenu,\n  keepInBounds: true\n};\n\n/**\n * @private\n */\nexport interface ModalLocalAndRemotePIPStrings {\n  /**\n   * Aria label for dismiss control when using keyboard\n   */\n  dismissModalAriaLabel?: string;\n}\n\n/**\n * A wrapping component with a draggable {@link LocalAndRemotePIP} component that is bound to a LayerHost component with id\n * specified by `modalLayerHostId` prop\n * @private\n */\nexport const ModalLocalAndRemotePIP = (props: {\n  hidden: boolean;\n  modalLayerHostId: string;\n  styles?: ModalLocalAndRemotePIPStyles;\n  minDragPosition?: _ICoordinates;\n  maxDragPosition?: _ICoordinates;\n  onDismissSidePane?: () => void;\n  strings?: ModalLocalAndRemotePIPStrings;\n}): JSX.Element | null => {\n  const rootStyles = props.hidden ? hiddenStyle : PIPContainerStyle;\n\n  /* @conditional-compile-remove(rooms) */\n  const adapter = useAdapter();\n  /* @conditional-compile-remove(rooms) */\n  const role = adapter.getState().call?.role;\n  const locale = useLocale();\n  const pictureInPictureProps = useSelector(localAndRemotePIPSelector);\n  const [touchStartTouches, setTouchStartTouches] = useState<React.TouchList | null>(null);\n  const onTouchEnd = useCallback((event: React.TouchEvent) => {\n    if (touchStartTouches && touchStartTouches.length === 1 && event.changedTouches.length === 1) {\n      const touchStartTouch = touchStartTouches[0];\n      const touchEndTouch = event.changedTouches[0];\n      if (Math.abs(touchStartTouch.clientX - touchEndTouch.clientX) < 10 && Math.abs(touchStartTouch.clientY - touchEndTouch.clientY) < 10) {\n        props.onDismissSidePane?.();\n      }\n    }\n  }, [props, touchStartTouches]);\n  const onTouchStart = useCallback((event: React.TouchEvent) => {\n    setTouchStartTouches(event.touches);\n  }, []);\n  const onKeyDown = useCallback((event: React.KeyboardEvent) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      props.onDismissSidePane?.();\n    }\n  }, [props]);\n  const pictureInPictureHandlers = useHandlers(LocalAndRemotePIP);\n  const localAndRemotePIP = useMemo(() => {\n    /* @conditional-compile-remove(rooms) */\n    if (role === 'Consumer' && pictureInPictureProps.dominantRemoteParticipant?.userId) {\n      return <Stack tabIndex={0} aria-label={props.strings?.dismissModalAriaLabel ?? ''} onKeyDown={onKeyDown}>\n          <_RemoteVideoTile strings={locale.component.strings.videoGallery} {...pictureInPictureProps.dominantRemoteParticipant} remoteParticipant={pictureInPictureProps.dominantRemoteParticipant} />\n        </Stack>;\n    }\n    return <Stack tabIndex={0} aria-label={props.strings?.dismissModalAriaLabel ?? ''} onKeyDown={onKeyDown}>\n        <LocalAndRemotePIP {...pictureInPictureProps} {...pictureInPictureHandlers} />\n      </Stack>;\n  }, [/* @conditional-compile-remove(rooms) */role, onKeyDown, pictureInPictureProps, props, pictureInPictureHandlers, locale.component.strings.videoGallery]);\n\n  /* @conditional-compile-remove(rooms) */\n  if (role === 'Consumer' && !pictureInPictureProps.dominantRemoteParticipant) {\n    return null;\n  }\n  const modalStylesThemed = concatStyleSets(modalStyle, props.styles?.modal);\n  return <Stack styles={rootStyles}>\n      <Stack onTouchStart={onTouchStart} onTouchEnd={onTouchEnd}>\n        <_ModalClone isOpen={true} isModeless={true} dragOptions={DRAG_OPTIONS} styles={modalStylesThemed} layerProps={{\n        hostId: props.modalLayerHostId\n      }} minDragPosition={props.minDragPosition} maxDragPosition={props.maxDragPosition}>\n          {\n        // Only render LocalAndRemotePIP when this component is NOT hidden because VideoGallery needs to have\n        // possession of the dominant remote participant video stream\n        !props.hidden && localAndRemotePIP}\n        </_ModalClone>\n      </Stack>\n    </Stack>;\n};"]}