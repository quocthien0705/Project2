/// <reference types="react" />
import { PartialTheme, Theme } from '@fluentui/react';
import { CallWithChatAdapter } from './adapter/CallWithChatAdapter';
import { BaseCompositeProps } from '../common/BaseComposite';
import { CallWithChatCompositeIcons } from '../common/icons';
import { RemoteVideoTileMenuOptions } from '../CallComposite/CallComposite';
import { LocalVideoTileOptions } from '../CallComposite/CallComposite';
import { CommonCallControlOptions } from '../common/types/CommonCallControlOptions';
import { VideoGalleryLayout } from "../../../../react-components/src";
/**
 * Props required for the {@link CallWithChatComposite}
 *
 * @public
 */
export interface CallWithChatCompositeProps extends BaseCompositeProps<CallWithChatCompositeIcons> {
    adapter: CallWithChatAdapter;
    /**
     * Fluent theme for the composite.
     *
     * Defaults to a light theme if undefined.
     */
    fluentTheme?: PartialTheme | Theme;
    /**
     * Optimizes the composite form factor for either desktop or mobile.
     * @remarks `mobile` is currently only optimized for Portrait mode on mobile devices and does not support landscape.
     * @defaultValue 'desktop'
     */
    formFactor?: 'desktop' | 'mobile';
    /**
     * URL that can be used to copy a call-with-chat invite to the Users clipboard.
     */
    joinInvitationURL?: string;
    /**
     * Flags to enable/disable or customize UI elements of the {@link CallWithChatComposite}
     */
    options?: CallWithChatCompositeOptions;
}
/**
 * Customization options for the control bar in calling with chat experience.
 *
 * @public
 */
export interface CallWithChatControlOptions extends CommonCallControlOptions {
    /**
     * Show or hide the chat button in the call-with-chat composite control bar.
     * @defaultValue true
     */
    chatButton?: boolean;
}
/**
 * Optional features of the {@link CallWithChatComposite}.
 *
 * @public
 */
export type CallWithChatCompositeOptions = {
    /**
     * Call control options to change what buttons show on the call-with-chat composite control bar.
     * If using the boolean values, true will cause default behavior across the whole control bar. False hides the whole control bar.
     */
    callControls?: boolean | CallWithChatControlOptions;
    /**
     * Remote participant video tile menu options
     */
    remoteVideoTileMenuOptions?: RemoteVideoTileMenuOptions;
    /**
     * Options for controlling the local video tile.
     *
     * @remarks if 'false' the local video tile will not be rendered.
     */
    localVideoTile?: boolean | LocalVideoTileOptions;
    /**
     * Options for controlling the starting layout of the composite's video gallery
     */
    galleryOptions?: {
        /**
         * Layout for the gallery when the call starts
         */
        layout?: VideoGalleryLayout;
    };
    /**
     * Options for setting additional customizations related to personalized branding.
     */
    branding?: {
        /**
         * Logo displayed on the configuration page.
         */
        logo?: {
            /**
             * URL for the logo image.
             *
             * @remarks
             * Recommended size is 80x80 pixels.
             */
            url: string;
            /**
             * Alt text for the logo image.
             */
            alt?: string;
            /**
             * The logo can be displayed as a circle.
             *
             * @defaultValue 'unset'
             */
            shape?: 'unset' | 'circle';
        };
        /**
         * Background image displayed on the configuration page.
         */
        backgroundImage?: {
            /**
             * URL for the background image.
             *
             * @remarks
             * Background image should be larger than 576x567 pixels and smaller than 2048x2048 pixels pixels.
             */
            url: string;
        };
    };
};
/**
 * CallWithChatComposite brings together key components to provide a full call with chat experience out of the box.
 *
 * @public
 */
export declare const CallWithChatComposite: (props: CallWithChatCompositeProps) => JSX.Element;
//# sourceMappingURL=CallWithChatComposite.d.ts.map