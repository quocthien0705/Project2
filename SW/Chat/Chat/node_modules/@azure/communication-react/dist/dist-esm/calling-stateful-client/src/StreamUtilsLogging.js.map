{"version":3,"file":"StreamUtilsLogging.js","sourceRoot":"","sources":["../../../../preprocess-dist/calling-stateful-client/src/StreamUtilsLogging.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { MediaStreamType } from '@azure/communication-calling';\nimport { _logEvent } from '@internal/acs-ui-common';\nimport { callingStatefulLogger, EventNames } from './Logger';\n\n/**\n * helper function to manage logging for stream disposals\n *\n * @param eventName Name of event that occured when managing streams\n * @param streamLogInfo Data about the stream in the event\n * @returns\n */\nfunction _logDisposeStreamEvent(eventName: EventNames, streamLogInfo: {\n  callId?: string;\n  participantKey?: any;\n  streamId?: number | string;\n  streamType?: MediaStreamType;\n  streamEventType?: string;\n}): void {\n  switch (eventName) {\n    case EventNames.DISPOSE_STREAM_INVALID_PARAMS:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.DISPOSE_STREAM_INVALID_PARAMS,\n        level: 'warning',\n        message: 'Dispose View invalid combination of parameters.',\n        data: {\n          streamType: streamLogInfo.streamType\n        }\n      });\n      return;\n    case EventNames.START_DISPOSE_STREAM:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.START_DISPOSE_STREAM,\n        level: 'info',\n        message: 'Start disposing stream.',\n        data: streamLogInfo\n      });\n      return;\n    case EventNames.DISPOSE_INFO_NOT_FOUND:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.DISPOSE_INFO_NOT_FOUND,\n        level: 'error',\n        message: 'Cannot find render info when disposing stream.',\n        data: streamLogInfo\n      });\n      return;\n    case EventNames.STREAM_STOPPING:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.STREAM_STOPPING,\n        level: 'info',\n        message: 'Stream is currently marked as stopping, will continue if is local preview',\n        data: streamLogInfo\n      });\n      return;\n    case EventNames.DISPOSING_RENDERER:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.DISPOSING_RENDERER,\n        level: 'info',\n        message: 'Disposing view renderer.',\n        data: streamLogInfo\n      });\n      return;\n    case EventNames.RENDERER_NOT_FOUND:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.RENDERER_NOT_FOUND,\n        level: 'error',\n        message: 'Cannot find renderer when disposing stream.',\n        data: streamLogInfo\n      });\n      return;\n    case EventNames.STREAM_ALREADY_DISPOSED:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.STREAM_ALREADY_DISPOSED,\n        level: 'info',\n        message: 'Stream is already disposed.',\n        data: streamLogInfo\n      });\n      return;\n    default:\n      return;\n  }\n}\n\n/**\n * helper function to manage logging for local stream creations\n *\n * @param eventName Name of the event to occured when creating a local stream\n * @param streamLogInfo Data about the stream in the event\n * @param error that is thrown by caller\n * @returns\n */\nfunction _logCreateStreamEvent(eventName: string, streamLogInfo: {\n  callId?: string;\n  participantKey?: any;\n  streamId?: number | string;\n  streamType?: MediaStreamType;\n  streamEventType?: string;\n}, error?: unknown): void {\n  switch (eventName) {\n    case EventNames.CREATE_STREAM_INVALID_PARAMS:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.CREATE_STREAM_INVALID_PARAMS,\n        level: 'warning',\n        message: 'Create View invalid combination of parameters.',\n        data: {\n          streamType: streamLogInfo.streamType\n        }\n      });\n      return;\n    case EventNames.START_STREAM_RENDERING:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.START_STREAM_RENDERING,\n        level: 'info',\n        message: 'Start creating view for local video.',\n        data: streamLogInfo\n      });\n      return;\n    case EventNames.STREAM_NOT_FOUND:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.STREAM_NOT_FOUND,\n        level: 'error',\n        message: 'Stream not found in state.',\n        data: {\n          callId: streamLogInfo.callId\n        }\n      });\n      return;\n    case EventNames.STREAM_ALREADY_RENDERED:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.STREAM_ALREADY_RENDERED,\n        level: 'warning',\n        message: 'Stream is already rendered.',\n        data: streamLogInfo\n      });\n      return;\n    case EventNames.STREAM_RENDERING:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.STREAM_RENDERING,\n        level: 'warning',\n        message: 'Stream is rendering.',\n        data: streamLogInfo\n      });\n      return;\n    case EventNames.STREAM_STOPPING:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.STREAM_STOPPING,\n        level: 'warning',\n        message: 'Stream was marked as stopping by dispose view. Resetting state to \"Rendering\".',\n        data: streamLogInfo\n      });\n      return;\n    case EventNames.CREATE_STREAM_FAIL:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.CREATE_STREAM_FAIL,\n        level: 'error',\n        message: 'Failed to create view.',\n        data: {\n          error: error,\n          streamType: streamLogInfo.streamType,\n          callId: streamLogInfo.callId\n        }\n      });\n      return;\n    case EventNames.RENDER_INFO_NOT_FOUND:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.RENDER_INFO_NOT_FOUND,\n        level: 'error',\n        message: 'Cannot find render info after create the view. ',\n        data: streamLogInfo\n      });\n      return;\n    case EventNames.CREATED_STREAM_STOPPING:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.CREATED_STREAM_STOPPING,\n        level: 'warning',\n        message: 'Render info status is stopping, dispose renderer.',\n        data: streamLogInfo\n      });\n      return;\n    case EventNames.VIEW_RENDER_SUCCEED:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.VIEW_RENDER_SUCCEED,\n        level: 'info',\n        message: `Successfully render the view.`,\n        data: streamLogInfo\n      });\n      return;\n    case EventNames.CREATING_VIEW:\n      _logEvent(callingStatefulLogger, {\n        name: EventNames.CREATING_VIEW,\n        level: 'info',\n        message: 'Start creating view for remote video.',\n        data: streamLogInfo\n      });\n      return;\n    default:\n      return;\n  }\n}\n\n/**\n * helper function to fire streamUtils logging events\n *\n * @param eventName Name of event from streamUtils\n * @param streamLogInfo informaiton about the event and who called it\n * @param error if any errors present will be added to message in logging\n */\nexport function _logStreamEvent(eventName: EventNames, streamLogInfo: {\n  callId?: string;\n  participantKey?: any;\n  streamId?: number | string;\n  streamType?: MediaStreamType;\n  streamEventType?: string;\n}, error?: unknown): void {\n  if (streamLogInfo.streamEventType === 'disposeViewLocal' || streamLogInfo.streamEventType === 'disposeViewRemote' || streamLogInfo.streamEventType === 'disposeViewUnparented') {\n    _logDisposeStreamEvent(eventName, streamLogInfo);\n  } else if (streamLogInfo.streamEventType === 'createViewLocal' || streamLogInfo.streamEventType === 'createViewRemote') {\n    _logCreateStreamEvent(eventName, streamLogInfo, error);\n  }\n}"]}