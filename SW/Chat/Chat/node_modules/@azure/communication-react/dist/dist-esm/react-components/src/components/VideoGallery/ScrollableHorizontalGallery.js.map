{"version":3,"file":"ScrollableHorizontalGallery.js","sourceRoot":"","sources":["../../../../../../preprocess-dist/react-components/src/components/VideoGallery/ScrollableHorizontalGallery.tsx"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAU,KAAK,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAC7D,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AACjD,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAC1D,OAAO,EAAE,0CAA0C,EAAE,iCAAiC,EAAE,MAAM,4CAA4C,CAAC;AAE3I;;;GAGG;AACH,MAAM,CAAC,MAAM,2BAA2B,GAAG,CAAC,KAI3C,EAAe,EAAE;IAChB,MAAM,EACJ,yBAAyB,EACzB,oBAAoB,EACpB,eAAe,EAChB,GAAG,KAAK,CAAC;IACV,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,YAAY,GAAG,CAAC,GAAG,KAAK,CAAC,yBAAyB,aAAzB,yBAAyB,uBAAzB,yBAAyB,CAAE,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QAC1E,IAAI,oBAAoB,IAAI,YAAY,EAAE,CAAC;YACzC,oBAAoB,CAAC,YAAY,CAAC,CAAC;QACrC,CAAC;IACH,CAAC,EAAE,CAAC,oBAAoB,EAAE,yBAAyB,aAAzB,yBAAyB,uBAAzB,yBAAyB,CAAE,MAAM,CAAC,CAAC,CAAC;IAC9D,MAAM,GAAG,GAAI,MAAM,EAA+D,CAAC;IACnF,MAAM,EACJ,MAAM,EAAE,eAAe,EACxB,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;IACtB,OAAO,2CAAK,GAAG,EAAE,GAAG,IAAM,eAAe,IAAE,SAAS,EAAE,WAAW,CAAC,0CAA0C,EAAE,eAAe,CAAC;QAC1H,oBAAC,KAAK,kBAAY,+BAA+B,EAAC,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,iCAAiC,EAAE,MAAM,EAAE;gBACvH,WAAW,EAAE,QAAQ;aACtB,IACI,yBAAyB,CACpB,CACJ,CAAC;AACX,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { IStyle, Stack, mergeStyles } from '@fluentui/react';\nimport React, { useEffect, useRef } from 'react';\nimport { useDraggable } from 'react-use-draggable-scroll';\nimport { scrollableHorizontalGalleryContainerStyles, scrollableHorizontalGalleryStyles } from './styles/ScrollableHorizontalGallery.style';\n\n/**\n * Component to display elements horizontally in a scrollable container\n * @private\n */\nexport const ScrollableHorizontalGallery = (props: {\n  horizontalGalleryElements?: JSX.Element[];\n  onFetchTilesToRender?: (indexes: number[]) => void;\n  containerStyles?: IStyle;\n}): JSX.Element => {\n  const {\n    horizontalGalleryElements,\n    onFetchTilesToRender,\n    containerStyles\n  } = props;\n  useEffect(() => {\n    const indexesArray = [...Array(horizontalGalleryElements?.length).keys()];\n    if (onFetchTilesToRender && indexesArray) {\n      onFetchTilesToRender(indexesArray);\n    }\n  }, [onFetchTilesToRender, horizontalGalleryElements?.length]);\n  const ref = (useRef<HTMLDivElement>() as React.MutableRefObject<HTMLInputElement>);\n  const {\n    events: dragabbleEvents\n  } = useDraggable(ref);\n  return <div ref={ref} {...dragabbleEvents} className={mergeStyles(scrollableHorizontalGalleryContainerStyles, containerStyles)}>\n      <Stack data-ui-id=\"scrollable-horizontal-gallery\" horizontal={true} styles={scrollableHorizontalGalleryStyles} tokens={{\n      childrenGap: '0.5rem'\n    }}>\n        {horizontalGalleryElements}\n      </Stack>\n    </div>;\n};"]}