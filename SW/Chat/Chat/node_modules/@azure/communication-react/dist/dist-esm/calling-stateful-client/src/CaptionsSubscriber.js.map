{"version":3,"file":"CaptionsSubscriber.js","sourceRoot":"","sources":["../../../../preprocess-dist/calling-stateful-client/src/CaptionsSubscriber.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/* @conditional-compile-remove(close-captions) */\nimport { PropertyChangedEvent, TeamsCaptions, TeamsCaptionsHandler, TeamsCaptionsInfo } from '@azure/communication-calling';\n/* @conditional-compile-remove(close-captions) */\nimport { CallContext } from './CallContext';\n/* @conditional-compile-remove(close-captions) */\nimport { CallIdRef } from './CallIdRef';\n\n/* @conditional-compile-remove(close-captions) */\n/**\n * @private\n */\nexport class CaptionsSubscriber {\n  private _callIdRef: CallIdRef;\n  private _context: CallContext;\n  private _captions: TeamsCaptions;\n  constructor(callIdRef: CallIdRef, context: CallContext, captions: TeamsCaptions) {\n    this._callIdRef = callIdRef;\n    this._context = context;\n    this._captions = captions;\n    if (this._captions.isCaptionsFeatureActive) {\n      this._context.setIsCaptionActive(this._callIdRef.callId, this._captions.isCaptionsFeatureActive);\n    }\n    this._context.setAvailableSpokenLanguages(this._callIdRef.callId, this._captions.supportedSpokenLanguages);\n    if ('supportedCaptionLanguages' in this._captions) {\n      this._context.setAvailableCaptionLanguages(this._callIdRef.callId, this._captions.supportedCaptionLanguages);\n    }\n    this._context.setSelectedSpokenLanguage(this._callIdRef.callId, this._captions.activeSpokenLanguage);\n    this._context.setSelectedCaptionLanguage(this._callIdRef.callId, this._captions.activeCaptionLanguage);\n    this.subscribe();\n  }\n  private subscribe = (): void => {\n    this._captions.on('CaptionsActiveChanged', this.isCaptionsActiveChanged);\n    this._captions.on('CaptionsReceived', this.onCaptionsReceived);\n    this._captions.on('CaptionLanguageChanged', this.isCaptionLanguageChanged);\n    this._captions.on('SpokenLanguageChanged', this.isSpokenLanguageChanged);\n  };\n  public unsubscribe = (): void => {\n    this._captions.off('CaptionsActiveChanged', this.isCaptionsActiveChanged);\n    this._captions.off('CaptionsReceived', this.onCaptionsReceived);\n    this._captions.off('CaptionLanguageChanged', this.isCaptionLanguageChanged);\n    this._captions.off('SpokenLanguageChanged', this.isSpokenLanguageChanged);\n  };\n  private onCaptionsReceived: TeamsCaptionsHandler = (caption: TeamsCaptionsInfo): void => {\n    this._context.addCaption(this._callIdRef.callId, caption);\n  };\n  private isCaptionsActiveChanged: PropertyChangedEvent = (): void => {\n    this._context.setIsCaptionActive(this._callIdRef.callId, this._captions.isCaptionsFeatureActive);\n  };\n  private isCaptionLanguageChanged: PropertyChangedEvent = (): void => {\n    this._context.setSelectedCaptionLanguage(this._callIdRef.callId, this._captions.activeCaptionLanguage);\n  };\n  private isSpokenLanguageChanged: PropertyChangedEvent = (): void => {\n    this._context.setSelectedSpokenLanguage(this._callIdRef.callId, this._captions.activeSpokenLanguage);\n  };\n}\n\n// This is a placeholder to bypass CC of \"close-captions\", remove when move the feature to stable\nexport {};"]}