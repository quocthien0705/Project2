{"version":3,"sources":["useTeachingPopoverCarouselNavButton.js"],"sourcesContent":["import * as React from 'react';\nimport { useARIAButtonProps } from '@fluentui/react-aria';\nimport { usePopoverContext_unstable } from '@fluentui/react-popover';\nimport { useTabsterAttributes } from '@fluentui/react-tabster';\nimport { getIntrinsicElementProps, isHTMLElement, slot, useEventCallback } from '@fluentui/react-utilities';\nimport { useCarouselContext_unstable } from '../TeachingPopoverCarousel/Carousel/CarouselContext';\nimport { useValueIdContext } from '../TeachingPopoverCarouselNav/valueIdContext';\n/**\n * Create the state required to render TeachingPopoverCarouselNavButton.\n *\n * The returned state can be modified with hooks such as useTeachingPopoverCarouselNavButtonStyles_unstable,\n * before being passed to renderTeachingPopoverCarouselNavButton_unstable.\n *\n * @param props - props from this instance of TeachingPopoverCarouselNavButton\n * @param ref - reference to root HTMLElement of TeachingPopoverCarouselNavButton\n */ export const useTeachingPopoverCarouselNavButton_unstable = (props, ref)=>{\n    const { onClick, as = 'a' } = props;\n    const value = useValueIdContext();\n    const appearance = usePopoverContext_unstable((context)=>context.appearance);\n    const selectPageByValue = useCarouselContext_unstable((c)=>c.selectPageByValue);\n    const isSelected = useCarouselContext_unstable((c)=>c.value === value);\n    const handleClick = useEventCallback((event)=>{\n        onClick === null || onClick === void 0 ? void 0 : onClick(event);\n        if (!event.defaultPrevented && isHTMLElement(event.target)) {\n            selectPageByValue(event, value);\n        }\n    });\n    const defaultTabProps = useTabsterAttributes({\n        focusable: {\n            isDefault: isSelected\n        }\n    });\n    const _carouselButton = slot.always(getIntrinsicElementProps(as, useARIAButtonProps(props.as, props)), {\n        elementType: 'button',\n        defaultProps: {\n            ref: ref,\n            role: 'tab',\n            type: 'button',\n            ...defaultTabProps\n        }\n    });\n    _carouselButton.onClick = handleClick;\n    const state = {\n        isSelected,\n        appearance,\n        components: {\n            root: 'button'\n        },\n        root: _carouselButton\n    };\n    return state;\n};\n"],"names":["useTeachingPopoverCarouselNavButton_unstable","props","ref","onClick","as","value","useValueIdContext","appearance","usePopoverContext_unstable","context","selectPageByValue","useCarouselContext_unstable","c","isSelected","handleClick","useEventCallback","event","defaultPrevented","isHTMLElement","target","defaultTabProps","useTabsterAttributes","focusable","isDefault","_carouselButton","slot","always","getIntrinsicElementProps","useARIAButtonProps","elementType","defaultProps","role","type","state","components","root"],"mappings":";;;;+BAeiBA;;;eAAAA;;;;iEAfM;2BACY;8BACQ;8BACN;gCAC2C;iCACpC;gCACV;AASvB,MAAMA,+CAA+C,CAACC,OAAOC;IACpE,MAAM,EAAEC,OAAO,EAAEC,KAAK,GAAG,EAAE,GAAGH;IAC9B,MAAMI,QAAQC,IAAAA,iCAAiB;IAC/B,MAAMC,aAAaC,IAAAA,wCAA0B,EAAC,CAACC,UAAUA,QAAQF,UAAU;IAC3E,MAAMG,oBAAoBC,IAAAA,4CAA2B,EAAC,CAACC,IAAIA,EAAEF,iBAAiB;IAC9E,MAAMG,aAAaF,IAAAA,4CAA2B,EAAC,CAACC,IAAIA,EAAEP,KAAK,KAAKA;IAChE,MAAMS,cAAcC,IAAAA,gCAAgB,EAAC,CAACC;QAClCb,YAAY,QAAQA,YAAY,KAAK,IAAI,KAAK,IAAIA,QAAQa;QAC1D,IAAI,CAACA,MAAMC,gBAAgB,IAAIC,IAAAA,6BAAa,EAACF,MAAMG,MAAM,GAAG;YACxDT,kBAAkBM,OAAOX;QAC7B;IACJ;IACA,MAAMe,kBAAkBC,IAAAA,kCAAoB,EAAC;QACzCC,WAAW;YACPC,WAAWV;QACf;IACJ;IACA,MAAMW,kBAAkBC,oBAAI,CAACC,MAAM,CAACC,IAAAA,wCAAwB,EAACvB,IAAIwB,IAAAA,6BAAkB,EAAC3B,MAAMG,EAAE,EAAEH,SAAS;QACnG4B,aAAa;QACbC,cAAc;YACV5B,KAAKA;YACL6B,MAAM;YACNC,MAAM;YACN,GAAGZ,eAAe;QACtB;IACJ;IACAI,gBAAgBrB,OAAO,GAAGW;IAC1B,MAAMmB,QAAQ;QACVpB;QACAN;QACA2B,YAAY;YACRC,MAAM;QACV;QACAA,MAAMX;IACV;IACA,OAAOS;AACX"}