{"version":3,"file":"setAlignment.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-api/lib/format/setAlignment.ts"],"names":[],"mappings":";;AAAA,oDAA+C;AAC/C,oDAA+C;AAC/C,kEAA6D;AAC7D,oEAA+D;AAO/D,6DAM8B;AAI9B;;;;;GAKG;AACH,SAAwB,YAAY,CAAC,MAAe,EAAE,SAA0C;IAC5F,IAAA,4BAAkB,EACd,MAAM,EACN;QACI,IAAM,SAAS,GAAG,MAAM,CAAC,mBAAmB,EAAE,CAAC;QAC/C,IAAM,QAAQ,GAAG,SAAS,IAAI,SAAS,CAAC,IAAI,2BAAuC,CAAC;QACpF,IAAM,eAAe,GAAG,MAAM,CAAC,kBAAkB,EAAE,CAAC;QAEpD,IACI,QAAQ;YACR,SAAS,CAAC,WAAW;YACrB,IAAA,2CAAoB,EAAC,IAAI,6BAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,WAAW,CAAC,EAC1E;YACE,UAAU,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;SACpC;aAAM,IAAI,eAAe,IAAI,MAAM,CAAC,eAAe,CAAC,EAAE;YACnD,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;SAChC;aAAM;YACH,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;SAChC;IACL,CAAC,EACD,cAAc,CACjB,CAAC;AACN,CAAC;AAtBD,+BAsBC;AAED;;;;;;;GAOG;AACH,SAAS,UAAU,CAAC,SAA8B,EAAE,SAA0C;IAC1F,IAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;IAC9B,IAAI,SAAS,kBAAoB,EAAE;QAC/B,KAAK,CAAC,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC;QAChC,KAAK,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC;KACpC;SAAM,IAAI,SAAS,iBAAmB,EAAE;QACrC,KAAK,CAAC,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC;QAChC,KAAK,CAAC,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC;KAChC;SAAM;QACH,KAAK,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;QAC5B,KAAK,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC;KACpC;AACL,CAAC;AAED;;;;;GAKG;AACH,SAAS,SAAS,CAAC,MAAe,EAAE,SAA0C;IAC1E,IAAI,KAAK,GAAG,MAAM,CAAC;IACnB,IAAI,OAAO,kCAA8B,CAAC;IAC1C,IAAI,SAAS,kBAAoB,EAAE;QAC/B,OAAO,sCAAgC,CAAC;QACxC,KAAK,GAAG,QAAQ,CAAC;KACpB;SAAM,IAAI,SAAS,iBAAmB,EAAE;QACrC,OAAO,oCAA+B,CAAC;QACvC,KAAK,GAAG,OAAO,CAAC;KACnB;IACD,IAAA,qBAAW,EAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC7B,IAAM,QAAQ,GAAG,MAAM,CAAC,aAAa,CAAC,SAAS,uBAA0B,UAAA,IAAI;QACzE,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;QAC7B,IAAA,6BAAmB,EAAC,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE;QACtB,IAAM,IAAI,GAAG,MAAM,CAAC,kBAAkB,EAAE,CAAC;QACzC,IAAI,IAAI,EAAE;YACN,IAAA,6BAAmB,EAAC,IAAI,CAAC,CAAC;SAC7B;KACJ;AACL,CAAC;AAED,SAAS,MAAM,CAAC,OAAoB;IAChC,OAAO,IAAA,iDAA0B,EAAC,OAAO,EAAE,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;AAC5E,CAAC;AAED,SAAS,SAAS,CAAC,MAAe,EAAE,SAA0C;IAC1E,IAAA,qBAAW,EACP,MAAM,EACN,UAAC,MAAM,EAAE,KAAK,EAAE,GAAG;QACf,IAAM,MAAM,GAAG,IAAA,uDAAgC,EAAC,MAAM,CAAC,CAAC;QACxD,IAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC;QAC3C,IAAM,KAAK,GAAG,IAAA,4CAAqB,EAAC,MAAM,EAAE,IAAI,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC;QACrF,IAAI,KAAK,IAAI,GAAG,EAAE;YACd,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;SAC9C;IACL,CAAC,EACD,SAAS,CAAC,uBAAuB,EACjC,WAAW,CACd,CAAC;AACN,CAAC","sourcesContent":["import blockFormat from '../utils/blockFormat';\r\nimport execCommand from '../utils/execCommand';\r\nimport formatUndoSnapshot from '../utils/formatUndoSnapshot';\r\nimport normalizeBlockquote from '../utils/normalizeBlockquote';\r\nimport {\r\n    Alignment,\r\n    DocumentCommand,\r\n    QueryScope,\r\n    SelectionRangeTypes,\r\n} from 'roosterjs-editor-types';\r\nimport {\r\n    createVListFromRegion,\r\n    findClosestElementAncestor,\r\n    getSelectedBlockElementsInRegion,\r\n    isWholeTableSelected,\r\n    VTable,\r\n} from 'roosterjs-editor-dom';\r\nimport type { IEditor, TableSelectionRange } from 'roosterjs-editor-types';\r\nimport type { CompatibleAlignment } from 'roosterjs-editor-types/lib/compatibleTypes';\r\n\r\n/**\r\n * Set content alignment\r\n * @param editor The editor instance\r\n * @param alignment The alignment option:\r\n * Alignment.Center, Alignment.Left, Alignment.Right\r\n */\r\nexport default function setAlignment(editor: IEditor, alignment: Alignment | CompatibleAlignment) {\r\n    formatUndoSnapshot(\r\n        editor,\r\n        () => {\r\n            const selection = editor.getSelectionRangeEx();\r\n            const isATable = selection && selection.type === SelectionRangeTypes.TableSelection;\r\n            const elementAtCursor = editor.getElementAtCursor();\r\n\r\n            if (\r\n                isATable &&\r\n                selection.coordinates &&\r\n                isWholeTableSelected(new VTable(selection.table), selection.coordinates)\r\n            ) {\r\n                alignTable(selection, alignment);\r\n            } else if (elementAtCursor && isList(elementAtCursor)) {\r\n                alignList(editor, alignment);\r\n            } else {\r\n                alignText(editor, alignment);\r\n            }\r\n        },\r\n        'setAlignment'\r\n    );\r\n}\r\n\r\n/**\r\n * Align text using the margins\r\n * @param editor\r\n * @param element\r\n * @param alignment\r\n * @param addUndoSnapshot\r\n * @returns\r\n */\r\nfunction alignTable(selection: TableSelectionRange, alignment: Alignment | CompatibleAlignment) {\r\n    const table = selection.table;\r\n    if (alignment == Alignment.Center) {\r\n        table.style.marginLeft = 'auto';\r\n        table.style.marginRight = 'auto';\r\n    } else if (alignment == Alignment.Right) {\r\n        table.style.marginLeft = 'auto';\r\n        table.style.marginRight = '';\r\n    } else {\r\n        table.style.marginLeft = '';\r\n        table.style.marginRight = 'auto';\r\n    }\r\n}\r\n\r\n/**\r\n * Align text using the text-align\r\n * @param editor\r\n * @param alignment\r\n * @returns\r\n */\r\nfunction alignText(editor: IEditor, alignment: Alignment | CompatibleAlignment) {\r\n    let align = 'left';\r\n    let command = DocumentCommand.JustifyLeft;\r\n    if (alignment == Alignment.Center) {\r\n        command = DocumentCommand.JustifyCenter;\r\n        align = 'center';\r\n    } else if (alignment == Alignment.Right) {\r\n        command = DocumentCommand.JustifyRight;\r\n        align = 'right';\r\n    }\r\n    execCommand(editor, command);\r\n    const elements = editor.queryElements('[align]', QueryScope.OnSelection, node => {\r\n        node.style.textAlign = align;\r\n        normalizeBlockquote(node);\r\n    });\r\n\r\n    if (elements.length == 0) {\r\n        const node = editor.getElementAtCursor();\r\n        if (node) {\r\n            normalizeBlockquote(node);\r\n        }\r\n    }\r\n}\r\n\r\nfunction isList(element: HTMLElement) {\r\n    return findClosestElementAncestor(element, undefined /** root */, 'LI');\r\n}\r\n\r\nfunction alignList(editor: IEditor, alignment: Alignment | CompatibleAlignment) {\r\n    blockFormat(\r\n        editor,\r\n        (region, start, end) => {\r\n            const blocks = getSelectedBlockElementsInRegion(region);\r\n            const startNode = blocks[0].getStartNode();\r\n            const vList = createVListFromRegion(region, true /*includeSiblingLists*/, startNode);\r\n            if (start && end) {\r\n                vList?.setAlignment(start, end, alignment);\r\n            }\r\n        },\r\n        undefined /* beforeRunCallback */,\r\n        'alignList'\r\n    );\r\n}\r\n"]}