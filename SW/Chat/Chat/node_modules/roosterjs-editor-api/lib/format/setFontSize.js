"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var applyListItemWrap_1 = require("../utils/applyListItemWrap");
var roosterjs_editor_dom_1 = require("roosterjs-editor-dom");
/**
 * Set font size at selection
 * @param editor The editor instance
 * @param fontSize The fontSize string, should be a valid CSS font-size style.
 * Currently there's no validation to the string, if the passed string is invalid, it won't take affect
 */
function setFontSize(editor, fontSize) {
    // The browser provided execCommand only accepts 1-7 point value. In addition, it uses HTML <font> tag with size attribute.
    // <font> is not HTML5 standard (http://www.w3schools.com/tags/tag_font.asp).
    (0, applyListItemWrap_1.default)(editor, 'font-size', function (element, isInnerNode) {
        element.style.fontSize = isInnerNode ? '' : fontSize;
        var lineHeight = (0, roosterjs_editor_dom_1.getComputedStyle)(element, 'line-height');
        if (lineHeight && lineHeight != 'normal') {
            element.style.lineHeight = 'normal';
        }
    }, 'setFontSize');
}
exports.default = setFontSize;
//# sourceMappingURL=setFontSize.js.map