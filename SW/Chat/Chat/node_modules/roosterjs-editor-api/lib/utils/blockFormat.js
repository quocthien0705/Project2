"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var commitListChains_1 = require("../utils/commitListChains");
var formatUndoSnapshot_1 = require("./formatUndoSnapshot");
var roosterjs_editor_dom_1 = require("roosterjs-editor-dom");
/**
 * Split selection into regions, and perform a block-wise formatting action for each region.
 */
function blockFormat(editor, callback, beforeRunCallback, apiName) {
    editor.focus();
    var selection = editor.getSelectionRangeEx();
    (0, formatUndoSnapshot_1.default)(editor, function (start, end) {
        if (!beforeRunCallback || beforeRunCallback()) {
            var regions = editor.getSelectedRegions();
            if (regions.length > 0) {
                var chains_1 = roosterjs_editor_dom_1.VListChain.createListChains(regions, start === null || start === void 0 ? void 0 : start.node);
                regions.forEach(function (region) { return callback(region, start, end, chains_1); });
                (0, commitListChains_1.default)(editor, chains_1);
            }
        }
        if (selection.type == 0 /* Normal */ && start && end) {
            editor.select(start, end);
        }
        else {
            editor.select(selection);
        }
    }, apiName);
}
exports.default = blockFormat;
//# sourceMappingURL=blockFormat.js.map