{"version":3,"file":"formatUndoSnapshot.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-api/lib/utils/formatUndoSnapshot.ts"],"names":[],"mappings":";;AAGA;;;;;;;GAOG;AACH,SAAwB,kBAAkB,CACtC,MAAe,EACf,QAAwE,EACxE,OAAgB;IAEhB,MAAM,CAAC,eAAe,CAClB,QAAQ,yBAER,SAAS,CAAC,wBAAwB,EAClC,OAAO,IAAI,OAAO,IAAI,EAAE;QACpB,CAAC,CAAC;YACI,aAAa,EAAE,OAAO;SACzB;QACH,CAAC,CAAC,SAAS,CAClB,CAAC;AACN,CAAC;AAfD,qCAeC","sourcesContent":["import { ChangeSource } from 'roosterjs-editor-types';\nimport type { IEditor, NodePosition } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Execute add undo snapshot for the Format APIs\n * @param editor The editor instance\n * @param command Optional, The callback function to perform formatting, returns a data object which will be used as the data field in ContentChangedEvent if changeSource is not null.\n * @param apiName Optional, name of the API that was is going to be executed.\n * Default value is false.\n */\nexport default function formatUndoSnapshot(\n    editor: IEditor,\n    callback?: (start: NodePosition | null, end: NodePosition | null) => any,\n    apiName?: string\n) {\n    editor.addUndoSnapshot(\n        callback,\n        ChangeSource.Format,\n        undefined /* canUndoByBackspace */,\n        apiName && apiName != ''\n            ? {\n                  formatApiName: apiName,\n              }\n            : undefined\n    );\n}\n"]}