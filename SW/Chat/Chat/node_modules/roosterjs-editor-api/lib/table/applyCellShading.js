"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var formatUndoSnapshot_1 = require("../utils/formatUndoSnapshot");
var roosterjs_editor_dom_1 = require("roosterjs-editor-dom");
/**
 * Set background color of cells.
 * @param editor The editor instance
 * @param color One of two options:
 **/
function applyCellShading(editor, color) {
    editor.focus();
    (0, formatUndoSnapshot_1.default)(editor, function () {
        var regions = editor.getSelectedRegions();
        regions.forEach(function (region) {
            if ((0, roosterjs_editor_dom_1.safeInstanceOf)(region.rootNode, 'HTMLTableCellElement')) {
                (0, roosterjs_editor_dom_1.setColor)(region.rootNode, color, true /* isBackgroundColor */, editor.isDarkMode(), true /** shouldAdaptFontColor */, editor.getDarkColorHandler());
                var meta = (0, roosterjs_editor_dom_1.getTableCellMetadata)(region.rootNode);
                (0, roosterjs_editor_dom_1.saveTableCellMetadata)(region.rootNode, (0, tslib_1.__assign)((0, tslib_1.__assign)({}, meta), { bgColorOverride: true }));
            }
        });
    }, 'applyCellShading');
}
exports.default = applyCellShading;
//# sourceMappingURL=applyCellShading.js.map