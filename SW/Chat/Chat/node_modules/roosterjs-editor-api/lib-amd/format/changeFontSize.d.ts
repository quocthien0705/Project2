import { FontSizeChange } from 'roosterjs-editor-types';
import type { IEditor } from 'roosterjs-editor-types';
import type { CompatibleFontSizeChange } from 'roosterjs-editor-types/lib/compatibleTypes';
/**
 * Default font size sequence, in pt. Suggest editor UI use this sequence as your font size list,
 * So that when increase/decrease font size, the font size can match the sequence of your font size picker
 */
export declare const FONT_SIZES: number[];
/**
 * Increase or decrease font size in selection
 * @param editor The editor instance
 * @param change Whether increase or decrease font size
 * @param fontSizes A sorted font size array, in pt. Default value is FONT_SIZES
 */
export default function changeFontSize(editor: IEditor, change: FontSizeChange | CompatibleFontSizeChange, fontSizes?: number[]): void;
/**
 * @internal
 * Get new font size after increase/decrease. This is exported for test only
 * @param pt Original font size, in Point
 * @param changeBase Changed value, 1 means increase, -1 means decrease
 * @param fontSizes Known font size array
 */
export declare function getNewFontSize(pt: number, changeBase: 1 | -1, fontSizes: number[]): number;
