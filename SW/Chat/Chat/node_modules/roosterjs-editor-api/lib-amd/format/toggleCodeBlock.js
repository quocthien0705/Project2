define(["require", "exports", "../utils/blockWrap", "roosterjs-editor-dom"], function (require, exports, blockWrap_1, roosterjs_editor_dom_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PRE_TAG = 'pre';
    var CODE_TAG = 'code';
    var SELECTOR = PRE_TAG + ">" + CODE_TAG;
    /**
     * Toggle code block at selection, if selection already contains any code blocked elements,
     * the code block elements will be no longer be code blocked and other elements will take no affect
     * @param editor The editor instance
     * @param styler (Optional) The custom styler for setting the style for the code block element
     */
    function toggleCodeBlock(editor, styler) {
        (0, blockWrap_1.default)(editor, function (nodes) {
            var code = (0, roosterjs_editor_dom_1.wrap)(nodes, CODE_TAG);
            var pre = (0, roosterjs_editor_dom_1.wrap)(code, PRE_TAG);
            styler === null || styler === void 0 ? void 0 : styler(pre);
        }, function () {
            return editor.queryElements(SELECTOR, 1 /* OnSelection */, function (code) {
                if (!code.previousSibling && !code.nextSibling) {
                    var parent_1 = code.parentNode;
                    (0, roosterjs_editor_dom_1.unwrap)(code);
                    if (parent_1) {
                        (0, roosterjs_editor_dom_1.unwrap)(parent_1);
                    }
                }
            }).length == 0;
        }, 'toggleCodeBlock');
    }
    exports.default = toggleCodeBlock;
});
//# sourceMappingURL=toggleCodeBlock.js.map