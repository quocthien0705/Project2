define(["require", "exports", "../utils/blockWrap", "roosterjs-editor-dom"], function (require, exports, blockWrap_1, roosterjs_editor_dom_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var BLOCKQUOTE_TAG = 'blockquote';
    var DEFAULT_STYLER = function (element) {
        element.style.borderLeft = '3px solid';
        element.style.borderColor = '#C8C8C8';
        element.style.paddingLeft = '10px';
        element.style.color = '#666666';
    };
    /**
     * Toggle blockquote at selection, if selection already contains any blockquote elements,
     * the blockquote elements will be unquote and other elements will take no effect
     * @param editor The editor instance
     * @param styler (Optional) The custom styler for setting the style for the blockquote element
     */
    function toggleBlockQuote(editor, styler) {
        (0, blockWrap_1.default)(editor, function (nodes) {
            var wrapper = (0, roosterjs_editor_dom_1.wrap)(nodes, BLOCKQUOTE_TAG);
            (styler || DEFAULT_STYLER)(wrapper);
        }, function () { return editor.queryElements('blockquote', 1 /* OnSelection */, roosterjs_editor_dom_1.unwrap).length == 0; }, 'toggleBlockQuote');
    }
    exports.default = toggleBlockQuote;
});
//# sourceMappingURL=toggleBlockQuote.js.map