{"version":3,"file":"changeFontSize.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-api/lib/format/changeFontSize.ts"],"names":[],"mappings":"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","sourcesContent":["import applyInlineStyle from '../utils/applyInlineStyle';\r\nimport { FontSizeChange } from 'roosterjs-editor-types';\r\nimport { getComputedStyle } from 'roosterjs-editor-dom';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\nimport type { CompatibleFontSizeChange } from 'roosterjs-editor-types/lib/compatibleTypes';\r\n\r\n/**\r\n * Default font size sequence, in pt. Suggest editor UI use this sequence as your font size list,\r\n * So that when increase/decrease font size, the font size can match the sequence of your font size picker\r\n */\r\nexport const FONT_SIZES = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72];\r\nconst MIN_FONT_SIZE = 1;\r\nconst MAX_FONT_SIZE = 1000;\r\n\r\n/**\r\n * Increase or decrease font size in selection\r\n * @param editor The editor instance\r\n * @param change Whether increase or decrease font size\r\n * @param fontSizes A sorted font size array, in pt. Default value is FONT_SIZES\r\n */\r\nexport default function changeFontSize(\r\n    editor: IEditor,\r\n    change: FontSizeChange | CompatibleFontSizeChange,\r\n    fontSizes: number[] = FONT_SIZES\r\n) {\r\n    const changeBase: 1 | -1 = change == FontSizeChange.Increase ? 1 : -1;\r\n    applyInlineStyle(\r\n        editor,\r\n        element => {\r\n            const pt = parseFloat(getComputedStyle(element, 'font-size') || element.style.fontSize);\r\n            element.style.fontSize = getNewFontSize(pt, changeBase, fontSizes) + 'pt';\r\n            const lineHeight = getComputedStyle(element, 'line-height');\r\n            if (lineHeight && lineHeight != 'normal') {\r\n                element.style.lineHeight = 'normal';\r\n            }\r\n        },\r\n        'changeFontSize'\r\n    );\r\n}\r\n\r\n/**\r\n * @internal\r\n * Get new font size after increase/decrease. This is exported for test only\r\n * @param pt Original font size, in Point\r\n * @param changeBase Changed value, 1 means increase, -1 means decrease\r\n * @param fontSizes Known font size array\r\n */\r\nexport function getNewFontSize(pt: number, changeBase: 1 | -1, fontSizes: number[]): number {\r\n    pt = changeBase == 1 ? Math.floor(pt) : Math.ceil(pt);\r\n    const last = fontSizes[fontSizes.length - 1];\r\n    if (pt <= fontSizes[0]) {\r\n        pt = Math.max(pt + changeBase, MIN_FONT_SIZE);\r\n    } else if (pt > last || (pt == last && changeBase == 1)) {\r\n        pt = pt / 10;\r\n        pt = changeBase == 1 ? Math.floor(pt) : Math.ceil(pt);\r\n        pt = Math.min(Math.max((pt + changeBase) * 10, last), MAX_FONT_SIZE);\r\n    } else if (changeBase == 1) {\r\n        for (let i = 0; i < fontSizes.length; i++) {\r\n            if (pt < fontSizes[i]) {\r\n                pt = fontSizes[i];\r\n                break;\r\n            }\r\n        }\r\n    } else {\r\n        for (let i = fontSizes.length - 1; i >= 0; i--) {\r\n            if (pt > fontSizes[i]) {\r\n                pt = fontSizes[i];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return pt;\r\n}\r\n"]}