{"version":3,"file":"setHeadingLevel.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-api/lib/format/setHeadingLevel.ts"],"names":[],"mappings":";;;;IAKA;;;;;;OAMG;IACH,SAAwB,eAAe,CAAC,MAAe,EAAE,KAAa;QAClE,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEpD,IAAA,4BAAkB,EACd,MAAM,EACN;YACI,MAAM,CAAC,KAAK,EAAE,CAAC;YAEf,IAAI,OAAO,GAAG,KAAK,CAAC;YACpB,MAAM,CAAC,aAAa,CAAC,mBAAmB,uBAA0B,UAAA,OAAO;gBACrE,IAAI,CAAC,OAAO,EAAE;oBACV,MAAM,CAAC,WAAW,EAAE,CAAC,WAAW,kCAA8B,KAAK,EAAE,OAAO,CAAC,CAAC;oBAC9E,OAAO,GAAG,IAAI,CAAC;iBAClB;gBAED,IAAM,GAAG,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBACtD,IAAA,qCAAc,EAAC,GAAG,EAAE,OAAO,CAAC,CAAC;gBAC7B,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;YAEH,IAAI,KAAK,GAAG,CAAC,EAAE;gBACX,IAAM,SAAS,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC;gBACjD,IAAI,YAAY,GAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,mBAAmB,CAAC;gBAClD,IAAM,SAAS,GAAG,IAAI,oCAAa,CAAC;oBAChC,iBAAiB,EAAE;wBACf,WAAW,EAAE,cAAM,OAAA,KAAK,EAAL,CAAK;qBAC3B;iBACJ,CAAC,CAAC;gBACH,OAAO,YAAY,EAAE;oBACjB,IAAM,OAAO,GAAG,YAAY,CAAC,uBAAuB,EAAE,CAAC;oBACvD,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;oBAC5B,YAAY,GAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,mBAAmB,EAAE,CAAC;iBACnD;gBACD,MAAM,CAAC,WAAW,EAAE,CAAC,WAAW,kCAA8B,KAAK,EAAE,OAAK,KAAK,MAAG,CAAC,CAAC;aACvF;QACL,CAAC,EACD,cAAc,CACjB,CAAC;IACN,CAAC;IAtCD,kCAsCC;IAED;;;OAGG;IACU,QAAA,YAAY,GAAG,eAAe,CAAC","sourcesContent":["import formatUndoSnapshot from '../utils/formatUndoSnapshot';\nimport { DocumentCommand, QueryScope } from 'roosterjs-editor-types';\nimport { HtmlSanitizer, moveChildNodes } from 'roosterjs-editor-dom';\nimport type { IEditor } from 'roosterjs-editor-types';\n\n/**\n * Set heading level at selection\n * @param editor The editor instance\n * @param level The heading level, can be a number from 0 to 6, in which 1 ~ 6 refers to\n * the HTML heading element &lt;H1&gt; to &lt;H6&gt;, 0 means no heading\n * if passed in param is outside the range, will be rounded to nearest number in the range\n */\nexport default function setHeadingLevel(editor: IEditor, level: number) {\n    level = Math.min(Math.max(Math.round(level), 0), 6);\n\n    formatUndoSnapshot(\n        editor,\n        () => {\n            editor.focus();\n\n            let wrapped = false;\n            editor.queryElements('H1,H2,H3,H4,H5,H6', QueryScope.OnSelection, heading => {\n                if (!wrapped) {\n                    editor.getDocument().execCommand(DocumentCommand.FormatBlock, false, '<DIV>');\n                    wrapped = true;\n                }\n\n                const div = editor.getDocument().createElement('div');\n                moveChildNodes(div, heading);\n                editor.replaceNode(heading, div);\n            });\n\n            if (level > 0) {\n                const traverser = editor.getSelectionTraverser();\n                let blockElement = traverser?.currentBlockElement;\n                const sanitizer = new HtmlSanitizer({\n                    cssStyleCallbacks: {\n                        'font-size': () => false,\n                    },\n                });\n                while (blockElement) {\n                    const element = blockElement.collapseToSingleElement();\n                    sanitizer.sanitize(element);\n                    blockElement = traverser?.getNextBlockElement();\n                }\n                editor.getDocument().execCommand(DocumentCommand.FormatBlock, false, `<H${level}>`);\n            }\n        },\n        'toggleHeader'\n    );\n}\n\n/**\n * @deprecated Use setHeadingLevel instead\n * Keep this for compatibility only, will be removed in next major release\n */\nexport const toggleHeader = setHeadingLevel;\n"]}