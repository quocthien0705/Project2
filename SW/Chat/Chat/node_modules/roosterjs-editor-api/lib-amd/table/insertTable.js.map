{"version":3,"file":"insertTable.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-api/lib/table/insertTable.ts"],"names":[],"mappings":";;;IAMA;;;;;;;;OAQG;IACH,SAAwB,WAAW,CAC/B,MAAe,EACf,OAAe,EACf,IAAY,EACZ,MAAoB;QAEpB,IAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;QACtC,IAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAqB,CAAC;QAClE,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC;QACxB,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;YAC3B,IAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAwB,CAAC;YAC/D,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;gBAC9B,IAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAyB,CAAC;gBAChE,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;gBACnB,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC7C,EAAE,CAAC,KAAK,CAAC,KAAK,GAAG,iBAAiB,CAAC,OAAO,CAAC,CAAC;aAC/C;SACJ;QAED,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,IAAA,4BAAkB,EACd,MAAM,EACN;YACI,IAAM,OAAO,GAAG,MAAM,CAAC,kBAAkB,EAAE,CAAC;YAC5C,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,CAAC,eAAe,EAAE;gBAChC,IAAA,4BAAkB,EAAC,MAAM,EAAE,aAAa,CAAC,CAAC;aAC7C;YACD,IAAM,MAAM,GAAG,IAAI,6BAAM,CAAC,KAAK,CAAC,CAAC;YACjC,gCAAgC;YAChC,MAAM,GAAG,MAAM,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC;YAC5C,MAAM,CAAC,WAAW,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;YACjC,MAAM,CAAC,SAAS,EAAE,CAAC;YACnB,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACzB,MAAM,CAAC,QAAQ,CAAC,UAAA,MAAM;gBAClB,OAAA,MAAM,CAAC,MAAM,CAAC,IAAI,+BAAQ,CAAC,KAAK,gBAAqB,CAAC,SAAS,EAAE,CAAC;YAAlE,CAAkE,CACrE,CAAC;QACN,CAAC,EACD,aAAa,CAChB,CAAC;IACN,CAAC;IAzCD,8BAyCC;IAED,SAAS,iBAAiB,CAAC,OAAe;QACtC,IAAI,OAAO,IAAI,CAAC,EAAE;YACd,OAAO,OAAO,CAAC;SAClB;aAAM,IAAI,OAAO,IAAI,CAAC,EAAE;YACrB,OAAO,OAAO,CAAC;SAClB;aAAM;YACH,OAAO,MAAM,CAAC;SACjB;IACL,CAAC","sourcesContent":["import formatUndoSnapshot from '../utils/formatUndoSnapshot';\r\nimport setBackgroundColor from '../format/setBackgroundColor';\r\nimport { Position, VTable } from 'roosterjs-editor-dom';\r\nimport { PositionType } from 'roosterjs-editor-types';\r\nimport type { IEditor, TableFormat } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Insert table into editor at current selection\r\n * @param editor The editor instance\r\n * @param columns Number of columns in table, it also controls the default table cell width:\r\n * if columns &lt;= 4, width = 120px; if columns &lt;= 6, width = 100px; else width = 70px\r\n * @param rows Number of rows in table\r\n * @param format (Optional) The table format. If not passed, the default format will be applied:\r\n * background color: #FFF; border color: #ABABAB\r\n */\r\nexport default function insertTable(\r\n    editor: IEditor,\r\n    columns: number,\r\n    rows: number,\r\n    format?: TableFormat\r\n) {\r\n    const document = editor.getDocument();\r\n    const table = document.createElement('table') as HTMLTableElement;\r\n    table.cellSpacing = '0';\r\n    table.cellPadding = '1';\r\n    for (let i = 0; i < rows; i++) {\r\n        const tr = document.createElement('tr') as HTMLTableRowElement;\r\n        table.appendChild(tr);\r\n        for (let j = 0; j < columns; j++) {\r\n            const td = document.createElement('td') as HTMLTableCellElement;\r\n            tr.appendChild(td);\r\n            td.appendChild(document.createElement('br'));\r\n            td.style.width = getTableCellWidth(columns);\r\n        }\r\n    }\r\n\r\n    editor.focus();\r\n    formatUndoSnapshot(\r\n        editor,\r\n        () => {\r\n            const element = editor.getElementAtCursor();\r\n            if (element?.style.backgroundColor) {\r\n                setBackgroundColor(editor, 'transparent');\r\n            }\r\n            const vtable = new VTable(table);\r\n            // Assign default vertical align\r\n            format = format || { verticalAlign: 'top' };\r\n            vtable.applyFormat(format || {});\r\n            vtable.writeBack();\r\n            editor.insertNode(table);\r\n            editor.runAsync(editor =>\r\n                editor.select(new Position(table, PositionType.Begin).normalize())\r\n            );\r\n        },\r\n        'insertTable'\r\n    );\r\n}\r\n\r\nfunction getTableCellWidth(columns: number): string {\r\n    if (columns <= 4) {\r\n        return '120px';\r\n    } else if (columns <= 6) {\r\n        return '100px';\r\n    } else {\r\n        return '70px';\r\n    }\r\n}\r\n"]}