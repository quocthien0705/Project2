{"version":3,"file":"applyCellShading.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-api/lib/table/applyCellShading.ts"],"names":[],"mappings":";;;IASA;;;;QAII;IACJ,SAAwB,gBAAgB,CAAC,MAAe,EAAE,KAAoC;QAC1F,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,IAAA,4BAAkB,EACd,MAAM,EACN;YACI,IAAM,OAAO,GAAG,MAAM,CAAC,kBAAkB,EAAE,CAAC;YAC5C,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM;gBAClB,IAAI,IAAA,qCAAc,EAAC,MAAM,CAAC,QAAQ,EAAE,sBAAsB,CAAC,EAAE;oBACzD,IAAA,+BAAQ,EACJ,MAAM,CAAC,QAAQ,EACf,KAAK,EACL,IAAI,CAAC,uBAAuB,EAC5B,MAAM,CAAC,UAAU,EAAE,EACnB,IAAI,CAAC,2BAA2B,EAChC,MAAM,CAAC,mBAAmB,EAAE,CAC/B,CAAC;oBACF,IAAM,IAAI,GAAG,IAAA,2CAAoB,EAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBACnD,IAAA,4CAAqB,EAAC,MAAM,CAAC,QAAQ,kDAC9B,IAAI,KACP,eAAe,EAAE,IAAI,IACvB,CAAC;iBACN;YACL,CAAC,CAAC,CAAC;QACP,CAAC,EACD,kBAAkB,CACrB,CAAC;IACN,CAAC;IA1BD,mCA0BC","sourcesContent":["import formatUndoSnapshot from '../utils/formatUndoSnapshot';\nimport type { IEditor, ModeIndependentColor } from 'roosterjs-editor-types';\nimport {\n    getTableCellMetadata,\n    safeInstanceOf,\n    saveTableCellMetadata,\n    setColor,\n} from 'roosterjs-editor-dom';\n\n/**\n * Set background color of cells.\n * @param editor The editor instance\n * @param color One of two options:\n **/\nexport default function applyCellShading(editor: IEditor, color: string | ModeIndependentColor) {\n    editor.focus();\n    formatUndoSnapshot(\n        editor,\n        () => {\n            const regions = editor.getSelectedRegions();\n            regions.forEach(region => {\n                if (safeInstanceOf(region.rootNode, 'HTMLTableCellElement')) {\n                    setColor(\n                        region.rootNode,\n                        color,\n                        true /* isBackgroundColor */,\n                        editor.isDarkMode(),\n                        true /** shouldAdaptFontColor */,\n                        editor.getDarkColorHandler()\n                    );\n                    const meta = getTableCellMetadata(region.rootNode);\n                    saveTableCellMetadata(region.rootNode, {\n                        ...meta,\n                        bgColorOverride: true,\n                    });\n                }\n            });\n        },\n        'applyCellShading'\n    );\n}\n"]}