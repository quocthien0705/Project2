import formatUndoSnapshot from '../utils/formatUndoSnapshot';
import { HtmlSanitizer, moveChildNodes } from 'roosterjs-editor-dom';
/**
 * Set heading level at selection
 * @param editor The editor instance
 * @param level The heading level, can be a number from 0 to 6, in which 1 ~ 6 refers to
 * the HTML heading element &lt;H1&gt; to &lt;H6&gt;, 0 means no heading
 * if passed in param is outside the range, will be rounded to nearest number in the range
 */
export default function setHeadingLevel(editor, level) {
    level = Math.min(Math.max(Math.round(level), 0), 6);
    formatUndoSnapshot(editor, function () {
        editor.focus();
        var wrapped = false;
        editor.queryElements('H1,H2,H3,H4,H5,H6', 1 /* OnSelection */, function (heading) {
            if (!wrapped) {
                editor.getDocument().execCommand("formatBlock" /* FormatBlock */, false, '<DIV>');
                wrapped = true;
            }
            var div = editor.getDocument().createElement('div');
            moveChildNodes(div, heading);
            editor.replaceNode(heading, div);
        });
        if (level > 0) {
            var traverser = editor.getSelectionTraverser();
            var blockElement = traverser === null || traverser === void 0 ? void 0 : traverser.currentBlockElement;
            var sanitizer = new HtmlSanitizer({
                cssStyleCallbacks: {
                    'font-size': function () { return false; },
                },
            });
            while (blockElement) {
                var element = blockElement.collapseToSingleElement();
                sanitizer.sanitize(element);
                blockElement = traverser === null || traverser === void 0 ? void 0 : traverser.getNextBlockElement();
            }
            editor.getDocument().execCommand("formatBlock" /* FormatBlock */, false, "<H" + level + ">");
        }
    }, 'toggleHeader');
}
/**
 * @deprecated Use setHeadingLevel instead
 * Keep this for compatibility only, will be removed in next major release
 */
export var toggleHeader = setHeadingLevel;
//# sourceMappingURL=setHeadingLevel.js.map