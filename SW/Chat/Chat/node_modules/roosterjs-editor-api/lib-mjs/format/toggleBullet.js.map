{"version":3,"file":"toggleBullet.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-api/lib/format/toggleBullet.ts"],"names":[],"mappings":"AAAA,OAAO,cAAc,MAAM,yBAAyB,CAAC;AAKrD;;;;;;;;;GASG;AACH,MAAM,CAAC,OAAO,UAAU,YAAY,CAChC,MAAe,EACf,SAAqD,EACrD,eAAwB;IAExB,cAAc,CACV,MAAM,qBAEN,SAAS,CAAC,iBAAiB,EAC3B,KAAK,CAAC,yBAAyB,EAC/B,SAAS,CAAC,oBAAoB,EAC9B,SAAS,EACT,eAAe,CAClB,CAAC;AACN,CAAC","sourcesContent":["import toggleListType from '../utils/toggleListType';\r\nimport { ListType } from 'roosterjs-editor-types';\r\nimport type { BulletListType, IEditor } from 'roosterjs-editor-types';\r\nimport type { CompatibleBulletListType } from 'roosterjs-editor-types/lib/compatibleTypes';\r\n\r\n/**\r\n * Toggle bullet at selection\r\n * If selection contains bullet in deep level, toggle bullet will decrease the bullet level by one\r\n * If selection contains number list, toggle bullet will convert the number list into bullet list\r\n * If selection contains both bullet/numbering and normal text, the behavior is decided by corresponding\r\n * browser execCommand API\r\n * @param editor The editor instance\r\n * @param listStyle (Optional) the style of the bullet list. If not defined, the style will be set to disc.\r\n * @param apiNameOverride (Optional) Set a new api name, if empty the api name will be 'toggleListType'.\r\n */\r\nexport default function toggleBullet(\r\n    editor: IEditor,\r\n    listStyle?: BulletListType | CompatibleBulletListType,\r\n    apiNameOverride?: string\r\n) {\r\n    toggleListType(\r\n        editor,\r\n        ListType.Unordered,\r\n        undefined /* startNumber */,\r\n        false /* includeSiblingLists */,\r\n        undefined /** orderedStyle  */,\r\n        listStyle,\r\n        apiNameOverride\r\n    );\r\n}\r\n"]}