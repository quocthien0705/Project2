{"version":3,"file":"setFontName.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-api/lib/format/setFontName.ts"],"names":[],"mappings":"AAAA,OAAO,sBAAsB,MAAM,4BAA4B,CAAC;AAGhE;;;;;GAKG;AACH,MAAM,CAAC,OAAO,UAAU,WAAW,CAAC,MAAe,EAAE,QAAgB;IACjE,+GAA+G;IAC/G,gDAAgD;IAChD,sBAAsB,CAClB,MAAM,EACN,aAAa,EACb,UAAC,OAAO,EAAE,WAAW;QACjB,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;IAC3D,CAAC,EACD,aAAa,CAChB,CAAC;AACN,CAAC","sourcesContent":["import applyListItemStyleWrap from '../utils/applyListItemWrap';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Set font name at selection\r\n * @param editor The editor instance\r\n * @param fontName The fontName string, should be a valid CSS font-family style.\r\n * Currently there's no validation to the string, if the passed string is invalid, it won't take affect\r\n */\r\nexport default function setFontName(editor: IEditor, fontName: string) {\r\n    // The browser provided execCommand creates a HTML <font> tag with face attribute. <font> is not HTML5 standard\r\n    // (http://www.w3schools.com/tags/tag_font.asp).\r\n    applyListItemStyleWrap(\r\n        editor,\r\n        'font-family',\r\n        (element, isInnerNode) => {\r\n            element.style.fontFamily = isInnerNode ? '' : fontName;\r\n        },\r\n        'setFontName'\r\n    );\r\n}\r\n"]}