{"version":3,"file":"setTextColor.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-api/lib/format/setTextColor.ts"],"names":[],"mappings":"AAAA,OAAO,sBAAsB,MAAM,4BAA4B,CAAC;AAChE,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAGhD;;;;;;;;;;GAUG;AACH,MAAM,CAAC,OAAO,UAAU,YAAY,CAChC,MAAe,EACf,KAAoC,EACpC,sBAA0D;IAE1D,sBAAsB,CAClB,MAAM,EACN,OAAO,EACP,UAAC,OAAO,EAAE,WAAW;QACjB,IAAI,CAAC,sBAAsB,IAAI,sBAAsB,CAAC,OAAO,CAAC,EAAE;YAC5D,QAAQ,CACJ,OAAO,EACP,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,EACxB,KAAK,CAAC,gBAAgB,EACtB,MAAM,CAAC,UAAU,EAAE,EACnB,KAAK,CAAC,wBAAwB,EAC9B,MAAM,CAAC,mBAAmB,EAAE,CAC/B,CAAC;SACL;IACL,CAAC,EACD,cAAc,CACjB,CAAC;AACN,CAAC","sourcesContent":["import applyListItemStyleWrap from '../utils/applyListItemWrap';\r\nimport { setColor } from 'roosterjs-editor-dom';\r\nimport type { IEditor, ModeIndependentColor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Set text color at selection\r\n * @param editor The editor instance\r\n * @param color One of two options:\r\n * The color string, can be any of the predefined color names (e.g, 'red')\r\n * or hexadecimal color string (e.g, '#FF0000') or rgb value (e.g, 'rgb(255, 0, 0)') supported by browser.\r\n * Currently there's no validation to the string, if the passed string is invalid, it won't take affect\r\n * Alternatively, you can pass a @typedef ModeIndependentColor. If in light mode, the lightModeColor property will be used.\r\n * If in dark mode, the darkModeColor will be used and the lightModeColor will be used when converting back to light mode.\r\n * @param shouldApplyInlineStyle Optional callback function to be invoked to verify if the current element should have the inline Style applied\r\n */\r\nexport default function setTextColor(\r\n    editor: IEditor,\r\n    color: string | ModeIndependentColor,\r\n    shouldApplyInlineStyle?: (element: HTMLElement) => boolean\r\n) {\r\n    applyListItemStyleWrap(\r\n        editor,\r\n        'color',\r\n        (element, isInnerNode) => {\r\n            if (!shouldApplyInlineStyle || shouldApplyInlineStyle(element)) {\r\n                setColor(\r\n                    element,\r\n                    isInnerNode ? '' : color,\r\n                    false /*isBackground*/,\r\n                    editor.isDarkMode(),\r\n                    false /*shouldAdaptFontColor*/,\r\n                    editor.getDarkColorHandler()\r\n                );\r\n            }\r\n        },\r\n        'setTextColor'\r\n    );\r\n}\r\n"]}