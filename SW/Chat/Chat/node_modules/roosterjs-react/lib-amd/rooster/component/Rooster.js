define(["require", "exports", "tslib", "react", "../../common/index", "@fluentui/react/lib/Utilities", "roosterjs-editor-core", "@fluentui/react/lib/Theme"], function (require, exports, tslib_1, React, index_1, Utilities_1, roosterjs_editor_core_1, Theme_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * Main component of react wrapper for roosterjs
     * @param props Properties of this component
     * @returns The react component
     */
    function Rooster(props) {
        var editorDiv = React.useRef(null);
        var editor = React.useRef(null);
        var theme = (0, Theme_1.useTheme)();
        var focusOnInit = props.focusOnInit, editorCreator = props.editorCreator, zoomScale = props.zoomScale, inDarkMode = props.inDarkMode, plugins = props.plugins;
        React.useEffect(function () {
            if (plugins && editorDiv.current) {
                var uiUtilities_1 = (0, index_1.createUIUtilities)(editorDiv.current, theme);
                plugins.forEach(function (plugin) {
                    if (isReactEditorPlugin(plugin)) {
                        plugin.setUIUtilities(uiUtilities_1);
                    }
                });
            }
        }, [theme, editorCreator]);
        React.useEffect(function () {
            var _a;
            if (editorDiv.current) {
                editor.current = (editorCreator || defaultEditorCreator)(editorDiv.current, props);
            }
            if (focusOnInit) {
                (_a = editor.current) === null || _a === void 0 ? void 0 : _a.focus();
            }
            return function () {
                if (editor.current) {
                    editor.current.dispose();
                    editor.current = null;
                }
            };
        }, [editorCreator]);
        React.useEffect(function () {
            var _a;
            (_a = editor.current) === null || _a === void 0 ? void 0 : _a.setDarkModeState(!!inDarkMode);
        }, [inDarkMode]);
        React.useEffect(function () {
            var _a;
            if (zoomScale) {
                (_a = editor.current) === null || _a === void 0 ? void 0 : _a.setZoomScale(zoomScale);
            }
        }, [zoomScale]);
        var divProps = (0, Utilities_1.getNativeProps)(props, Utilities_1.divProperties);
        return React.createElement("div", (0, tslib_1.__assign)({ ref: editorDiv, tabIndex: 0 }, (divProps || {})));
    }
    exports.default = Rooster;
    function defaultEditorCreator(div, options) {
        return new roosterjs_editor_core_1.Editor(div, options);
    }
    function isReactEditorPlugin(plugin) {
        var _a;
        return !!((_a = plugin) === null || _a === void 0 ? void 0 : _a.setUIUtilities);
    }
});
//# sourceMappingURL=Rooster.js.map