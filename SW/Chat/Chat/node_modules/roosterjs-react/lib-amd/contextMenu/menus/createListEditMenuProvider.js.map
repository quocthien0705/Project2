{"version":3,"file":"createListEditMenuProvider.js","sourceRoot":"","sources":["../../../../../packages/roosterjs-react/lib/contextMenu/menus/createListEditMenuProvider.ts"],"names":[],"mappings":";;;IASA,IAAM,uBAAuB,GAAiD;QAC1E,GAAG,EAAE,yBAAyB;QAC9B,eAAe,EAAE,cAAc;QAC/B,OAAO,EAAE,UAAC,CAAC,EAAE,MAAM,EAAE,IAAI;YACrB,IAAM,EAAE,GAAG,MAAM,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAkB,CAAC;YAClE,IAAA,8CAAuB,EAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAC3C,CAAC;KACJ,CAAC;IAEF,IAAM,sBAAsB,GAAiD;QACzE,GAAG,EAAE,wBAAwB;QAC7B,eAAe,EAAE,qBAAqB;QACtC,OAAO,EAAE,UAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW;YAC3C,IAAM,SAAS,GAAG,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAE/C,IAAI,SAAS,EAAE;gBACH,IAAA,IAAI,GAAS,SAAS,KAAlB,EAAE,IAAE,GAAK,SAAS,GAAd,CAAe;gBAC/B,IAAI,aAAW,GAAG,IAAI,CAAC,KAAK,CAAC;gBAE7B,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE;oBAChE,IAAI,KAAK,KAAK,IAAE,EAAE;wBACd,MAAM;qBACT;yBAAM,IAAI,IAAA,qCAAc,EAAC,KAAK,EAAE,eAAe,CAAC,EAAE;wBAC/C,aAAW,IAAI,CAAC,CAAC;qBACpB;iBACJ;gBAED,IAAA,yBAAe,EACX,WAAW,EACX,wBAAwB,EACxB,qBAAqB,EACrB;oBACI,KAAK,EAAE;wBACH,QAAQ,EAAE,yBAAyB;wBACnC,gBAAgB,EAAE,cAAc;wBAChC,SAAS,EAAE,aAAW,CAAC,QAAQ,EAAE;qBACpC;iBACJ,EACD,OAAO,CACV,CAAC,IAAI,CAAC,UAAA,MAAM;oBACT,MAAM,CAAC,KAAK,EAAE,CAAC;oBAEf,IAAI,MAAM,EAAE;wBACR,IAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBAEtC,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,IAAI,aAAW,EAAE;4BACrC,IAAA,8CAAuB,EAAC,MAAM,EAAE,IAAE,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;yBAC3D;qBACJ;gBACL,CAAC,CAAC,CAAC;aACN;QACL,CAAC;KACJ,CAAC;IAEF,SAAS,cAAc,CAAC,MAAe,EAAE,IAAU;QAC/C,IAAM,EAAE,GAAG,MAAM,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAkB,CAAC;QAClE,IAAM,IAAI,GAAG,EAAE,IAAK,MAAM,CAAC,kBAAkB,CAAC,IAAI,EAAE,EAAE,CAAsB,CAAC;QAE7E,OAAO,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,iBAAiB,EAAC,CAAC,CAAC,EAAE,IAAI,MAAA,EAAE,EAAE,IAAA,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACzD,CAAC;IAED;;;OAGG;IACH,SAAwB,0BAA0B,CAC9C,OAAuD;QAEvD,OAAO,IAAA,mCAAyB,EAC5B,UAAU,EACV,CAAC,uBAAuB,EAAE,sBAAsB,CAAC,EACjD,OAAO,EACP,UAAC,MAAM,EAAE,IAAI,IAAK,OAAA,CAAC,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,EAA9B,CAA8B,CACnD,CAAC;IACN,CAAC;IATD,6CASC","sourcesContent":["import createContextMenuProvider from '../utils/createContextMenuProvider';\nimport showInputDialog from '../../inputDialog/utils/showInputDialog';\nimport { safeInstanceOf } from 'roosterjs-editor-dom';\nimport { setOrderedListNumbering } from 'roosterjs-editor-api';\nimport type ContextMenuItem from '../types/ContextMenuItem';\nimport type { EditorPlugin, IEditor } from 'roosterjs-editor-types';\nimport type { ListNumberMenuItemStringKey } from '../types/ContextMenuItemStringKeys';\nimport type { LocalizedStrings } from '../../common/type/LocalizedStrings';\n\nconst ListNumberResetMenuItem: ContextMenuItem<ListNumberMenuItemStringKey> = {\n    key: 'menuNameListNumberReset',\n    unlocalizedText: 'Restart at 1',\n    onClick: (_, editor, node) => {\n        const li = editor.getElementAtCursor('LI', node) as HTMLLIElement;\n        setOrderedListNumbering(editor, li, 1);\n    },\n};\n\nconst ListNumberEditMenuItem: ContextMenuItem<ListNumberMenuItemStringKey> = {\n    key: 'menuNameListNumberEdit',\n    unlocalizedText: 'Set numbering value',\n    onClick: (_, editor, node, strings, uiUtilities) => {\n        const listAndLi = getEditingList(editor, node);\n\n        if (listAndLi) {\n            const { list, li } = listAndLi;\n            let startNumber = list.start;\n\n            for (let child = list.firstChild; child; child = child.nextSibling) {\n                if (child === li) {\n                    break;\n                } else if (safeInstanceOf(child, 'HTMLLIElement')) {\n                    startNumber += 1;\n                }\n            }\n\n            showInputDialog(\n                uiUtilities,\n                'menuNameListNumberEdit',\n                'Set numbering value',\n                {\n                    value: {\n                        labelKey: 'dialogTextSetListNumber',\n                        unlocalizedLabel: 'Set value to',\n                        initValue: startNumber.toString(),\n                    },\n                },\n                strings\n            ).then(values => {\n                editor.focus();\n\n                if (values) {\n                    const result = parseInt(values.value);\n\n                    if (result > 0 && result != startNumber) {\n                        setOrderedListNumbering(editor, li, Math.floor(result));\n                    }\n                }\n            });\n        }\n    },\n};\n\nfunction getEditingList(editor: IEditor, node: Node) {\n    const li = editor.getElementAtCursor('LI', node) as HTMLLIElement;\n    const list = li && (editor.getElementAtCursor('ol', li) as HTMLOListElement);\n\n    return list?.isContentEditable ? { list, li } : null;\n}\n\n/**\n * Create a new instance of ContextMenuProvider to support list number editing functionalities in context menu\n * @returns A new ContextMenuProvider\n */\nexport default function createListEditMenuProvider(\n    strings?: LocalizedStrings<ListNumberMenuItemStringKey>\n): EditorPlugin {\n    return createContextMenuProvider(\n        'listEdit',\n        [ListNumberResetMenuItem, ListNumberEditMenuItem],\n        strings,\n        (editor, node) => !!getEditingList(editor, node)\n    );\n}\n"]}