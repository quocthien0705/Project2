{"version":3,"file":"createContextMenuPlugin.js","sourceRoot":"","sources":["../../../../../packages/roosterjs-react/lib/contextMenu/plugin/createContextMenuPlugin.tsx"],"names":[],"mappings":";;;IAOA,SAAS,cAAc,CAAC,KAAqC;QACzD,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,OAAO,KAAK,CAAC,GAAG,CACZ,UAAA,IAAI;YACA,OAAA,IAAI,IAAI;gBACJ,IAAI,EAAE,GAAG;gBACT,GAAG,EAAE,UAAU,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,QAAQ,EAAE;aAC9C;QAHD,CAGC,CACR,CAAC;IACN,CAAC;IAED;QAAgC,kDAAgC;QAI5D;YAAA,YACI,kBAAM;gBACF,MAAM,EAAE,UAAC,SAAS,EAAE,KAAK,EAAE,SAAS;oBAChC,IAAM,eAAe,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;oBAE9C,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC5B,KAAI,CAAC,QAAQ,GAAG,IAAA,2CAAoB,EAChC,KAAI,CAAC,WAAW,EAChB,oBAAC,+BAAc,IACX,MAAM,EAAE,SAAS,EACjB,SAAS,EAAE,SAAS,EACpB,KAAK,EAAE,eAAe,GACxB,CACL,CAAC;qBACL;gBACL,CAAC;gBACD,OAAO,EAAE,UAAA,CAAC;;oBACN,MAAA,KAAI,CAAC,QAAQ,+CAAb,KAAI,CAAa,CAAC;oBAClB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACzB,CAAC;aACJ,CAAC,SACL;YAxBO,iBAAW,GAAuB,IAAI,CAAC;YACvC,cAAQ,GAAwB,IAAI,CAAC;;QAuB7C,CAAC;QAED,0CAAc,GAAd,UAAe,WAAwB;YACnC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QACnC,CAAC;QACL,wBAAC;IAAD,CAAC,AA9BD,CAAgC,sCAAW,GA8B1C;IAED;;OAEG;IACH,SAAwB,uBAAuB;QAC3C,OAAO,IAAI,iBAAiB,EAAE,CAAC;IACnC,CAAC;IAFD,0CAEC","sourcesContent":["import * as React from 'react';\nimport { ContextMenu } from 'roosterjs-editor-plugins';\nimport { ContextualMenu } from '@fluentui/react/lib/ContextualMenu';\nimport { renderReactComponent } from '../../common/utils/renderReactComponent';\nimport type { IContextualMenuItem } from '@fluentui/react/lib/ContextualMenu';\nimport type { ReactEditorPlugin, UIUtilities } from '../../common/index';\n\nfunction normalizeItems(items: (IContextualMenuItem | null)[]) {\n    let dividerKey = 0;\n    return items.map(\n        item =>\n            item || {\n                name: '-',\n                key: 'divider_' + (dividerKey++).toString(),\n            }\n    );\n}\n\nclass ContextMenuPlugin extends ContextMenu<IContextualMenuItem> implements ReactEditorPlugin {\n    private uiUtilities: UIUtilities | null = null;\n    private disposer: (() => void) | null = null;\n\n    constructor() {\n        super({\n            render: (container, items, onDismiss) => {\n                const normalizedITems = normalizeItems(items);\n\n                if (normalizedITems.length > 0) {\n                    this.disposer = renderReactComponent(\n                        this.uiUtilities,\n                        <ContextualMenu\n                            target={container}\n                            onDismiss={onDismiss}\n                            items={normalizedITems}\n                        />\n                    );\n                }\n            },\n            dismiss: _ => {\n                this.disposer?.();\n                this.disposer = null;\n            },\n        });\n    }\n\n    setUIUtilities(uiUtilities: UIUtilities) {\n        this.uiUtilities = uiUtilities;\n    }\n}\n\n/**\n * Create a new instance of ContextMenu plugin with context menu implementation based on FluentUI.\n */\nexport default function createContextMenuPlugin(): ContextMenu<IContextualMenuItem> {\n    return new ContextMenuPlugin();\n}\n"]}