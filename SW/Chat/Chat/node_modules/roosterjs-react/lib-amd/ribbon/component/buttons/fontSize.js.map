{"version":3,"file":"fontSize.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-react/lib/ribbon/component/buttons/fontSize.ts"],"names":[],"mappings":";;;;IAIA;;;OAGG;IACU,QAAA,QAAQ,GAA0C;QAC3D,GAAG,EAAE,oBAAoB;QACzB,eAAe,EAAE,WAAW;QAC5B,QAAQ,EAAE,UAAU;QACpB,YAAY,EAAE;YACV,KAAK,EAAE,iCAAU,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,IAAI;gBAC/B,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACnC,OAAO,GAAG,CAAC;YACf,CAAC,EAA0B,EAAE,CAAC;YAC9B,kBAAkB,EAAE,UAAA,WAAW,YAAI,OAAA,MAAA,WAAW,CAAC,QAAQ,mCAAI,IAAI,CAAA,EAAA;YAC/D,gBAAgB,EAAE,IAAI;SACzB;QACD,OAAO,EAAE,UAAC,MAAM,EAAE,IAAI;YAClB,IAAA,kCAAW,EAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC9B,CAAC;KACJ,CAAC","sourcesContent":["import { FONT_SIZES, setFontSize } from 'roosterjs-editor-api';\nimport type RibbonButton from '../../type/RibbonButton';\nimport type { FontSizeButtonStringKey } from '../../type/RibbonButtonStringKeys';\n\n/**\n * @internal\n * \"Font Size\" button on the format ribbon\n */\nexport const fontSize: RibbonButton<FontSizeButtonStringKey> = {\n    key: 'buttonNameFontSize',\n    unlocalizedText: 'Font size',\n    iconName: 'FontSize',\n    dropDownMenu: {\n        items: FONT_SIZES.reduce((map, size) => {\n            map[size + 'pt'] = size.toString();\n            return map;\n        }, <Record<string, string>>{}),\n        getSelectedItemKey: formatState => formatState.fontSize ?? null,\n        allowLivePreview: true,\n    },\n    onClick: (editor, size) => {\n        setFontSize(editor, size);\n    },\n};\n"]}