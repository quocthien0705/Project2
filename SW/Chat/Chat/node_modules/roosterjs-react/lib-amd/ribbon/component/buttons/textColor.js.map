{"version":3,"file":"textColor.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-react/lib/ribbon/component/buttons/textColor.ts"],"names":[],"mappings":";;;;IAcA,IAAM,GAAG,GAA0B,qBAAqB,CAAC;IAEzD;;;OAGG;IACU,QAAA,SAAS,GAA2C;QAC7D,YAAY,EAAE;YACV,KAAK,EAAE,mCAAsB;YAC7B,aAAa,EAAE,IAAA,yDAA2B,GAAE;YAC5C,gBAAgB,EAAE,IAAI;YACtB,UAAU,EAAE,UAAC,IAAI,EAAE,OAAO,IAAK,OAAA,IAAA,qCAAiB,EAAC,IAAI,EAAE,uBAAU,EAAE,OAAO,CAAC,EAA5C,CAA4C;YAC3E,2BAA2B,EAAE;gBACzB,SAAS,EAAE,IAAA,8DAAgC,GAAE;aAChD;SACJ;QACD,GAAG,EAAE,GAAG;QACR,eAAe,EAAE,YAAY;QAC7B,QAAQ,EAAE,WAAW;QACrB,OAAO,EAAE,UAAC,MAAM,EAAE,GAAG;YACjB,uEAAuE;YACvE,IAAI,GAAG,IAAI,GAAG,EAAE;gBACZ,IAAA,mCAAY,EAAC,MAAM,EAAE,IAAA,8BAAiB,EAAC,GAAG,CAAC,CAAC,CAAC;aAChD;QACL,CAAC;KACJ,CAAC","sourcesContent":["import { renderColorPicker } from '../../../colorPicker/component/renderColorPicker';\nimport { setTextColor } from 'roosterjs-editor-api';\nimport type RibbonButton from '../../type/RibbonButton';\nimport type { TextColorButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport {\n    getTextColorValue,\n    TextColorDropDownItems,\n    TextColors,\n} from '../../../colorPicker/utils/textColors';\nimport {\n    getColorPickerContainerClassName,\n    getColorPickerItemClassName,\n} from '../../../colorPicker/utils/getClassNamesForColorPicker';\n\nconst Key: 'buttonNameTextColor' = 'buttonNameTextColor';\n\n/**\n * @internal\n * \"Text color\" button on the format ribbon\n */\nexport const textColor: RibbonButton<TextColorButtonStringKey> = {\n    dropDownMenu: {\n        items: TextColorDropDownItems,\n        itemClassName: getColorPickerItemClassName(),\n        allowLivePreview: true,\n        itemRender: (item, onClick) => renderColorPicker(item, TextColors, onClick),\n        commandBarSubMenuProperties: {\n            className: getColorPickerContainerClassName(),\n        },\n    },\n    key: Key,\n    unlocalizedText: 'Text color',\n    iconName: 'FontColor',\n    onClick: (editor, key) => {\n        // This check will always be true, add it here just to satisfy compiler\n        if (key != Key) {\n            setTextColor(editor, getTextColorValue(key));\n        }\n    },\n};\n"]}