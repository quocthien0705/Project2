define(["require", "exports", "../../../colorPicker/component/renderColorPicker", "roosterjs-editor-api", "../../../colorPicker/utils/textColors", "../../../colorPicker/utils/getClassNamesForColorPicker"], function (require, exports, renderColorPicker_1, roosterjs_editor_api_1, textColors_1, getClassNamesForColorPicker_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.textColor = void 0;
    var Key = 'buttonNameTextColor';
    /**
     * @internal
     * "Text color" button on the format ribbon
     */
    exports.textColor = {
        dropDownMenu: {
            items: textColors_1.TextColorDropDownItems,
            itemClassName: (0, getClassNamesForColorPicker_1.getColorPickerItemClassName)(),
            allowLivePreview: true,
            itemRender: function (item, onClick) { return (0, renderColorPicker_1.renderColorPicker)(item, textColors_1.TextColors, onClick); },
            commandBarSubMenuProperties: {
                className: (0, getClassNamesForColorPicker_1.getColorPickerContainerClassName)(),
            },
        },
        key: Key,
        unlocalizedText: 'Text color',
        iconName: 'FontColor',
        onClick: function (editor, key) {
            // This check will always be true, add it here just to satisfy compiler
            if (key != Key) {
                (0, roosterjs_editor_api_1.setTextColor)(editor, (0, textColors_1.getTextColorValue)(key));
            }
        },
    };
});
//# sourceMappingURL=textColor.js.map