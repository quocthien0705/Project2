{"version":3,"file":"searchEmojis.js","sourceRoot":"","sources":["../../../../../packages/roosterjs-react/lib/emoji/utils/searchEmojis.ts"],"names":[],"mappings":";;;;IAGA;;OAEG;IACH,SAAgB,YAAY,CAAC,MAAc,EAAE,OAA+B;QACxE,IAAM,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;QAC5C,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;QAC9B,IAAM,SAAS,GAAY,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAChE,IAAM,YAAY,GAAY,EAAE,CAAC;QACjC,IAAM,aAAa,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAC3E,IAAA,wBAAY,EAAC,UAAA,KAAK;YACd,IAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,QAAQ,IAAI,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;YACnE,IAAM,kBAAkB,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,QAAQ,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YACpF,IAAM,KAAK,GAAG,kBAAkB,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YACxD,IAAI,KAAK,IAAI,CAAC,EAAE;gBACZ,CAAC,kBAAkB,CAAC,KAAK,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,GAAG;oBACpD,CAAC,CAAC,SAAS;oBACX,CAAC,CAAC,YAAY,CACjB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACjB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,OAAO,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;IApBD,oCAoBC;IAED,SAAS,aAAa,CAAC,MAAc;QACjC,IAAI,MAAM,GAAiB,IAAI,CAAC;QAChC,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,CAAC;QAC5B,IAAA,wBAAY,EAAC,UAAC,KAAY;YACtB,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBACrE,MAAM,GAAG,KAAK,CAAC;gBACf,OAAO,KAAK,CAAC;aAChB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAClB,CAAC","sourcesContent":["import { forEachEmoji } from './emojiList';\nimport type { Emoji } from '../type/Emoji';\n\n/**\n * @internal\n */\nexport function searchEmojis(search: string, strings: Record<string, string>): Emoji[] {\n    const shortcutMatch = matchShortcut(search);\n    search = search.toLowerCase();\n    const fullMatch: Emoji[] = shortcutMatch ? [shortcutMatch] : [];\n    const partialMatch: Emoji[] = [];\n    const partialSearch = ' ' + (search[0] == ':' ? search.substr(1) : search);\n    forEachEmoji(emoji => {\n        const keywords = (emoji.keywords && strings[emoji.keywords]) || '';\n        const searchableKeywords = emoji.keywords ? ' ' + keywords.toLowerCase() + ' ' : '';\n        const index = searchableKeywords.indexOf(partialSearch);\n        if (index >= 0) {\n            (searchableKeywords[index + partialSearch.length] == ' '\n                ? fullMatch\n                : partialMatch\n            ).push(emoji);\n        }\n        return true;\n    });\n\n    return fullMatch.concat(partialMatch);\n}\n\nfunction matchShortcut(search: string): Emoji | null {\n    let result: Emoji | null = null;\n    search = ' ' + search + ' ';\n    forEachEmoji((emoji: Emoji) => {\n        if (emoji.shortcut && (' ' + emoji.shortcut + ' ').indexOf(search) >= 0) {\n            result = emoji;\n            return false;\n        }\n        return true;\n    });\n    return result;\n}\n"]}