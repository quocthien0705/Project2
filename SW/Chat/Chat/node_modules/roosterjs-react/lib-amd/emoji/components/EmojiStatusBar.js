define(["require", "exports", "react", "@fluentui/react/lib/Tooltip"], function (require, exports, React, Tooltip_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var NO_SUGGESTIONS = 'emjDNoSuggetions';
    /**
     * @internal
     * Emoji status bar component
     */
    function EmojiStatusBar(props) {
        var emoji = props.emoji, strings = props.strings, hasResult = props.hasResult, classNames = props.classNames;
        if (!hasResult) {
            var noResultDescription = strings[NO_SUGGESTIONS];
            return (React.createElement("div", { className: classNames.statusBar },
                React.createElement("div", { style: { display: 'none' }, "aria-live": "polite" }, noResultDescription),
                React.createElement("div", { className: classNames.statusBarNoResultDetailsContainer },
                    React.createElement(Tooltip_1.TooltipHost, { content: noResultDescription, overflowMode: Tooltip_1.TooltipOverflowMode.Parent },
                        React.createElement("span", { role: "alert" }, noResultDescription)))));
        }
        var icon = emoji ? emoji.codePoint : '';
        var description = (emoji === null || emoji === void 0 ? void 0 : emoji.description) ? strings[emoji.description] : '';
        return (React.createElement("div", { className: classNames.statusBar },
            React.createElement("i", { className: classNames.statusBarIcon, role: "presentation", "aria-hidden": "true" }, icon),
            React.createElement("div", { className: classNames.statusBarDetailsContainer },
                React.createElement("div", { className: classNames.statusBarDetails },
                    React.createElement(Tooltip_1.TooltipHost, { content: description, overflowMode: Tooltip_1.TooltipOverflowMode.Parent }, description)))));
    }
    exports.default = EmojiStatusBar;
});
//# sourceMappingURL=EmojiStatusBar.js.map