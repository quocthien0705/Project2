import * as React from 'react';
import { EmojiFamilyKeys } from '../utils/emojiList';
import type { EmojiIconProps } from './EmojiIcon';
import type { EmojiNavBarProps } from './EmojiNavBar';
import type { EmojiStatusBarProps } from './EmojiStatusBar';
import type { Emoji } from '../type/Emoji';
import type { EmojiStringKeys } from '../type/EmojiStringKeys';
import type { LocalizedStrings } from '../../common/index';
/**
 * @internal
 * Types of emoji pane size
 */
export declare const enum EmojiPaneMode {
    Quick = 0,
    Partial = 1,
    Full = 2
}
/**
 * @internal
 * Types of emoji Navigation direction
 */
export declare const enum EmojiPaneNavigateDirection {
    Horizontal = 0,
    Vertical = 1
}
/**
 * @internal
 * Emoji Pane data
 */
export interface EmojiPaneState {
    index: number;
    mode: EmojiPaneMode;
    currentEmojiList: Emoji[];
    currentFamily: EmojiFamilyKeys;
    search: string;
    searchInBox: string;
}
/**
 * @internal
 * Emoji Pane customizable data
 */
export interface EmojiPaneProps {
    searchDisabled?: boolean;
    hideStatusBar?: boolean;
    navBarProps?: Partial<EmojiNavBarProps>;
    statusBarProps?: Partial<EmojiStatusBarProps>;
    emojiIconProps?: Partial<EmojiIconProps>;
    searchBoxString?: LocalizedStrings<EmojiStringKeys>;
    onSelect: (emoji: Emoji, wordBeforeCursor: string) => void;
    baseId: number;
    strings: Record<string, string>;
}
/**
 * @internal
 * Emoji pane component functions
 */
export interface EmojiPane {
    navigate: (change: number, direction?: EmojiPaneNavigateDirection) => number;
    getEmojiElementIdByIndex: (index: number) => string | null;
    getSelectedEmoji: () => Emoji;
    showFullPicker: (fullSearchText: string) => void;
    setSearch: (value: string) => void;
    normalizeSearchText: (text: string, colonIncluded: boolean) => string;
    getSearchResult: (searchValue: string, mode: EmojiPaneMode) => Emoji[];
    getEmojiIconId: (emoji: Emoji) => string;
}
/**
 * @internal
 * Emoji pane component
 */
export declare function showEmojiPane(onSelect: (emoji: Emoji, wordBeforeCursor: string) => void, strings: Record<string, string>, paneRef: React.RefObject<EmojiPane>, baseId: number, searchBoxString?: LocalizedStrings<EmojiStringKeys>): JSX.Element;
