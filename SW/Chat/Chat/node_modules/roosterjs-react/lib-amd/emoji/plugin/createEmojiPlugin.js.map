{"version":3,"file":"createEmojiPlugin.js","sourceRoot":"","sources":["../../../../../packages/roosterjs-react/lib/emoji/plugin/createEmojiPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport showEmojiCallout from '../components/showEmojiCallout';\nimport { isModifierKey } from 'roosterjs-editor-dom';\nimport { KeyCodes } from '@fluentui/react/lib/Utilities';\nimport { MoreEmoji } from '../utils/emojiList';\nimport { replaceWithNode } from 'roosterjs-editor-api';\nimport type { EmojiICallout } from '../components/showEmojiCallout';\nimport type { Emoji } from '../type/Emoji';\nimport type { EmojiPane } from '../components/EmojiPane';\nimport type { EmojiStringKeys } from '../type/EmojiStringKeys';\nimport type { LocalizedStrings, ReactEditorPlugin, UIUtilities } from '../../common/index';\nimport type {\n    IEditor,\n    PluginDomEvent,\n    PluginEvent,\n    PluginKeyboardEvent,\n    PluginKeyDownEvent,\n} from 'roosterjs-editor-types';\nimport { PluginEventType, PositionType } from 'roosterjs-editor-types';\nimport {\n    EmojiDescriptionStrings,\n    EmojiFamilyStrings,\n    EmojiKeywordStrings,\n} from '../type/EmojiStrings';\n\nconst KEYCODE_COLON = 186;\nconst KEYCODE_COLON_FIREFOX = 59;\n\n// Regex looks for an emoji right before the : to allow contextual search immediately following an emoji\n// MATCHES: 0: ðŸ˜ƒ:r\n//          1: ðŸ˜ƒ\n//          2: :r\n\nconst EMOJI_BEFORE_COLON_REGEX = /([\\u0023-\\u0039][\\u20e3]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u00a9-\\u00ae]|[\\u2122-\\u3299])*([:;][^:]*)/;\n\nclass EmojiPlugin implements ReactEditorPlugin {\n    private editor: IEditor | null = null;\n    private eventHandledOnKeyDown: boolean = false;\n    private canUndoEmoji: boolean = false;\n    private isSuggesting: boolean = false;\n    private paneRef = React.createRef<EmojiPane>();\n    private timer: number | null = null;\n    private uiUtilities: UIUtilities | null = null;\n    private strings: Record<string, string>;\n    private emojiCalloutRef = React.createRef<EmojiICallout>();\n    private baseId = 0;\n\n    constructor(private searchBoxStrings?: LocalizedStrings<EmojiStringKeys>) {\n        this.strings = {\n            ...EmojiDescriptionStrings,\n            ...EmojiKeywordStrings,\n            ...EmojiFamilyStrings,\n        };\n    }\n\n    setUIUtilities(uiUtilities: UIUtilities) {\n        this.uiUtilities = uiUtilities;\n    }\n\n    public getName() {\n        return 'Emoji';\n    }\n\n    public dispose() {\n        this.setIsSuggesting(false);\n        this.emojiCalloutRef.current?.dismiss();\n        this.editor = null;\n        this.baseId = 0;\n    }\n\n    public initialize(editor: IEditor): void {\n        this.editor = editor;\n    }\n\n    public onPluginEvent(event: PluginEvent): void {\n        if (event.eventType === PluginEventType.KeyDown) {\n            this.eventHandledOnKeyDown = false;\n            if (this.isSuggesting) {\n                this.onKeyDownSuggestingDomEvent(event);\n            } else if (event.rawEvent.which === KeyCodes.backspace && this.canUndoEmoji) {\n                //TODO: 1051\n                // If KeyDown is backspace and canUndoEmoji, call editor undo\n                this.editor!.undo();\n                this.handleEventOnKeyDown(event);\n                this.canUndoEmoji = false;\n            }\n        } else if (event.eventType === PluginEventType.KeyUp && !isModifierKey(event.rawEvent)) {\n            if (this.isSuggesting) {\n                this.onKeyUpSuggestingDomEvent(event);\n            } else {\n                this.onKeyUpDomEvent(event);\n            }\n        } else if (event.eventType === PluginEventType.MouseUp) {\n            //TODO: 1052\n            // If MouseUp, the emoji cannot be undone\n            this.canUndoEmoji = false;\n            this.setIsSuggesting(false);\n        }\n    }\n\n    /**\n     * On KeyDown suggesting DOM event\n     * Try to insert emoji is possible\n     * Intercept arrow keys to move selection if popup is shown\n     */\n    private onKeyDownSuggestingDomEvent(event: PluginKeyDownEvent): void {\n        // If key is enter, try insert emoji at selection\n        // If key is space and selection is shortcut, try insert emoji\n\n        const wordBeforeCursor = this.getWordBeforeCursor(event);\n        switch (event.rawEvent.which) {\n            case KeyCodes.enter:\n                const selectedEmoji = this.paneRef.current?.getSelectedEmoji();\n                // check if selection is on the \"...\" and show full picker if so, otherwise try to apply emoji\n                if (\n                    !selectedEmoji ||\n                    !wordBeforeCursor ||\n                    this.tryShowFullPicker(event, selectedEmoji, wordBeforeCursor)\n                ) {\n                    break;\n                } else {\n                    this.insertEmoji(selectedEmoji, wordBeforeCursor);\n                    this.handleEventOnKeyDown(event);\n                }\n\n                break;\n            case KeyCodes.left:\n            case KeyCodes.right:\n                this.paneRef.current?.navigate(event.rawEvent.which === KeyCodes.left ? -1 : 1);\n                this.handleEventOnKeyDown(event);\n                break;\n            case KeyCodes.escape:\n                this.setIsSuggesting(false);\n                this.handleEventOnKeyDown(event);\n        }\n    }\n\n    private tryShowFullPicker(\n        event: PluginDomEvent,\n        selectedEmoji: Emoji,\n        wordBeforeCursor: string\n    ): boolean {\n        if (selectedEmoji !== MoreEmoji) {\n            return false;\n        }\n\n        this.handleEventOnKeyDown(event);\n        this.paneRef.current?.showFullPicker(wordBeforeCursor);\n        return true;\n    }\n\n    /**\n     * On KeyUp suggesting DOM event\n     * If key is character, update search term\n     * Otherwise set isSuggesting to false\n     */\n    private onKeyUpSuggestingDomEvent(event: PluginKeyboardEvent): void {\n        if (this.eventHandledOnKeyDown) {\n            return;\n        }\n        // If this is a character key or backspace\n        // Clear the timer as we will either queue a new timer or stop suggesting\n        if (\n            this.timer &&\n            ((event.rawEvent.key.length === 1 && event.rawEvent.which !== KeyCodes.space) ||\n                event.rawEvent.which === KeyCodes.backspace)\n        ) {\n            this.editor?.getDocument().defaultView?.clearTimeout(this.timer);\n            this.timer = null;\n            this.emojiCalloutRef.current?.dismiss();\n        }\n\n        const wordBeforeCursor = this.getWordBeforeCursor(event);\n        if (wordBeforeCursor) {\n            if (this.paneRef) {\n                this.paneRef.current?.setSearch(wordBeforeCursor);\n            } else {\n                this.setIsSuggesting(false);\n            }\n        } else {\n            this.setIsSuggesting(false);\n        }\n    }\n\n    private onKeyUpDomEvent(event: PluginKeyboardEvent): void {\n        if (this.eventHandledOnKeyDown) {\n            return;\n        }\n        const wordBeforeCursor = this.getWordBeforeCursor(event);\n        if (\n            (event.rawEvent.which === KEYCODE_COLON ||\n                event.rawEvent.which === KEYCODE_COLON_FIREFOX) &&\n            wordBeforeCursor === ':'\n        ) {\n            this.setIsSuggesting(true);\n        }\n    }\n\n    private getCallout() {\n        const rangeNode = this.editor?.getElementAtCursor();\n        const rect = rangeNode?.getBoundingClientRect();\n        if (this.uiUtilities && rect) {\n            this.baseId++;\n\n            showEmojiCallout(\n                this.uiUtilities,\n                rect,\n                this.strings,\n                this.onSelectFromPane,\n                this.paneRef,\n                this.emojiCalloutRef,\n                this.onHideCallout,\n                this.baseId,\n                this.searchBoxStrings\n            );\n        }\n    }\n\n    private onHideCallout = () => this.setIsSuggesting(false);\n\n    private onSelectFromPane = (emoji: Emoji, wordBeforeCursor: string): void => {\n        if (emoji === MoreEmoji) {\n            this.paneRef.current?.showFullPicker(wordBeforeCursor);\n            return;\n        }\n\n        this.insertEmoji(emoji, wordBeforeCursor);\n    };\n\n    private setIsSuggesting(isSuggesting: boolean): void {\n        if (this.isSuggesting === isSuggesting) {\n            return;\n        }\n\n        this.isSuggesting = isSuggesting;\n        if (this.isSuggesting) {\n            this.getCallout();\n        } else if (this.emojiCalloutRef) {\n            this.emojiCalloutRef.current?.dismiss();\n        }\n    }\n\n    private insertEmoji(emoji: Emoji, wordBeforeCursor: string) {\n        if (!wordBeforeCursor || !this.editor || !emoji.codePoint) {\n            return;\n        }\n        const node = this.editor.getDocument().createElement('span');\n        node.innerText = emoji.codePoint;\n\n        this.editor.addUndoSnapshot(\n            () => {\n                if (this.editor) {\n                    replaceWithNode(this.editor, wordBeforeCursor, node, true /*exactMatch*/);\n                    this.editor.select(node, PositionType.After);\n                }\n            },\n            undefined /*changeSource*/,\n            true /*canUndoByBackspace*/\n        );\n\n        this.emojiCalloutRef.current?.dismiss();\n    }\n\n    private getWordBeforeCursor(event: PluginEvent): string | null {\n        const cursorData = this.editor?.getContentSearcherOfCursor(event);\n        const wordBeforeCursor = cursorData ? cursorData.getWordBefore() : null;\n        const matches = wordBeforeCursor ? EMOJI_BEFORE_COLON_REGEX.exec(wordBeforeCursor) : null;\n        return matches && matches.length > 2 && matches[0] === wordBeforeCursor ? matches[2] : null;\n    }\n\n    private handleEventOnKeyDown(event: PluginDomEvent): void {\n        this.eventHandledOnKeyDown = true;\n        event.rawEvent.preventDefault();\n        event.rawEvent.stopImmediatePropagation();\n    }\n}\n\n/**\n * Create a new instance of Emoji plugin with FluentUI components.\n */\nexport default function createEmojiPlugin(\n    searchBoxStrings?: LocalizedStrings<EmojiStringKeys>\n): ReactEditorPlugin {\n    return new EmojiPlugin(searchBoxStrings);\n}\n"]}