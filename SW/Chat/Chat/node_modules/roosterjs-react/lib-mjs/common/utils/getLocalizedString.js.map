{"version":3,"file":"getLocalizedString.js","sourceRoot":"","sources":["../../../../../packages/roosterjs-react/lib/common/utils/getLocalizedString.ts"],"names":[],"mappings":"AAEA;;;;;;GAMG;AACH,MAAM,CAAC,OAAO,UAAU,kBAAkB,CACtC,OAAwC,EACxC,GAAM,EACN,aAAgB;IAEhB,IAAM,GAAG,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAG,GAAG,CAAC,CAAC;IAE3B,IAAI,OAAO,GAAG,IAAI,UAAU,EAAE;QAC1B,OAAO,GAAG,EAAE,CAAC;KAChB;SAAM,IAAI,OAAO,GAAG,IAAI,QAAQ,EAAE;QAC/B,OAAO,GAAG,CAAC;KACd;SAAM;QACH,OAAO,aAAa,CAAC;KACxB;AACL,CAAC","sourcesContent":["import type { LocalizedStrings } from '../type/LocalizedStrings';\n\n/**\n * Get a localized string\n * @param strings The LocalizedStrings map\n * @param key Key of the string\n * @param defaultString Default unlocalized string, will be used if strings is not specified or the give key doesn't exist in strings\n * @returns A localized string from the string map, or defaultString\n */\nexport default function getLocalizedString<T extends string, R extends string | null | undefined>(\n    strings: LocalizedStrings<T> | undefined,\n    key: T,\n    defaultString: R\n) {\n    const str = strings?.[key];\n\n    if (typeof str == 'function') {\n        return str();\n    } else if (typeof str == 'string') {\n        return str;\n    } else {\n        return defaultString;\n    }\n}\n"]}