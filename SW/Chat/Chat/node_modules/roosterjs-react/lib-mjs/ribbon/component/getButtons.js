var _a;
import { alignCenter } from './buttons/alignCenter';
import { alignLeft } from './buttons/alignLeft';
import { alignRight } from './buttons/alignRight';
import { backgroundColor } from './buttons/backgroundColor';
import { bold } from './buttons/bold';
import { bulletedList } from './buttons/bulletedList';
import { clearFormat } from './buttons/clearFormat';
import { code } from './buttons/code';
import { decreaseFontSize } from './buttons/decreaseFontSize';
import { decreaseIndent } from './buttons/decreaseIndent';
import { font } from './buttons/font';
import { fontSize } from './buttons/fontSize';
import { heading } from './buttons/heading';
import { increaseFontSize } from './buttons/increaseFontSize';
import { increaseIndent } from './buttons/increaseIndent';
import { insertImage } from './buttons/insertImage';
import { insertLink } from './buttons/insertLink';
import { insertTable } from './buttons/insertTable';
import { italic } from './buttons/italic';
import { KnownRibbonButtonKey } from '../type/KnownRibbonButton';
import { ltr } from './buttons/ltr';
import { numberedList } from './buttons/numberedList';
import { quote } from './buttons/quote';
import { redo } from './buttons/redo';
import { removeLink } from './buttons/removeLink';
import { rtl } from './buttons/rtl';
import { strikethrough } from './buttons/strikethrough';
import { subscript } from './buttons/subscript';
import { superscript } from './buttons/superscript';
import { textColor } from './buttons/textColor';
import { underline } from './buttons/underline';
import { undo } from './buttons/undo';
var KnownRibbonButtons = (_a = {},
    _a[KnownRibbonButtonKey.Bold] = bold,
    _a[KnownRibbonButtonKey.Italic] = italic,
    _a[KnownRibbonButtonKey.Underline] = underline,
    _a[KnownRibbonButtonKey.Font] = font,
    _a[KnownRibbonButtonKey.FontSize] = fontSize,
    _a[KnownRibbonButtonKey.IncreaseFontSize] = increaseFontSize,
    _a[KnownRibbonButtonKey.DecreaseFontSize] = decreaseFontSize,
    _a[KnownRibbonButtonKey.TextColor] = textColor,
    _a[KnownRibbonButtonKey.BackgroundColor] = backgroundColor,
    _a[KnownRibbonButtonKey.BulletedList] = bulletedList,
    _a[KnownRibbonButtonKey.NumberedList] = numberedList,
    _a[KnownRibbonButtonKey.DecreaseIndent] = decreaseIndent,
    _a[KnownRibbonButtonKey.IncreaseIndent] = increaseIndent,
    _a[KnownRibbonButtonKey.Quote] = quote,
    _a[KnownRibbonButtonKey.AlignLeft] = alignLeft,
    _a[KnownRibbonButtonKey.AlignCenter] = alignCenter,
    _a[KnownRibbonButtonKey.AlignRight] = alignRight,
    _a[KnownRibbonButtonKey.InsertLink] = insertLink,
    _a[KnownRibbonButtonKey.RemoveLink] = removeLink,
    _a[KnownRibbonButtonKey.InsertTable] = insertTable,
    _a[KnownRibbonButtonKey.InsertImage] = insertImage,
    _a[KnownRibbonButtonKey.Superscript] = superscript,
    _a[KnownRibbonButtonKey.Subscript] = subscript,
    _a[KnownRibbonButtonKey.Strikethrough] = strikethrough,
    _a[KnownRibbonButtonKey.Header] = heading,
    _a[KnownRibbonButtonKey.Heading] = heading,
    _a[KnownRibbonButtonKey.Code] = code,
    _a[KnownRibbonButtonKey.Ltr] = ltr,
    _a[KnownRibbonButtonKey.Rtl] = rtl,
    _a[KnownRibbonButtonKey.Undo] = undo,
    _a[KnownRibbonButtonKey.Redo] = redo,
    _a[KnownRibbonButtonKey.ClearFormat] = clearFormat,
    _a);
/**
 * An array of keys of all known ribbon buttons
 */
export var AllButtonKeys = [
    KnownRibbonButtonKey.Bold,
    KnownRibbonButtonKey.Italic,
    KnownRibbonButtonKey.Underline,
    KnownRibbonButtonKey.Font,
    KnownRibbonButtonKey.FontSize,
    KnownRibbonButtonKey.IncreaseFontSize,
    KnownRibbonButtonKey.DecreaseFontSize,
    KnownRibbonButtonKey.TextColor,
    KnownRibbonButtonKey.BackgroundColor,
    KnownRibbonButtonKey.BulletedList,
    KnownRibbonButtonKey.NumberedList,
    KnownRibbonButtonKey.DecreaseIndent,
    KnownRibbonButtonKey.IncreaseIndent,
    KnownRibbonButtonKey.Quote,
    KnownRibbonButtonKey.AlignLeft,
    KnownRibbonButtonKey.AlignCenter,
    KnownRibbonButtonKey.AlignRight,
    KnownRibbonButtonKey.InsertLink,
    KnownRibbonButtonKey.RemoveLink,
    KnownRibbonButtonKey.InsertTable,
    KnownRibbonButtonKey.InsertImage,
    KnownRibbonButtonKey.Superscript,
    KnownRibbonButtonKey.Subscript,
    KnownRibbonButtonKey.Strikethrough,
    KnownRibbonButtonKey.Heading,
    KnownRibbonButtonKey.Code,
    KnownRibbonButtonKey.Ltr,
    KnownRibbonButtonKey.Rtl,
    KnownRibbonButtonKey.Undo,
    KnownRibbonButtonKey.Redo,
    KnownRibbonButtonKey.ClearFormat,
];
/**
 * A shortcut to get all format buttons provided by roosterjs-react
 * @param keyOrButtons An array of buttons or known button key. Default value is all known buttons provided by roosterjs-react
 * @returns An array of all buttons
 */
export default function getButtons(keyOrButtons) {
    if (keyOrButtons === void 0) { keyOrButtons = AllButtonKeys; }
    return keyOrButtons.map(function (keyOrButton) {
        return typeof keyOrButton == 'number' ? KnownRibbonButtons[keyOrButton] : keyOrButton;
    });
}
//# sourceMappingURL=getButtons.js.map