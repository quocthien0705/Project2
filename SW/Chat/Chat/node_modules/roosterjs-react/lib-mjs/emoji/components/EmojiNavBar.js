import * as React from 'react';
import { css } from '@fluentui/react/lib/Utilities';
import { EmojiFabricIconCharacterMap, EmojiList } from '../utils/emojiList';
import { FocusZone, FocusZoneDirection } from '@fluentui/react/lib/FocusZone';
import { getObjectKeys } from 'roosterjs-editor-dom';
import { Icon } from '@fluentui/react/lib/Icon';
import { TooltipHost } from '@fluentui/react/lib/Tooltip';
/**
 * @internal
 */
export default function EmojiNavBar(props) {
    var currentSelected = props.currentSelected, getTabId = props.getTabId, _a = props.strings, strings = _a === void 0 ? {} : _a, classNames = props.classNames;
    var keys = getObjectKeys(EmojiList);
    var onFamilyClick = function (key) {
        if (props.onClick) {
            props.onClick(key);
        }
    };
    return (
    // for each emoji family key, create a button to use as nav bar
    React.createElement("div", { className: classNames.navBar, role: "tablist" },
        React.createElement(FocusZone, { direction: FocusZoneDirection.horizontal }, keys.map(function (key, index) {
            var _a;
            var selected = key === currentSelected;
            var friendlyName = strings[key];
            return (React.createElement(TooltipHost, { hostClassName: classNames.navBarTooltip, content: friendlyName, key: key },
                React.createElement("button", { className: css(classNames.navBarButton, (_a = {},
                        _a[classNames.selected] = selected,
                        _a)), key: key, onClick: onFamilyClick.bind(onclick, key), id: getTabId === null || getTabId === void 0 ? void 0 : getTabId(key), role: "tab", "aria-selected": selected, "aria-label": friendlyName, "data-is-focusable": "true", "aria-posinset": index + 1, tabIndex: 0, "aria-setsize": keys.length },
                    React.createElement(Icon, { iconName: EmojiFabricIconCharacterMap[key] }))));
        }))));
}
//# sourceMappingURL=EmojiNavBar.js.map