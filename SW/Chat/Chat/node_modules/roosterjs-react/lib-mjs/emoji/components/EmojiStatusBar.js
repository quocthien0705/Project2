import * as React from 'react';
import { TooltipHost, TooltipOverflowMode } from '@fluentui/react/lib/Tooltip';
var NO_SUGGESTIONS = 'emjDNoSuggetions';
/**
 * @internal
 * Emoji status bar component
 */
export default function EmojiStatusBar(props) {
    var emoji = props.emoji, strings = props.strings, hasResult = props.hasResult, classNames = props.classNames;
    if (!hasResult) {
        var noResultDescription = strings[NO_SUGGESTIONS];
        return (React.createElement("div", { className: classNames.statusBar },
            React.createElement("div", { style: { display: 'none' }, "aria-live": "polite" }, noResultDescription),
            React.createElement("div", { className: classNames.statusBarNoResultDetailsContainer },
                React.createElement(TooltipHost, { content: noResultDescription, overflowMode: TooltipOverflowMode.Parent },
                    React.createElement("span", { role: "alert" }, noResultDescription)))));
    }
    var icon = emoji ? emoji.codePoint : '';
    var description = (emoji === null || emoji === void 0 ? void 0 : emoji.description) ? strings[emoji.description] : '';
    return (React.createElement("div", { className: classNames.statusBar },
        React.createElement("i", { className: classNames.statusBarIcon, role: "presentation", "aria-hidden": "true" }, icon),
        React.createElement("div", { className: classNames.statusBarDetailsContainer },
            React.createElement("div", { className: classNames.statusBarDetails },
                React.createElement(TooltipHost, { content: description, overflowMode: TooltipOverflowMode.Parent }, description)))));
}
//# sourceMappingURL=EmojiStatusBar.js.map