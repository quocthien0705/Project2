import { __assign, __read } from "tslib";
import * as React from 'react';
import InputDialogItem from './InputDialogItem';
import { DefaultButton, PrimaryButton } from '@fluentui/react/lib/Button';
import { Dialog, DialogFooter, DialogType } from '@fluentui/react/lib/Dialog';
import { getLocalizedString } from '../../common/index';
import { getObjectKeys } from 'roosterjs-editor-dom';
/**
 * @internal
 */
export default function InputDialog(props) {
    var items = props.items, strings = props.strings, dialogTitleKey = props.dialogTitleKey, unlocalizedTitle = props.unlocalizedTitle, onOk = props.onOk, onCancel = props.onCancel, onChange = props.onChange;
    var dialogContentProps = React.useMemo(function () { return ({
        type: DialogType.normal,
        title: getLocalizedString(strings, dialogTitleKey, unlocalizedTitle),
    }); }, [strings, dialogTitleKey, unlocalizedTitle]);
    var _a = __read(React.useState(getObjectKeys(items).reduce(function (result, key) {
        result[key] = items[key].initValue;
        return result;
    }, {})), 2), currentValues = _a[0], setCurrentValues = _a[1];
    var onSubmit = React.useCallback(function () {
        onOk === null || onOk === void 0 ? void 0 : onOk(currentValues);
    }, [onOk, currentValues]);
    var onItemChanged = React.useCallback(function (itemName, newValue) {
        var _a;
        if (itemName in items) {
            var newValues = (onChange === null || onChange === void 0 ? void 0 : onChange(itemName, newValue, __assign({}, currentValues))) || __assign(__assign({}, currentValues), (_a = {}, _a[itemName] = newValue, _a));
            setCurrentValues(newValues);
        }
    }, [setCurrentValues, currentValues, items]);
    return (React.createElement(Dialog, { dialogContentProps: dialogContentProps, hidden: false, onDismiss: onCancel },
        React.createElement("div", null, getObjectKeys(items).map(function (key) { return (React.createElement(InputDialogItem, { key: key, itemName: key, items: items, strings: strings, currentValues: currentValues, onEnterKey: onSubmit, onChanged: onItemChanged })); })),
        React.createElement(DialogFooter, null,
            React.createElement(PrimaryButton, { text: getLocalizedString(strings, 'buttonNameOK', 'OK'), onClick: onSubmit }),
            React.createElement(DefaultButton, { text: getLocalizedString(strings, 'buttonNameCancel', 'Cancel'), onClick: onCancel }))));
}
//# sourceMappingURL=InputDialog.js.map