{"version":3,"file":"InputDialog.js","sourceRoot":"","sources":["../../../../../packages/roosterjs-react/lib/inputDialog/component/InputDialog.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport InputDialogItem from './InputDialogItem';\nimport { DefaultButton, PrimaryButton } from '@fluentui/react/lib/Button';\nimport { Dialog, DialogFooter, DialogType } from '@fluentui/react/lib/Dialog';\nimport { getLocalizedString } from '../../common/index';\nimport { getObjectKeys } from 'roosterjs-editor-dom';\nimport type DialogItem from '../type/DialogItem';\nimport type {\n    CancelButtonStringKey,\n    LocalizedStrings,\n    OkButtonStringKey,\n} from '../../common/index';\n\n/**\n * @internal\n */\nexport interface InputDialogProps<Strings extends string, ItemNames extends string> {\n    dialogTitleKey: Strings;\n    unlocalizedTitle: string;\n    items: Record<ItemNames, DialogItem<Strings>>;\n    strings?: LocalizedStrings<Strings | OkButtonStringKey | CancelButtonStringKey>;\n    onChange?: (\n        changedItemName: ItemNames,\n        newValue: string,\n        currentValues: Record<ItemNames, string>\n    ) => Record<ItemNames, string> | null;\n    onOk: (values: Record<ItemNames, string>) => void;\n    onCancel: () => void;\n}\n\n/**\n * @internal\n */\nexport default function InputDialog<Strings extends string, ItemNames extends string>(\n    props: InputDialogProps<Strings, ItemNames>\n) {\n    const { items, strings, dialogTitleKey, unlocalizedTitle, onOk, onCancel, onChange } = props;\n    const dialogContentProps = React.useMemo(\n        () => ({\n            type: DialogType.normal,\n            title: getLocalizedString(strings, dialogTitleKey, unlocalizedTitle),\n        }),\n        [strings, dialogTitleKey, unlocalizedTitle]\n    );\n    const [currentValues, setCurrentValues] = React.useState<Record<ItemNames, string>>(\n        getObjectKeys(items).reduce((result: Record<ItemNames, string>, key) => {\n            result[key] = items[key].initValue;\n            return result;\n        }, {} as Record<ItemNames, string>)\n    );\n\n    const onSubmit = React.useCallback(() => {\n        onOk?.(currentValues);\n    }, [onOk, currentValues]);\n    const onItemChanged = React.useCallback(\n        (itemName: ItemNames, newValue: string) => {\n            if (itemName in items) {\n                const newValues = onChange?.(itemName, newValue, {\n                    ...currentValues,\n                }) || {\n                    ...currentValues,\n                    [itemName]: newValue,\n                };\n\n                setCurrentValues(newValues);\n            }\n        },\n        [setCurrentValues, currentValues, items]\n    );\n\n    return (\n        <Dialog dialogContentProps={dialogContentProps} hidden={false} onDismiss={onCancel}>\n            <div>\n                {getObjectKeys(items).map(key => (\n                    <InputDialogItem\n                        key={key}\n                        itemName={key}\n                        items={items}\n                        strings={strings}\n                        currentValues={currentValues}\n                        onEnterKey={onSubmit}\n                        onChanged={onItemChanged}\n                    />\n                ))}\n            </div>\n            <DialogFooter>\n                <PrimaryButton\n                    text={getLocalizedString(strings, 'buttonNameOK', 'OK')}\n                    onClick={onSubmit}\n                />\n                <DefaultButton\n                    text={getLocalizedString(strings, 'buttonNameCancel', 'Cancel')}\n                    onClick={onCancel}\n                />\n            </DialogFooter>\n        </Dialog>\n    );\n}\n"]}