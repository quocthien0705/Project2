"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var index_1 = require("../../common/index");
var Styling_1 = require("@fluentui/react/lib/Styling");
var TextField_1 = require("@fluentui/react/lib/TextField");
var classNames = (0, Styling_1.mergeStyleSets)({
    inputBox: {
        width: '100%',
        minWidth: '250px',
        height: '32px',
        margin: '5px 0 16px',
        borderRadius: '2px',
    },
});
/**
 * @internal
 */
function InputDialogItem(props) {
    var itemName = props.itemName, strings = props.strings, items = props.items, currentValues = props.currentValues, onChanged = props.onChanged, onEnterKey = props.onEnterKey;
    var _a = items[itemName], labelKey = _a.labelKey, unlocalizedLabel = _a.unlocalizedLabel, autoFocus = _a.autoFocus;
    var value = currentValues[itemName];
    var onValueChange = React.useCallback(function (_, newValue) {
        onChanged(itemName, newValue);
    }, [itemName, onChanged]);
    var onKeyPress = React.useCallback(function (e) {
        if (e.which == 13 /* ENTER */) {
            onEnterKey();
        }
    }, [onEnterKey]);
    return (React.createElement("div", null,
        labelKey ? React.createElement("div", null, (0, index_1.getLocalizedString)(strings, labelKey, unlocalizedLabel)) : null,
        React.createElement("div", null,
            React.createElement(TextField_1.TextField, { role: "textbox", type: "text", className: classNames.inputBox, value: value, onChange: onValueChange, onKeyPress: onKeyPress, autoFocus: autoFocus }))));
}
exports.default = InputDialogItem;
//# sourceMappingURL=InputDialogItem.js.map