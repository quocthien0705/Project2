{"version":3,"file":"EmojiNavBar.js","sourceRoot":"","sources":["../../../../../packages/roosterjs-react/lib/emoji/components/EmojiNavBar.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,2DAAoD;AACpD,gDAA4E;AAC5E,2DAA8E;AAC9E,6DAAqD;AACrD,iDAAgD;AAChD,uDAA0D;AAiB1D;;GAEG;AACH,SAAwB,WAAW,CAAC,KAAuB;IAC/C,IAAA,eAAe,GAAyC,KAAK,gBAA9C,EAAE,QAAQ,GAA+B,KAAK,SAApC,EAAE,KAA6B,KAAK,QAAtB,EAAZ,OAAO,mBAAG,EAAE,KAAA,EAAE,UAAU,GAAK,KAAK,WAAV,CAAW;IACtE,IAAM,IAAI,GAAG,IAAA,oCAAa,EAAC,qBAAS,CAAC,CAAC;IACtC,IAAM,aAAa,GAAG,UAAC,GAAW;QAC9B,IAAI,KAAK,CAAC,OAAO,EAAE;YACf,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SACtB;IACL,CAAC,CAAC;IAEF,OAAO;IACH,+DAA+D;IAC/D,6BAAK,SAAS,EAAE,UAAU,CAAC,MAAM,EAAE,IAAI,EAAC,SAAS;QAC7C,oBAAC,qBAAS,IAAC,SAAS,EAAE,8BAAkB,CAAC,UAAU,IAC9C,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,KAAK;;YACjB,IAAM,QAAQ,GAAG,GAAG,KAAK,eAAe,CAAC;YACzC,IAAM,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;YAElC,OAAO,CACH,oBAAC,qBAAW,IACR,aAAa,EAAE,UAAU,CAAC,aAAa,EACvC,OAAO,EAAE,YAAY,EACrB,GAAG,EAAE,GAAG;gBACR,gCACI,SAAS,EAAE,IAAA,eAAG,EAAC,UAAU,CAAC,YAAY;wBAClC,GAAC,UAAU,CAAC,QAAQ,IAAG,QAAQ;4BACjC,EACF,GAAG,EAAE,GAAG,EACR,OAAO,EAAE,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,EACzC,EAAE,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAG,GAAG,CAAC,EACnB,IAAI,EAAC,KAAK,mBACK,QAAQ,gBACX,YAAY,uBACN,MAAM,mBACT,KAAK,GAAG,CAAC,EACxB,QAAQ,EAAE,CAAC,kBACG,IAAI,CAAC,MAAM;oBACzB,oBAAC,WAAI,IAAC,QAAQ,EAAE,uCAA2B,CAAC,GAAG,CAAC,GAAI,CAC/C,CACC,CACjB,CAAC;QACN,CAAC,CAAC,CACM,CACV,CACT,CAAC;AACN,CAAC;AA5CD,8BA4CC","sourcesContent":["import * as React from 'react';\nimport { css } from '@fluentui/react/lib/Utilities';\nimport { EmojiFabricIconCharacterMap, EmojiList } from '../utils/emojiList';\nimport { FocusZone, FocusZoneDirection } from '@fluentui/react/lib/FocusZone';\nimport { getObjectKeys } from 'roosterjs-editor-dom';\nimport { Icon } from '@fluentui/react/lib/Icon';\nimport { TooltipHost } from '@fluentui/react/lib/Tooltip';\nimport type { EmojiFamilyKeys } from '../utils/emojiList';\nimport type { EmojiPaneStyle } from '../type/EmojiPaneStyles';\nimport type { IProcessedStyleSet, IStyleSet } from '@fluentui/react/lib/Styling';\n\n/**\n * @internal\n * Emoji Nav Bar data\n */\nexport interface EmojiNavBarProps {\n    onClick?: (selected: string) => void;\n    currentSelected?: string;\n    getTabId?: (selected: EmojiFamilyKeys) => string;\n    strings: Record<string, string>;\n    classNames: IProcessedStyleSet<IStyleSet<EmojiPaneStyle>>;\n}\n\n/**\n * @internal\n */\nexport default function EmojiNavBar(props: EmojiNavBarProps) {\n    const { currentSelected, getTabId, strings = {}, classNames } = props;\n    const keys = getObjectKeys(EmojiList);\n    const onFamilyClick = (key: string) => {\n        if (props.onClick) {\n            props.onClick(key);\n        }\n    };\n\n    return (\n        // for each emoji family key, create a button to use as nav bar\n        <div className={classNames.navBar} role=\"tablist\">\n            <FocusZone direction={FocusZoneDirection.horizontal}>\n                {keys.map((key, index) => {\n                    const selected = key === currentSelected;\n                    const friendlyName = strings[key];\n\n                    return (\n                        <TooltipHost\n                            hostClassName={classNames.navBarTooltip}\n                            content={friendlyName}\n                            key={key}>\n                            <button\n                                className={css(classNames.navBarButton, {\n                                    [classNames.selected]: selected,\n                                })}\n                                key={key}\n                                onClick={onFamilyClick.bind(onclick, key)}\n                                id={getTabId?.(key)}\n                                role=\"tab\"\n                                aria-selected={selected}\n                                aria-label={friendlyName}\n                                data-is-focusable=\"true\"\n                                aria-posinset={index + 1}\n                                tabIndex={0}\n                                aria-setsize={keys.length}>\n                                <Icon iconName={EmojiFabricIconCharacterMap[key]} />\n                            </button>\n                        </TooltipHost>\n                    );\n                })}\n            </FocusZone>\n        </div>\n    );\n}\n"]}