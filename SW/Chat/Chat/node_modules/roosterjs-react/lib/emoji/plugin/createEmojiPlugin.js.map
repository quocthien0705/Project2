{"version":3,"file":"createEmojiPlugin.js","sourceRoot":"","sources":["../../../../../packages/roosterjs-react/lib/emoji/plugin/createEmojiPlugin.ts"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,mEAA8D;AAC9D,6DAAqD;AACrD,2DAAyD;AACzD,gDAA+C;AAC/C,6DAAuD;AAcvD,qDAI8B;AAE9B,IAAM,aAAa,GAAG,GAAG,CAAC;AAC1B,IAAM,qBAAqB,GAAG,EAAE,CAAC;AAEjC,wGAAwG;AACxG,mBAAmB;AACnB,iBAAiB;AACjB,iBAAiB;AAEjB,IAAM,wBAAwB,GAAG,sGAAsG,CAAC;AAExI;IAYI,qBAAoB,gBAAoD;QAAxE,iBAMC;QANmB,qBAAgB,GAAhB,gBAAgB,CAAoC;QAXhE,WAAM,GAAmB,IAAI,CAAC;QAC9B,0BAAqB,GAAY,KAAK,CAAC;QACvC,iBAAY,GAAY,KAAK,CAAC;QAC9B,iBAAY,GAAY,KAAK,CAAC;QAC9B,YAAO,GAAG,KAAK,CAAC,SAAS,EAAa,CAAC;QACvC,UAAK,GAAkB,IAAI,CAAC;QAC5B,gBAAW,GAAuB,IAAI,CAAC;QAEvC,oBAAe,GAAG,KAAK,CAAC,SAAS,EAAiB,CAAC;QACnD,WAAM,GAAG,CAAC,CAAC;QA6KX,kBAAa,GAAG,cAAM,OAAA,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAA3B,CAA2B,CAAC;QAElD,qBAAgB,GAAG,UAAC,KAAY,EAAE,gBAAwB;;YAC9D,IAAI,KAAK,KAAK,qBAAS,EAAE;gBACrB,MAAA,KAAI,CAAC,OAAO,CAAC,OAAO,0CAAE,cAAc,CAAC,gBAAgB,CAAC,CAAC;gBACvD,OAAO;aACV;YAED,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;QAC9C,CAAC,CAAC;QAnLE,IAAI,CAAC,OAAO,yEACL,sCAAuB,GACvB,kCAAmB,GACnB,iCAAkB,CACxB,CAAC;IACN,CAAC;IAED,oCAAc,GAAd,UAAe,WAAwB;QACnC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;IAEM,6BAAO,GAAd;QACI,OAAO,OAAO,CAAC;IACnB,CAAC;IAEM,6BAAO,GAAd;;QACI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC5B,MAAA,IAAI,CAAC,eAAe,CAAC,OAAO,0CAAE,OAAO,EAAE,CAAC;QACxC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACpB,CAAC;IAEM,gCAAU,GAAjB,UAAkB,MAAe;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAEM,mCAAa,GAApB,UAAqB,KAAkB;QACnC,IAAI,KAAK,CAAC,SAAS,oBAA4B,EAAE;YAC7C,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;YACnC,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,CAAC;aAC3C;iBAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,KAAK,oBAAQ,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,EAAE;gBACzE,YAAY;gBACZ,6DAA6D;gBAC7D,IAAI,CAAC,MAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;gBACjC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC7B;SACJ;aAAM,IAAI,KAAK,CAAC,SAAS,kBAA0B,IAAI,CAAC,IAAA,oCAAa,EAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;YACpF,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;aACzC;iBAAM;gBACH,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;aAC/B;SACJ;aAAM,IAAI,KAAK,CAAC,SAAS,oBAA4B,EAAE;YACpD,YAAY;YACZ,yCAAyC;YACzC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC/B;IACL,CAAC;IAED;;;;OAIG;IACK,iDAA2B,GAAnC,UAAoC,KAAyB;QACzD,iDAAiD;QACjD,8DAA8D;;QAE9D,IAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QACzD,QAAQ,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE;YAC1B,KAAK,oBAAQ,CAAC,KAAK;gBACf,IAAM,aAAa,GAAG,MAAA,IAAI,CAAC,OAAO,CAAC,OAAO,0CAAE,gBAAgB,EAAE,CAAC;gBAC/D,8FAA8F;gBAC9F,IACI,CAAC,aAAa;oBACd,CAAC,gBAAgB;oBACjB,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,aAAa,EAAE,gBAAgB,CAAC,EAChE;oBACE,MAAM;iBACT;qBAAM;oBACH,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC;oBAClD,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;iBACpC;gBAED,MAAM;YACV,KAAK,oBAAQ,CAAC,IAAI,CAAC;YACnB,KAAK,oBAAQ,CAAC,KAAK;gBACf,MAAA,IAAI,CAAC,OAAO,CAAC,OAAO,0CAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,KAAK,oBAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChF,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;gBACjC,MAAM;YACV,KAAK,oBAAQ,CAAC,MAAM;gBAChB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBAC5B,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;SACxC;IACL,CAAC;IAEO,uCAAiB,GAAzB,UACI,KAAqB,EACrB,aAAoB,EACpB,gBAAwB;;QAExB,IAAI,aAAa,KAAK,qBAAS,EAAE;YAC7B,OAAO,KAAK,CAAC;SAChB;QAED,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QACjC,MAAA,IAAI,CAAC,OAAO,CAAC,OAAO,0CAAE,cAAc,CAAC,gBAAgB,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACK,+CAAyB,GAAjC,UAAkC,KAA0B;;QACxD,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC5B,OAAO;SACV;QACD,0CAA0C;QAC1C,yEAAyE;QACzE,IACI,IAAI,CAAC,KAAK;YACV,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,KAAK,oBAAQ,CAAC,KAAK,CAAC;gBACzE,KAAK,CAAC,QAAQ,CAAC,KAAK,KAAK,oBAAQ,CAAC,SAAS,CAAC,EAClD;YACE,MAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,WAAW,GAAG,WAAW,0CAAE,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,MAAA,IAAI,CAAC,eAAe,CAAC,OAAO,0CAAE,OAAO,EAAE,CAAC;SAC3C;QAED,IAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QACzD,IAAI,gBAAgB,EAAE;YAClB,IAAI,IAAI,CAAC,OAAO,EAAE;gBACd,MAAA,IAAI,CAAC,OAAO,CAAC,OAAO,0CAAE,SAAS,CAAC,gBAAgB,CAAC,CAAC;aACrD;iBAAM;gBACH,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;aAC/B;SACJ;aAAM;YACH,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC/B;IACL,CAAC;IAEO,qCAAe,GAAvB,UAAwB,KAA0B;QAC9C,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC5B,OAAO;SACV;QACD,IAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QACzD,IACI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,KAAK,aAAa;YACnC,KAAK,CAAC,QAAQ,CAAC,KAAK,KAAK,qBAAqB,CAAC;YACnD,gBAAgB,KAAK,GAAG,EAC1B;YACE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SAC9B;IACL,CAAC;IAEO,gCAAU,GAAlB;;QACI,IAAM,SAAS,GAAG,MAAA,IAAI,CAAC,MAAM,0CAAE,kBAAkB,EAAE,CAAC;QACpD,IAAM,IAAI,GAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,qBAAqB,EAAE,CAAC;QAChD,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;YAC1B,IAAI,CAAC,MAAM,EAAE,CAAC;YAEd,IAAA,0BAAgB,EACZ,IAAI,CAAC,WAAW,EAChB,IAAI,EACJ,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,gBAAgB,CACxB,CAAC;SACL;IACL,CAAC;IAaO,qCAAe,GAAvB,UAAwB,YAAqB;;QACzC,IAAI,IAAI,CAAC,YAAY,KAAK,YAAY,EAAE;YACpC,OAAO;SACV;QAED,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;aAAM,IAAI,IAAI,CAAC,eAAe,EAAE;YAC7B,MAAA,IAAI,CAAC,eAAe,CAAC,OAAO,0CAAE,OAAO,EAAE,CAAC;SAC3C;IACL,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAY,EAAE,gBAAwB;QAA1D,iBAmBC;;QAlBG,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACvD,OAAO;SACV;QACD,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC7D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QAEjC,IAAI,CAAC,MAAM,CAAC,eAAe,CACvB;YACI,IAAI,KAAI,CAAC,MAAM,EAAE;gBACb,IAAA,sCAAe,EAAC,KAAI,CAAC,MAAM,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC1E,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,iBAAqB,CAAC;aAChD;QACL,CAAC,EACD,SAAS,CAAC,gBAAgB,EAC1B,IAAI,CAAC,sBAAsB,CAC9B,CAAC;QAEF,MAAA,IAAI,CAAC,eAAe,CAAC,OAAO,0CAAE,OAAO,EAAE,CAAC;IAC5C,CAAC;IAEO,yCAAmB,GAA3B,UAA4B,KAAkB;;QAC1C,IAAM,UAAU,GAAG,MAAA,IAAI,CAAC,MAAM,0CAAE,0BAA0B,CAAC,KAAK,CAAC,CAAC;QAClE,IAAM,gBAAgB,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACxE,IAAM,OAAO,GAAG,gBAAgB,CAAC,CAAC,CAAC,wBAAwB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1F,OAAO,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAChG,CAAC;IAEO,0CAAoB,GAA5B,UAA6B,KAAqB;QAC9C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC;QAChC,KAAK,CAAC,QAAQ,CAAC,wBAAwB,EAAE,CAAC;IAC9C,CAAC;IACL,kBAAC;AAAD,CAAC,AAhPD,IAgPC;AAED;;GAEG;AACH,SAAwB,iBAAiB,CACrC,gBAAoD;IAEpD,OAAO,IAAI,WAAW,CAAC,gBAAgB,CAAC,CAAC;AAC7C,CAAC;AAJD,oCAIC","sourcesContent":["import * as React from 'react';\nimport showEmojiCallout from '../components/showEmojiCallout';\nimport { isModifierKey } from 'roosterjs-editor-dom';\nimport { KeyCodes } from '@fluentui/react/lib/Utilities';\nimport { MoreEmoji } from '../utils/emojiList';\nimport { replaceWithNode } from 'roosterjs-editor-api';\nimport type { EmojiICallout } from '../components/showEmojiCallout';\nimport type { Emoji } from '../type/Emoji';\nimport type { EmojiPane } from '../components/EmojiPane';\nimport type { EmojiStringKeys } from '../type/EmojiStringKeys';\nimport type { LocalizedStrings, ReactEditorPlugin, UIUtilities } from '../../common/index';\nimport type {\n    IEditor,\n    PluginDomEvent,\n    PluginEvent,\n    PluginKeyboardEvent,\n    PluginKeyDownEvent,\n} from 'roosterjs-editor-types';\nimport { PluginEventType, PositionType } from 'roosterjs-editor-types';\nimport {\n    EmojiDescriptionStrings,\n    EmojiFamilyStrings,\n    EmojiKeywordStrings,\n} from '../type/EmojiStrings';\n\nconst KEYCODE_COLON = 186;\nconst KEYCODE_COLON_FIREFOX = 59;\n\n// Regex looks for an emoji right before the : to allow contextual search immediately following an emoji\n// MATCHES: 0: ðŸ˜ƒ:r\n//          1: ðŸ˜ƒ\n//          2: :r\n\nconst EMOJI_BEFORE_COLON_REGEX = /([\\u0023-\\u0039][\\u20e3]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u00a9-\\u00ae]|[\\u2122-\\u3299])*([:;][^:]*)/;\n\nclass EmojiPlugin implements ReactEditorPlugin {\n    private editor: IEditor | null = null;\n    private eventHandledOnKeyDown: boolean = false;\n    private canUndoEmoji: boolean = false;\n    private isSuggesting: boolean = false;\n    private paneRef = React.createRef<EmojiPane>();\n    private timer: number | null = null;\n    private uiUtilities: UIUtilities | null = null;\n    private strings: Record<string, string>;\n    private emojiCalloutRef = React.createRef<EmojiICallout>();\n    private baseId = 0;\n\n    constructor(private searchBoxStrings?: LocalizedStrings<EmojiStringKeys>) {\n        this.strings = {\n            ...EmojiDescriptionStrings,\n            ...EmojiKeywordStrings,\n            ...EmojiFamilyStrings,\n        };\n    }\n\n    setUIUtilities(uiUtilities: UIUtilities) {\n        this.uiUtilities = uiUtilities;\n    }\n\n    public getName() {\n        return 'Emoji';\n    }\n\n    public dispose() {\n        this.setIsSuggesting(false);\n        this.emojiCalloutRef.current?.dismiss();\n        this.editor = null;\n        this.baseId = 0;\n    }\n\n    public initialize(editor: IEditor): void {\n        this.editor = editor;\n    }\n\n    public onPluginEvent(event: PluginEvent): void {\n        if (event.eventType === PluginEventType.KeyDown) {\n            this.eventHandledOnKeyDown = false;\n            if (this.isSuggesting) {\n                this.onKeyDownSuggestingDomEvent(event);\n            } else if (event.rawEvent.which === KeyCodes.backspace && this.canUndoEmoji) {\n                //TODO: 1051\n                // If KeyDown is backspace and canUndoEmoji, call editor undo\n                this.editor!.undo();\n                this.handleEventOnKeyDown(event);\n                this.canUndoEmoji = false;\n            }\n        } else if (event.eventType === PluginEventType.KeyUp && !isModifierKey(event.rawEvent)) {\n            if (this.isSuggesting) {\n                this.onKeyUpSuggestingDomEvent(event);\n            } else {\n                this.onKeyUpDomEvent(event);\n            }\n        } else if (event.eventType === PluginEventType.MouseUp) {\n            //TODO: 1052\n            // If MouseUp, the emoji cannot be undone\n            this.canUndoEmoji = false;\n            this.setIsSuggesting(false);\n        }\n    }\n\n    /**\n     * On KeyDown suggesting DOM event\n     * Try to insert emoji is possible\n     * Intercept arrow keys to move selection if popup is shown\n     */\n    private onKeyDownSuggestingDomEvent(event: PluginKeyDownEvent): void {\n        // If key is enter, try insert emoji at selection\n        // If key is space and selection is shortcut, try insert emoji\n\n        const wordBeforeCursor = this.getWordBeforeCursor(event);\n        switch (event.rawEvent.which) {\n            case KeyCodes.enter:\n                const selectedEmoji = this.paneRef.current?.getSelectedEmoji();\n                // check if selection is on the \"...\" and show full picker if so, otherwise try to apply emoji\n                if (\n                    !selectedEmoji ||\n                    !wordBeforeCursor ||\n                    this.tryShowFullPicker(event, selectedEmoji, wordBeforeCursor)\n                ) {\n                    break;\n                } else {\n                    this.insertEmoji(selectedEmoji, wordBeforeCursor);\n                    this.handleEventOnKeyDown(event);\n                }\n\n                break;\n            case KeyCodes.left:\n            case KeyCodes.right:\n                this.paneRef.current?.navigate(event.rawEvent.which === KeyCodes.left ? -1 : 1);\n                this.handleEventOnKeyDown(event);\n                break;\n            case KeyCodes.escape:\n                this.setIsSuggesting(false);\n                this.handleEventOnKeyDown(event);\n        }\n    }\n\n    private tryShowFullPicker(\n        event: PluginDomEvent,\n        selectedEmoji: Emoji,\n        wordBeforeCursor: string\n    ): boolean {\n        if (selectedEmoji !== MoreEmoji) {\n            return false;\n        }\n\n        this.handleEventOnKeyDown(event);\n        this.paneRef.current?.showFullPicker(wordBeforeCursor);\n        return true;\n    }\n\n    /**\n     * On KeyUp suggesting DOM event\n     * If key is character, update search term\n     * Otherwise set isSuggesting to false\n     */\n    private onKeyUpSuggestingDomEvent(event: PluginKeyboardEvent): void {\n        if (this.eventHandledOnKeyDown) {\n            return;\n        }\n        // If this is a character key or backspace\n        // Clear the timer as we will either queue a new timer or stop suggesting\n        if (\n            this.timer &&\n            ((event.rawEvent.key.length === 1 && event.rawEvent.which !== KeyCodes.space) ||\n                event.rawEvent.which === KeyCodes.backspace)\n        ) {\n            this.editor?.getDocument().defaultView?.clearTimeout(this.timer);\n            this.timer = null;\n            this.emojiCalloutRef.current?.dismiss();\n        }\n\n        const wordBeforeCursor = this.getWordBeforeCursor(event);\n        if (wordBeforeCursor) {\n            if (this.paneRef) {\n                this.paneRef.current?.setSearch(wordBeforeCursor);\n            } else {\n                this.setIsSuggesting(false);\n            }\n        } else {\n            this.setIsSuggesting(false);\n        }\n    }\n\n    private onKeyUpDomEvent(event: PluginKeyboardEvent): void {\n        if (this.eventHandledOnKeyDown) {\n            return;\n        }\n        const wordBeforeCursor = this.getWordBeforeCursor(event);\n        if (\n            (event.rawEvent.which === KEYCODE_COLON ||\n                event.rawEvent.which === KEYCODE_COLON_FIREFOX) &&\n            wordBeforeCursor === ':'\n        ) {\n            this.setIsSuggesting(true);\n        }\n    }\n\n    private getCallout() {\n        const rangeNode = this.editor?.getElementAtCursor();\n        const rect = rangeNode?.getBoundingClientRect();\n        if (this.uiUtilities && rect) {\n            this.baseId++;\n\n            showEmojiCallout(\n                this.uiUtilities,\n                rect,\n                this.strings,\n                this.onSelectFromPane,\n                this.paneRef,\n                this.emojiCalloutRef,\n                this.onHideCallout,\n                this.baseId,\n                this.searchBoxStrings\n            );\n        }\n    }\n\n    private onHideCallout = () => this.setIsSuggesting(false);\n\n    private onSelectFromPane = (emoji: Emoji, wordBeforeCursor: string): void => {\n        if (emoji === MoreEmoji) {\n            this.paneRef.current?.showFullPicker(wordBeforeCursor);\n            return;\n        }\n\n        this.insertEmoji(emoji, wordBeforeCursor);\n    };\n\n    private setIsSuggesting(isSuggesting: boolean): void {\n        if (this.isSuggesting === isSuggesting) {\n            return;\n        }\n\n        this.isSuggesting = isSuggesting;\n        if (this.isSuggesting) {\n            this.getCallout();\n        } else if (this.emojiCalloutRef) {\n            this.emojiCalloutRef.current?.dismiss();\n        }\n    }\n\n    private insertEmoji(emoji: Emoji, wordBeforeCursor: string) {\n        if (!wordBeforeCursor || !this.editor || !emoji.codePoint) {\n            return;\n        }\n        const node = this.editor.getDocument().createElement('span');\n        node.innerText = emoji.codePoint;\n\n        this.editor.addUndoSnapshot(\n            () => {\n                if (this.editor) {\n                    replaceWithNode(this.editor, wordBeforeCursor, node, true /*exactMatch*/);\n                    this.editor.select(node, PositionType.After);\n                }\n            },\n            undefined /*changeSource*/,\n            true /*canUndoByBackspace*/\n        );\n\n        this.emojiCalloutRef.current?.dismiss();\n    }\n\n    private getWordBeforeCursor(event: PluginEvent): string | null {\n        const cursorData = this.editor?.getContentSearcherOfCursor(event);\n        const wordBeforeCursor = cursorData ? cursorData.getWordBefore() : null;\n        const matches = wordBeforeCursor ? EMOJI_BEFORE_COLON_REGEX.exec(wordBeforeCursor) : null;\n        return matches && matches.length > 2 && matches[0] === wordBeforeCursor ? matches[2] : null;\n    }\n\n    private handleEventOnKeyDown(event: PluginDomEvent): void {\n        this.eventHandledOnKeyDown = true;\n        event.rawEvent.preventDefault();\n        event.rawEvent.stopImmediatePropagation();\n    }\n}\n\n/**\n * Create a new instance of Emoji plugin with FluentUI components.\n */\nexport default function createEmojiPlugin(\n    searchBoxStrings?: LocalizedStrings<EmojiStringKeys>\n): ReactEditorPlugin {\n    return new EmojiPlugin(searchBoxStrings);\n}\n"]}