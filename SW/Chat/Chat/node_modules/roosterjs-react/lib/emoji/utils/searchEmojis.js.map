{"version":3,"file":"searchEmojis.js","sourceRoot":"","sources":["../../../../../packages/roosterjs-react/lib/emoji/utils/searchEmojis.ts"],"names":[],"mappings":";;;AAAA,yCAA2C;AAG3C;;GAEG;AACH,SAAgB,YAAY,CAAC,MAAc,EAAE,OAA+B;IACxE,IAAM,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;IAC9B,IAAM,SAAS,GAAY,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAChE,IAAM,YAAY,GAAY,EAAE,CAAC;IACjC,IAAM,aAAa,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IAC3E,IAAA,wBAAY,EAAC,UAAA,KAAK;QACd,IAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,QAAQ,IAAI,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;QACnE,IAAM,kBAAkB,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,QAAQ,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QACpF,IAAM,KAAK,GAAG,kBAAkB,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACxD,IAAI,KAAK,IAAI,CAAC,EAAE;YACZ,CAAC,kBAAkB,CAAC,KAAK,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,GAAG;gBACpD,CAAC,CAAC,SAAS;gBACX,CAAC,CAAC,YAAY,CACjB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACjB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC,CAAC,CAAC;IAEH,OAAO,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AAC1C,CAAC;AApBD,oCAoBC;AAED,SAAS,aAAa,CAAC,MAAc;IACjC,IAAI,MAAM,GAAiB,IAAI,CAAC;IAChC,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,CAAC;IAC5B,IAAA,wBAAY,EAAC,UAAC,KAAY;QACtB,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACrE,MAAM,GAAG,KAAK,CAAC;YACf,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAClB,CAAC","sourcesContent":["import { forEachEmoji } from './emojiList';\nimport type { Emoji } from '../type/Emoji';\n\n/**\n * @internal\n */\nexport function searchEmojis(search: string, strings: Record<string, string>): Emoji[] {\n    const shortcutMatch = matchShortcut(search);\n    search = search.toLowerCase();\n    const fullMatch: Emoji[] = shortcutMatch ? [shortcutMatch] : [];\n    const partialMatch: Emoji[] = [];\n    const partialSearch = ' ' + (search[0] == ':' ? search.substr(1) : search);\n    forEachEmoji(emoji => {\n        const keywords = (emoji.keywords && strings[emoji.keywords]) || '';\n        const searchableKeywords = emoji.keywords ? ' ' + keywords.toLowerCase() + ' ' : '';\n        const index = searchableKeywords.indexOf(partialSearch);\n        if (index >= 0) {\n            (searchableKeywords[index + partialSearch.length] == ' '\n                ? fullMatch\n                : partialMatch\n            ).push(emoji);\n        }\n        return true;\n    });\n\n    return fullMatch.concat(partialMatch);\n}\n\nfunction matchShortcut(search: string): Emoji | null {\n    let result: Emoji | null = null;\n    search = ' ' + search + ' ';\n    forEachEmoji((emoji: Emoji) => {\n        if (emoji.shortcut && (' ' + emoji.shortcut + ' ').indexOf(search) >= 0) {\n            result = emoji;\n            return false;\n        }\n        return true;\n    });\n    return result;\n}\n"]}