{"version":3,"file":"createImageEditMenuProvider.js","sourceRoot":"","sources":["../../../../../packages/roosterjs-react/lib/contextMenu/menus/createImageEditMenuProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import createContextMenuProvider from '../utils/createContextMenuProvider';\nimport showInputDialog from '../../inputDialog/utils/showInputDialog';\nimport {\n    canRegenerateImage,\n    isResizedTo,\n    resetImage,\n    resizeByPercentage,\n} from 'roosterjs-editor-plugins';\nimport { DocumentCommand, ImageEditOperation, SelectionRangeTypes } from 'roosterjs-editor-types';\nimport { getObjectKeys } from 'roosterjs-editor-dom';\nimport { setImageAltText } from 'roosterjs-editor-api';\nimport type ContextMenuItem from '../types/ContextMenuItem';\nimport type { EditorPlugin, IEditor } from 'roosterjs-editor-types';\nimport type { ImageEditMenuItemStringKey } from '../types/ContextMenuItemStringKeys';\nimport type { LocalizedStrings } from '../../common/type/LocalizedStrings';\nimport type { ImageEdit } from 'roosterjs-editor-plugins';\n\nconst ImageAltTextMenuItem: ContextMenuItem<ImageEditMenuItemStringKey, ImageEdit> = {\n    key: 'menuNameImageAltText',\n    unlocalizedText: 'Add alternate text',\n    onClick: (_, editor, node, strings, uiUtilities) => {\n        const image = node as HTMLImageElement;\n        const initValue = image.alt;\n\n        showInputDialog(\n            uiUtilities,\n            'menuNameImageAltText',\n            'Add alternate text',\n            {\n                altText: {\n                    labelKey: null,\n                    unlocalizedLabel: null,\n                    initValue: initValue,\n                },\n            },\n            strings\n        ).then(values => {\n            editor.focus();\n            editor.select(image);\n\n            if (values) {\n                setImageAltText(editor, values.altText);\n            }\n        });\n    },\n};\n\nconst sizeMap: { [key in ImageEditMenuItemStringKey]?: number } = {\n    menuNameImageSizeBestFit: 0,\n    menuNameImageSizeSmall: 0.25,\n    menuNameImageSizeMedium: 0.5,\n    menuNameImageSizeOriginal: 1,\n};\n\nconst ImageResizeMenuItem: ContextMenuItem<ImageEditMenuItemStringKey, ImageEdit> = {\n    key: 'menuNameImageResize',\n    unlocalizedText: 'Size',\n    subItems: {\n        menuNameImageSizeBestFit: 'Best fit',\n        menuNameImageSizeSmall: 'Small',\n        menuNameImageSizeMedium: 'Medium',\n        menuNameImageSizeOriginal: 'Original',\n    },\n    onClick: (key, editor, _) => {\n        const selection = editor.getSelectionRangeEx();\n        if (selection.type !== SelectionRangeTypes.ImageSelection) {\n            return;\n        }\n        editor.addUndoSnapshot(() => {\n            const percentage = sizeMap[key];\n\n            if (percentage != undefined && percentage > 0) {\n                resizeByPercentage(\n                    editor,\n                    selection.image,\n                    percentage,\n                    10 /*minWidth*/,\n                    10 /*minHeight*/\n                );\n            } else {\n                resetImage(editor, selection.image);\n            }\n        });\n    },\n    getSelectedId: (editor, _) => {\n        const selection = editor.getSelectionRangeEx();\n        return (\n            (selection.type === SelectionRangeTypes.ImageSelection &&\n                getObjectKeys(sizeMap).find(key => {\n                    return key == 'menuNameImageSizeBestFit'\n                        ? !selection.image.hasAttribute('width') &&\n                              !selection.image.hasAttribute('height')\n                        : isResizedTo(selection.image, sizeMap[key]!);\n                })) ||\n            null\n        );\n    },\n};\n\nconst ImageRotateMenuItem: ContextMenuItem<ImageEditMenuItemStringKey, ImageEdit> = {\n    key: 'menuNameImageRotate',\n    unlocalizedText: 'Rotate image',\n    subItems: {\n        menuNameImageRotateLeft: 'Left',\n        menuNameImageRotateRight: 'Right',\n    },\n    shouldShow: (_, node, imageEdit) => {\n        return (\n            !!imageEdit?.isOperationAllowed(ImageEditOperation.Rotate) &&\n            canRegenerateImage(node as HTMLImageElement)\n        );\n    },\n    onClick: (key, editor, node, strings, uiUtilities, imageEdit) => {\n        editor.addUndoSnapshot(() => {\n            switch (key) {\n                case 'menuNameImageRotateLeft':\n                    imageEdit?.rotateImage(node as HTMLImageElement, -Math.PI / 2);\n                    break;\n                case 'menuNameImageRotateRight':\n                    imageEdit?.rotateImage(node as HTMLImageElement, Math.PI / 2);\n                    break;\n            }\n        });\n    },\n};\n\nconst ImageFlipMenuItem: ContextMenuItem<ImageEditMenuItemStringKey, ImageEdit> = {\n    key: 'menuNameImageFlip',\n    unlocalizedText: 'Flip image',\n    subItems: {\n        menuNameImageRotateFlipHorizontally: 'Flip Horizontally',\n        menuNameImageRotateFlipVertically: 'Flip Vertically',\n    },\n    shouldShow: (_, node, imageEdit) => {\n        return (\n            !!imageEdit?.isOperationAllowed(ImageEditOperation.Rotate) &&\n            canRegenerateImage(node as HTMLImageElement)\n        );\n    },\n    onClick: (key, editor, node, strings, uiUtilities, imageEdit) => {\n        editor.addUndoSnapshot(() => {\n            switch (key) {\n                case 'menuNameImageRotateFlipHorizontally':\n                    imageEdit?.flipImage(node as HTMLImageElement, 'horizontal');\n                    break;\n                case 'menuNameImageRotateFlipVertically':\n                    imageEdit?.flipImage(node as HTMLImageElement, 'vertical');\n                    break;\n            }\n        });\n    },\n};\n\nconst ImageCropMenuItem: ContextMenuItem<ImageEditMenuItemStringKey, ImageEdit> = {\n    key: 'menuNameImageCrop',\n    unlocalizedText: 'Crop image',\n    shouldShow: (_, node, imageEdit) => {\n        return (\n            !!imageEdit?.isOperationAllowed(ImageEditOperation.Crop) &&\n            canRegenerateImage(node as HTMLImageElement)\n        );\n    },\n    onClick: (_, editor, node, strings, uiUtilities, imageEdit) => {\n        imageEdit?.setEditingImage(node as HTMLImageElement, ImageEditOperation.Crop);\n    },\n};\n\nconst ImageRemoveMenuItem: ContextMenuItem<ImageEditMenuItemStringKey, ImageEdit> = {\n    key: 'menuNameImageRemove',\n    unlocalizedText: 'Remove image',\n    onClick: (_, editor, node, strings, uiUtilities, imageEdit) => {\n        if (editor.contains(node)) {\n            editor.addUndoSnapshot(() => {\n                editor.deleteNode(node);\n                imageEdit?.setEditingImage(null /*editingImage*/);\n            }, 'DeleteImage');\n        }\n    },\n};\n\nconst ImageCopyMenuItem: ContextMenuItem<ImageEditMenuItemStringKey, ImageEdit> = {\n    key: 'menuNameImageCopy',\n    unlocalizedText: 'Copy image',\n    onClick: (_, editor, node, strings, uiUtilities, imageEdit) => {\n        if (editor.contains(node)) {\n            editor.addUndoSnapshot(() => {\n                editor.getDocument()?.execCommand(DocumentCommand.Copy);\n            }, 'CopyImage');\n        }\n    },\n};\n\nconst ImageCutMenuItem: ContextMenuItem<ImageEditMenuItemStringKey, ImageEdit> = {\n    key: 'menuNameImageCut',\n    unlocalizedText: 'Cut image',\n    onClick: (_, editor, node, strings, uiUtilities, imageEdit) => {\n        if (editor.contains(node)) {\n            editor.addUndoSnapshot(() => {\n                editor.getDocument()?.execCommand(DocumentCommand.Cut);\n            }, 'CutImage');\n        }\n    },\n};\n\nfunction shouldShowImageEditItems(editor: IEditor, _: Node) {\n    const selection = editor.getSelectionRangeEx();\n    return selection.type === SelectionRangeTypes.ImageSelection && !!selection.image;\n}\n\n/**\n * Create a new instance of ContextMenuProvider to support image editing functionalities in context menu\n * @returns A new ContextMenuProvider\n */\nexport default function createImageEditMenuProvider(\n    imageEditPlugin: ImageEdit,\n    strings?: LocalizedStrings<ImageEditMenuItemStringKey>\n): EditorPlugin {\n    return createContextMenuProvider<ImageEditMenuItemStringKey, ImageEdit>(\n        'imageEdit',\n        [\n            ImageAltTextMenuItem,\n            ImageResizeMenuItem,\n            ImageCropMenuItem,\n            ImageRemoveMenuItem,\n            ImageRotateMenuItem,\n            ImageFlipMenuItem,\n            ImageCopyMenuItem,\n            ImageCutMenuItem,\n        ],\n        strings,\n        shouldShowImageEditItems,\n        imageEditPlugin\n    );\n}\n"]}