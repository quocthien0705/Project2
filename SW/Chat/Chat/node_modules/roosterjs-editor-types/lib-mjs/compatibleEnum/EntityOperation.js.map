{"version":3,"file":"EntityOperation.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-types/lib/compatibleEnum/EntityOperation.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,6CAA6C;AAC7C,MAAM,CAAN,IAAY,yBAyEX;AAzED,WAAY,yBAAyB;IAEjC;;;;;;OAMG;IACH,mFAAS,CAAA;IAET;;OAEG;IACH,2EAAK,CAAA;IAEL;;OAEG;IACH,uFAAW,CAAA;IAEX;;OAEG;IACH,6EAAM,CAAA;IAEN;;OAEG;IACH,+FAAe,CAAA;IAEf;;OAEG;IACH,2FAAa,CAAA;IAEb;;;;OAIG;IACH,mFAAS,CAAA;IAET;;;OAGG;IACH,iGAAgB,CAAA;IAEhB;;;;;;OAMG;IACH,+GAAuB,CAAA;IAEvB;;OAEG;IACH,2FAAa,CAAA;IAEb;;OAEG;IACH,kGAAgB,CAAA;IAEhB;;;OAGG;IACH,oGAAiB,CAAA;AACrB,CAAC,EAzEW,yBAAyB,KAAzB,yBAAyB,QAyEpC","sourcesContent":["/**\n * Define possible operations to an entity\n */\r\n// eslint-disable-next-line etc/no-const-enum\r\nexport enum CompatibleEntityOperation {\r\n\n    /**\n     * Notify plugins that there is a new plugin was added into editor.\n     * Plugin can handle this event to entity hydration.\n     * This event will be only fired once for each entity DOM node.\n     * After undo, or copy/paste, since new DOM nodes were added, this event will be fired\n     * for those entities represented by newly added nodes.\n     */\n    NewEntity,\n\n    /**\n     * Notify plugins that user is clicking target to an entity\n     */\n    Click,\n\n    /**\n     * Notify plugins that user is triggering context menu to an entity\n     */\n    ContextMenu,\n\n    /**\n     * Notify plugins that user is escaping from an entity by pressing ESC key\n     */\n    Escape,\n\n    /**\n     * Notify plugins that user is removing an entity from its start position using DELETE key\n     */\n    RemoveFromStart,\n\n    /**\n     * Notify plugins that user is remove an entity from its end position using BACKSPACE key\n     */\n    RemoveFromEnd,\n\n    /**\n     * Notify plugins that an entity is being overwritten.\n     * This can be caused by key in, cut, paste, delete, backspace ... on a selection\n     * which contains some entities.\n     */\n    Overwrite,\n\n    /**\n     * Notify plugins that an entity is being partially overwritten.\n     * This happens when user selected part of the entity then do key press, or cut, paste, delete, backspace, ...\n     */\n    PartialOverwrite,\n\n    /**\n     * Notify plugins that editor is generating HTML content for save.\n     * Plugin should use this event to remove any temporary content, and only leave DOM nodes that\n     * should be saved as HTML string.\n     * This event will provide a cloned DOM tree for each entity, do NOT compare the DOM nodes with cached nodes\n     * because it will always return false.\n     */\n    ReplaceTemporaryContent,\n\n    /**\n     * @deprecated\n     */\n    AddShadowRoot,\n\n    /**\n     * @deprecated\n     */\n    RemoveShadowRoot,\n\n    /**\n     * Notify plugins that a new entity state need to be updated to an entity.\n     * This is normally happened when user undo/redo the content with an entity snapshot added by a plugin that handles entity\n     */\n    UpdateEntityState,\n}\r\n"]}