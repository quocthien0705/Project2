{"version":3,"file":"PluginEvent.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-types/lib/event/PluginEvent.ts"],"names":[],"mappings":"","sourcesContent":["import type { CompatibleBeforeCutCopyEvent } from './BeforeCutCopyEvent';\r\nimport type BeforeCutCopyEvent from './BeforeCutCopyEvent';\r\nimport type { CompatibleBeforeDisposeEvent } from './BeforeDisposeEvent';\r\nimport type BeforeDisposeEvent from './BeforeDisposeEvent';\r\nimport type { CompatibleBeforeKeyboardEditingEvent } from './BeforeKeyboardEditingEvent';\r\nimport type BeforeKeyboardEditingEvent from './BeforeKeyboardEditingEvent';\r\nimport type { CompatibleBeforePasteEvent } from './BeforePasteEvent';\r\nimport type BeforePasteEvent from './BeforePasteEvent';\r\nimport type { CompatibleBeforeSetContentEvent } from './BeforeSetContentEvent';\r\nimport type BeforeSetContentEvent from './BeforeSetContentEvent';\r\nimport type { CompatibleContentChangedEvent } from './ContentChangedEvent';\r\nimport type ContentChangedEvent from './ContentChangedEvent';\r\nimport type { CompatibleEditImageEvent } from './EditImageEvent';\r\nimport type EditImageEvent from './EditImageEvent';\r\nimport type { CompatibleEditorReadyEvent } from './EditorReadyEvent';\r\nimport type EditorReadyEvent from './EditorReadyEvent';\r\nimport type { CompatibleEntityOperationEvent } from './EntityOperationEvent';\r\nimport type EntityOperationEvent from './EntityOperationEvent';\r\nimport type { CompatibleSelectionChangedEvent } from './SelectionChangeEvent';\r\nimport type SelectionChangedEvent from './SelectionChangeEvent';\r\nimport type { CompatibleZoomChangedEvent } from './ZoomChangedEvent';\r\nimport type ZoomChangedEvent from './ZoomChangedEvent';\r\nimport type { CompatiblePluginDomEvent, PluginDomEvent } from './PluginDomEvent';\r\nimport type {\r\n    CompatibleEnterShadowEditEvent,\r\n    CompatibleLeaveShadowEditEvent,\r\n    EnterShadowEditEvent,\r\n    LeaveShadowEditEvent,\r\n} from './ShadowEditEvent';\r\nimport type { CompatiblePendingFormatStateChangedEvent } from './PendingFormatStateChangedEvent';\r\nimport type PendingFormatStateChangedEvent from './PendingFormatStateChangedEvent';\r\nimport type { CompatibleExtractContentWithDomEvent } from './ExtractContentWithDomEvent';\r\nimport type ExtractContentWithDomEvent from './ExtractContentWithDomEvent';\r\n\r\n/**\r\n * Editor plugin event interface\r\n */\r\nexport type PluginEvent =\r\n    | BeforeCutCopyEvent\r\n    | BeforePasteEvent\r\n    | ContentChangedEvent\r\n    | EntityOperationEvent\r\n    | ExtractContentWithDomEvent\r\n    | PluginDomEvent\r\n    | EditorReadyEvent\r\n    | BeforeDisposeEvent\r\n    | PendingFormatStateChangedEvent\r\n    | EnterShadowEditEvent\r\n    | LeaveShadowEditEvent\r\n    | EditImageEvent\r\n    | BeforeSetContentEvent\r\n    | ZoomChangedEvent\r\n    | SelectionChangedEvent\r\n    | BeforeKeyboardEditingEvent\r\n    | CompatibleBeforeCutCopyEvent\r\n    | CompatibleBeforeDisposeEvent\r\n    | CompatibleBeforePasteEvent\r\n    | CompatibleBeforeSetContentEvent\r\n    | CompatibleContentChangedEvent\r\n    | CompatibleEditImageEvent\r\n    | CompatibleEditorReadyEvent\r\n    | CompatibleEntityOperationEvent\r\n    | CompatibleExtractContentWithDomEvent\r\n    | CompatiblePendingFormatStateChangedEvent\r\n    | CompatiblePluginDomEvent\r\n    | CompatibleEnterShadowEditEvent\r\n    | CompatibleLeaveShadowEditEvent\r\n    | CompatibleZoomChangedEvent\r\n    | CompatibleSelectionChangedEvent\r\n    | CompatibleBeforeKeyboardEditingEvent;\r\n"]}