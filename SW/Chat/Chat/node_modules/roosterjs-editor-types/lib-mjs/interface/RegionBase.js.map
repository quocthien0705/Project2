{"version":3,"file":"RegionBase.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-types/lib/interface/RegionBase.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Represents a DOM region.\n * A region is a range under a given node, and possibly after one child and before another child\n * e.g.\n * ```html\n * <div>\n *   <table>...</table>\n *   <span>...</span>\n *   <span>...</span>\n *   <table>...</table>\n * <div>\n * ```\n * We can define a region under DIV before the second TABLE and after the first TABLE\n *\n * This is used when user's selection go across different TD elements or start from TD and end after\n * that TD (or inverse way). Some block operation should not ruin the TABLE structure, so we need to\n * split the selection into several regions.\n */\nexport default interface RegionBase {\n    /**\n     * Root node of this region\n     */\n    rootNode: HTMLElement;\n\n    /**\n     * A node to define the beginning boundary of this region.\n     * All nodes after this node before nodeAfter and contained by rootNode will be treated contained by this region.\n     */\n    nodeBefore?: Node;\n\n    /**\n     * A node to define the ending boundary of this region.\n     * All nodes before this node after nodeBefore and contained by rootNode will be treated contained by this region.\n     */\n    nodeAfter?: Node;\n\n    /**\n     * Tags that child elements will be skipped\n     */\n    skipTags: string[];\n}\n"]}