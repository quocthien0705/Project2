{"version":3,"file":"UndoSnapshotsService.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-types/lib/interface/UndoSnapshotsService.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Represent an interface to provide functionalities for Undo Snapshots\n */\nexport default interface UndoSnapshotsService<T = string> {\n    /**\n     * Check whether can move current undo snapshot with the given step\n     * @param step The step to check, can be positive, negative or 0\n     * @returns True if can move current snapshot with the given step, otherwise false\n     */\n    canMove(step: number): boolean;\n\n    /**\n     * Move current snapshot with the given step if can move this step. Otherwise no action and return null\n     * @param step The step to move\n     * @returns If can move with the given step, returns the snapshot after move, otherwise null\n     */\n    move(step: number): T | null;\n\n    /**\n     * Add a new undo snapshot\n     * @param snapshot The snapshot to add\n     */\n    addSnapshot(snapshot: T, isAutoCompleteSnapshot: boolean): void;\n\n    /**\n     * Clear all undo snapshots after the current one\n     */\n    clearRedo(): void;\n\n    /**\n     * Whether there is a snapshot added before auto complete and it can be undone now\n     */\n    canUndoAutoComplete(): boolean;\n}\n"]}