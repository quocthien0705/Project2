{"version":3,"file":"InsertOption.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-types/lib/interface/InsertOption.ts"],"names":[],"mappings":"","sourcesContent":["import type { ContentPosition } from '../enum/ContentPosition';\r\nimport type { CompatibleContentPosition } from '../compatibleEnum/ContentPosition';\r\n\r\n/**\r\n * Shared options for insertNode related APIs\r\n */\r\nexport interface InsertOptionBase {\r\n    /**\r\n     * Whether need to update cursor.\r\n     */\r\n    updateCursor?: boolean;\r\n\r\n    /**\r\n     * Boolean flag for inserting the content onto a new line.\r\n     * No-op for ContentPosition.Outside\r\n     */\r\n    insertOnNewLine?: boolean;\r\n\r\n    /**\r\n     * Boolean flag for inserting the content onto a new line.\r\n     * No-op for ContentPosition.Begin, End, and Outside\r\n     */\r\n    replaceSelection?: boolean;\r\n\r\n    /**\r\n     * Boolean flag for inserting the content onto root node of current region.\r\n     * If current position is not at root of region, break parent node until insert can happen at root of region.\r\n     * This option only takes effect when insertOnNewLine is true, otherwise it will be ignored.\r\n     */\r\n    insertToRegionRoot?: boolean;\r\n}\r\n\r\n/**\r\n * The \"basic\" insertNode related ContentPositions that require no additional parameters to use.\r\n */\r\nexport interface InsertOptionBasic extends InsertOptionBase {\r\n    position:\r\n        | ContentPosition.Begin\r\n        | ContentPosition.End\r\n        | ContentPosition.DomEnd\r\n        | ContentPosition.Outside\r\n        | ContentPosition.SelectionStart\r\n        | CompatibleContentPosition.Begin\r\n        | CompatibleContentPosition.End\r\n        | CompatibleContentPosition.DomEnd\r\n        | CompatibleContentPosition.Outside\r\n        | CompatibleContentPosition.SelectionStart;\r\n}\r\n\r\n/**\r\n * The Range variant where insertNode will operate on a range disjointed from the current selection state.\r\n */\r\nexport interface InsertOptionRange extends InsertOptionBase {\r\n    position: ContentPosition.Range | CompatibleContentPosition.Range;\r\n\r\n    /**\r\n     * The range to be targeted when insertion happens.\r\n     */\r\n    range: Range;\r\n}\r\n\r\n/**\r\n * Type definition for the InsertOption, used in the insertNode API.\r\n * The position parameter defines how the node will be inserted.\r\n * In a future revision, this will become strongly typed\r\n * Only parameters applicable to the given position will be accepted.\r\n */\r\nexport type InsertOption = InsertOptionRange | InsertOptionBasic;\r\n"]}