{"version":3,"file":"htmlSanitizerCallbackTypes.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-types/lib/type/htmlSanitizerCallbackTypes.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Element callback, will be called when HtmlSanitizer process an element with the given tag\n * @param element The HTML element\n * @param context A context object to store values which can used for communicating among callbacks\n * @returns True if this element should be kept, otherwise false\n */\nexport type ElementCallback = (element: HTMLElement, context: Object) => boolean;\n\n/**\n * Attribute callback, will be called when HtmlSanitizer process an attribute with given name\n * @param value Value of the attribute\n * @param element The HTML element contains this attribute\n * @param context A context object to store values which can used for communicating among callbacks\n * @returns null to remove this attribute, otherwise keep the attribute with the value returned\n */\nexport type AttributeCallback = (value: string, element: HTMLElement, context: Object) => string;\n\n/**\n * Style callback, will be called when HtmlSanitizer process an inline CSS style with given name\n * @param value Value of the CSS rule\n * @param element The HTML element contains this CSS style\n * @param thisStyle Current values of known inheritable styles\n * @param context A context object to store values which can used for communicating among callbacks\n * @returns True if this rule should be kept, otherwise false\n */\nexport type CssStyleCallback = (\n    value: string,\n    element: HTMLElement,\n    thisStyle: StringMap,\n    context: Object\n) => boolean;\n\n/**\n * A map of elements callback. Tag name should be in upper case\n */\nexport type ElementCallbackMap = Record<string, ElementCallback>;\n\n/**\n * A map of attribute callbacks. Tag name should be in lower case\n */\nexport type AttributeCallbackMap = Record<string, AttributeCallback>;\n\n/**\n * A map of style callbacks. Style name should be in lower case\n */\nexport type CssStyleCallbackMap = Record<string, CssStyleCallback>;\n\n/**\n * A map of predefined CSS styles for elements\n */\nexport type PredefinedCssMap = Record<string, StringMap>;\n\n/**\n * A map of attribute callbacks. Tag name should be in lower case\n */\nexport type StringMap = Record<string, string>;\n"]}