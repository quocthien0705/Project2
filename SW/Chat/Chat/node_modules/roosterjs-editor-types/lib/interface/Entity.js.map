{"version":3,"file":"Entity.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-types/lib/interface/Entity.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Represents an entity in editor.\n * An entity is an HTML element with special CSS classes and will be treated as an atom from the editor.\n * Editor provides basic operations and will trigger related events to let plugins know that there is\n * operation target to an entity.\n * Plugin can insert/remove an entity, handle entity events, query entities within the editor.\n * Plugin can also set an entity to be readonly so that user can't modify content within an entity.\n */\nexport default interface Entity {\n    /**\n     * Type of this entity. Specified when insert an entity, can be an valid CSS class-like string.\n     */\n    type: string;\n\n    /**\n     * Id of this entity, generated by editor code and will be unique within an editor\n     */\n    id: string;\n\n    /**\n     * The wrapper DOM node of this entity which holds the info CSS classes of this entity\n     */\n    wrapper: HTMLElement;\n\n    /**\n     * Whether this is a readonly entity\n     */\n    isReadonly: boolean;\n}\n"]}