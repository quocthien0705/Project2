{"version":3,"file":"ContentChangedData.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-types/lib/interface/ContentChangedData.ts"],"names":[],"mappings":"","sourcesContent":["import type AnnounceData from './AnnounceData';\nimport type { EntityState } from './Snapshot';\n\n/**\n * Property that is going to store additional data related to the Content Changed Event\n */\nexport default interface ContentChangedData {\n    /**\n     * Optional property to store the format api name when using ChangeSource.Format\n     */\n    formatApiName?: string;\n\n    /**\n     * @optional Get entity states related to the snapshot. If it returns entity states, each state will cause\n     * an EntityOperation event with operation = EntityOperation.UpdateEntityState when undo/redo to this snapshot\n     * @returns Related entity state array\n     */\n    getEntityState?: () => EntityState[];\n\n    /**\n     * @optional\n     * Get Announce data from this content changed event.\n     * @returns\n     */\n    getAnnounceData?: () => AnnounceData | undefined;\n}\n"]}