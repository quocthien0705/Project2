{"version":3,"file":"GetContentMode.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-types/lib/enum/GetContentMode.ts"],"names":[],"mappings":";;;;IAAA;;OAEG;IACH,6CAA6C;IAC7C,IAAkB,cAgCjB;IAhCD,WAAkB,cAAc;QAC5B;;;;;WAKG;QACH,6DAAa,CAAA;QAEb;;WAEG;QACH,iEAAe,CAAA;QAEf;;;;WAIG;QACH,mFAAwB,CAAA;QAExB;;WAEG;QACH,6DAAS,CAAA;QAET;;;;WAIG;QACH,qEAAa,CAAA;IACjB,CAAC,EAhCiB,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAgC/B","sourcesContent":["/**\n * Represents a mode number to indicate what kind of content to retrieve when call Editor.getContent()\n */\n// eslint-disable-next-line etc/no-const-enum\nexport const enum GetContentMode {\n    /**\n     * The clean content without any temporary content only for editor.\n     * This is the default value. Call to Editor.getContent() with trigger an ExtractContentWithDom event\n     * so that plugins can remove their temporary content, and will return the HTML content\n     * which is ready for save to storage.\n     */\n    CleanHTML = 0,\n\n    /**\n     * Retrieve the raw HTML string in current editor. Temporary content will be included.\n     */\n    RawHTMLOnly = 1,\n\n    /**\n     * Retrieve the raw HTML string in current editor with a selection marker. This can be used for\n     * save current editor state and call to SetContent with this result can fully restore editor state\n     * including current selection\n     */\n    RawHTMLWithSelection = 2,\n\n    /**\n     * Get plain text content only, all format will be ignored\n     */\n    PlainText,\n\n    /**\n     * A fast way to get plain text content, the line-end positions may not be exactly same with HTML content,\n     * but the text content should be the same. This is used for quickly retrieve text content and check\n     * text only\n     */\n    PlainTextFast,\n}\n"]}