{"version":3,"file":"ClipboardData.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-types/lib/interface/ClipboardData.ts"],"names":[],"mappings":"","sourcesContent":["import type EdgeLinkPreview from '../browser/EdgeLinkPreview';\r\n\r\n/**\r\n * An object contains all related data for pasting\r\n */\r\nexport default interface ClipboardData {\r\n    /**\r\n     * Available types from clipboard event\r\n     */\r\n    types: string[];\r\n\r\n    /**\r\n     * Plain text from clipboard event\r\n     */\r\n    text: string;\r\n\r\n    /**\r\n     * HTML string from clipboard event.\r\n     * When set to null, it means there's no HTML from clipboard event.\r\n     * When set to undefined, it means there may be HTML in clipboard event, but fail to retrieve\r\n     */\r\n    rawHtml: string | null | undefined;\r\n\r\n    /**\r\n     * Link Preview information provided by Edge\r\n     */\r\n    linkPreview?: EdgeLinkPreview;\r\n\r\n    /**\r\n     * Image file from clipboard event\r\n     */\r\n    image: File | null;\r\n\r\n    /**\r\n     * General file from clipboard event\r\n     */\r\n    files?: File[];\r\n\r\n    /**\r\n     * Html extracted from raw html string and remove content before and after fragment tag\r\n     */\r\n    html?: string;\r\n\r\n    /**\r\n     * An editor content snapshot before pasting happens. This is used for changing paste format\r\n     */\r\n    snapshotBeforePaste?: string;\r\n\r\n    /**\r\n     * BASE64 encoded data uri of the image if any\r\n     */\r\n    imageDataUri?: string | null;\r\n\r\n    /**\r\n     * Array of tag names of the first level child nodes\r\n     */\r\n    htmlFirstLevelChildTags?: string[];\r\n\r\n    /**\r\n     * Value of custom paste type. By default it is always empty.\r\n     * To allow custom paste type, pass the allowed types to EditorOptions.allowedCustomPasteType\r\n     */\r\n    customValues: Record<string, string>;\r\n\r\n    /**\r\n     * If true, the event was triggered by a native paste event (keyboard or native context menu paste)\r\n     */\r\n    readonly pasteNativeEvent?: boolean;\r\n}\r\n"]}