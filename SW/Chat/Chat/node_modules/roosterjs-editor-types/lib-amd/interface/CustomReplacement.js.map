{"version":3,"file":"CustomReplacement.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-types/lib/interface/CustomReplacement.ts"],"names":[],"mappings":"","sourcesContent":["import type IEditor from './IEditor';\n\n/**\n * An interface to define a replacement rule for CustomReplace plugin\n */\nexport default interface CustomReplacement {\n    /**\n     * Source string to replace from\n     */\n    sourceString: string;\n\n    /**\n     * HTML string to replace to\n     */\n    replacementHTML: string;\n\n    /**\n     * Whether the matching should be case sensitive\n     */\n    matchSourceCaseSensitive: boolean;\n\n    /**\n     * A callback to check if the string should be replaced\n     * @param content the content where the string is\n     * @param replacement string to be replaced\n     * @param sourceEditor reference to the editor, allows for more complex replacement rules\n     * @return true, if the string should be replaced, else return false\n     */\n    shouldReplace?: (\n        replacement: CustomReplacement,\n        content: string,\n        sourceEditor?: IEditor\n    ) => boolean;\n}\n"]}