{"version":3,"file":"NodePosition.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-types/lib/interface/NodePosition.ts"],"names":[],"mappings":"","sourcesContent":["/**\r\n * Represent a position in DOM tree by the node and its offset index\r\n */\r\nexport default interface NodePosition {\r\n    readonly node: Node;\r\n    readonly element: HTMLElement;\r\n    readonly offset: number;\r\n    readonly isAtEnd: boolean;\r\n\r\n    /**\r\n     * Normalize this position to the leaf node, return the normalize result.\r\n     * If current position is already using leaf node, return this position object itself\r\n     */\r\n    normalize(): NodePosition;\r\n\r\n    /**\r\n     * Check if this position is equal to the given position\r\n     * @param position The position to check\r\n     */\r\n    equalTo(position: NodePosition): boolean;\r\n\r\n    /**\r\n     * Checks if this position is after the given position\r\n     * @param position The position to check\r\n     */\r\n    isAfter(position: NodePosition): boolean;\r\n\r\n    /**\r\n     * Move this position with offset, returns a new position with a valid offset in the same node\r\n     * @param offset Offset to move with\r\n     */\r\n    move(offset: number): NodePosition;\r\n}\r\n"]}