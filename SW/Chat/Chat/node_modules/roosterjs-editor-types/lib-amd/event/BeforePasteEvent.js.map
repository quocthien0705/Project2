{"version":3,"file":"BeforePasteEvent.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-types/lib/event/BeforePasteEvent.ts"],"names":[],"mappings":"","sourcesContent":["import type BasePluginEvent from './BasePluginEvent';\r\nimport type ClipboardData from '../interface/ClipboardData';\r\nimport type HtmlSanitizerOptions from '../interface/HtmlSanitizerOptions';\r\nimport type { PluginEventType } from '../enum/PluginEventType';\r\nimport type { CompatiblePasteType } from '../compatibleEnum/PasteType';\r\nimport type { PasteType } from '../enum/PasteType';\r\nimport type { CompatiblePluginEventType } from '../compatibleEnum/PluginEventType';\r\n\r\n/**\r\n * Data of BeforePasteEvent\r\n */\r\nexport interface BeforePasteEventData {\r\n    /**\r\n     * An object contains all related data for pasting\r\n     */\r\n    clipboardData: ClipboardData;\r\n\r\n    /**\r\n     * HTML Document Fragment which will be inserted into content\r\n     */\r\n    fragment: DocumentFragment;\r\n\r\n    /**\r\n     * Html sanitizing options. This will be used for sanitizing the html content before paste\r\n     */\r\n    sanitizingOption: Required<HtmlSanitizerOptions>;\r\n\r\n    /**\r\n     * Stripped HTML string before \"StartFragment\" comment\r\n     */\r\n    htmlBefore: string;\r\n\r\n    /**\r\n     * Stripped HTML string after \"EndFragment\" comment\r\n     */\r\n    htmlAfter: string;\r\n\r\n    /**\r\n     * Attributes of the root \"HTML\" tag\r\n     */\r\n    htmlAttributes: Record<string, string>;\r\n\r\n    /**\r\n     * Paste type option (as plain text, merge format, normal, as image)\r\n     */\r\n    readonly pasteType: PasteType | CompatiblePasteType;\r\n}\r\n\r\n/**\r\n * Provides a chance for plugin to change the content before it is pasted into editor.\r\n */\r\nexport default interface BeforePasteEvent\r\n    extends BeforePasteEventData,\r\n        BasePluginEvent<PluginEventType.BeforePaste> {}\r\n\r\n/**\r\n * Provides a chance for plugin to change the content before it is pasted into editor.\r\n */\r\nexport interface CompatibleBeforePasteEvent\r\n    extends BeforePasteEventData,\r\n        BasePluginEvent<CompatiblePluginEventType.BeforePaste> {}\r\n"]}