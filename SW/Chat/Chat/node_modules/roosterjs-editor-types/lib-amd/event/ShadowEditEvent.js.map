{"version":3,"file":"ShadowEditEvent.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-types/lib/event/ShadowEditEvent.ts"],"names":[],"mappings":"","sourcesContent":["import type BasePluginEvent from './BasePluginEvent';\nimport type SelectionPath from '../interface/SelectionPath';\nimport type { PluginEventType } from '../enum/PluginEventType';\nimport type { CompatiblePluginEventType } from '../compatibleEnum/PluginEventType';\n\n/**\n * Data of EnterShadowEditEvent\n */\nexport interface EnterShadowEditEventData {\n    /**\n     * The document fragment of original editor content\n     */\n    fragment: DocumentFragment;\n\n    /**\n     * The selection path of original editor content\n     */\n    selectionPath: SelectionPath | null;\n}\n\n/**\n * A plugin triggered right after editor has entered Shadow Edit mode\n */\nexport interface EnterShadowEditEvent\n    extends EnterShadowEditEventData,\n        BasePluginEvent<PluginEventType.EnteredShadowEdit> {}\n\n/**\n * A plugin triggered right before editor leave Shadow Edit mode\n */\nexport interface LeaveShadowEditEvent extends BasePluginEvent<PluginEventType.LeavingShadowEdit> {}\n\n/**\n * A plugin triggered right after editor has entered Shadow Edit mode\n */\nexport interface CompatibleEnterShadowEditEvent\n    extends EnterShadowEditEventData,\n        BasePluginEvent<CompatiblePluginEventType.EnteredShadowEdit> {}\n\n/**\n * A plugin triggered right before editor leave Shadow Edit mode\n */\nexport interface CompatibleLeaveShadowEditEvent\n    extends BasePluginEvent<CompatiblePluginEventType.LeavingShadowEdit> {}\n"]}