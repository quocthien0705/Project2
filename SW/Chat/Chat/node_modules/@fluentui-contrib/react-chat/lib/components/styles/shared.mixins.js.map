{"version":3,"sources":["../../../../../../packages/react-chat/src/components/styles/shared.mixins.ts"],"sourcesContent":["import type { GriffelStyle } from '@fluentui/react-components';\nimport {\n  createFocusOutlineStyle,\n  shorthands,\n  tokens,\n} from '@fluentui/react-components';\n\n/*\n * This file has styles mixins shared by all chat message components\n */\n\n/** apply focus outline and font styles to chat message */\nconst bodyBaseStyles: GriffelStyle = {\n  position: 'relative',\n  ...createFocusOutlineStyle(),\n\n  fontFamily: tokens.fontFamilyBase,\n  fontWeight: tokens.fontWeightRegular, // 400\n  fontSize: tokens.fontSizeBase300, // 14px\n  lineHeight: tokens.lineHeightBase300, // 20px\n\n  color: tokens.colorNeutralForeground1,\n\n  wordBreak: 'break-word',\n};\n\nconst isOnlyReadableByScreenReaderStyles: GriffelStyle = {\n  clip: 'rect(0px, 0px, 0px, 0px)',\n  height: '1px',\n  ...shorthands.margin('-1px'),\n  ...shorthands.overflow('hidden'),\n  ...shorthands.padding('0px'),\n  width: '1px',\n  position: 'absolute',\n};\n\nconst statusRedStyles: GriffelStyle = {\n  color: tokens.colorPaletteRedForeground3,\n};\n\n/** apply styles to container of reaction buttons */\nconst reactionsBaseStyles: GriffelStyle = {\n  position: 'relative',\n  height: '0px',\n  display: 'flex',\n};\n\n/**\n * highlight message by background color and stroke color\n */\nconst highlightAnimation: GriffelStyle = {\n  animationIterationCount: '1',\n  animationDuration: '4s',\n  animationTimingFunction: 'ease-out',\n  animationName: {\n    from: {\n      backgroundColor: tokens.colorPaletteMarigoldBackground1,\n      boxShadow: `inset 0 0 0 0.1rem ${tokens.colorPaletteDarkOrangeBorderActive}`,\n    },\n    to: {\n      boxShadow: `inset 0 0 0 0.1rem transparent`,\n    },\n  },\n};\n\nexport {\n  bodyBaseStyles,\n  isOnlyReadableByScreenReaderStyles,\n  statusRedStyles,\n  reactionsBaseStyles,\n  highlightAnimation,\n};\n"],"names":["createFocusOutlineStyle","shorthands","tokens","bodyBaseStyles","position","fontFamily","fontFamilyBase","fontWeight","fontWeightRegular","fontSize","fontSizeBase300","lineHeight","lineHeightBase300","color","colorNeutralForeground1","wordBreak","isOnlyReadableByScreenReaderStyles","clip","height","margin","overflow","padding","width","statusRedStyles","colorPaletteRedForeground3","reactionsBaseStyles","display","highlightAnimation","animationIterationCount","animationDuration","animationTimingFunction","animationName","from","backgroundColor","colorPaletteMarigoldBackground1","boxShadow","colorPaletteDarkOrangeBorderActive","to"],"mappings":"AACA,SACEA,uBAAuB,EACvBC,UAAU,EACVC,MAAM,QACD,6BAA6B;AAEpC;;CAEC,GAED,wDAAwD,GACxD,MAAMC,iBAA+B;IACnCC,UAAU;IACV,GAAGJ,yBAAyB;IAE5BK,YAAYH,OAAOI,cAAc;IACjCC,YAAYL,OAAOM,iBAAiB;IACpCC,UAAUP,OAAOQ,eAAe;IAChCC,YAAYT,OAAOU,iBAAiB;IAEpCC,OAAOX,OAAOY,uBAAuB;IAErCC,WAAW;AACb;AAEA,MAAMC,qCAAmD;IACvDC,MAAM;IACNC,QAAQ;IACR,GAAGjB,WAAWkB,MAAM,CAAC,OAAO;IAC5B,GAAGlB,WAAWmB,QAAQ,CAAC,SAAS;IAChC,GAAGnB,WAAWoB,OAAO,CAAC,MAAM;IAC5BC,OAAO;IACPlB,UAAU;AACZ;AAEA,MAAMmB,kBAAgC;IACpCV,OAAOX,OAAOsB,0BAA0B;AAC1C;AAEA,kDAAkD,GAClD,MAAMC,sBAAoC;IACxCrB,UAAU;IACVc,QAAQ;IACRQ,SAAS;AACX;AAEA;;CAEC,GACD,MAAMC,qBAAmC;IACvCC,yBAAyB;IACzBC,mBAAmB;IACnBC,yBAAyB;IACzBC,eAAe;QACbC,MAAM;YACJC,iBAAiB/B,OAAOgC,+BAA+B;YACvDC,WAAW,CAAC,mBAAmB,EAAEjC,OAAOkC,kCAAkC,CAAC,CAAC;QAC9E;QACAC,IAAI;YACFF,WAAW,CAAC,8BAA8B,CAAC;QAC7C;IACF;AACF;AAEA,SACEhC,cAAc,EACda,kCAAkC,EAClCO,eAAe,EACfE,mBAAmB,EACnBE,kBAAkB,GAClB"}