{"version":3,"sources":["../../../../../../packages/react-chat/src/components/ChatMessage/ChatMessage.styles.ts"],"sourcesContent":["import {\n  makeStyles,\n  mergeClasses,\n  shorthands,\n  tokens,\n} from '@fluentui/react-components';\nimport type { ChatMessageSlots, ChatMessageState } from './ChatMessage.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport {\n  bodyBaseStyles,\n  reactionsBaseStyles,\n  isOnlyReadableByScreenReaderStyles,\n  highlightAnimation,\n} from '../styles/shared.mixins';\nimport { useDecorationClasses } from '../styles/shared.styles';\n\nexport const chatMessageClassNames: SlotClassNames<ChatMessageSlots> = {\n  root: 'fui-ChatMessage',\n  author: 'fui-ChatMessage__author',\n  avatar: 'fui-ChatMessage__avatar',\n  body: 'fui-ChatMessage__body',\n  decorationIcon: 'fui-ChatMessage__decorationIcon',\n  decorationLabel: 'fui-ChatMessage__decorationLabel',\n  details: 'fui-ChatMessage__details',\n  reactions: 'fui-ChatMessage__reactions',\n  timestamp: 'fui-ChatMessage__timestamp',\n};\n\n/**\n * Styles for the root slot\n */\nexport const useChatMessageClasses = makeStyles({\n  container: {\n    display: 'flex',\n    columnGap: '8px',\n    paddingTop: '16px',\n  },\n  attachedContainer: {\n    paddingTop: '2px',\n  },\n  avatarLessContainer: {\n    marginLeft: '40px',\n  },\n  avatar: {\n    minWidth: '32px',\n  },\n});\n\nexport const useChatMessageBodyClasses = makeStyles({\n  base: {\n    ...bodyBaseStyles,\n\n    ...shorthands.borderRadius('4px'),\n    ...shorthands.padding('8px', '16px', '16px', '16px'),\n    maxWidth: 'calc(100% - 100px)',\n\n    backgroundColor: tokens.colorNeutralBackground3,\n  },\n  hasReactions: {\n    marginBottom: '12px',\n  },\n  hasDecorationIcon: {\n    ...shorthands.borderLeft('3px', 'solid', tokens.colorPaletteRedForeground3),\n  },\n\n  nameLineWrapper: {\n    display: 'flex',\n    columnGap: '12px',\n\n    fontSize: '12px',\n    lineHeight: '16px',\n    color: tokens.colorNeutralForeground3,\n\n    alignItems: 'center',\n  },\n\n  details: {\n    display: 'flex',\n    columnGap: '6px',\n    alignItems: 'center',\n  },\n\n  decorationLabel: {\n    fontWeight: 700,\n    fontSize: '12px',\n    lineHeight: '16px',\n    textTransform: 'uppercase',\n  },\n\n  reactions: {\n    ...reactionsBaseStyles,\n    paddingRight: '20px',\n  },\n\n  decorationIcon: {\n    color: 'white',\n    backgroundColor: tokens.colorPaletteRedForeground3,\n    height: '24px',\n    width: '24px',\n    ...shorthands.borderRadius('50%'),\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n\n    fontSize: '20px',\n\n    transform: 'translateX(50%)',\n    position: 'absolute',\n    top: '4px',\n    right: '0px',\n  },\n\n  screenReaderContainer: isOnlyReadableByScreenReaderStyles,\n\n  animation: highlightAnimation,\n});\n\n/**\n * Apply styling to the ChatMessage slots based on the state\n */\nexport const useChatMessageStyles_unstable = (state: ChatMessageState) => {\n  const classes = useChatMessageClasses();\n  state.root.className = mergeClasses(\n    chatMessageClassNames.root,\n    classes.container,\n    state.attached && state.attached !== 'top' && classes.attachedContainer,\n    !state.avatar && classes.avatarLessContainer,\n    state.root.className\n  );\n\n  if (state.avatar) {\n    state.avatar.className = mergeClasses(\n      chatMessageClassNames.avatar,\n      classes.avatar,\n      state.avatar.className\n    );\n  }\n\n  const bodyClasses = useChatMessageBodyClasses();\n  if (state.body) {\n    state.body.className = mergeClasses(\n      chatMessageClassNames.body,\n      bodyClasses.base,\n      state.reactions && bodyClasses.hasReactions,\n      state.decorationIcon && bodyClasses.hasDecorationIcon,\n      state.showAnimation && bodyClasses.animation,\n      state.body.className\n    );\n  }\n\n  if (state.author) {\n    state.author.className = mergeClasses(\n      chatMessageClassNames.author,\n      state.attached &&\n        state.attached !== 'top' &&\n        bodyClasses.screenReaderContainer,\n      state.author.className\n    );\n  }\n\n  if (state.timestamp) {\n    state.timestamp.className = mergeClasses(\n      chatMessageClassNames.timestamp,\n      state.attached &&\n        state.attached !== 'top' &&\n        bodyClasses.screenReaderContainer,\n      state.timestamp.className\n    );\n  }\n\n  if (state.details) {\n    state.details.className = mergeClasses(\n      chatMessageClassNames.details,\n      bodyClasses.details,\n      state.details.className\n    );\n  }\n\n  const decorationClasses = useDecorationClasses();\n\n  if (state.decorationLabel) {\n    state.decorationLabel.className = mergeClasses(\n      chatMessageClassNames.decorationLabel,\n      bodyClasses.decorationLabel,\n      state.decoration && decorationClasses.default,\n      state.decoration === 'mention' && decorationClasses.mention,\n      state.decorationLabel.className\n    );\n  }\n\n  if (state.decorationIcon) {\n    state.decorationIcon.className = mergeClasses(\n      chatMessageClassNames.decorationIcon,\n      bodyClasses.decorationIcon,\n      state.decorationIcon.className\n    );\n  }\n\n  if (state.reactions) {\n    state.reactions.className = mergeClasses(\n      chatMessageClassNames.reactions,\n      bodyClasses.reactions,\n      state.reactions.className\n    );\n  }\n\n  state.nameLineClassName = bodyClasses.nameLineWrapper;\n\n  return state;\n};\n"],"names":["makeStyles","mergeClasses","shorthands","tokens","bodyBaseStyles","reactionsBaseStyles","isOnlyReadableByScreenReaderStyles","highlightAnimation","useDecorationClasses","chatMessageClassNames","root","author","avatar","body","decorationIcon","decorationLabel","details","reactions","timestamp","useChatMessageClasses","container","display","columnGap","paddingTop","attachedContainer","avatarLessContainer","marginLeft","minWidth","useChatMessageBodyClasses","base","borderRadius","padding","maxWidth","backgroundColor","colorNeutralBackground3","hasReactions","marginBottom","hasDecorationIcon","borderLeft","colorPaletteRedForeground3","nameLineWrapper","fontSize","lineHeight","color","colorNeutralForeground3","alignItems","fontWeight","textTransform","paddingRight","height","width","justifyContent","transform","position","top","right","screenReaderContainer","animation","useChatMessageStyles_unstable","state","classes","className","attached","bodyClasses","showAnimation","decorationClasses","decoration","default","mention","nameLineClassName"],"mappings":"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"}