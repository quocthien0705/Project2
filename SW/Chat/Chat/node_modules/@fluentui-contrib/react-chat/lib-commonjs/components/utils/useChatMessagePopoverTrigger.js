"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useChatMessagePopoverTrigger", {
    enumerable: true,
    get: function() {
        return useChatMessagePopoverTrigger;
    }
});
const _interop_require_wildcard = require("@swc/helpers/_/_interop_require_wildcard");
const _react = /*#__PURE__*/ _interop_require_wildcard._(require("react"));
const _reactcomponents = require("@fluentui/react-components");
const _useEventCallback = require("./useEventCallback");
const _mergeCallbacks = require("./mergeCallbacks");
const useChatMessagePopoverTrigger = (state)=>{
    // V9 PopoverTrigger uses useARIAButtonProps and triggers click event on space key.
    // We don't want this behavior because it means we can't type with space key in the `input` within chat message.
    // If we don't do custom trigger, we'd have to stop keydown/keyup propagation for space key within chat message children.
    // Also v9 PopoverTrigger toggles popover on click, but we want to disable this behavior. Therefore customize trigger is a good option.
    const setOpen = (0, _reactcomponents.usePopoverContext_unstable)((context)=>context.setOpen);
    const triggerRef = (0, _reactcomponents.usePopoverContext_unstable)((context)=>context.triggerRef);
    const onMouseEnter = (e)=>{
        setOpen(e, true);
    };
    const onMouseLeave = (e)=>{
        setOpen(e, false);
    };
    state.body.onMouseEnter = (0, _useEventCallback.useEventCallback)((0, _mergeCallbacks.mergeCallbacks)(state.body.onMouseEnter, onMouseEnter));
    state.body.onMouseLeave = (0, _useEventCallback.useEventCallback)((0, _mergeCallbacks.mergeCallbacks)(state.body.onMouseLeave, onMouseLeave));
    state.body.ref = (0, _reactcomponents.useMergedRefs)(state.body.ref, triggerRef);
};

//# sourceMappingURL=useChatMessagePopoverTrigger.js.map