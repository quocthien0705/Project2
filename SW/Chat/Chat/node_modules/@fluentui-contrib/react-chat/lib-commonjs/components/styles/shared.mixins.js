"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    bodyBaseStyles: function() {
        return bodyBaseStyles;
    },
    isOnlyReadableByScreenReaderStyles: function() {
        return isOnlyReadableByScreenReaderStyles;
    },
    statusRedStyles: function() {
        return statusRedStyles;
    },
    reactionsBaseStyles: function() {
        return reactionsBaseStyles;
    },
    highlightAnimation: function() {
        return highlightAnimation;
    }
});
const _reactcomponents = require("@fluentui/react-components");
/*
 * This file has styles mixins shared by all chat message components
 */ /** apply focus outline and font styles to chat message */ const bodyBaseStyles = {
    position: 'relative',
    ...(0, _reactcomponents.createFocusOutlineStyle)(),
    fontFamily: _reactcomponents.tokens.fontFamilyBase,
    fontWeight: _reactcomponents.tokens.fontWeightRegular,
    fontSize: _reactcomponents.tokens.fontSizeBase300,
    lineHeight: _reactcomponents.tokens.lineHeightBase300,
    color: _reactcomponents.tokens.colorNeutralForeground1,
    wordBreak: 'break-word'
};
const isOnlyReadableByScreenReaderStyles = {
    clip: 'rect(0px, 0px, 0px, 0px)',
    height: '1px',
    ..._reactcomponents.shorthands.margin('-1px'),
    ..._reactcomponents.shorthands.overflow('hidden'),
    ..._reactcomponents.shorthands.padding('0px'),
    width: '1px',
    position: 'absolute'
};
const statusRedStyles = {
    color: _reactcomponents.tokens.colorPaletteRedForeground3
};
/** apply styles to container of reaction buttons */ const reactionsBaseStyles = {
    position: 'relative',
    height: '0px',
    display: 'flex'
};
/**
 * highlight message by background color and stroke color
 */ const highlightAnimation = {
    animationIterationCount: '1',
    animationDuration: '4s',
    animationTimingFunction: 'ease-out',
    animationName: {
        from: {
            backgroundColor: _reactcomponents.tokens.colorPaletteMarigoldBackground1,
            boxShadow: `inset 0 0 0 0.1rem ${_reactcomponents.tokens.colorPaletteDarkOrangeBorderActive}`
        },
        to: {
            boxShadow: `inset 0 0 0 0.1rem transparent`
        }
    }
};

//# sourceMappingURL=shared.mixins.js.map