{"version":3,"file":"PendingFormatStatePlugin.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-core/lib/corePlugins/PendingFormatStatePlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChangeSource, Keys, PluginEventType, PositionType } from 'roosterjs-editor-types';\nimport { isCharacterValue, Position, setColor } from 'roosterjs-editor-dom';\nimport type {\n    IEditor,\n    NodePosition,\n    PendingFormatStatePluginState,\n    PluginEvent,\n    PluginWithState,\n} from 'roosterjs-editor-types';\n\nconst ZERO_WIDTH_SPACE = '\\u200B';\n\n/**\n * @internal\n * PendingFormatStatePlugin handles pending format state management\n */\nexport default class PendingFormatStatePlugin\n    implements PluginWithState<PendingFormatStatePluginState> {\n    private editor: IEditor | null = null;\n    private state: PendingFormatStatePluginState;\n\n    /**\n     * Construct a new instance of PendingFormatStatePlugin\n     * @param options The editor options\n     * @param contentDiv The editor content DIV\n     */\n    constructor() {\n        this.state = {\n            pendableFormatPosition: null,\n            pendableFormatState: null,\n            pendableFormatSpan: null,\n        };\n    }\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'PendingFormatState';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.editor = null;\n        this.clear();\n    }\n\n    /**\n     * Get plugin state object\n     */\n    getState() {\n        return this.state;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        switch (event.eventType) {\n            case PluginEventType.PendingFormatStateChanged:\n                // Got PendingFormatStateChanged event, cache current position and pending format if a format is passed in\n                // otherwise clear existing pending format.\n                if (event.formatState) {\n                    this.state.pendableFormatPosition = this.getCurrentPosition();\n                    this.state.pendableFormatState = event.formatState;\n                    this.state.pendableFormatSpan = event.formatCallback\n                        ? this.createPendingFormatSpan(event.formatCallback)\n                        : null;\n                } else {\n                    this.clear();\n                }\n\n                break;\n            case PluginEventType.KeyDown:\n            case PluginEventType.MouseDown:\n            case PluginEventType.ContentChanged:\n                let currentPosition: NodePosition | null = null;\n                if (\n                    this.editor &&\n                    event.eventType == PluginEventType.KeyDown &&\n                    isCharacterValue(event.rawEvent) &&\n                    this.state.pendableFormatSpan\n                ) {\n                    this.state.pendableFormatSpan.removeAttribute('contentEditable');\n                    this.editor.insertNode(this.state.pendableFormatSpan);\n                    this.editor.select(\n                        this.state.pendableFormatSpan,\n                        PositionType.Begin,\n                        this.state.pendableFormatSpan,\n                        PositionType.End\n                    );\n                    this.clear();\n                } else if (\n                    (event.eventType == PluginEventType.KeyDown &&\n                        event.rawEvent.which >= Keys.PAGEUP &&\n                        event.rawEvent.which <= Keys.DOWN) ||\n                    (this.state.pendableFormatPosition &&\n                        (currentPosition = this.getCurrentPosition()) &&\n                        !this.state.pendableFormatPosition.equalTo(currentPosition)) ||\n                    (event.eventType == PluginEventType.ContentChanged &&\n                        (event.source == ChangeSource.SwitchToDarkMode ||\n                            event.source == ChangeSource.SwitchToLightMode))\n                ) {\n                    // If content or position is changed (by keyboard, mouse, or code),\n                    // check if current position is still the same with the cached one (if exist),\n                    // and clear cached format if position is changed since it is out-of-date now\n                    this.clear();\n                }\n\n                break;\n        }\n    }\n\n    private clear() {\n        this.state.pendableFormatPosition = null;\n        this.state.pendableFormatState = null;\n        this.state.pendableFormatSpan = null;\n    }\n\n    private getCurrentPosition() {\n        const range = this.editor?.getSelectionRange();\n        return (range && Position.getStart(range).normalize()) ?? null;\n    }\n\n    private createPendingFormatSpan(\n        callback: (element: HTMLElement, isInnerNode?: boolean) => any\n    ) {\n        let span = this.state.pendableFormatSpan;\n\n        if (!span && this.editor) {\n            const currentStyle = this.editor.getStyleBasedFormatState();\n            const doc = this.editor.getDocument();\n            const isDarkMode = this.editor.isDarkMode();\n\n            span = doc.createElement('span');\n            span.contentEditable = 'true';\n            span.appendChild(doc.createTextNode(ZERO_WIDTH_SPACE));\n\n            span.style.setProperty('font-family', currentStyle.fontName ?? null);\n            span.style.setProperty('font-size', currentStyle.fontSize ?? null);\n\n            const darkColorHandler = this.editor.getDarkColorHandler();\n\n            if (currentStyle.textColors || currentStyle.textColor) {\n                setColor(\n                    span,\n                    (currentStyle.textColors || currentStyle.textColor)!,\n                    false /*isBackground*/,\n                    isDarkMode,\n                    false /*shouldAdaptFontColor*/,\n                    darkColorHandler\n                );\n            }\n\n            if (currentStyle.backgroundColors || currentStyle.backgroundColor) {\n                setColor(\n                    span,\n                    (currentStyle.backgroundColors || currentStyle.backgroundColor)!,\n                    true /*isBackground*/,\n                    isDarkMode,\n                    false /*shouldAdaptFontColor*/,\n                    darkColorHandler\n                );\n            }\n        }\n\n        if (span) {\n            callback(span);\n        }\n\n        return span;\n    }\n}\n"]}