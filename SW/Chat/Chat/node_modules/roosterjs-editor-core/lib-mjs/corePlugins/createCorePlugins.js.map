{"version":3,"file":"createCorePlugins.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-core/lib/corePlugins/createCorePlugins.ts"],"names":[],"mappings":"AAAA,OAAO,eAAe,MAAM,mBAAmB,CAAC;AAChD,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAC9C,OAAO,UAAU,MAAM,cAAc,CAAC;AACtC,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAC1C,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAC9C,OAAO,eAAe,MAAM,mBAAmB,CAAC;AAChD,OAAO,aAAa,MAAM,iBAAiB,CAAC;AAC5C,OAAO,oBAAoB,MAAM,wBAAwB,CAAC;AAC1D,OAAO,wBAAwB,MAAM,4BAA4B,CAAC;AAClE,OAAO,qBAAqB,MAAM,yBAAyB,CAAC;AAC5D,OAAO,UAAU,MAAM,cAAc,CAAC;AAUtC;;;;;GAKG;AACH,MAAM,CAAC,OAAO,UAAU,iBAAiB,CACrC,UAA0B,EAC1B,OAAsB;IAEtB,IAAM,GAAG,GAAG,OAAO,CAAC,kBAAkB,IAAI,EAAE,CAAC;IAC7C,wFAAwF;IACxF,gCAAgC;IAChC,OAAO;QACH,eAAe,EAAE,GAAG,CAAC,eAAe,IAAI,IAAI,qBAAqB,EAAE;QACnE,IAAI,EAAE,GAAG,CAAC,IAAI,IAAI,IAAI,UAAU,EAAE;QAClC,kBAAkB,EAAE,GAAG,CAAC,kBAAkB,IAAI,IAAI,wBAAwB,EAAE;QAC5E,YAAY,EAAE,IAAI;QAClB,aAAa,EAAE,IAAK;QACpB,IAAI,EAAE,GAAG,CAAC,IAAI,IAAI,IAAI,UAAU,CAAC,OAAO,CAAC;QACzC,QAAQ,EAAE,GAAG,CAAC,QAAQ,IAAI,IAAI,cAAc,CAAC,OAAO,EAAE,UAAU,CAAC;QACjE,OAAO,EAAE,GAAG,CAAC,OAAO,IAAI,IAAI,aAAa,EAAE;QAC3C,SAAS,EAAE,GAAG,CAAC,SAAS,IAAI,IAAI,eAAe,CAAC,OAAO,CAAC;QACxD,MAAM,EAAE,GAAG,CAAC,MAAM,IAAI,IAAI,YAAY,EAAE;QACxC,cAAc,EAAE,GAAG,CAAC,cAAc,IAAI,IAAI,cAAc,EAAE;QAC1D,cAAc,EAAE,GAAG,CAAC,cAAc,IAAI,IAAI,oBAAoB,EAAE;QAChE,SAAS,EAAE,GAAG,CAAC,SAAS,IAAI,IAAI,eAAe,CAAC,OAAO,EAAE,UAAU,CAAC;KACvE,CAAC;AACN,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,cAAc,CAAC,WAAwB;IACnD,OAAO;QACH,QAAQ,EAAE,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE;QACzC,kBAAkB,EAAE,WAAW,CAAC,kBAAkB,CAAC,QAAQ,EAAE;QAC7D,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE;QACjC,SAAS,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE;QAC3C,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE;QACjC,MAAM,EAAE,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE;QACrC,SAAS,EAAE,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE;KAC9C,CAAC;AACN,CAAC","sourcesContent":["import CopyPastePlugin from './CopyPastePlugin';\nimport DOMEventPlugin from './DOMEventPlugin';\nimport EditPlugin from './EditPlugin';\nimport EntityPlugin from './EntityPlugin';\nimport ImageSelection from './ImageSelection';\nimport LifecyclePlugin from './LifecyclePlugin';\nimport MouseUpPlugin from './MouseUpPlugin';\nimport NormalizeTablePlugin from './NormalizeTablePlugin';\nimport PendingFormatStatePlugin from './PendingFormatStatePlugin';\nimport TypeInContainerPlugin from './TypeInContainerPlugin';\nimport UndoPlugin from './UndoPlugin';\nimport type { CorePlugins, EditorOptions, PluginState } from 'roosterjs-editor-types';\n\n/**\n * @internal\n */\nexport interface CreateCorePluginResponse extends CorePlugins {\n    _placeholder: null;\n}\n\n/**\n * @internal\n * Create Core Plugins\n * @param contentDiv Content DIV of editor\n * @param options Editor options\n */\nexport default function createCorePlugins(\n    contentDiv: HTMLDivElement,\n    options: EditorOptions\n): CreateCorePluginResponse {\n    const map = options.corePluginOverride || {};\n    // The order matters, some plugin needs to be put before/after others to make sure event\n    // can be handled in right order\n    return {\n        typeInContainer: map.typeInContainer || new TypeInContainerPlugin(),\n        edit: map.edit || new EditPlugin(),\n        pendingFormatState: map.pendingFormatState || new PendingFormatStatePlugin(),\n        _placeholder: null,\n        typeAfterLink: null!, //deprecated after firefox update\n        undo: map.undo || new UndoPlugin(options),\n        domEvent: map.domEvent || new DOMEventPlugin(options, contentDiv),\n        mouseUp: map.mouseUp || new MouseUpPlugin(),\n        copyPaste: map.copyPaste || new CopyPastePlugin(options),\n        entity: map.entity || new EntityPlugin(),\n        imageSelection: map.imageSelection || new ImageSelection(),\n        normalizeTable: map.normalizeTable || new NormalizeTablePlugin(),\n        lifecycle: map.lifecycle || new LifecyclePlugin(options, contentDiv),\n    };\n}\n\n/**\n * @internal\n * Get plugin state of core plugins\n * @param corePlugins CorePlugins object\n */\nexport function getPluginState(corePlugins: CorePlugins): PluginState {\n    return {\n        domEvent: corePlugins.domEvent.getState(),\n        pendingFormatState: corePlugins.pendingFormatState.getState(),\n        edit: corePlugins.edit.getState(),\n        lifecycle: corePlugins.lifecycle.getState(),\n        undo: corePlugins.undo.getState(),\n        entity: corePlugins.entity.getState(),\n        copyPaste: corePlugins.copyPaste.getState(),\n    };\n}\n"]}