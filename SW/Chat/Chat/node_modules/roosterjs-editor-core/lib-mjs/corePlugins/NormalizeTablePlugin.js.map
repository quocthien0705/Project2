{"version":3,"file":"NormalizeTablePlugin.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-core/lib/corePlugins/NormalizeTablePlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import { PluginEventType, SelectionRangeTypes } from 'roosterjs-editor-types';\nimport {\n    changeElementTag,\n    getTagOfNode,\n    moveChildNodes,\n    safeInstanceOf,\n    toArray,\n} from 'roosterjs-editor-dom';\nimport type { EditorPlugin, IEditor, PluginEvent } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * TODO: Rename this plugin since it is not only for table now\n *\n * NormalizeTable plugin makes sure each table in editor has TBODY/THEAD/TFOOT tag around TR tags\n *\n * When we retrieve HTML content using innerHTML, browser will always add TBODY around TR nodes if there is not.\n * This causes some issue when we restore the HTML content with selection path since the selection path is\n * deeply coupled with DOM structure. So we need to always make sure there is already TBODY tag whenever\n * new table is inserted, to make sure the selection path we created is correct.\n */\nexport default class NormalizeTablePlugin implements EditorPlugin {\n    private editor: IEditor | null = null;\n\n    /**\n     * Get a friendly name of this plugin\n     */\n    getName() {\n        return 'NormalizeTable';\n    }\n\n    /**\n     * The first method that editor will call to a plugin when editor is initializing.\n     * It will pass in the editor instance, plugin should take this chance to save the\n     * editor reference so that it can call to any editor method or format API later.\n     * @param editor The editor object\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * The last method that editor will call to a plugin before it is disposed.\n     * Plugin can take this chance to clear the reference to editor. After this method is\n     * called, plugin should not call to any editor method since it will result in error.\n     */\n    dispose() {\n        this.editor = null;\n    }\n\n    /**\n     * Core method for a plugin. Once an event happens in editor, editor will call this\n     * method of each plugin to handle the event as long as the event is not handled\n     * exclusively by another plugin.\n     * @param event The event to handle:\n     */\n    onPluginEvent(event: PluginEvent) {\n        switch (event.eventType) {\n            case PluginEventType.EditorReady:\n            case PluginEventType.ContentChanged:\n                if (this.editor) {\n                    this.normalizeTables(this.editor.queryElements('table'));\n                }\n                break;\n\n            case PluginEventType.BeforePaste:\n                this.normalizeTables(toArray(event.fragment.querySelectorAll('table')));\n                break;\n\n            case PluginEventType.MouseDown:\n                this.normalizeTableFromEvent(event.rawEvent);\n                break;\n\n            case PluginEventType.KeyDown:\n                if (event.rawEvent.shiftKey) {\n                    this.normalizeTableFromEvent(event.rawEvent);\n                }\n                break;\n\n            case PluginEventType.ExtractContentWithDom:\n                normalizeListsForExport(event.clonedRoot);\n                break;\n        }\n    }\n\n    private normalizeTableFromEvent(event: KeyboardEvent | MouseEvent) {\n        const table = this.editor?.getElementAtCursor('table', event.target as Node);\n\n        if (table) {\n            this.normalizeTables([<HTMLTableElement>table]);\n        }\n    }\n\n    private normalizeTables(tables: HTMLTableElement[]) {\n        if (this.editor && tables.length > 0) {\n            const rangeEx = this.editor.getSelectionRangeEx();\n            const { startContainer, endContainer, startOffset, endOffset } =\n                (rangeEx?.type == SelectionRangeTypes.Normal && rangeEx.ranges[0]) || {};\n\n            const isChanged = normalizeTables(tables);\n\n            if (isChanged) {\n                if (\n                    startContainer &&\n                    endContainer &&\n                    typeof startOffset === 'number' &&\n                    typeof endOffset === 'number'\n                ) {\n                    this.editor.select(startContainer, startOffset, endContainer, endOffset);\n                } else if (\n                    rangeEx?.type == SelectionRangeTypes.TableSelection &&\n                    rangeEx.coordinates\n                ) {\n                    this.editor.select(rangeEx.table, rangeEx.coordinates);\n                }\n            }\n        }\n    }\n}\n\nfunction normalizeTables(tables: HTMLTableElement[]) {\n    let isDOMChanged = false;\n    tables.forEach(table => {\n        let tbody: HTMLTableSectionElement | null = null;\n\n        for (let child = table.firstChild; child; child = child.nextSibling) {\n            const tag = getTagOfNode(child);\n            switch (tag) {\n                case 'TR':\n                    if (!tbody) {\n                        tbody = table.ownerDocument.createElement('tbody');\n                        table.insertBefore(tbody, child);\n                    }\n\n                    tbody.appendChild(child);\n                    child = tbody;\n                    isDOMChanged = true;\n\n                    break;\n                case 'TBODY':\n                    if (tbody) {\n                        moveChildNodes(tbody, child, true /*keepExistingChildren*/);\n                        child.parentNode?.removeChild(child);\n                        child = tbody;\n                        isDOMChanged = true;\n                    } else {\n                        tbody = child as HTMLTableSectionElement;\n                    }\n                    break;\n                default:\n                    tbody = null;\n                    break;\n            }\n        }\n\n        const colgroups = table.querySelectorAll('colgroup');\n        const thead = table.querySelector('thead');\n        if (thead) {\n            colgroups.forEach(colgroup => {\n                if (!thead.contains(colgroup)) {\n                    thead.appendChild(colgroup);\n                }\n            });\n        }\n    });\n\n    return isDOMChanged;\n}\n\nfunction normalizeListsForExport(root: ParentNode) {\n    toArray(root.querySelectorAll('li')).forEach(li => {\n        const prevElement = li.previousSibling;\n\n        if (li.style.display == 'block' && safeInstanceOf(prevElement, 'HTMLLIElement')) {\n            li.style.removeProperty('display');\n\n            prevElement.appendChild(changeElementTag(li, 'div'));\n        }\n    });\n}\n"]}