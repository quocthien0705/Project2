{"version":3,"file":"restoreUndoSnapshot.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-core/lib/coreApi/restoreUndoSnapshot.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AAG9F;;;;;GAKG;AACH,MAAM,CAAC,IAAM,mBAAmB,GAAwB,UAAC,IAAgB,EAAE,IAAY;;IACnF,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,GAAG,CAAC,EAAE;QACrC,IAAI,CAAC,GAAG,CAAC,eAAe,CACpB,IAAI,EACJ,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,gBAAgB,EACrB,KAAK,CAAC,sBAAsB,CAC/B,CAAC;KACL;IAED,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEvD,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,IAAI,IAAI,EAAE;QACnC,IAAI;YACA,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,GAAG,CAAC,UAAU,CACf,IAAI,EACJ,QAAQ,CAAC,IAAI,EACb,IAAI,CAAC,8BAA8B,EACnC,MAAA,QAAQ,CAAC,QAAQ,mCAAI,SAAS,CACjC,CAAC;YAEF,IAAM,kBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/C,IAAM,aAAW,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;YAE9C,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,UAAA,KAAK;gBAC9B,kBAAgB,CAAC,aAAa,CAC1B,KAAK,CAAC,cAAc,EACpB,aAAW,EACX,KAAK,CAAC,aAAa,CACtB,CAAC;YACN,CAAC,CAAC,CAAC;YAEH,MAAA,QAAQ,CAAC,YAAY,0CAAE,OAAO,CAAC,UAAA,WAAW;gBAC9B,IAAA,IAAI,GAAgB,WAAW,KAA3B,EAAE,EAAE,GAAY,WAAW,GAAvB,EAAE,KAAK,GAAK,WAAW,MAAhB,CAAiB;gBACxC,IAAM,OAAO,GAAG,aAAa,CACzB,IAAI,CAAC,UAAU,EACf,iBAAiB,CAAC,IAAI,EAAE,EAAE,CAAC,CAC9B,CAAC,CAAC,CAAgB,CAAC;gBACpB,IAAM,MAAM,GAAG,OAAO,IAAI,oBAAoB,CAAC,OAAO,CAAC,CAAC;gBAExD,IAAI,MAAM,EAAE;oBACR,IAAI,CAAC,GAAG,CAAC,YAAY,CACjB,IAAI,EACJ;wBACI,SAAS,0BAAiC;wBAC1C,SAAS,4BAAmC;wBAC5C,MAAM,EAAE,MAAM;wBACd,KAAK,OAAA;qBACR,EACD,KAAK,CACR,CAAC;iBACL;YACL,CAAC,CAAC,CAAC;SACN;gBAAS;YACN,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SACjC;KACJ;AACL,CAAC,CAAC","sourcesContent":["import { EntityOperation, PluginEventType } from 'roosterjs-editor-types';\nimport { getEntityFromElement, getEntitySelector, queryElements } from 'roosterjs-editor-dom';\nimport type { EditorCore, RestoreUndoSnapshot } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Restore an undo snapshot into editor\n * @param core The editor core object\n * @param step Steps to move, can be 0, positive or negative\n */\nexport const restoreUndoSnapshot: RestoreUndoSnapshot = (core: EditorCore, step: number) => {\n    if (core.undo.hasNewContent && step < 0) {\n        core.api.addUndoSnapshot(\n            core,\n            null /*callback*/,\n            null /*changeSource*/,\n            false /*canUndoByBackspace*/\n        );\n    }\n\n    const snapshot = core.undo.snapshotsService.move(step);\n\n    if (snapshot && snapshot.html != null) {\n        try {\n            core.undo.isRestoring = true;\n            core.api.setContent(\n                core,\n                snapshot.html,\n                true /*triggerContentChangedEvent*/,\n                snapshot.metadata ?? undefined\n            );\n\n            const darkColorHandler = core.darkColorHandler;\n            const isDarkModel = core.lifecycle.isDarkMode;\n\n            snapshot.knownColors.forEach(color => {\n                darkColorHandler.registerColor(\n                    color.lightModeColor,\n                    isDarkModel,\n                    color.darkModeColor\n                );\n            });\n\n            snapshot.entityStates?.forEach(entityState => {\n                const { type, id, state } = entityState;\n                const wrapper = queryElements(\n                    core.contentDiv,\n                    getEntitySelector(type, id)\n                )[0] as HTMLElement;\n                const entity = wrapper && getEntityFromElement(wrapper);\n\n                if (entity) {\n                    core.api.triggerEvent(\n                        core,\n                        {\n                            eventType: PluginEventType.EntityOperation,\n                            operation: EntityOperation.UpdateEntityState,\n                            entity: entity,\n                            state,\n                        },\n                        false\n                    );\n                }\n            });\n        } finally {\n            core.undo.isRestoring = false;\n        }\n    }\n};\n"]}