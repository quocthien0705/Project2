{"version":3,"file":"addUniqueId.js","sourceRoot":"","sources":["../../../../../packages/roosterjs-editor-core/lib/coreApi/utils/addUniqueId.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AACH,MAAM,CAAC,OAAO,UAAU,WAAW,CAAC,EAAe,EAAE,QAAgB;IACjE,IAAM,GAAG,GAAG,EAAE,CAAC,aAAa,CAAC;IAC7B,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;QACR,OAAO,CAAC,EAAE,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;KAC9B;SAAM;QACH,IAAM,QAAQ,GAAG,GAAG,CAAC,gBAAgB,CAAC,MAAI,EAAE,CAAC,EAAI,CAAC,CAAC;QACnD,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YACzB,OAAO,CAAC,EAAE,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;SAC9B;KACJ;AACL,CAAC;AAED,SAAS,OAAO,CAAC,EAAe,EAAE,QAAgB,EAAE,GAAa;IAC7D,IAAI,IAAI,GAAG,CAAC,CAAC;IACb,IAAM,UAAU,GAAG,cAAM,OAAA,GAAG,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAnC,CAAmC,CAAC;IAC7D,oDAAoD;IACpD,IAAI,OAAO,GAAG,UAAU,EAAE,CAAC;IAC3B,OAAO,OAAO,EAAE;QACZ,IAAI,EAAE,CAAC;QACP,OAAO,GAAG,UAAU,EAAE,CAAC;KAC1B;IAED,EAAE,CAAC,EAAE,GAAG,QAAQ,GAAG,IAAI,CAAC;AAC5B,CAAC","sourcesContent":["/**\n * @internal\n * Add an unique id to element and ensure that is unique\n * @param el The HTMLElement that will receive the id\n * @param idPrefix The prefix that will antecede the id (Ex: tableSelected01)\n */\nexport default function addUniqueId(el: HTMLElement, idPrefix: string) {\n    const doc = el.ownerDocument;\n    if (!el.id) {\n        applyId(el, idPrefix, doc);\n    } else {\n        const elements = doc.querySelectorAll(`#${el.id}`);\n        if (elements.length > 1) {\n            el.removeAttribute('id');\n            applyId(el, idPrefix, doc);\n        }\n    }\n}\n\nfunction applyId(el: HTMLElement, idPrefix: string, doc: Document) {\n    let cont = 0;\n    const getElement = () => doc.getElementById(idPrefix + cont);\n    //Ensure that there are no elements with the same ID\n    let element = getElement();\n    while (element) {\n        cont++;\n        element = getElement();\n    }\n\n    el.id = idPrefix + cont;\n}\n"]}