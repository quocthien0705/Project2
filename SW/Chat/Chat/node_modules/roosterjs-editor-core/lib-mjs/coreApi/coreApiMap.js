import { addUndoSnapshot } from './addUndoSnapshot';
import { attachDomEvent } from './attachDomEvent';
import { createPasteFragment } from './createPasteFragment';
import { ensureTypeInContainer } from './ensureTypeInContainer';
import { focus } from './focus';
import { getContent } from './getContent';
import { getPendableFormatState } from './getPendableFormatState';
import { getSelectionRange } from './getSelectionRange';
import { getSelectionRangeEx } from './getSelectionRangeEx';
import { getStyleBasedFormatState } from './getStyleBasedFormatState';
import { hasFocus } from './hasFocus';
import { insertNode } from './insertNode';
import { restoreUndoSnapshot } from './restoreUndoSnapshot';
import { select } from './select';
import { selectImage } from './selectImage';
import { selectRange } from './selectRange';
import { selectTable } from './selectTable';
import { setContent } from './setContent';
import { switchShadowEdit } from './switchShadowEdit';
import { transformColor } from './transformColor';
import { triggerEvent } from './triggerEvent';
/**
 * @internal
 */
export var coreApiMap = {
    attachDomEvent: attachDomEvent,
    addUndoSnapshot: addUndoSnapshot,
    createPasteFragment: createPasteFragment,
    ensureTypeInContainer: ensureTypeInContainer,
    focus: focus,
    getContent: getContent,
    getSelectionRange: getSelectionRange,
    getSelectionRangeEx: getSelectionRangeEx,
    getStyleBasedFormatState: getStyleBasedFormatState,
    getPendableFormatState: getPendableFormatState,
    hasFocus: hasFocus,
    insertNode: insertNode,
    restoreUndoSnapshot: restoreUndoSnapshot,
    select: select,
    selectRange: selectRange,
    setContent: setContent,
    switchShadowEdit: switchShadowEdit,
    transformColor: transformColor,
    triggerEvent: triggerEvent,
    selectTable: selectTable,
    selectImage: selectImage,
};
//# sourceMappingURL=coreApiMap.js.map