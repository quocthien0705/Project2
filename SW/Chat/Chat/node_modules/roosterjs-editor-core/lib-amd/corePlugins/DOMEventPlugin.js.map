{"version":3,"file":"DOMEventPlugin.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-core/lib/corePlugins/DOMEventPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import { arrayPush, Browser, isCharacterValue } from 'roosterjs-editor-dom';\nimport { ChangeSource, Keys, PluginEventType } from 'roosterjs-editor-types';\nimport type {\n    ContextMenuProvider,\n    DOMEventHandler,\n    DOMEventPluginState,\n    EditorOptions,\n    EditorPlugin,\n    IEditor,\n    PluginWithState,\n} from 'roosterjs-editor-types';\n\n/**\n * @internal\n * DOMEventPlugin handles customized DOM events, including:\n * 1. Keyboard event\n * 2. Mouse event\n * 3. IME state\n * 4. Drop event\n * 5. Focus and blur event\n * 6. Input event\n * 7. Scroll event\n * It contains special handling for Safari since Safari cannot get correct selection when onBlur event is triggered in editor.\n */\nexport default class DOMEventPlugin implements PluginWithState<DOMEventPluginState> {\n    private editor: IEditor | null = null;\n    private disposer: (() => void) | null = null;\n    private state: DOMEventPluginState;\n\n    /**\n     * Construct a new instance of DOMEventPlugin\n     * @param options The editor options\n     * @param contentDiv The editor content DIV\n     */\n    constructor(options: EditorOptions, contentDiv: HTMLDivElement) {\n        this.state = {\n            isInIME: false,\n            scrollContainer: options.scrollContainer || contentDiv,\n            selectionRange: null,\n            stopPrintableKeyboardEventPropagation: !options.allowKeyboardEventPropagation,\n            contextMenuProviders:\n                options.plugins?.filter<ContextMenuProvider<any>>(isContextMenuProvider) || [],\n            tableSelectionRange: null,\n            imageSelectionRange: null,\n        };\n    }\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'DOMEvent';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n\n        const document = this.editor.getDocument();\n        //Record<string, DOMEventHandler>\n        const eventHandlers: Partial<\n            { [P in keyof HTMLElementEventMap]: DOMEventHandler<HTMLElementEventMap[P]> }\n        > = {\n            // 1. Keyboard event\n            keypress: this.getEventHandler(PluginEventType.KeyPress),\n            keydown: this.getEventHandler(PluginEventType.KeyDown),\n            keyup: this.getEventHandler(PluginEventType.KeyUp),\n\n            // 2. Mouse event\n            mousedown: PluginEventType.MouseDown,\n            contextmenu: this.onContextMenuEvent,\n\n            // 3. IME state management\n            compositionstart: () => (this.state.isInIME = true),\n            compositionend: (rawEvent: CompositionEvent) => {\n                this.state.isInIME = false;\n                editor.triggerPluginEvent(PluginEventType.CompositionEnd, {\n                    rawEvent,\n                });\n            },\n\n            // 4. Drag and Drop event\n            dragstart: this.onDragStart,\n            drop: this.onDrop,\n\n            // 5. Focus management\n            focus: this.onFocus,\n\n            // 6. Input event\n            [Browser.isIE ? 'textinput' : 'input']: this.getEventHandler(PluginEventType.Input),\n        };\n\n        // 7. onBlur handlers\n        if (Browser.isSafari) {\n            document.addEventListener('selectionchange', this.onSelectionChangeSafari);\n        } else if (Browser.isIEOrEdge) {\n            type EventHandlersIE = {\n                beforedeactivate: DOMEventHandler<HTMLElementEventMap['blur']>;\n            };\n            (eventHandlers as EventHandlersIE).beforedeactivate = this.cacheSelection;\n        } else {\n            eventHandlers.blur = this.cacheSelection;\n        }\n\n        this.disposer = editor.addDomEventHandler(<Record<string, DOMEventHandler>>eventHandlers);\n\n        // 8. Scroll event\n        this.state.scrollContainer.addEventListener('scroll', this.onScroll);\n        document.defaultView?.addEventListener('scroll', this.onScroll);\n        document.defaultView?.addEventListener('resize', this.onScroll);\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        const document = this.editor?.getDocument();\n        if (document && Browser.isSafari) {\n            document.removeEventListener('selectionchange', this.onSelectionChangeSafari);\n        }\n\n        document?.defaultView?.removeEventListener('resize', this.onScroll);\n        document?.defaultView?.removeEventListener('scroll', this.onScroll);\n        this.state.scrollContainer.removeEventListener('scroll', this.onScroll);\n        this.disposer?.();\n        this.disposer = null;\n        this.editor = null;\n    }\n\n    /**\n     * Get plugin state object\n     */\n    getState() {\n        return this.state;\n    }\n\n    private onDragStart = (e: Event) => {\n        const dragEvent = e as DragEvent;\n        const element = this.editor?.getElementAtCursor('*', dragEvent.target as Node);\n\n        if (element && !element.isContentEditable) {\n            dragEvent.preventDefault();\n        }\n    };\n    private onDrop = () => {\n        this.editor?.runAsync(editor => {\n            editor.addUndoSnapshot(() => {}, ChangeSource.Drop);\n        });\n    };\n\n    private onFocus = () => {\n        if (!this.state.skipReselectOnFocus) {\n            const { table, coordinates } = this.state.tableSelectionRange || {};\n            const { image } = this.state.imageSelectionRange || {};\n\n            if (table && coordinates) {\n                this.editor?.select(table, coordinates);\n            } else if (image) {\n                this.editor?.select(image);\n            } else if (this.state.selectionRange) {\n                this.editor?.select(this.state.selectionRange);\n            }\n        }\n\n        if (!Browser.isSafari) {\n            this.state.selectionRange = null;\n        }\n    };\n\n    private onSelectionChangeSafari = () => {\n        // Safari has problem to handle onBlur event. When blur, we cannot get the original selection from editor.\n        // So we always save a selection whenever editor has focus. Then after blur, we can still use this cached selection.\n        if (this.editor?.hasFocus() && !this.editor.isInShadowEdit()) {\n            this.state.selectionRange = this.editor.getSelectionRange(false /*tryGetFromCache*/);\n        }\n    };\n\n    private cacheSelection = () => {\n        if (!this.state.selectionRange && this.editor) {\n            this.state.selectionRange = this.editor.getSelectionRange(false /*tryGetFromCache*/);\n        }\n    };\n\n    private onScroll = (e: Event) => {\n        this.editor?.triggerPluginEvent(PluginEventType.Scroll, {\n            rawEvent: e,\n            scrollContainer: this.state.scrollContainer,\n        });\n    };\n\n    private getEventHandler(eventType: PluginEventType): DOMEventHandler {\n        const beforeDispatch = (event: Event) =>\n            eventType == PluginEventType.Input\n                ? this.onInputEvent(<InputEvent>event)\n                : this.onKeyboardEvent(<KeyboardEvent>event);\n\n        return this.state.stopPrintableKeyboardEventPropagation\n            ? {\n                  pluginEventType: eventType,\n                  beforeDispatch,\n              }\n            : eventType;\n    }\n\n    private onKeyboardEvent = (event: KeyboardEvent) => {\n        if (isCharacterValue(event) || (event.which >= Keys.PAGEUP && event.which <= Keys.DOWN)) {\n            // Stop propagation for Character keys and Up/Down/Left/Right/Home/End/PageUp/PageDown\n            // since editor already handles these keys and no need to propagate to parents\n            event.stopPropagation();\n        }\n    };\n\n    private onInputEvent = (event: InputEvent) => {\n        event.stopPropagation();\n    };\n\n    private onContextMenuEvent = (event: MouseEvent) => {\n        const allItems: any[] = [];\n        const searcher = this.editor?.getContentSearcherOfCursor();\n        const elementBeforeCursor = searcher?.getInlineElementBefore();\n\n        let eventTargetNode = event.target as Node;\n        if (event.button != 2 && elementBeforeCursor) {\n            eventTargetNode = elementBeforeCursor.getContainerNode();\n        }\n        this.state.contextMenuProviders.forEach(provider => {\n            const items = provider.getContextMenuItems(eventTargetNode) ?? [];\n            if (items?.length > 0) {\n                if (allItems.length > 0) {\n                    allItems.push(null);\n                }\n                arrayPush(allItems, items);\n            }\n        });\n        this.editor?.triggerPluginEvent(PluginEventType.ContextMenu, {\n            rawEvent: event,\n            items: allItems,\n        });\n    };\n}\n\nfunction isContextMenuProvider(source: EditorPlugin): source is ContextMenuProvider<any> {\n    return !!(<ContextMenuProvider<any>>source)?.getContextMenuItems;\n}\n"]}