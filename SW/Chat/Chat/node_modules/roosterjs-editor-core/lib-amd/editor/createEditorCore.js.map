{"version":3,"file":"createEditorCore.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-core/lib/editor/createEditorCore.ts"],"names":[],"mappings":";;;;IAMA;;;;OAIG;IACI,IAAM,gBAAgB,GAA2C,UAAC,UAAU,EAAE,OAAO;;QACxF,IAAM,WAAW,GAAG,IAAA,2BAAiB,EAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAC3D,IAAM,OAAO,GAAmB,EAAE,CAAC;QAEnC,IAAA,oCAAa,EAAC,WAAW,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI;YACnC,IAAI,IAAI,IAAI,cAAc,EAAE;gBACxB,IAAI,OAAO,CAAC,OAAO,EAAE;oBACjB,IAAA,gCAAS,EAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;iBACvC;aACJ;iBAAM;gBACH,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;aACnC;QACL,CAAC,CAAC,CAAC;QAEH,IAAM,WAAW,GAAG,IAAA,kCAAc,EAAC,WAAW,CAAC,CAAC;QAChD,IAAM,SAAS,GAAW,CAAC,MAAA,OAAO,CAAC,SAAS,mCAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QACjF,IAAM,kBAAkB,GACpB,OAAO,CAAC,kBAAkB;YAC1B,CAAC;gBACG,IAAM,eAAe,GAAG,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC;gBAE7D,OAAO,IAAA,yCAAkB,EACrB,eAAe,IAAI,IAAI,CAAC,UAAU;oBAC9B,CAAC,CAAC,CAAC,eAAe,CAAC;oBACnB,CAAC,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,UAAU,CAAC,CAC3C,CAAC;YACN,CAAC,CAAC,CAAC;QAEP,IAAM,IAAI,iDACN,UAAU,YAAA,EACV,GAAG,kDACI,uBAAU,GACV,CAAC,OAAO,CAAC,eAAe,IAAI,EAAE,CAAC,GAEtC,WAAW,EAAE,uBAAU,EACvB,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,EAAH,CAAG,CAAC,IAC9B,WAAW,KACd,kBAAkB,EAAE,OAAO,CAAC,kBAAkB,IAAI,CAAC,UAAC,IAAY,IAAK,OAAA,IAAI,EAAJ,CAAI,CAAC,EAC1E,SAAS,EAAE,SAAS,EACpB,eAAe,EAAE,OAAO,CAAC,eAAe,IAAI,CAAC,UAAC,IAAY,IAAK,OAAA,IAAI,GAAG,SAAS,EAAhB,CAAgB,CAAC,EAChF,kBAAkB,oBAAA,EAClB,yBAAyB,EAAE,OAAO,CAAC,yBAAyB,EAC5D,gBAAgB,EAAE,IAAI,8BAAoB,CAAC,UAAU,EAAE,WAAW,CAAC,SAAS,CAAC,YAAY,CAAC,EAC1F,mBAAmB,EAAE,OAAO,CAAC,mBAAmB,GACnD,CAAC;QAEF,OAAO,IAAI,CAAC;IAChB,CAAC,CAAC;IA/CW,QAAA,gBAAgB,oBA+C3B","sourcesContent":["import createCorePlugins, { getPluginState } from '../corePlugins/createCorePlugins';\nimport DarkColorHandlerImpl from './DarkColorHandlerImpl';\nimport { arrayPush, getIntersectedRect, getObjectKeys } from 'roosterjs-editor-dom';\nimport { coreApiMap } from '../coreApi/coreApiMap';\nimport type { CoreCreator, EditorCore, EditorOptions, EditorPlugin } from 'roosterjs-editor-types';\n\n/**\n * Create a new instance of Editor Core\n * @param contentDiv The DIV HTML element which will be the container element of editor\n * @param options An optional options object to customize the editor\n */\nexport const createEditorCore: CoreCreator<EditorCore, EditorOptions> = (contentDiv, options) => {\n    const corePlugins = createCorePlugins(contentDiv, options);\n    const plugins: EditorPlugin[] = [];\n\n    getObjectKeys(corePlugins).forEach(name => {\n        if (name == '_placeholder') {\n            if (options.plugins) {\n                arrayPush(plugins, options.plugins);\n            }\n        } else {\n            plugins.push(corePlugins[name]);\n        }\n    });\n\n    const pluginState = getPluginState(corePlugins);\n    const zoomScale: number = (options.zoomScale ?? -1) > 0 ? options.zoomScale! : 1;\n    const getVisibleViewport =\n        options.getVisibleViewport ||\n        (() => {\n            const scrollContainer = pluginState.domEvent.scrollContainer;\n\n            return getIntersectedRect(\n                scrollContainer == core.contentDiv\n                    ? [scrollContainer]\n                    : [scrollContainer, core.contentDiv]\n            );\n        });\n\n    const core: EditorCore = {\n        contentDiv,\n        api: {\n            ...coreApiMap,\n            ...(options.coreApiOverride || {}),\n        },\n        originalApi: coreApiMap,\n        plugins: plugins.filter(x => !!x),\n        ...pluginState,\n        trustedHTMLHandler: options.trustedHTMLHandler || ((html: string) => html),\n        zoomScale: zoomScale,\n        sizeTransformer: options.sizeTransformer || ((size: number) => size / zoomScale),\n        getVisibleViewport,\n        imageSelectionBorderColor: options.imageSelectionBorderColor,\n        darkColorHandler: new DarkColorHandlerImpl(contentDiv, pluginState.lifecycle.getDarkColor),\n        disposeErrorHandler: options.disposeErrorHandler,\n    };\n\n    return core;\n};\n"]}