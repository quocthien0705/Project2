define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.triggerEvent = void 0;
    var allowedEventsInShadowEdit = [
        11 /* EditorReady */,
        12 /* BeforeDispose */,
        8 /* ExtractContentWithDom */,
        21 /* ZoomChanged */,
    ];
    /**
     * @internal
     * Trigger a plugin event
     * @param core The EditorCore object
     * @param pluginEvent The event object to trigger
     * @param broadcast Set to true to skip the shouldHandleEventExclusively check
     */
    var triggerEvent = function (core, pluginEvent, broadcast) {
        if ((!core.lifecycle.shadowEditFragment ||
            allowedEventsInShadowEdit.indexOf(pluginEvent.eventType) >= 0) &&
            (broadcast || !core.plugins.some(function (plugin) { return handledExclusively(pluginEvent, plugin); }))) {
            core.plugins.forEach(function (plugin) {
                if (plugin.onPluginEvent) {
                    plugin.onPluginEvent(pluginEvent);
                }
            });
        }
    };
    exports.triggerEvent = triggerEvent;
    function handledExclusively(event, plugin) {
        var _a;
        if (plugin.onPluginEvent && ((_a = plugin.willHandleEventExclusively) === null || _a === void 0 ? void 0 : _a.call(plugin, event))) {
            plugin.onPluginEvent(event);
            return true;
        }
        return false;
    }
});
//# sourceMappingURL=triggerEvent.js.map