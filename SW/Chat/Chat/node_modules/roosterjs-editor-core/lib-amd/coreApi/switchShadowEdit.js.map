{"version":3,"file":"switchShadowEdit.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-core/lib/coreApi/switchShadowEdit.ts"],"names":[],"mappings":"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","sourcesContent":["import { PluginEventType, SelectionRangeTypes } from 'roosterjs-editor-types';\nimport {\n    createRange,\n    getSelectionPath,\n    moveContentWithEntityPlaceholders,\n    restoreContentWithEntityPlaceholder,\n} from 'roosterjs-editor-dom';\nimport type { EditorCore, SelectionRangeEx, SwitchShadowEdit } from 'roosterjs-editor-types';\n\n/**\n * @internal\n */\nexport const switchShadowEdit: SwitchShadowEdit = (core: EditorCore, isOn: boolean): void => {\n    const { lifecycle, contentDiv } = core;\n    let {\n        shadowEditEntities,\n        shadowEditFragment,\n        shadowEditSelectionPath,\n        shadowEditTableSelectionPath,\n        shadowEditImageSelectionPath,\n    } = lifecycle;\n    const wasInShadowEdit = !!shadowEditFragment;\n\n    const getShadowEditSelectionPath = (\n        selectionType: SelectionRangeTypes,\n        shadowEditSelection?: SelectionRangeEx\n    ) => {\n        return (\n            (shadowEditSelection?.type == selectionType &&\n                shadowEditSelection.ranges\n                    .map(range => getSelectionPath(contentDiv, range))\n                    .map(w => w!!)) ||\n            null\n        );\n    };\n\n    if (isOn) {\n        if (!wasInShadowEdit) {\n            const selection = core.api.getSelectionRangeEx(core);\n            const range = core.api.getSelectionRange(core, true /*tryGetFromCache*/);\n\n            shadowEditSelectionPath = range && getSelectionPath(contentDiv, range);\n            shadowEditTableSelectionPath = getShadowEditSelectionPath(\n                SelectionRangeTypes.TableSelection,\n                selection\n            );\n            shadowEditImageSelectionPath = getShadowEditSelectionPath(\n                SelectionRangeTypes.ImageSelection,\n                selection\n            );\n\n            shadowEditEntities = {};\n            shadowEditFragment = moveContentWithEntityPlaceholders(contentDiv, shadowEditEntities);\n\n            core.api.triggerEvent(\n                core,\n                {\n                    eventType: PluginEventType.EnteredShadowEdit,\n                    fragment: shadowEditFragment,\n                    selectionPath: shadowEditSelectionPath,\n                },\n                false /*broadcast*/\n            );\n\n            lifecycle.shadowEditFragment = shadowEditFragment;\n            lifecycle.shadowEditSelectionPath = shadowEditSelectionPath;\n            lifecycle.shadowEditTableSelectionPath = shadowEditTableSelectionPath;\n            lifecycle.shadowEditImageSelectionPath = shadowEditImageSelectionPath;\n            lifecycle.shadowEditEntities = shadowEditEntities;\n        }\n\n        if (lifecycle.shadowEditFragment) {\n            restoreContentWithEntityPlaceholder(\n                lifecycle.shadowEditFragment,\n                contentDiv,\n                lifecycle.shadowEditEntities,\n                true /*insertClonedNode*/\n            );\n        }\n    } else {\n        lifecycle.shadowEditFragment = null;\n        lifecycle.shadowEditSelectionPath = null;\n        lifecycle.shadowEditEntities = null;\n\n        if (wasInShadowEdit) {\n            core.api.triggerEvent(\n                core,\n                {\n                    eventType: PluginEventType.LeavingShadowEdit,\n                },\n                false /*broadcast*/\n            );\n\n            if (shadowEditFragment) {\n                restoreContentWithEntityPlaceholder(\n                    shadowEditFragment,\n                    contentDiv,\n                    shadowEditEntities\n                );\n            }\n\n            if (shadowEditSelectionPath) {\n                core.domEvent.selectionRange = createRange(\n                    contentDiv,\n                    shadowEditSelectionPath.start,\n                    shadowEditSelectionPath.end\n                );\n            }\n        }\n    }\n};\n"]}