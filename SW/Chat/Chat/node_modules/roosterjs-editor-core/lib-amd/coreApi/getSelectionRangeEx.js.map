{"version":3,"file":"getSelectionRangeEx.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-core/lib/coreApi/getSelectionRangeEx.ts"],"names":[],"mappings":"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","sourcesContent":["import { contains, createRange, findClosestElementAncestor } from 'roosterjs-editor-dom';\nimport { SelectionRangeTypes } from 'roosterjs-editor-types';\nimport type { EditorCore, GetSelectionRangeEx, SelectionRangeEx } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Get current or cached selection range\n * @param core The EditorCore object\n * @returns A Range object of the selection range\n */\nexport const getSelectionRangeEx: GetSelectionRangeEx = (core: EditorCore) => {\n    const result: SelectionRangeEx | null = null;\n    if (core.lifecycle.shadowEditFragment) {\n        const {\n            shadowEditTableSelectionPath,\n            shadowEditSelectionPath,\n            shadowEditImageSelectionPath,\n        } = core.lifecycle;\n\n        if ((shadowEditTableSelectionPath?.length || 0) > 0) {\n            const ranges = core.lifecycle.shadowEditTableSelectionPath!.map(path =>\n                createRange(core.contentDiv, path.start, path.end)\n            );\n\n            return {\n                type: SelectionRangeTypes.TableSelection,\n                ranges,\n                areAllCollapsed: checkAllCollapsed(ranges),\n                table: findClosestElementAncestor(\n                    ranges[0].startContainer,\n                    core.contentDiv,\n                    'table'\n                ) as HTMLTableElement,\n                coordinates: undefined,\n            };\n        } else if ((shadowEditImageSelectionPath?.length || 0) > 0) {\n            const ranges = core.lifecycle.shadowEditImageSelectionPath!.map(path =>\n                createRange(core.contentDiv, path.start, path.end)\n            );\n            return {\n                type: SelectionRangeTypes.ImageSelection,\n                ranges,\n                areAllCollapsed: checkAllCollapsed(ranges),\n                image: findClosestElementAncestor(\n                    ranges[0].startContainer,\n                    core.contentDiv,\n                    'img'\n                ) as HTMLImageElement,\n                imageId: undefined,\n            };\n        } else {\n            const shadowRange =\n                shadowEditSelectionPath &&\n                createRange(\n                    core.contentDiv,\n                    shadowEditSelectionPath.start,\n                    shadowEditSelectionPath.end\n                );\n\n            return createNormalSelectionEx(shadowRange ? [shadowRange] : []);\n        }\n    } else {\n        if (core.api.hasFocus(core)) {\n            if (core.domEvent.tableSelectionRange) {\n                return core.domEvent.tableSelectionRange;\n            }\n\n            if (core.domEvent.imageSelectionRange) {\n                return core.domEvent.imageSelectionRange;\n            }\n\n            const selection = core.contentDiv.ownerDocument.defaultView?.getSelection();\n            if (!result && selection && selection.rangeCount > 0) {\n                const range = selection.getRangeAt(0);\n                if (contains(core.contentDiv, range)) {\n                    return createNormalSelectionEx([range]);\n                }\n            }\n        }\n\n        return (\n            core.domEvent.tableSelectionRange ??\n            core.domEvent.imageSelectionRange ??\n            createNormalSelectionEx(\n                core.domEvent.selectionRange ? [core.domEvent.selectionRange] : []\n            )\n        );\n    }\n};\n\nfunction createNormalSelectionEx(ranges: Range[]): SelectionRangeEx {\n    return {\n        type: SelectionRangeTypes.Normal,\n        ranges: ranges,\n        areAllCollapsed: checkAllCollapsed(ranges),\n    };\n}\n\nfunction checkAllCollapsed(ranges: Range[]): boolean {\n    return ranges.filter(range => range?.collapsed).length == ranges.length;\n}\n"]}