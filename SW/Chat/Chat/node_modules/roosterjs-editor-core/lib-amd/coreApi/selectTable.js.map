{"version":3,"file":"selectTable.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-core/lib/coreApi/selectTable.ts"],"names":[],"mappings":"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","sourcesContent":["import addUniqueId from './utils/addUniqueId';\nimport { PositionType, SelectionRangeTypes } from 'roosterjs-editor-types';\nimport {\n    createRange,\n    getTagOfNode,\n    isWholeTableSelected,\n    Position,\n    removeGlobalCssStyle,\n    removeImportantStyleRule,\n    setGlobalCssStyles,\n    toArray,\n    VTable,\n} from 'roosterjs-editor-dom';\nimport type { EditorCore, TableSelection, SelectTable, Coordinates } from 'roosterjs-editor-types';\n\nconst TABLE_ID = 'tableSelected';\nconst CONTENT_DIV_ID = 'contentDiv_';\nconst STYLE_ID = 'tableStyle';\nconst SELECTED_CSS_RULE =\n    '{background-color: rgb(198,198,198) !important; caret-color: transparent}';\nconst MAX_RULE_SELECTOR_LENGTH = 9000;\n\n/**\n * @internal\n * Select a table and save data of the selected range\n * @param core The EditorCore object\n * @param table table to select\n * @param coordinates first and last cell of the selection, if this parameter is null, instead of\n * selecting, will unselect the table.\n * @returns true if successful\n */\nexport const selectTable: SelectTable = (\n    core: EditorCore,\n    table: HTMLTableElement | null,\n    coordinates?: TableSelection\n) => {\n    unselect(core);\n\n    if (areValidCoordinates(coordinates) && table) {\n        addUniqueId(table, TABLE_ID);\n        addUniqueId(core.contentDiv, CONTENT_DIV_ID);\n\n        const { ranges, isWholeTableSelected } = select(core, table, coordinates);\n        if (!isMergedCell(table, coordinates)) {\n            const cellToSelect = table.rows\n                .item(coordinates.firstCell.y)\n                ?.cells.item(coordinates.firstCell.x);\n\n            if (cellToSelect) {\n                core.api.selectRange(\n                    core,\n                    createRange(new Position(cellToSelect, PositionType.Begin))\n                );\n            }\n        }\n\n        return {\n            type: SelectionRangeTypes.TableSelection,\n            ranges,\n            table,\n            areAllCollapsed: ranges.filter(range => range?.collapsed).length == ranges.length,\n            coordinates,\n            isWholeTableSelected,\n        };\n    }\n\n    return null;\n};\n\nfunction buildCss(\n    table: HTMLTableElement,\n    coordinates: TableSelection,\n    contentDivSelector: string\n): { cssRules: string[]; ranges: Range[]; isWholeTableSelected: boolean } {\n    const ranges: Range[] = [];\n    const selectors: string[] = [];\n\n    const vTable = new VTable(table);\n    const isAllTableSelected = isWholeTableSelected(vTable, coordinates);\n    if (isAllTableSelected) {\n        handleAllTableSelected(contentDivSelector, vTable, selectors, ranges);\n    } else {\n        handleTableSelected(coordinates, vTable, contentDivSelector, selectors, ranges);\n    }\n\n    const cssRules: string[] = [];\n    let currentRules: string = '';\n    while (selectors.length > 0) {\n        currentRules += (currentRules.length > 0 ? ',' : '') + selectors.shift() || '';\n        if (\n            currentRules.length + (selectors[0]?.length || 0) > MAX_RULE_SELECTOR_LENGTH ||\n            selectors.length == 0\n        ) {\n            cssRules.push(currentRules + ' ' + SELECTED_CSS_RULE);\n            currentRules = '';\n        }\n    }\n\n    return { cssRules, ranges, isWholeTableSelected: isAllTableSelected };\n}\n\nfunction handleAllTableSelected(\n    contentDivSelector: string,\n    vTable: VTable,\n    selectors: string[],\n    ranges: Range[]\n) {\n    const table = vTable.table;\n    const tableSelector = contentDivSelector + ' #' + table.id;\n    selectors.push(tableSelector, `${tableSelector} *`);\n\n    const tableRange = new Range();\n    tableRange.selectNode(table);\n    ranges.push(tableRange);\n}\n\nfunction handleTableSelected(\n    coordinates: TableSelection,\n    vTable: VTable,\n    contentDivSelector: string,\n    selectors: string[],\n    ranges: Range[]\n) {\n    const tr1 = coordinates.firstCell.y;\n    const td1 = coordinates.firstCell.x;\n    const tr2 = coordinates.lastCell.y;\n    const td2 = coordinates.lastCell.x;\n    const table = vTable.table;\n\n    let firstSelected: HTMLTableCellElement | null = null;\n    let lastSelected: HTMLTableCellElement | null = null;\n    // Get whether table has thead, tbody or tfoot.\n    const tableChildren = toArray(table.childNodes).filter(\n        node => ['THEAD', 'TBODY', 'TFOOT'].indexOf(getTagOfNode(node)) > -1\n    );\n    // Set the start and end of each of the table children, so we can build the selector according the element between the table and the row.\n    let cont = 0;\n    const indexes = tableChildren.map(node => {\n        const result = {\n            el: getTagOfNode(node),\n            start: cont,\n            end: node.childNodes.length + cont,\n        };\n\n        cont = result.end;\n        return result;\n    });\n\n    vTable.cells?.forEach((row, rowIndex) => {\n        let tdCount = 0;\n        firstSelected = null;\n        lastSelected = null;\n\n        //Get current TBODY/THEAD/TFOOT\n        const midElement = indexes.filter(ind => ind.start <= rowIndex && ind.end > rowIndex)[0];\n\n        const middleElSelector = midElement ? '>' + midElement.el + '>' : '>';\n        const currentRow =\n            midElement && rowIndex + 1 >= midElement.start\n                ? rowIndex + 1 - midElement.start\n                : rowIndex + 1;\n\n        for (let cellIndex = 0; cellIndex < row.length; cellIndex++) {\n            const cell = row[cellIndex].td;\n            if (cell) {\n                tdCount++;\n                if (rowIndex >= tr1 && rowIndex <= tr2 && cellIndex >= td1 && cellIndex <= td2) {\n                    removeImportant(cell);\n\n                    const selector = generateCssFromCell(\n                        contentDivSelector,\n                        table.id,\n                        middleElSelector,\n                        currentRow,\n                        getTagOfNode(cell),\n                        tdCount\n                    );\n                    const elementsSelector = selector + ' *';\n\n                    selectors.push(selector, elementsSelector);\n                    firstSelected = firstSelected || table.querySelector(selector);\n                    lastSelected = table.querySelector(selector);\n                }\n            }\n        }\n\n        if (firstSelected && lastSelected) {\n            const rowRange = new Range();\n            rowRange.setStartBefore(firstSelected);\n            rowRange.setEndAfter(lastSelected);\n            ranges.push(rowRange);\n        }\n    });\n}\n\nfunction select(\n    core: EditorCore,\n    table: HTMLTableElement,\n    coordinates: TableSelection\n): { ranges: Range[]; isWholeTableSelected: boolean } {\n    const contentDivSelector = '#' + core.contentDiv.id;\n    const { cssRules, ranges, isWholeTableSelected } = buildCss(\n        table,\n        coordinates,\n        contentDivSelector\n    );\n    cssRules.forEach(css =>\n        setGlobalCssStyles(core.contentDiv.ownerDocument, css, STYLE_ID + core.contentDiv.id)\n    );\n\n    return { ranges, isWholeTableSelected };\n}\n\nconst unselect = (core: EditorCore) => {\n    const doc = core.contentDiv.ownerDocument;\n    removeGlobalCssStyle(doc, STYLE_ID + core.contentDiv.id);\n};\n\nfunction generateCssFromCell(\n    contentDivSelector: string,\n    tableId: string,\n    middleElSelector: string,\n    rowIndex: number,\n    cellTag: string,\n    index: number\n): string {\n    return (\n        contentDivSelector +\n        ' #' +\n        tableId +\n        middleElSelector +\n        ' tr:nth-child(' +\n        rowIndex +\n        ')>' +\n        cellTag +\n        ':nth-child(' +\n        index +\n        ')'\n    );\n}\n\nfunction removeImportant(cell: HTMLTableCellElement) {\n    if (cell) {\n        removeImportantStyleRule(cell, ['background-color', 'background']);\n    }\n}\n\nfunction areValidCoordinates(input?: TableSelection): input is TableSelection {\n    if (input) {\n        const { firstCell, lastCell } = input || {};\n        if (firstCell && lastCell) {\n            const handler = (coordinate: Coordinates) =>\n                isValidCoordinate(coordinate.x) && isValidCoordinate(coordinate.y);\n            return handler(firstCell) && handler(lastCell);\n        }\n    }\n\n    return false;\n}\n\nfunction isValidCoordinate(input: number): boolean {\n    return (!!input || input == 0) && input > -1;\n}\n\nfunction isMergedCell(table: HTMLTableElement, coordinates: TableSelection): boolean {\n    const { firstCell } = coordinates;\n    return !(table.rows.item(firstCell.y) && table.rows.item(firstCell.y)?.cells.item(firstCell.x));\n}\n"]}