{"version":3,"file":"getDarkColor.js","sourceRoot":"","sources":["../../../../packages/roosterjs-color-utils/lib/utils/getDarkColor.ts"],"names":[],"mappings":";;AAAA,6BAA+B;AAE/B,IAAM,iBAAiB,GAAG,MAAM,CAAC,CAAC,qBAAqB;AAEvD;;;;GAIG;AACH,SAAwB,YAAY,CAChC,KAAa,EACb,UAAsC;IAAtC,2BAAA,EAAA,8BAAsC;IAEtC,IAAI;QACA,IAAM,aAAa,GAAG,KAAK,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC;QAChD,IAAM,QAAQ,GAAG,aAAa,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;QAC7C,IAAM,SAAS,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,GAAG,GAAG,CAAC,GAAG,UAAU,CAAC;QAChF,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;aACjD,GAAG,EAAE;aACL,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aAC5B,QAAQ,EAAE,CAAC;KACnB;IAAC,WAAM,GAAE;IAEV,OAAO,KAAK,CAAC;AACjB,CAAC;AAfD,+BAeC","sourcesContent":["import * as Color from 'color';\n\nconst DefaultBaseLValue = 21.247; // L-value of #333333\n\n/**\n * Get dark mode color for a given color\n * @param color The color to calculate from\n * @param baseLValue The Light value for base dark color in LAB format. @default the Light value for #333333\n */\nexport default function getDarkColor(\n    color: string,\n    baseLValue: number = DefaultBaseLValue\n): string {\n    try {\n        const computedColor = Color(color || undefined);\n        const colorLab = computedColor.lab().array();\n        const newLValue = (100 - colorLab[0]) * ((100 - baseLValue) / 100) + baseLValue;\n        color = Color.lab(newLValue, colorLab[1], colorLab[2])\n            .rgb()\n            .alpha(computedColor.alpha())\n            .toString();\n    } catch {}\n\n    return color;\n}\n"]}