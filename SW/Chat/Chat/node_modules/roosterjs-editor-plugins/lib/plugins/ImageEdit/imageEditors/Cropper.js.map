{"version":3,"file":"Cropper.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/imageEditors/Cropper.ts"],"names":[],"mappings":"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","sourcesContent":["import { ImageEditElementClass } from '../types/ImageEditElementClass';\nimport { rotateCoordinate } from './Resizer';\nimport type { DNDDirectionX, DnDDirectionY } from '../types/DragAndDropContext';\nimport type DragAndDropContext from '../types/DragAndDropContext';\nimport type DragAndDropHandler from '../../../pluginUtils/DragAndDropHandler';\nimport type { CreateElementData } from 'roosterjs-editor-types';\nimport type { CropInfo } from '../types/ImageEditInfo';\nimport {\n    CROP_HANDLE_SIZE,\n    CROP_HANDLE_WIDTH,\n    ROTATION,\n    XS_CROP,\n    YS_CROP,\n} from '../constants/constants';\n\n/**\n * @internal\n * Crop handle for DragAndDropHelper\n */\nexport const Cropper: DragAndDropHandler<DragAndDropContext, CropInfo> = {\n    onDragStart: ({ editInfo }) => ({ ...editInfo }),\n    onDragging: ({ editInfo, x, y, options }, e, base, dx, dy) => {\n        [dx, dy] = rotateCoordinate(dx, dy, editInfo.angleRad);\n\n        const {\n            widthPx,\n            heightPx,\n            leftPercent,\n            rightPercent,\n            topPercent,\n            bottomPercent,\n        } = editInfo;\n        const { minWidth, minHeight } = options;\n        const widthPercent = 1 - leftPercent - rightPercent;\n        const heightPercent = 1 - topPercent - bottomPercent;\n\n        if (\n            widthPercent > 0 &&\n            heightPercent > 0 &&\n            minWidth !== undefined &&\n            minHeight !== undefined\n        ) {\n            const fullWidth = widthPx / widthPercent;\n            const fullHeight = heightPx / heightPercent;\n            const newLeft =\n                x != 'e'\n                    ? crop(base.leftPercent, dx, fullWidth, rightPercent, minWidth)\n                    : leftPercent;\n            const newRight =\n                x != 'w'\n                    ? crop(base.rightPercent, -dx, fullWidth, leftPercent, minWidth)\n                    : rightPercent;\n            const newTop =\n                y != 's'\n                    ? crop(base.topPercent, dy, fullHeight, bottomPercent, minHeight)\n                    : topPercent;\n            const newBottom =\n                y != 'n'\n                    ? crop(base.bottomPercent, -dy, fullHeight, topPercent, minHeight)\n                    : bottomPercent;\n\n            editInfo.leftPercent = newLeft;\n            editInfo.rightPercent = newRight;\n            editInfo.topPercent = newTop;\n            editInfo.bottomPercent = newBottom;\n            editInfo.widthPx = fullWidth * (1 - newLeft - newRight);\n            editInfo.heightPx = fullHeight * (1 - newTop - newBottom);\n\n            return true;\n        } else {\n            return false;\n        }\n    },\n};\n\nfunction crop(\n    basePercentage: number,\n    deltaValue: number,\n    fullValue: number,\n    currentPercentage: number,\n    minValue: number\n): number {\n    const maxValue = fullValue * (1 - currentPercentage) - minValue;\n    const newValue = fullValue * basePercentage + deltaValue;\n    const validValue = Math.max(Math.min(newValue, maxValue), 0);\n    return validValue / fullValue;\n}\n\n/**\n * @internal\n * Get HTML for crop elements, including 4 overlays (to show dark shadow), 1 container and 4 crop handles\n */\nexport function getCropHTML(): CreateElementData[] {\n    const overlayHTML: CreateElementData = {\n        tag: 'div',\n        style: 'position:absolute;background-color:rgb(0,0,0,0.5);pointer-events:none',\n        className: ImageEditElementClass.CropOverlay,\n    };\n    const containerHTML: CreateElementData = {\n        tag: 'div',\n        style: 'position:absolute;overflow:hidden',\n        className: ImageEditElementClass.CropContainer,\n        children: [],\n    };\n    if (containerHTML) {\n        XS_CROP.forEach(x =>\n            YS_CROP.forEach(y => containerHTML.children?.push(getCropHTMLInternal(x, y)))\n        );\n    }\n    return [containerHTML, overlayHTML, overlayHTML, overlayHTML, overlayHTML];\n}\n\nfunction getCropHTMLInternal(x: DNDDirectionX, y: DnDDirectionY): CreateElementData {\n    const leftOrRight = x == 'w' ? 'left' : 'right';\n    const topOrBottom = y == 'n' ? 'top' : 'bottom';\n    const rotation = ROTATION[y + x];\n\n    return {\n        tag: 'div',\n        className: ImageEditElementClass.CropHandle,\n        style: `position:absolute;pointer-events:auto;cursor:${y}${x}-resize;${leftOrRight}:0;${topOrBottom}:0;width:${CROP_HANDLE_SIZE}px;height:${CROP_HANDLE_SIZE}px;transform:rotate(${rotation}deg)`,\n        dataset: { x, y },\n        children: getCropHandleHTML(),\n    };\n}\n\nfunction getCropHandleHTML(): CreateElementData[] {\n    const result: CreateElementData[] = [];\n    [0, 1].forEach(layer =>\n        [0, 1].forEach(dir => {\n            result.push(getCropHandleHTMLInternal(layer, dir));\n        })\n    );\n    return result;\n}\n\nfunction getCropHandleHTMLInternal(layer: number, dir: number): CreateElementData {\n    const position =\n        dir == 0\n            ? `right:${layer}px;height:${CROP_HANDLE_WIDTH - layer * 2}px;`\n            : `top:${layer}px;width:${CROP_HANDLE_WIDTH - layer * 2}px;`;\n    const bgColor = layer == 0 ? 'white' : 'black';\n\n    return {\n        tag: 'div',\n        style: `position:absolute;left:${layer}px;bottom:${layer}px;${position};background-color:${bgColor}`,\n    };\n}\n"]}