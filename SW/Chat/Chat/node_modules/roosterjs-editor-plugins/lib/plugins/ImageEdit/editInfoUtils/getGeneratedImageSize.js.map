{"version":3,"file":"getGeneratedImageSize.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/editInfoUtils/getGeneratedImageSize.ts"],"names":[],"mappings":";;AAGA;;;;;;;;;;;GAWG;AACH,SAAwB,qBAAqB,CACzC,QAAuB,EACvB,UAAoB;IAGhB,IAAS,KAAK,GAOd,QAAQ,QAPM,EACJ,MAAM,GAMhB,QAAQ,SANQ,EACN,KAAK,GAKf,QAAQ,SALO,EACF,IAAI,GAIjB,QAAQ,YAJS,EACH,KAAK,GAGnB,QAAQ,aAHW,EACP,GAAG,GAEf,QAAQ,WAFO,EACA,MAAM,GACrB,QAAQ,cADa,CACZ;IAEb,6CAA6C;IAC7C,IAAM,aAAa,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;IACjD,IAAM,cAAc,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;IAEnD,eAAe;IACf,IAAM,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC;IACxD,IAAM,aAAa,GAAG,UAAU,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC;IAE3D,oCAAoC;IACpC,IAAM,WAAW,GACb,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACzF,IAAM,YAAY,GACd,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAEzF,OAAO;QACH,WAAW,aAAA;QACX,YAAY,cAAA;QACZ,aAAa,eAAA;QACb,cAAc,gBAAA;QACd,YAAY,cAAA;QACZ,aAAa,eAAA;KAChB,CAAC;AACN,CAAC;AApCD,wCAoCC","sourcesContent":["import type GeneratedImageSize from '../types/GeneratedImageSize';\nimport type ImageEditInfo from '../types/ImageEditInfo';\n\n/**\n * @internal\n * Calculate the target size of an image.\n * For image that is not rotated, target size is the same with resizing/cropping size.\n * For image that is rotated, target size is calculated from resizing/cropping size and its rotate angle\n * Say an image is resized to 100w*100h, cropped 25% on each side, then rotated 45deg, so that cropped size\n * will be (both height and width) 100*(1-0.25-0,25) = 50px, then final image size will be 50*sqrt(2) = 71px\n * @param editInfo The edit info to calculate size from\n * @param beforeCrop True to calculate the full size of original image before crop, false to calculate the size\n * after crop\n * @returns A GeneratedImageSize object which contains original, visible and target target width and height of the image\n */\nexport default function getGeneratedImageSize(\n    editInfo: ImageEditInfo,\n    beforeCrop?: boolean\n): GeneratedImageSize {\n    const {\n        widthPx: width,\n        heightPx: height,\n        angleRad: angle,\n        leftPercent: left,\n        rightPercent: right,\n        topPercent: top,\n        bottomPercent: bottom,\n    } = editInfo;\n\n    // Original image size before crop and rotate\n    const originalWidth = width / (1 - left - right);\n    const originalHeight = height / (1 - top - bottom);\n\n    // Visible size\n    const visibleWidth = beforeCrop ? originalWidth : width;\n    const visibleHeight = beforeCrop ? originalHeight : height;\n\n    // Target size after crop and rotate\n    const targetWidth =\n        Math.abs(visibleWidth * Math.cos(angle)) + Math.abs(visibleHeight * Math.sin(angle));\n    const targetHeight =\n        Math.abs(visibleWidth * Math.sin(angle)) + Math.abs(visibleHeight * Math.cos(angle));\n\n    return {\n        targetWidth,\n        targetHeight,\n        originalWidth,\n        originalHeight,\n        visibleWidth,\n        visibleHeight,\n    };\n}\n"]}