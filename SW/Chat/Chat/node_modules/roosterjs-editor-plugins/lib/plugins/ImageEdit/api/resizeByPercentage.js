"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var applyChange_1 = require("../editInfoUtils/applyChange");
var getTargetSizeByPercentage_1 = require("../editInfoUtils/getTargetSizeByPercentage");
var isResizedTo_1 = require("./isResizedTo");
var editInfo_1 = require("../editInfoUtils/editInfo");
/**
 * Resize the image by percentage of its natural size. If the image is cropped or rotated,
 * the final size will also calculated with crop and rotate info.
 * @param editor The editor that contains the image
 * @param image The image to resize
 * @param percentage Percentage to resize to
 * @param minWidth Minimum width
 * @param minHeight Minimum height
 */
function resizeByPercentage(editor, image, percentage, minWidth, minHeight) {
    var editInfo = (0, editInfo_1.getEditInfoFromImage)(image);
    if (!(0, isResizedTo_1.default)(image, percentage)) {
        loadImage(image, image.src, function () {
            if (!editor.isDisposed() && editor.contains(image) && editInfo) {
                var lastSrc_1 = image.getAttribute('src');
                var _a = (0, getTargetSizeByPercentage_1.default)(editInfo, percentage), width = _a.width, height = _a.height;
                editInfo.widthPx = Math.max(width, minWidth);
                editInfo.heightPx = Math.max(height, minHeight);
                editor.addUndoSnapshot(function () {
                    (0, applyChange_1.default)(editor, image, editInfo, lastSrc_1 || '', true /*wasResized*/);
                }, "ImageResize" /* ImageResize */);
                editor.select(image);
            }
        });
    }
}
exports.default = resizeByPercentage;
function loadImage(img, src, callback) {
    img.onload = function () {
        img.onload = null;
        img.onerror = null;
        callback();
    };
    img.onerror = function () {
        img.onload = null;
        img.onerror = null;
        callback();
    };
    img.src = src;
}
//# sourceMappingURL=resizeByPercentage.js.map