"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleScrollEvent = void 0;
var getCellCoordinates_1 = require("../utils/getCellCoordinates");
var restoreSelection_1 = require("../utils/restoreSelection");
var selectTable_1 = require("../utils/selectTable");
var setData_1 = require("../utils/setData");
var updateSelection_1 = require("../utils/updateSelection");
/**
 * @internal
 * Handle Scroll Event and mantains the selection range,
 * Since when we scroll the cursor does not trigger the on Mouse Move event
 * The table selection gets removed.
 */
function handleScrollEvent(state, editor) {
    var _a;
    var eventTarget = editor.getElementAtCursor();
    if (!eventTarget) {
        return;
    }
    (0, setData_1.setData)(eventTarget, state, editor);
    if (state.firstTable == state.targetTable &&
        state.firstTarget &&
        ((_a = state.vTable) === null || _a === void 0 ? void 0 : _a.selection) &&
        state.lastTarget &&
        state.tableSelection) {
        var newCell = (0, getCellCoordinates_1.getCellCoordinates)(state.vTable, state.lastTarget);
        if (newCell) {
            state.vTable.selection.lastCell = newCell;
            (0, selectTable_1.selectTable)(editor, state);
            (0, updateSelection_1.updateSelection)(editor, state.firstTarget, 0);
        }
    }
    else if (state.tableSelection) {
        (0, restoreSelection_1.restoreSelection)(state, editor);
    }
}
exports.handleScrollEvent = handleScrollEvent;
//# sourceMappingURL=handleScrollEvent.js.map