{"version":3,"file":"sanitizeLinks.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/Paste/sanitizeLinks/sanitizeLinks.ts"],"names":[],"mappings":";;AAAA,6DAA8D;AAG9D,IAAM,mBAAmB,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;AAEjF;;;;KAIK;AACL,SAAwB,aAAa,CAAC,gBAAgD;IAClF,IAAA,6CAAsB,EAClB,gBAAgB,CAAC,kBAAkB,EACnC,MAAM,EACN,UAAC,KAAa,EAAE,OAAoB,IAAK,OAAA,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,EAA5B,CAA4B,CACxE,CAAC;AACN,CAAC;AAND,gCAMC;AAED,SAAS,YAAY,CAAC,IAAY,EAAE,WAAwB;IACxD,IAAI,GAAG,CAAC;IACR,IAAI;QACA,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;KACvB;IAAC,WAAM;QACJ,GAAG,GAAG,SAAS,CAAC;KACnB;IAED,mCAAmC;IACnC,IAAI,GAAG,IAAI,mBAAmB,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;QACvD,OAAO,IAAI,CAAC;KACf;IACD,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;IACpC,OAAO,EAAE,CAAC;AACd,CAAC","sourcesContent":["import { chainSanitizerCallback } from 'roosterjs-editor-dom';\nimport type { HtmlSanitizerOptions } from 'roosterjs-editor-types';\n\nconst SUPPORTED_PROTOCOLS = ['http:', 'https:', 'notes:', 'mailto:', 'onenote:'];\n\n/**\n * @internal\n * Clear local paths and remove link\n * @param sanitizingOption the sanitizingOption of BeforePasteEvent\n * */\nexport default function sanitizeLinks(sanitizingOption: Required<HtmlSanitizerOptions>) {\n    chainSanitizerCallback(\n        sanitizingOption.attributeCallbacks,\n        'href',\n        (value: string, element: HTMLElement) => validateLink(value, element)\n    );\n}\n\nfunction validateLink(link: string, htmlElement: HTMLElement) {\n    let url;\n    try {\n        url = new URL(link);\n    } catch {\n        url = undefined;\n    }\n\n    /* whitelist supported protocols */\n    if (url && SUPPORTED_PROTOCOLS.indexOf(url.protocol) > -1) {\n        return link;\n    }\n    htmlElement.removeAttribute('href');\n    return '';\n}\n"]}