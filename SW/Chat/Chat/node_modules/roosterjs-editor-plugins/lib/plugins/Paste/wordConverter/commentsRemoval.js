"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var roosterjs_editor_dom_1 = require("roosterjs-editor-dom");
var MSO_COMMENT_PARENT = 'mso-comment-parent';
var MSO_COMMENT_REFERENCE = 'mso-comment-reference';
var MSO_COMMENT_DATE = 'mso-comment-date';
var MSO_COMMENT_ANCHOR_HREF_REGEX = /#_msocom_/;
var MSO_SPECIAL_CHARACTER = 'mso-special-character';
var MSO_SPECIAL_CHARACTER_COMMENT = 'comment';
var MSO_COMMENT_CONTINUATION = 'mso-comment-continuation';
var MSO_ELEMENT = 'mso-element';
var MSO_ELEMENT_COMMENT_LIST = 'comment-list';
var MSO_COMMENT_DONE = 'mso-comment-done';
/**
 * @internal
 * Removes comments when pasting Word content.
 */
function commentsRemoval(elementCallbacks, styleCallbacks) {
    // 1st Step, Remove SPAN elements added after each comment.
    // Word adds multiple elements for comments as SPAN elements.
    // In this step we remove these elements:
    // Structure as of 4/18/2022
    // 1.   <span style="mso-special-character:comment">&nbsp;</span>
    // 2.   <span style="mso-comment-continuation:3">
    //          <span>
    //              <span style="font-size:8.0pt">
    //              <a href="#_msocom_2">[RS2]</a>
    //              <span style="mso-special-character:comment">&nbsp;</span>
    //              </span>
    //          </span>
    //      </span>
    (0, roosterjs_editor_dom_1.chainSanitizerCallback)(elementCallbacks, 'SPAN', function (element) {
        var _a;
        var styles = (0, roosterjs_editor_dom_1.getStyles)(element);
        if (styles[MSO_SPECIAL_CHARACTER] == MSO_SPECIAL_CHARACTER_COMMENT) {
            (_a = element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(element);
        }
        return true;
    });
    // 2nd Step, Modify Anchor elements.
    // 1.   When the element was selected to add a comment in Word, the selection is converted to
    //      an anchor element, so we change the tag to span.
    // 2.   Word also adds some Anchor elements with the following structure:
    //      Structure as of 4/18/2022
    //      <a href="#_msocom_{number}">[SS3]</a>
    //      In this step we remove this Anchor elements.
    (0, roosterjs_editor_dom_1.chainSanitizerCallback)(elementCallbacks, 'A', function (element) {
        var _a;
        if ((0, roosterjs_editor_dom_1.safeInstanceOf)(element, 'HTMLAnchorElement') &&
            MSO_COMMENT_ANCHOR_HREF_REGEX.test(element.href)) {
            (_a = element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(element);
        }
        return true;
    });
    // 3rd Step, remove List of comments.
    // When the document have a long thread of comments, these comments are appended
    // at the end of the copied fragment, we also need to remove it.
    // Structure as of 4/18/2022
    //
    // <div style="mso-element:comment-list">
    //   <hr width="33%" size="1" align="left">
    //   <div style="mso-element:comment"> ... </div>
    //   <div style="mso-element:comment"> ... </div>
    //   <div style="mso-element:comment"> ... </div>
    //   </div>
    // </div>
    (0, roosterjs_editor_dom_1.chainSanitizerCallback)(elementCallbacks, 'DIV', function (element) {
        var styles = (0, roosterjs_editor_dom_1.getStyles)(element);
        if (styles[MSO_ELEMENT] == MSO_ELEMENT_COMMENT_LIST) {
            (0, roosterjs_editor_dom_1.moveChildNodes)(element);
        }
        return true;
    });
    /**
     * Remove styles related to Office Comments that can cause unwanted behaviors
     * depending on the user client
     */
    [
        MSO_COMMENT_REFERENCE,
        MSO_COMMENT_DATE,
        MSO_COMMENT_PARENT,
        MSO_COMMENT_CONTINUATION,
        MSO_COMMENT_DONE,
    ].forEach(function (style) { return (0, roosterjs_editor_dom_1.chainSanitizerCallback)(styleCallbacks, style, function () { return false; }); });
}
exports.default = commentsRemoval;
//# sourceMappingURL=commentsRemoval.js.map