{"version":3,"file":"convertPastedContentFromOfficeOnline.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/Paste/officeOnlineConverter/convertPastedContentFromOfficeOnline.ts"],"names":[],"mappings":";;AAAA,6DAA8D;AAE9D,2FAE8C;AAE9C,IAAM,qBAAqB,GACvB,kHAAkH,CAAC;AACvH,IAAM,yBAAyB,GAAG;IAC9B,wBAAwB;IACxB,yBAAyB;IACzB,0BAA0B;IAC1B,2BAA2B;IAC3B,wBAAwB;IACxB,qBAAqB;CACxB;KACI,GAAG,CAAC,UAAA,SAAS,IAAI,OAAA,MAAI,SAAW,EAAf,CAAe,CAAC;KACjC,IAAI,CAAC,GAAG,CAAC,CAAC;AACf;;;;;;GAMG;AACH,SAAwB,oCAAoC,CACxD,QAA0B,EAC1B,gBAAgD;IAEhD,QAAQ,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC,OAAO,CAAC,UAAC,EAAW;QACjE,IAAM,OAAO,GAAG,EAAiB,CAAC;QAClC,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACxC,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IACH,yEAAyE;IACzE,0CAA0C;IAC1C,IAAI,IAAA,yDAAoB,EAAC,QAAQ,CAAC,EAAE;QAChC,IAAA,4CAAkC,EAAC,QAAQ,CAAC,CAAC;KAChD;IAED,8DAA8D;IAC9D,gGAAgG;IAChG,sEAAsE;IACtE,IAAA,6CAAsB,EAClB,gBAAgB,CAAC,iBAAiB,EAClC,QAAQ,EACR,UAAC,KAAK,EAAE,OAAO,IAAK,OAAA,OAAO,CAAC,OAAO,IAAI,KAAK,IAAI,KAAK,IAAI,MAAM,EAA3C,CAA2C,CAClE,CAAC;IAEF,QAAQ;SACH,gBAAgB,CAAC,yBAAyB,CAAC;SAC3C,OAAO,CAAC,UAAA,IAAI,YAAI,OAAA,MAAA,IAAI,CAAC,aAAa,0CAAE,WAAW,CAAC,IAAI,CAAC,CAAA,EAAA,CAAC,CAAC;AAChE,CAAC;AA3BD,uDA2BC","sourcesContent":["import { chainSanitizerCallback } from 'roosterjs-editor-dom';\nimport type { HtmlSanitizerOptions } from 'roosterjs-editor-types';\nimport convertPastedContentFromWordOnline, {\n    isWordOnlineWithList,\n} from './convertPastedContentFromWordOnline';\n\nconst WAC_IDENTIFY_SELECTOR =\n    'ul[class^=\"BulletListStyle\"]>.OutlineElement,ol[class^=\"NumberListStyle\"]>.OutlineElement,span.WACImageContainer';\nconst TABLE_TEMP_ELEMENTS_QUERY = [\n    'TableInsertRowGapBlank',\n    'TableColumnResizeHandle',\n    'TableCellTopBorderHandle',\n    'TableCellLeftBorderHandle',\n    'TableHoverColumnHandle',\n    'TableHoverRowHandle',\n]\n    .map(className => `.${className}`)\n    .join(',');\n/**\n * @internal\n * Convert pasted content from Office Online\n * Once it is known that the document is from WAC\n * We need to remove the display property and margin from all the list item\n * @param event The BeforePaste event\n */\nexport default function convertPastedContentFromOfficeOnline(\n    fragment: DocumentFragment,\n    sanitizingOption: Required<HtmlSanitizerOptions>\n) {\n    fragment.querySelectorAll(WAC_IDENTIFY_SELECTOR).forEach((el: Element) => {\n        const element = el as HTMLElement;\n        element.style.removeProperty('display');\n        element.style.removeProperty('margin');\n    });\n    // call conversion function if the pasted content is from word online and\n    // has list element in the pasted content.\n    if (isWordOnlineWithList(fragment)) {\n        convertPastedContentFromWordOnline(fragment);\n    }\n\n    // Remove \"border:none\" for image to fix image resize behavior\n    // We found a problem that when paste an image with \"border:none\" then the resize border will be\n    // displayed incorrectly when resize it. So we need to drop this style\n    chainSanitizerCallback(\n        sanitizingOption.cssStyleCallbacks,\n        'border',\n        (value, element) => element.tagName != 'IMG' || value != 'none'\n    );\n\n    fragment\n        .querySelectorAll(TABLE_TEMP_ELEMENTS_QUERY)\n        .forEach(node => node.parentElement?.removeChild(node));\n}\n"]}