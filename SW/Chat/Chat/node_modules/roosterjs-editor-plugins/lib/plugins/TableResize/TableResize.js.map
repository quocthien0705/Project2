{"version":3,"file":"TableResize.js","sourceRoot":"","sources":["../../../../../packages/roosterjs-editor-plugins/lib/plugins/TableResize/TableResize.ts"],"names":[],"mappings":"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","sourcesContent":["import TableEditor from './editors/TableEditor';\nimport { contains, normalizeRect, safeInstanceOf } from 'roosterjs-editor-dom';\nimport { PluginEventType } from 'roosterjs-editor-types';\nimport type {\n    CreateElementData,\n    EditorPlugin,\n    IEditor,\n    PluginEvent,\n    Rect,\n} from 'roosterjs-editor-types';\n\nconst TABLE_RESIZER_LENGTH = 12;\n\n/**\n * TableResize plugin, provides the ability to resize a table by drag-and-drop\n */\nexport default class TableResize implements EditorPlugin {\n    private editor: IEditor | null = null;\n    private onMouseMoveDisposer: (() => void) | null = null;\n    private tableRectMap: { table: HTMLTableElement; rect: Rect }[] | null = null;\n    private tableEditor: TableEditor | null = null;\n\n    /**\n     * Construct a new instance of TableResize plugin\n     * @param onShowHelperElement An optional callback to allow customize helper element of table resizing.\n     * To customize the helper element, add this callback and change the attributes of elementData then it\n     * will be picked up by TableResize code\n     * @param anchorContainerSelector An optional selector string to specify the container to host the plugin.\n     * The container must not be affected by transform: scale(), otherwise the position calculation will be wrong.\n     * If not specified, the plugin will be inserted in document.body\n     */\n    constructor(\n        private onShowHelperElement?: (\n            elementData: CreateElementData,\n            helperType: 'CellResizer' | 'TableInserter' | 'TableResizer' | 'TableSelector',\n            tableOrTd: HTMLTableElement | HTMLTableCellElement\n        ) => void,\n        private anchorContainerSelector?: string\n    ) {}\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'TableResize';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n        this.onMouseMoveDisposer = this.editor.addDomEventHandler({\n            mousemove: this.onMouseMove,\n        });\n        const scrollContainer = this.editor.getScrollContainer();\n        scrollContainer.addEventListener('mouseout', this.onMouseOut);\n    }\n\n    private onMouseOut = ({ relatedTarget, currentTarget }: MouseEvent) => {\n        if (\n            safeInstanceOf(relatedTarget, 'HTMLElement') &&\n            safeInstanceOf(currentTarget, 'HTMLElement') &&\n            this.tableEditor &&\n            !this.tableEditor.isOwnedElement(relatedTarget) &&\n            !contains(currentTarget, relatedTarget)\n        ) {\n            this.setTableEditor(null);\n        }\n    };\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        const scrollContainer = this.editor?.getScrollContainer();\n        scrollContainer?.removeEventListener('mouseout', this.onMouseOut);\n        this.onMouseMoveDisposer?.();\n        this.invalidateTableRects();\n        this.disposeTableEditor();\n        this.editor = null;\n        this.onMouseMoveDisposer = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(e: PluginEvent) {\n        switch (e.eventType) {\n            case PluginEventType.Input:\n            case PluginEventType.ContentChanged:\n            case PluginEventType.Scroll:\n            case PluginEventType.ZoomChanged:\n                this.setTableEditor(null);\n                this.invalidateTableRects();\n                break;\n        }\n    }\n\n    private onMouseMove = (event: Event) => {\n        const e = event as MouseEvent;\n\n        if (e.buttons > 0 || !this.editor) {\n            return;\n        }\n\n        this.ensureTableRects();\n\n        const editorWindow = this.editor.getDocument().defaultView || window;\n        const x = e.pageX - editorWindow.scrollX;\n        const y = e.pageY - editorWindow.scrollY;\n        let currentTable: HTMLTableElement | null = null;\n\n        if (this.tableRectMap) {\n            for (let i = this.tableRectMap.length - 1; i >= 0; i--) {\n                const { table, rect } = this.tableRectMap[i];\n\n                if (\n                    x >= rect.left - TABLE_RESIZER_LENGTH &&\n                    x <= rect.right + TABLE_RESIZER_LENGTH &&\n                    y >= rect.top - TABLE_RESIZER_LENGTH &&\n                    y <= rect.bottom + TABLE_RESIZER_LENGTH\n                ) {\n                    currentTable = table;\n                    break;\n                }\n            }\n        }\n\n        this.setTableEditor(currentTable, e);\n        this.tableEditor?.onMouseMove(x, y);\n    };\n\n    /**\n     * @internal Public only for unit test\n     * @param table Table to use when setting the Editors\n     * @param event (Optional) Mouse event\n     */\n    public setTableEditor(table: HTMLTableElement | null, event?: MouseEvent) {\n        if (this.tableEditor && !this.tableEditor.isEditing() && table != this.tableEditor.table) {\n            this.disposeTableEditor();\n        }\n\n        if (!this.tableEditor && table && this.editor && table.rows.length > 0) {\n            const container = this.anchorContainerSelector\n                ? this.editor.getDocument().querySelector(this.anchorContainerSelector)\n                : undefined;\n\n            this.tableEditor = new TableEditor(\n                this.editor,\n                table,\n                this.invalidateTableRects,\n                this.onShowHelperElement,\n                safeInstanceOf(container, 'HTMLElement') ? container : undefined,\n                event?.currentTarget\n            );\n        }\n    }\n\n    private invalidateTableRects = () => {\n        this.tableRectMap = null;\n    };\n\n    private disposeTableEditor() {\n        this.tableEditor?.dispose();\n        this.tableEditor = null;\n    }\n\n    private ensureTableRects() {\n        if (!this.tableRectMap && this.editor) {\n            this.tableRectMap = [];\n            this.editor.queryElements('table', table => {\n                if (table.isContentEditable) {\n                    const rect = normalizeRect(table.getBoundingClientRect());\n                    if (rect && this.tableRectMap) {\n                        this.tableRectMap.push({\n                            table,\n                            rect,\n                        });\n                    }\n                }\n            });\n        }\n    }\n}\n"]}