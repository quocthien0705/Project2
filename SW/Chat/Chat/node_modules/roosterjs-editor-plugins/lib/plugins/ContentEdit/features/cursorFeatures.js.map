{"version":3,"file":"cursorFeatures.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/cursorFeatures.ts"],"names":[],"mappings":";;;AAAA,6DAA2E;AAQ3E,IAAM,iBAAiB,GAA4C;IAC/D,IAAI,EAAE,+BAAuB;IAC7B,iBAAiB,EAAE,IAAI;IACvB,iBAAiB,EAAE,UAAC,KAAK,EAAE,MAAM,EAAE,UAAU;QACzC,IAAI,KAAK,GAAiB,IAAI,CAAC;QAC/B,IAAI,QAAkB,CAAC;QAEvB,IACI,CAAC,UAAU;YACX,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,iBAAiB,EAAE,CAAC;YACrC,CAAC,KAAK,CAAC,SAAS;YAChB,CAAC,CAAC,QAAQ,GAAG,+BAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACtC,CAAC,MAAM,CAAC,qBAAqB,CAAC,QAAQ,CAAC,EACzC;YACE,OAAO,KAAK,CAAC;SAChB;QAED,IAAM,GAAG,GAAG,IAAA,uCAAgB,EAAC,QAAQ,CAAC,OAAO,EAAE,WAAW,CAAC,IAAI,KAAK,CAAC;QACrE,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAEhC,OAAO,CAAC,CAAC,GAAG,IAAI,QAAQ,CAAC,KAAK,iBAAa,CAAC,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,KAAK,kBAAc,CAAC,CAAC;IAC1F,CAAC;IACD,WAAW,EAAE,UAAA,KAAK;QACd,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC;IACpC,CAAC;IACD,eAAe,EAAE,CAAC,8BAAO,CAAC,QAAQ;CACrC,CAAC;AAEF;;GAEG;AACU,QAAA,cAAc,GAGvB;IACA,iBAAiB,EAAE,iBAAiB;CACvC,CAAC","sourcesContent":["import { Browser, getComputedStyle, Position } from 'roosterjs-editor-dom';\nimport { Keys } from 'roosterjs-editor-types';\nimport type {\n    BuildInEditFeature,\n    CursorFeatureSettings,\n    PluginKeyboardEvent,\n} from 'roosterjs-editor-types';\n\nconst NoCycleCursorMove: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.LEFT, Keys.RIGHT],\n    allowFunctionKeys: true,\n    shouldHandleEvent: (event, editor, ctrlOrMeta) => {\n        let range: Range | null = null;\n        let position: Position;\n\n        if (\n            !ctrlOrMeta ||\n            !(range = editor.getSelectionRange()) ||\n            !range.collapsed ||\n            !(position = Position.getStart(range)) ||\n            !editor.isPositionAtBeginning(position)\n        ) {\n            return false;\n        }\n\n        const rtl = getComputedStyle(position.element, 'direction') == 'rtl';\n        const rawEvent = event.rawEvent;\n\n        return (!rtl && rawEvent.which == Keys.LEFT) || (rtl && rawEvent.which == Keys.RIGHT);\n    },\n    handleEvent: event => {\n        event.rawEvent.preventDefault();\n    },\n    defaultDisabled: !Browser.isChrome,\n};\n\n/**\n * @internal\n */\nexport const CursorFeatures: Record<\n    keyof CursorFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    noCycleCursorMove: NoCycleCursorMove,\n};\n"]}