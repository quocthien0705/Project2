{"version":3,"file":"listFeatures.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/listFeatures.ts"],"names":[],"mappings":"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","sourcesContent":["import getAnnounceDataForList from '../../../pluginUtils/announceData/getAnnounceDataForList';\nimport getAutoBulletListStyle from '../utils/getAutoBulletListStyle';\nimport getAutoNumberingListStyle from '../utils/getAutoNumberingListStyle';\nimport {\n    Browser,\n    cacheGetEventData,\n    createNumberDefinition,\n    createObjectDefinition,\n    createVListFromRegion,\n    findClosestElementAncestor,\n    getComputedStyle,\n    getMetadata,\n    getTagOfNode,\n    isBlockElement,\n    isNodeEmpty,\n    isPositionAtBeginningOf,\n    Position,\n    safeInstanceOf,\n    VList,\n    VListChain,\n} from 'roosterjs-editor-dom';\nimport {\n    blockFormat,\n    commitListChains,\n    setIndentation,\n    toggleBullet,\n    toggleNumbering,\n    toggleListType,\n} from 'roosterjs-editor-api';\nimport type {\n    BuildInEditFeature,\n    IEditor,\n    ListFeatureSettings,\n    PluginKeyboardEvent,\n} from 'roosterjs-editor-types';\nimport {\n    Indentation,\n    Keys,\n    QueryScope,\n    ListType,\n    ExperimentalFeatures,\n    PositionType,\n    NumberingListType,\n    BulletListType,\n    ChangeSource,\n} from 'roosterjs-editor-types';\n\nconst PREVIOUS_BLOCK_CACHE_KEY = 'previousBlock';\nconst NEXT_BLOCK_CACHE_KEY = 'nextBlock';\n\ninterface ListStyleMetadata {\n    orderedStyleType?: NumberingListType;\n    unorderedStyleType?: BulletListType;\n}\n\nconst ListStyleDefinitionMetadata = createObjectDefinition<ListStyleMetadata>(\n    {\n        orderedStyleType: createNumberDefinition(\n            true /** isOptional */,\n            undefined /** value **/,\n            NumberingListType.Min,\n            NumberingListType.Max\n        ),\n        unorderedStyleType: createNumberDefinition(\n            true /** isOptional */,\n            undefined /** value **/,\n            BulletListType.Min,\n            BulletListType.Max\n        ),\n    },\n    true /** isOptional */,\n    true /** allowNull */\n);\n\nconst shouldHandleIndentationEvent = (indenting: boolean) => (\n    event: PluginKeyboardEvent,\n    editor: IEditor\n) => {\n    const { keyCode, altKey, shiftKey, ctrlKey, metaKey } = event.rawEvent;\n    return (\n        !ctrlKey &&\n        !metaKey &&\n        (keyCode === Keys.TAB\n            ? !altKey && shiftKey === !indenting\n            : shiftKey && altKey && keyCode === (indenting ? Keys.RIGHT : Keys.LEFT)) &&\n        cacheGetListElement(event, editor)\n    );\n};\n\nconst handleIndentationEvent = (indenting: boolean) => (\n    event: PluginKeyboardEvent,\n    editor: IEditor\n) => {\n    let currentElement: Node | null = null;\n    const isRTL =\n        event.rawEvent.keyCode !== Keys.TAB &&\n        (currentElement = editor.getElementAtCursor()) &&\n        getComputedStyle(currentElement, 'direction') == 'rtl';\n\n    editor.addUndoSnapshot(\n        () => {\n            setIndentation(\n                editor,\n                isRTL == indenting ? Indentation.Decrease : Indentation.Increase\n            );\n        },\n        ChangeSource.Format,\n        false /* canUndoByBackspace */,\n        {\n            getAnnounceData: () =>\n                getAnnounceDataForList(\n                    editor.getElementAtCursor('OL,UL'),\n                    editor.getElementAtCursor('LI')\n                ),\n        }\n    );\n\n    event.rawEvent.preventDefault();\n};\n\n/**\n * IndentWhenTab edit feature, provides the ability to indent current list when user press TAB\n */\nconst IndentWhenTab: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.TAB],\n    shouldHandleEvent: shouldHandleIndentationEvent(true),\n    handleEvent: handleIndentationEvent(true),\n};\n\n/**\n * OutdentWhenShiftTab edit feature, provides the ability to outdent current list when user press Shift+TAB\n */\nconst OutdentWhenShiftTab: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.TAB],\n    shouldHandleEvent: shouldHandleIndentationEvent(false),\n    handleEvent: handleIndentationEvent(false),\n    allowFunctionKeys: true,\n};\n\n/**\n * indentWhenAltShiftRight edit feature, provides the ability to indent or outdent current list when user press Alt+shift+Right\n */\nconst IndentWhenAltShiftRight: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.RIGHT],\n    shouldHandleEvent: shouldHandleIndentationEvent(true),\n    handleEvent: handleIndentationEvent(true),\n    allowFunctionKeys: true,\n    defaultDisabled: Browser.isMac,\n};\n\n/**\n * outdentWhenAltShiftLeft edit feature, provides the ability to indent or outdent current list when user press Alt+shift+Left\n */\nconst OutdentWhenAltShiftLeft: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.LEFT],\n    shouldHandleEvent: shouldHandleIndentationEvent(false),\n    handleEvent: handleIndentationEvent(false),\n    allowFunctionKeys: true,\n    defaultDisabled: Browser.isMac,\n};\n\n/**\n * MergeInNewLine edit feature, provides the ability to merge current line into a new line when user press\n * BACKSPACE at beginning of a list item\n */\nconst MergeInNewLine: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE],\n    shouldHandleEvent: (event, editor) => {\n        const li = editor.getElementAtCursor('LI', undefined /*startFrom*/, event);\n        const range = editor.getSelectionRange();\n        return li && range?.collapsed && isPositionAtBeginningOf(Position.getStart(range), li);\n    },\n    handleEvent: (event, editor) => {\n        const li = editor.getElementAtCursor('LI', undefined /*startFrom*/, event);\n        if (li?.previousSibling) {\n            blockFormat(editor, (region, start, end) => {\n                const vList = createVListFromRegion(\n                    region,\n                    false /*includeSiblingList*/,\n                    li ?? undefined\n                );\n                if (vList && start && end) {\n                    vList.setIndentation(start, end, Indentation.Decrease, true /*softOutdent*/);\n                    vList.writeBack(\n                        editor.isFeatureEnabled(ExperimentalFeatures.ReuseAllAncestorListElements),\n                        editor.isFeatureEnabled(ExperimentalFeatures.DisableListChain)\n                    );\n                    event.rawEvent.preventDefault();\n                }\n            });\n        } else {\n            toggleListAndPreventDefault(event, editor);\n        }\n    },\n    defaultDisabled: true,\n};\n\n/**\n * OutdentWhenBackOn1stEmptyLine edit feature, provides the ability to outdent current item if user press\n * BACKSPACE at the first and empty line of a list\n */\nconst OutdentWhenBackOn1stEmptyLine: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE],\n    shouldHandleEvent: (event, editor) => {\n        const li = editor.getElementAtCursor('LI', undefined /*startFrom*/, event);\n        return (\n            li &&\n            isNodeEmpty(li) &&\n            !li.previousSibling &&\n            !li.getElementsByTagName('blockquote').length\n        );\n    },\n    handleEvent: toggleListAndPreventDefault,\n};\n\n/**\n * MaintainListChainWhenDelete edit feature, provides the ability to indent the list if user press\n * DELETE before the first item of a list\n */\nconst MaintainListChainWhenDelete: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.DELETE],\n    shouldHandleEvent: (event, editor) => {\n        const li = editor.getElementAtCursor('LI', undefined /*startFrom*/, event);\n        const range = editor.getSelectionRange();\n        if (li || !range) {\n            return false;\n        }\n        const isAtEnd = Position.getEnd(range).isAtEnd;\n        const nextSibling = isAtEnd ? getCacheNextSibling(event, editor) : undefined;\n        const isAtEndAndBeforeLI = editor.getElementAtCursor('LI', nextSibling, event);\n        return isAtEndAndBeforeLI;\n    },\n    handleEvent: (event, editor) => {\n        const chains = getListChains(editor);\n        editor.runAsync(editor => commitListChains(editor, chains));\n    },\n};\n\n/**\n * OutdentWhenEnterOnEmptyLine edit feature, provides the ability to outdent current item if user press\n * ENTER at the beginning of an empty line of a list\n */\nconst OutdentWhenEnterOnEmptyLine: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.ENTER],\n    shouldHandleEvent: (event, editor) => {\n        const li = editor.getElementAtCursor('LI', undefined /*startFrom*/, event);\n        return !event.rawEvent.shiftKey && li && isNodeEmpty(li);\n    },\n    handleEvent: (event, editor) => {\n        editor.addUndoSnapshot(\n            () => toggleListAndPreventDefault(event, editor, false /* includeSiblingLists */),\n            undefined /*changeSource*/,\n            true /*canUndoByBackspace*/\n        );\n    },\n    defaultDisabled: !Browser.isIE && !Browser.isChrome,\n};\n\n/**\n * @deprecated Use AutoBulletList and AutoNumberingList instead\n */\nconst AutoBullet: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.SPACE],\n    shouldHandleEvent: (event, editor) => {\n        return false;\n    },\n    handleEvent: (event, editor) => {},\n    defaultDisabled: true,\n};\n\n/**\n * AutoBulletList edit feature, provides the ability to automatically convert current line into a bullet list.\n */\nconst AutoBulletList: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.SPACE],\n    shouldHandleEvent: (event, editor) => {\n        if (!cacheGetListElement(event, editor)) {\n            return shouldTriggerList(event, editor, getAutoBulletListStyle, ListType.Unordered);\n        }\n        return false;\n    },\n    handleEvent: (event, editor) => {\n        editor.insertContent('&nbsp;');\n        event.rawEvent.preventDefault();\n        editor.addUndoSnapshot(\n            () => {\n                const searcher = editor.getContentSearcherOfCursor();\n                if (!searcher) {\n                    return;\n                }\n                const textBeforeCursor = searcher.getSubStringBefore(5);\n                const textRange = searcher.getRangeFromText(textBeforeCursor, true /*exactMatch*/);\n                const listStyle = getAutoBulletListStyle(textBeforeCursor);\n\n                if (textRange) {\n                    prepareAutoBullet(editor, textRange);\n                    toggleBullet(\n                        editor,\n                        listStyle ?? undefined,\n                        'autoToggleList' /** apiNameOverride */\n                    );\n                }\n                searcher.getRangeFromText(textBeforeCursor, true /*exactMatch*/)?.deleteContents();\n            },\n            undefined /*changeSource*/,\n            true /*canUndoByBackspace*/\n        );\n    },\n};\n\n/**\n * AutoNumberingList edit feature, provides the ability to automatically convert current line into a numbering list.\n */\nconst AutoNumberingList: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.SPACE],\n    shouldHandleEvent: (event, editor) => {\n        if (!cacheGetListElement(event, editor)) {\n            return shouldTriggerList(event, editor, getAutoNumberingListStyle, ListType.Ordered);\n        }\n        return false;\n    },\n    handleEvent: (event, editor) => {\n        editor.insertContent('&nbsp;');\n        event.rawEvent.preventDefault();\n        editor.addUndoSnapshot(\n            () => {\n                const searcher = editor.getContentSearcherOfCursor();\n                if (!searcher) {\n                    return;\n                }\n                const textBeforeCursor = searcher.getSubStringBefore(5);\n                const textRange = searcher.getRangeFromText(textBeforeCursor, true /*exactMatch*/);\n\n                if (textRange) {\n                    const number = isFirstItemOfAList(textBeforeCursor)\n                        ? 1\n                        : parseInt(textBeforeCursor);\n\n                    const isLi = getPreviousListItem(editor, textRange);\n                    const listStyle = getAutoNumberingListStyle(textBeforeCursor) ?? undefined;\n                    prepareAutoBullet(editor, textRange);\n                    toggleNumbering(\n                        editor,\n                        isLi && number !== 1 ? undefined : number /** startNumber */,\n                        listStyle,\n                        'autoToggleList' /** apiNameOverride */\n                    );\n                }\n                searcher.getRangeFromText(textBeforeCursor, true /*exactMatch*/)?.deleteContents();\n            },\n            undefined /*changeSource*/,\n            true /*canUndoByBackspace*/\n        );\n    },\n};\n\nconst getPreviousListItem = (editor: IEditor, textRange: Range) => {\n    const blockElement = editor\n        .getBodyTraverser(textRange?.startContainer)\n        .getPreviousBlockElement();\n    const previousNode = blockElement?.getEndNode() ?? null;\n    return getTagOfNode(previousNode) === 'LI' ? previousNode : undefined;\n};\n\nconst getPreviousListType = (editor: IEditor, textRange: Range, listType: ListType) => {\n    const type = listType === ListType.Ordered ? 'orderedStyleType' : 'unorderedStyleType';\n    const listItem = getPreviousListItem(editor, textRange);\n    const list = listItem\n        ? findClosestElementAncestor(\n              listItem,\n              undefined /** root*/,\n              listType === ListType.Ordered ? 'ol' : 'ul'\n          )\n        : null;\n    const metadata = list ? getMetadata(list, ListStyleDefinitionMetadata) : null;\n    return metadata ? metadata[type] : null;\n};\n\nconst isFirstItemOfAList = (item: string) => {\n    const number = parseInt(item);\n    if (number && number === 1) {\n        return 1;\n    } else {\n        const letter = item.replace(/\\(|\\)|\\-|\\./g, '').trim();\n        return letter.length === 1 && ['i', 'a', 'I', 'A'].indexOf(letter) > -1 ? 1 : undefined;\n    }\n};\n\n/**\n * Maintain the list numbers in list chain\n * e.g. we have two lists:\n * 1, 2, 3 and 4, 5, 6\n * Now we delete list item 2, so the first one becomes \"1, 2\".\n * This edit feature can maintain the list number of the second list to become \"3, 4, 5\"\n */\nconst MaintainListChain: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.ENTER, Keys.TAB, Keys.DELETE, Keys.BACKSPACE, Keys.RANGE],\n    shouldHandleEvent: (event, editor) =>\n        editor\n            .queryElements('li', QueryScope.OnSelection)\n            .filter(li => !li.getElementsByTagName('blockquote').length).length > 0,\n    handleEvent: (event, editor) => {\n        const chains = getListChains(editor);\n        editor.runAsync(editor => commitListChains(editor, chains));\n    },\n};\n\nfunction getListChains(editor: IEditor) {\n    return VListChain.createListChains(editor.getSelectedRegions());\n}\n\nfunction getCacheNextSibling(event: PluginKeyboardEvent, editor: IEditor): Node | undefined {\n    const element = cacheGetEventData(event, 'nextSibling', () => {\n        const range = editor.getSelectionRange();\n        const pos = range && Position.getEnd(range).normalize();\n        const traverser = pos && editor.getBodyTraverser(pos.node);\n        return traverser?.getNextBlockElement()?.getStartNode();\n    });\n    return element;\n}\n\nfunction prepareAutoBullet(editor: IEditor, range: Range) {\n    const block = editor.getBlockElementAtNode(range.startContainer);\n    const endNode = block?.getEndNode();\n    if (endNode && getTagOfNode(endNode) != 'BR') {\n        const br = editor.getDocument().createElement('BR');\n        if (isBlockElement(endNode)) {\n            endNode.appendChild(br);\n        } else {\n            endNode.parentNode?.insertBefore(br, endNode.nextSibling);\n        }\n        editor.select(range.startContainer, range.startOffset);\n    }\n}\n\nfunction toggleListAndPreventDefault(\n    event: PluginKeyboardEvent,\n    editor: IEditor,\n    includeSiblingLists: boolean = true\n) {\n    const listInfo = cacheGetListElement(event, editor);\n    if (listInfo) {\n        const listElement = listInfo[0];\n        const tag = getTagOfNode(listElement);\n\n        if (tag == 'UL' || tag == 'OL') {\n            toggleListType(\n                editor,\n                tag == 'UL' ? ListType.Unordered : ListType.Ordered,\n                undefined /* startNumber */,\n                includeSiblingLists\n            );\n        }\n\n        editor.focus();\n        event.rawEvent.preventDefault();\n    }\n}\n\nfunction cacheGetListElement(event: PluginKeyboardEvent, editor: IEditor) {\n    const li = editor.getElementAtCursor('LI,TABLE', undefined /*startFrom*/, event);\n    const listElement = li && getTagOfNode(li) == 'LI' && editor.getElementAtCursor('UL,OL', li);\n    return listElement ? [listElement, li] : null;\n}\n\nfunction shouldTriggerList<\n    T extends ListType,\n    K extends T extends ListType.Ordered ? NumberingListType : BulletListType\n>(\n    event: PluginKeyboardEvent,\n    editor: IEditor,\n    getListStyle: (\n        text: string,\n        previousListChain?: VListChain[],\n        previousListStyle?: K\n    ) => K | null,\n    listType: T\n) {\n    const searcher = editor.getContentSearcherOfCursor(event);\n    if (!searcher) {\n        return false;\n    }\n    const textBeforeCursor = searcher.getSubStringBefore(4);\n    const traverser = editor.getBlockTraverser();\n    const text =\n        traverser && traverser.currentBlockElement\n            ? traverser.currentBlockElement.getTextContent().slice(0, textBeforeCursor.length)\n            : null;\n    const isATheBeginning = text && text === textBeforeCursor;\n    const listChains = getListChains(editor);\n    const textRange = searcher.getRangeFromText(textBeforeCursor, true /*exactMatch*/);\n    const previousListType =\n        textRange && <K | null>getPreviousListType(editor, textRange, listType);\n    const isFirstItem = isFirstItemOfAList(textBeforeCursor);\n    const listStyle = getListStyle(textBeforeCursor, listChains, previousListType ?? undefined);\n    const shouldTriggerNewListStyle =\n        isFirstItem ||\n        !previousListType ||\n        previousListType === listStyle ||\n        listType === ListType.Unordered;\n\n    return (\n        isATheBeginning &&\n        !searcher.getNearestNonTextInlineElement() &&\n        listStyle &&\n        shouldTriggerNewListStyle\n    );\n}\n\n/**\n * MergeListOnBackspaceAfterList edit feature, provides the ability to merge list on backspace on block after a list.\n */\nconst MergeListOnBackspaceAfterList: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE],\n    shouldHandleEvent: (event, editor) => {\n        const target = editor.getElementAtCursor();\n        if (target) {\n            const cursorBlock = editor.getBlockElementAtNode(target)?.getStartNode() as HTMLElement;\n            const previousBlock = cursorBlock?.previousElementSibling ?? null;\n\n            if (isList(previousBlock)) {\n                const range = editor.getSelectionRange();\n                const searcher = editor.getContentSearcherOfCursor(event);\n                const textBeforeCursor = searcher?.getSubStringBefore(4);\n                const nearestInline = searcher?.getNearestNonTextInlineElement();\n\n                if (range && range.collapsed && textBeforeCursor === '' && !nearestInline) {\n                    const tempBlock = cursorBlock?.nextElementSibling;\n                    const nextBlock = isList(tempBlock) ? tempBlock : tempBlock?.firstChild;\n\n                    if (\n                        isList(nextBlock) &&\n                        getTagOfNode(previousBlock) == getTagOfNode(nextBlock)\n                    ) {\n                        const element = cacheGetEventData<HTMLOListElement | HTMLUListElement>(\n                            event,\n                            PREVIOUS_BLOCK_CACHE_KEY,\n                            () => previousBlock\n                        );\n                        const nextElement = cacheGetEventData<HTMLOListElement | HTMLUListElement>(\n                            event,\n                            NEXT_BLOCK_CACHE_KEY,\n                            () => nextBlock\n                        );\n\n                        return !!element && !!nextElement;\n                    }\n                }\n            }\n        }\n\n        return false;\n    },\n    handleEvent: (event, editor) => {\n        editor.runAsync(editor => {\n            const previousList = cacheGetEventData<HTMLOListElement | HTMLUListElement | null>(\n                event,\n                PREVIOUS_BLOCK_CACHE_KEY,\n                () => null\n            );\n            const targetBlock = cacheGetEventData<HTMLOListElement | HTMLUListElement | null>(\n                event,\n                NEXT_BLOCK_CACHE_KEY,\n                () => null\n            );\n\n            const rangeBeforeWriteBack = editor.getSelectionRange();\n\n            if (previousList && targetBlock && rangeBeforeWriteBack) {\n                const fvList = new VList(previousList);\n                fvList.mergeVList(new VList(targetBlock));\n\n                let span = editor.getDocument().createElement('span');\n                span.id = 'restoreRange';\n                rangeBeforeWriteBack.insertNode(span);\n\n                fvList.writeBack();\n\n                span = editor.queryElements('#restoreRange')[0];\n\n                if (span.parentElement) {\n                    editor.select(new Position(span, PositionType.After));\n                    span.parentElement.removeChild(span);\n                }\n            }\n        });\n    },\n};\n\n/**\n * @internal\n */\nexport const ListFeatures: Record<\n    keyof ListFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    autoBullet: AutoBullet,\n    indentWhenTab: IndentWhenTab,\n    outdentWhenShiftTab: OutdentWhenShiftTab,\n    outdentWhenBackspaceOnEmptyFirstLine: OutdentWhenBackOn1stEmptyLine,\n    outdentWhenEnterOnEmptyLine: OutdentWhenEnterOnEmptyLine,\n    mergeInNewLineWhenBackspaceOnFirstChar: MergeInNewLine,\n    maintainListChain: MaintainListChain,\n    maintainListChainWhenDelete: MaintainListChainWhenDelete,\n    autoNumberingList: AutoNumberingList,\n    autoBulletList: AutoBulletList,\n    mergeListOnBackspaceAfterList: MergeListOnBackspaceAfterList,\n    outdentWhenAltShiftLeft: OutdentWhenAltShiftLeft,\n    indentWhenAltShiftRight: IndentWhenAltShiftRight,\n};\n\nfunction isList(element: Node | null | undefined): element is HTMLOListElement | HTMLOListElement {\n    return (\n        !!element &&\n        (safeInstanceOf(element, 'HTMLOListElement') || safeInstanceOf(element, 'HTMLUListElement'))\n    );\n}\n"]}