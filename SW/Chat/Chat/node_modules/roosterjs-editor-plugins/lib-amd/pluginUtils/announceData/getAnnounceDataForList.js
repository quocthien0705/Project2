define(["require", "exports", "roosterjs-editor-dom"], function (require, exports, roosterjs_editor_dom_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * @internal
     * Get the announce data for the current List
     * @returns announce data for list or undefined.
     */
    function getAnnounceDataForList(list, li) {
        if (!(0, roosterjs_editor_dom_1.safeInstanceOf)(li, 'HTMLLIElement')) {
            return undefined;
        }
        if (li && (0, roosterjs_editor_dom_1.safeInstanceOf)(list, 'HTMLOListElement')) {
            var vList = new roosterjs_editor_dom_1.VList(list);
            var listItemIndex = vList.getListItemIndex(li);
            var stringToAnnounce = listItemIndex == -1 ? '' : listItemIndex.toString();
            switch (list.style.listStyleType) {
                case 'lower-alpha':
                case 'lower-latin':
                case 'upper-alpha':
                case 'upper-latin':
                    stringToAnnounce = (0, roosterjs_editor_dom_1.convertDecimalsToAlpha)(listItemIndex - 1);
                    break;
                case 'lower-roman':
                case 'upper-roman':
                    stringToAnnounce = (0, roosterjs_editor_dom_1.convertDecimalsToRoman)(listItemIndex);
                    break;
            }
            return {
                defaultStrings: 1 /* AnnounceListItemNumbering */,
                formatStrings: [stringToAnnounce],
            };
        }
        else if ((0, roosterjs_editor_dom_1.safeInstanceOf)(list, 'HTMLUListElement')) {
            return {
                defaultStrings: 2 /* AnnounceListItemBullet */,
            };
        }
        return undefined;
    }
    exports.default = getAnnounceDataForList;
});
//# sourceMappingURL=getAnnounceDataForList.js.map