{"version":3,"file":"restoreSelection.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/utils/restoreSelection.ts"],"names":[],"mappings":";;;;IAOA;;OAEG;IACH,SAAgB,gBAAgB,CAAC,KAA8B,EAAE,MAAe;QAC5E,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;YACzC,OAAO;SACV;QAED,IAAI,KAAK,CAAC,UAAU,EAAE;YAClB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;SAC3D;QACD,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC;QAC7B,IAAM,eAAe,GAAG,IAAA,iBAAO,EAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;QACrE,IAAM,cAAc,GAAG,IAAI,+BAAQ,CAC/B,KAAK,CAAC,UAAU,EAChB,eAAe,CAAC,CAAC,cAAkB,CAAC,cAAmB,CAC1D,CAAC;QAEF,IAAM,gBAAgB,GAAG,IAAI,KAAK,EAAE,CAAC;QACrC,IAAI,KAAK,CAAC,WAAW,EAAE;YACnB,gBAAgB,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SAC1D;QACD,IAAA,iCAAe,EACX,MAAM,EACN,KAAK,CAAC,WAAW,EACjB,eAAe;YACX,CAAC,CAAC,+BAAQ,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,MAAM;YAC1C,CAAC,CAAC,+BAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,MAAM,EAChD,cAAc,CAAC,OAAO,EACtB,cAAc,CAAC,MAAM,CACxB,CAAC;IACN,CAAC;IA5BD,4CA4BC","sourcesContent":["import { isAfter } from './isAfter';\nimport { Position } from 'roosterjs-editor-dom';\nimport { PositionType } from 'roosterjs-editor-types';\nimport { updateSelection } from './updateSelection';\nimport type { IEditor } from 'roosterjs-editor-types';\nimport type { TableCellSelectionState } from '../TableCellSelectionState';\n\n/**\n * @internal\n */\nexport function restoreSelection(state: TableCellSelectionState, editor: IEditor) {\n    if (!state.lastTarget || !state.firstTarget) {\n        return;\n    }\n\n    if (state.firstTable) {\n        editor.select(state.firstTable, null /* coordinates */);\n    }\n    state.tableSelection = false;\n    const isBeginAboveEnd = isAfter(state.firstTarget, state.lastTarget);\n    const targetPosition = new Position(\n        state.lastTarget,\n        isBeginAboveEnd ? PositionType.End : PositionType.Begin\n    );\n\n    const firstTargetRange = new Range();\n    if (state.firstTarget) {\n        firstTargetRange.selectNodeContents(state.firstTarget);\n    }\n    updateSelection(\n        editor,\n        state.firstTarget,\n        isBeginAboveEnd\n            ? Position.getEnd(firstTargetRange).offset\n            : Position.getStart(firstTargetRange).offset,\n        targetPosition.element,\n        targetPosition.offset\n    );\n}\n"]}