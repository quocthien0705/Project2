{"version":3,"file":"handleMouseDownEvent.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/mouseUtils/handleMouseDownEvent.ts"],"names":[],"mappings":"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","sourcesContent":["import normalizeTableSelection from '../utils/normalizeTableSelection';\nimport { clearState } from '../utils/clearState';\nimport { contains, getTagOfNode, safeInstanceOf, VTable } from 'roosterjs-editor-dom';\nimport { getCellAtCursor } from '../utils/getCellAtCursor';\nimport { getCellCoordinates } from '../utils/getCellCoordinates';\nimport { getTableAtCursor } from '../utils/getTableAtCursor';\nimport { prepareSelection } from '../utils/prepareSelection';\nimport { restoreSelection } from '../utils/restoreSelection';\nimport { selectTable } from '../utils/selectTable';\nimport { setData } from '../utils/setData';\nimport { TABLE_CELL_SELECTOR } from '../constants';\nimport { updateSelection } from '../utils/updateSelection';\nimport type { IEditor, PluginMouseDownEvent } from 'roosterjs-editor-types';\nimport type { TableCellSelectionState } from '../TableCellSelectionState';\n\nconst LEFT_CLICK = 1;\nconst RIGHT_CLICK = 3;\n\n/**\n * @internal\n */\nexport function handleMouseDownEvent(\n    event: PluginMouseDownEvent,\n    state: TableCellSelectionState,\n    editor: IEditor\n) {\n    const { which, shiftKey, target, detail } = event.rawEvent;\n    const table = editor.getElementAtCursor('table', target as Node, event);\n    const tripleClick = detail >= 3;\n\n    if (table && !table.isContentEditable) {\n        return;\n    }\n\n    const td = editor.getElementAtCursor(TABLE_CELL_SELECTOR);\n    if (which == RIGHT_CLICK && state.tableSelection && state.vTable && td) {\n        //If the user is right clicking To open context menu\n        const coord = getCellCoordinates(state.vTable, td);\n        if (coord) {\n            const { firstCell, lastCell } = normalizeTableSelection(state.vTable) || {};\n            if (\n                firstCell &&\n                lastCell &&\n                coord.y >= firstCell.y &&\n                coord.y <= lastCell.y &&\n                coord.x >= firstCell.x &&\n                coord.x <= lastCell.x\n            ) {\n                state.firstTarget = state.vTable.getCell(firstCell.y, firstCell.x).td;\n                state.lastTarget = state.vTable.getCell(lastCell.y, lastCell.x).td;\n\n                if (state.firstTarget && state.lastTarget) {\n                    const selection = editor.getDocument().defaultView?.getSelection();\n                    selection?.setBaseAndExtent(state.firstTarget, 0, state.lastTarget, 0);\n                    selectTable(editor, state);\n                }\n\n                return;\n            }\n        }\n    }\n    if (which == LEFT_CLICK) {\n        if (!shiftKey && !tripleClick) {\n            clearState(state, editor);\n\n            if (getTableAtCursor(editor, event.rawEvent.target)) {\n                const doc = editor.getDocument() || document;\n\n                const mouseUpListener = getOnMouseUp(state);\n                const mouseMoveListener = onMouseMove(state, editor);\n                doc.addEventListener('mouseup', mouseUpListener, true /*setCapture*/);\n                doc.addEventListener('mousemove', mouseMoveListener, true /*setCapture*/);\n\n                state.mouseMoveDisposer = () => {\n                    doc.removeEventListener('mouseup', mouseUpListener, true /*setCapture*/);\n                    doc.removeEventListener('mousemove', mouseMoveListener, true /*setCapture*/);\n                };\n\n                state.startedSelection = true;\n            }\n        }\n\n        if (shiftKey || tripleClick) {\n            editor.runAsync(editor => {\n                const sel = editor.getDocument().defaultView?.getSelection();\n                const first = getCellAtCursor(editor, sel?.anchorNode);\n                // Triple clicking a cell will select that cell only\n                // Assign last the same as first to make sure we can select the cell\n                const last = tripleClick ? first : getCellAtCursor(editor, sel?.focusNode);\n                const firstTable = getTableAtCursor(editor, first);\n                if (\n                    firstTable &&\n                    safeInstanceOf(first, 'HTMLTableCellElement') &&\n                    safeInstanceOf(last, 'HTMLTableCellElement')\n                ) {\n                    state.vTable = new VTable(first);\n                    const firstCord = getCellCoordinates(state.vTable, first);\n                    const lastCord = getCellCoordinates(state.vTable, last);\n\n                    if (!firstCord || !lastCord) {\n                        return;\n                    }\n                    state.vTable.selection = {\n                        firstCell: firstCord,\n                        lastCell: lastCord,\n                    };\n\n                    state.firstTarget = first;\n                    state.lastTarget = last;\n                    selectTable(editor, state);\n\n                    state.tableSelection = true;\n                    state.firstTable = firstTable as HTMLTableElement;\n                    state.targetTable = firstTable;\n                    updateSelection(editor, first, 0);\n                }\n            });\n        }\n    }\n}\n\nfunction getOnMouseUp(state: TableCellSelectionState) {\n    return () => {\n        removeMouseUpEventListener(state);\n    };\n}\n\nfunction onMouseMove(state: TableCellSelectionState, editor: IEditor) {\n    return (event: MouseEvent) => {\n        if (!editor.contains(event.target as Node)) {\n            return;\n        }\n\n        //If already in table selection and the new target is contained in the last target cell, no need to\n        //Apply selection styles again.\n        if (\n            state.tableSelection &&\n            state.firstTarget &&\n            contains(state.lastTarget, event.target as Node, true)\n        ) {\n            updateSelection(editor, state.firstTarget, 0);\n            event.preventDefault();\n            return;\n        }\n\n        if (getTagOfNode(event.target as Node) == 'TABLE') {\n            event.preventDefault();\n            return;\n        }\n\n        setData(event.target as Node, state, editor);\n\n        // If there is a first target, but is not inside a table, no more actions to perform.\n        if (state.firstTarget && !state.firstTable) {\n            return;\n        }\n\n        //Ignore if\n        // Is a DIV that only contains a Table\n        // If the event target is not contained in the editor.\n        if (\n            state.lastTarget &&\n            ((state.lastTarget.lastChild == state.lastTarget.firstChild &&\n                getTagOfNode(state.lastTarget.lastChild) == 'TABLE' &&\n                getTagOfNode(state.lastTarget) == 'DIV') ||\n                !editor.contains(state.lastTarget))\n        ) {\n            event.preventDefault();\n            return;\n        }\n\n        prepareSelection(state, editor);\n        const isNewTDContainingFirstTable = safeInstanceOf(state.lastTarget, 'HTMLTableCellElement')\n            ? contains(state.lastTarget, state.firstTable)\n            : false;\n\n        if (\n            (state.firstTable && state.firstTable == state.targetTable) ||\n            isNewTDContainingFirstTable\n        ) {\n            //When starting selection inside of a table and ends inside of the same table.\n            selectionInsideTableMouseMove(event, state, editor);\n        } else if (state.tableSelection) {\n            restoreSelection(state, editor);\n        }\n\n        if (state.tableSelection && state.firstTarget) {\n            updateSelection(editor, state.firstTarget, 0);\n            event.preventDefault();\n        }\n    };\n}\n\n/**\n * @internal\n */\nexport function selectionInsideTableMouseMove(\n    event: MouseEvent,\n    state: TableCellSelectionState,\n    editor: IEditor\n) {\n    if (\n        state.firstTarget &&\n        state.firstTable &&\n        state.lastTarget != state.firstTarget &&\n        state.lastTarget\n    ) {\n        updateSelection(editor, state.firstTarget, 0);\n        if (\n            state.firstTable != state.targetTable &&\n            state.targetTable?.contains(state.firstTable)\n        ) {\n            //If selection started in a table that is inside of another table and moves to parent table\n            //Make the firstTarget the TD of the parent table.\n            state.firstTarget = editor.getElementAtCursor(TABLE_CELL_SELECTOR, state.lastTarget);\n        }\n\n        if (state.firstTable && state.firstTarget) {\n            state.tableSelection = true;\n\n            state.vTable = state.vTable || new VTable(state.firstTable);\n\n            const firstCell = getCellCoordinates(state.vTable, state.firstTarget);\n            const lastCell = getCellCoordinates(state.vTable, state.lastTarget);\n\n            if (!firstCell || !lastCell) {\n                return;\n            }\n\n            state.vTable.selection = {\n                firstCell,\n                lastCell,\n            };\n            selectTable(editor, state);\n        }\n\n        event.preventDefault();\n    } else if (\n        state.lastTarget == state.firstTarget &&\n        state.tableSelection &&\n        state.firstTable &&\n        state.firstTarget\n    ) {\n        state.vTable = new VTable(state.firstTable);\n        const cell = getCellCoordinates(state.vTable, state.firstTarget);\n        if (cell) {\n            state.vTable.selection = {\n                firstCell: cell,\n                lastCell: cell,\n            };\n        }\n\n        selectTable(editor, state);\n    }\n}\n\nfunction removeMouseUpEventListener(state: TableCellSelectionState): void {\n    if (state.startedSelection) {\n        state.startedSelection = false;\n        state.mouseMoveDisposer?.();\n    }\n}\n"]}