define(["require", "exports", "roosterjs-editor-dom", "../constants"], function (require, exports, roosterjs_editor_dom_1, constants_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DeleteTableContents = void 0;
    /**
     * @internal
     * Feature that when Backspace is pressed and there is Table Selection, delete the contents inside of the selection
     */
    exports.DeleteTableContents = {
        keys: [46 /* DELETE */, 8 /* BACKSPACE */],
        shouldHandleEvent: function (_, editor) {
            var selection = editor.getSelectionRangeEx();
            return selection.type == 1 /* TableSelection */;
        },
        handleEvent: function (_, editor) {
            var selection = editor.getSelectionRangeEx();
            if (selection.type == 1 /* TableSelection */) {
                editor.addUndoSnapshot(function () {
                    if (selection.isWholeTableSelected) {
                        selection.table
                            .querySelectorAll(constants_1.TABLE_CELL_SELECTOR)
                            .forEach(function (td) { return deleteNodeContents(td, editor); });
                    }
                    else {
                        editor
                            .getSelectedRegions()
                            .forEach(function (region) { return deleteNodeContents(region.rootNode, editor); });
                    }
                });
            }
        },
    };
    function deleteNodeContents(element, editor) {
        if ((0, roosterjs_editor_dom_1.safeInstanceOf)(element, 'HTMLTableCellElement')) {
            var range = new Range();
            range.selectNodeContents(element);
            range.deleteContents();
            element.appendChild(editor.getDocument().createElement('br'));
        }
    }
});
//# sourceMappingURL=DeleteTableContents.js.map