{"version":3,"file":"tableFeatures.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/tableFeatures.ts"],"names":[],"mappings":"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","sourcesContent":["import { editTable, setIndentation } from 'roosterjs-editor-api';\nimport type {\n    BuildInEditFeature,\n    IEditor,\n    PluginEvent,\n    TableFeatureSettings,\n    PluginKeyboardEvent,\n    TableSelectionRange,\n} from 'roosterjs-editor-types';\nimport {\n    Keys,\n    NodeType,\n    PositionType,\n    TableOperation,\n    SelectionRangeTypes,\n    Indentation,\n    ExperimentalFeatures,\n} from 'roosterjs-editor-types';\nimport {\n    cacheGetEventData,\n    contains,\n    getTagOfNode,\n    isVoidHtmlElement,\n    isWholeTableSelected,\n    Position,\n    VTable,\n} from 'roosterjs-editor-dom';\n\n/**\n * TabInTable edit feature, provides the ability to jump between cells when user press TAB in table\n */\nconst TabInTable: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.TAB],\n    shouldHandleEvent: (event: PluginKeyboardEvent, editor: IEditor) =>\n        cacheGetTableCell(event, editor) && !cacheIsWholeTableSelected(event, editor),\n    handleEvent: (event, editor) => {\n        const shift = event.rawEvent.shiftKey;\n        const td = cacheGetTableCell(event, editor);\n        if (!td) {\n            return;\n        }\n        const vtable = cacheVTable(event, td);\n\n        for (\n            let step = shift ? -1 : 1, row = vtable.row ?? 0, col = (vtable.col ?? 0) + step;\n            ;\n            col += step\n        ) {\n            const tableCells = vtable.cells ?? [];\n            if (col < 0 || col >= tableCells[row].length) {\n                row += step;\n                if (row < 0) {\n                    editor.select(vtable.table, PositionType.Before);\n                    break;\n                } else if (row >= tableCells.length) {\n                    editTable(editor, TableOperation.InsertBelow);\n                    break;\n                }\n                col = shift ? tableCells[row].length - 1 : 0;\n            }\n            const cell = vtable.getCell(row, col);\n            if (cell.td) {\n                const newPos = new Position(cell.td, PositionType.Begin).normalize();\n                editor.select(newPos);\n                break;\n            }\n        }\n        event.rawEvent.preventDefault();\n    },\n};\n\n/**\n * IndentTableOnTab edit feature, provides the ability to indent the table if it is all cells are selected.\n */\nconst IndentTableOnTab: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.TAB],\n    shouldHandleEvent: (event: PluginKeyboardEvent, editor: IEditor) =>\n        cacheGetTableCell(event, editor) && cacheIsWholeTableSelected(event, editor),\n    handleEvent: (event, editor) => {\n        event.rawEvent.preventDefault();\n\n        editor.addUndoSnapshot(() => {\n            const shift = event.rawEvent.shiftKey;\n            const selection = editor.getSelectionRangeEx() as TableSelectionRange;\n            const td = cacheGetTableCell(event, editor);\n            if (!td) {\n                return;\n            }\n            const vtable = cacheVTable(event, td);\n\n            if (shift && editor.getElementAtCursor('blockquote', vtable.table, event)) {\n                setIndentation(editor, Indentation.Decrease);\n            } else if (!shift) {\n                setIndentation(editor, Indentation.Increase);\n            }\n\n            if (selection.coordinates) {\n                editor.select(selection.table, selection.coordinates);\n            }\n        });\n    },\n};\n\n/**\n * UpDownInTable edit feature, provides the ability to jump to cell above/below when user press UP/DOWN\n * in table\n */\nconst UpDownInTable: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.UP, Keys.DOWN],\n    shouldHandleEvent: (event: PluginKeyboardEvent, editor: IEditor) =>\n        cacheGetTableCell(event, editor) && !cacheIsWholeTableSelected(event, editor),\n    handleEvent: (event, editor) => {\n        const td = cacheGetTableCell(event, editor);\n        if (!td) {\n            return;\n        }\n        const vtable = new VTable(td);\n        const isUp = event.rawEvent.which == Keys.UP;\n        const step = isUp ? -1 : 1;\n        const hasShiftKey = event.rawEvent.shiftKey;\n        const selection = editor.getDocument().defaultView?.getSelection();\n        let targetTd: HTMLTableCellElement | null = null;\n\n        if (selection) {\n            const { anchorNode, anchorOffset } = selection;\n\n            for (\n                let row = vtable.row ?? 0;\n                row >= 0 && vtable.cells && row < vtable.cells.length;\n                row += step\n            ) {\n                const cell = vtable.getCell(row, vtable.col ?? 0);\n                if (cell.td && cell.td != td) {\n                    targetTd = cell.td;\n                    break;\n                }\n            }\n\n            editor.runAsync(editor => {\n                const newContainer = editor.getElementAtCursor();\n                if (\n                    contains(vtable.table, newContainer) &&\n                    !contains(td, newContainer, true /*treatSameNodeAsContain*/)\n                ) {\n                    let newPos = targetTd\n                        ? new Position(targetTd, PositionType.Begin)\n                        : new Position(\n                              vtable.table,\n                              isUp ? PositionType.Before : PositionType.After\n                          );\n                    if (hasShiftKey) {\n                        newPos =\n                            newPos.node.nodeType == NodeType.Element &&\n                            isVoidHtmlElement(newPos.node)\n                                ? new Position(\n                                      newPos.node,\n                                      newPos.isAtEnd ? PositionType.After : PositionType.Before\n                                  )\n                                : newPos;\n                        const selection = editor.getDocument().defaultView?.getSelection();\n                        if (anchorNode) {\n                            selection?.setBaseAndExtent(\n                                anchorNode,\n                                anchorOffset,\n                                newPos.node,\n                                newPos.offset\n                            );\n                        }\n                    } else {\n                        editor.select(newPos.normalize());\n                    }\n                }\n            });\n        }\n    },\n};\n\n/**\n * Requires @see ExperimentalFeatures.DeleteTableWithBackspace\n * Delete a table selected with the table selector pressing Backspace key\n */\nconst DeleteTableWithBackspace: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE],\n    shouldHandleEvent: (event: PluginKeyboardEvent, editor: IEditor) =>\n        editor.isFeatureEnabled(ExperimentalFeatures.DeleteTableWithBackspace) &&\n        cacheIsWholeTableSelected(event, editor),\n    handleEvent: (event, editor) => {\n        const td = cacheGetTableCell(event, editor);\n        if (!td) {\n            return;\n        }\n        const vtable = new VTable(td);\n        vtable.edit(TableOperation.DeleteTable);\n        vtable.writeBack();\n    },\n};\n\nfunction cacheGetTableCell(event: PluginEvent, editor: IEditor): HTMLTableCellElement | null {\n    return cacheGetEventData(event, 'TABLE_CELL_FOR_TABLE_FEATURES', () => {\n        const pos = editor.getFocusedPosition();\n        const firstTd = pos && editor.getElementAtCursor('TD,TH,LI', pos.node);\n        return (\n            firstTd && (getTagOfNode(firstTd) == 'LI' ? null : (firstTd as HTMLTableCellElement))\n        );\n    });\n}\n\nfunction cacheIsWholeTableSelected(event: PluginEvent, editor: IEditor) {\n    return cacheGetEventData(event, 'WHOLE_TABLE_SELECTED_FOR_FEATURES', () => {\n        const td = cacheGetTableCell(event, editor);\n        if (!td) {\n            return false;\n        }\n        const vtable = cacheVTable(event, td);\n        const selection = editor.getSelectionRangeEx();\n        return (\n            selection.type == SelectionRangeTypes.TableSelection &&\n            selection.coordinates &&\n            isWholeTableSelected(vtable, selection.coordinates)\n        );\n    });\n}\n\nfunction cacheVTable(event: PluginEvent, td: HTMLTableCellElement) {\n    return cacheGetEventData(event, 'VTABLE_FOR_TABLE_FEATURES', () => {\n        return new VTable(td);\n    });\n}\n\n/**\n * @internal\n */\nexport const TableFeatures: Record<\n    keyof TableFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    tabInTable: TabInTable,\n    upDownInTable: UpDownInTable,\n    indentTableOnTab: IndentTableOnTab,\n    deleteTableWithBackspace: DeleteTableWithBackspace,\n};\n"]}