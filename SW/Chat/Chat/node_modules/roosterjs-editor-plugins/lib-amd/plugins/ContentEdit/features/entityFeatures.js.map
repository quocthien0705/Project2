{"version":3,"file":"entityFeatures.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/entityFeatures.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    ContentTraverser,\n    addDelimiters,\n    cacheGetEventData,\n    createRange,\n    getComputedStyle,\n    getDelimiterFromElement,\n    getEntityFromElement,\n    getEntitySelector,\n    isBlockElement,\n    matchesSelector,\n    Position,\n} from 'roosterjs-editor-dom';\nimport {\n    DelimiterClasses,\n    EntityOperation,\n    Keys,\n    NodeType,\n    PluginEventType,\n    PositionType,\n} from 'roosterjs-editor-types';\n\nimport type {\n    BuildInEditFeature,\n    EntityFeatureSettings,\n    IEditor,\n    PluginKeyboardEvent,\n    PluginEvent,\n    Entity,\n    IContentTraverser,\n    InlineElement,\n} from 'roosterjs-editor-types';\n\n/**\n * A content edit feature to trigger EntityOperation event with operation \"Click\" when user\n * clicks on a readonly entity.\n */\nconst ClickOnEntityFeature: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.ENTER],\n    shouldHandleEvent: (event, editor) => cacheGetReadonlyEntityElement(event, editor),\n    handleEvent: (event, editor) => {\n        cacheGetReadonlyEntityElement(event, editor, EntityOperation.Click);\n    },\n};\n\n/**\n * A content edit feature to trigger EntityOperation event with operation \"Escape\" when user\n * presses ESC on a readonly entity.\n */\nconst EscapeFromEntityFeature: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.ESCAPE],\n    shouldHandleEvent: (event, editor) => cacheGetReadonlyEntityElement(event, editor),\n    handleEvent: (event, editor) => {\n        cacheGetReadonlyEntityElement(event, editor, EntityOperation.Escape);\n    },\n};\n\nfunction cacheGetReadonlyEntityElement(\n    event: PluginKeyboardEvent,\n    editor: IEditor,\n    operation?: EntityOperation\n) {\n    const element = cacheGetEventData(event, 'READONLY_ENTITY_ELEMENT', () => {\n        const node = event.rawEvent.target as Node;\n        const entityElement = node && editor.getElementAtCursor(getEntitySelector(), node);\n        return entityElement && !entityElement.isContentEditable ? entityElement : null;\n    });\n\n    if (element && operation !== undefined) {\n        const entity = getEntityFromElement(element);\n        if (entity) {\n            editor.triggerPluginEvent(PluginEventType.EntityOperation, {\n                operation,\n                rawEvent: event.rawEvent,\n                entity,\n            });\n        }\n    }\n\n    return element;\n}\n\n/**\n * A content edit feature to split current line into two lines at the cursor when user presses\n * ENTER right before a readonly entity.\n * Browser's default behavior will insert an extra BR tag before the entity which causes an extra\n * empty line. So we override the default behavior here.\n */\nconst EnterBeforeReadonlyEntityFeature: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.ENTER],\n    shouldHandleEvent: (event, editor) =>\n        cacheGetNeighborEntityElement(event, editor, true /*isNext*/, false /*collapseOnly*/),\n    handleEvent: (event, editor) => {\n        event.rawEvent.preventDefault();\n\n        const range = editor.getSelectionRange();\n        if (!range) {\n            return;\n        }\n\n        const node = Position.getEnd(range).normalize().node;\n        const br = editor.getDocument().createElement('BR');\n        node.parentNode?.insertBefore(br, node.nextSibling);\n\n        const block = editor.getBlockElementAtNode(node);\n        let newContainer: HTMLElement | undefined;\n\n        if (block) {\n            newContainer = block.collapseToSingleElement();\n            br.parentNode?.removeChild(br);\n        }\n\n        editor.getSelectionRange()?.deleteContents();\n\n        if (newContainer?.nextSibling) {\n            editor.select(newContainer.nextSibling, PositionType.Begin);\n        }\n    },\n};\n\n/**\n * A content edit feature to trigger EntityOperation event with operation \"RemoveFromEnd\" when user\n * press BACKSPACE right after an entity\n */\nconst BackspaceAfterEntityFeature: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE],\n    shouldHandleEvent: (event, editor) =>\n        cacheGetNeighborEntityElement(event, editor, false /*isNext*/, true /*collapseOnly*/),\n    handleEvent: (event, editor) => {\n        cacheGetNeighborEntityElement(\n            event,\n            editor,\n            false /*isNext*/,\n            true /*collapseOnly*/,\n            EntityOperation.RemoveFromEnd\n        );\n    },\n};\n\n/**\n * A content edit feature to trigger EntityOperation event with operation \"RemoveFromStart\" when user\n * press DELETE right after an entity\n */\nconst DeleteBeforeEntityFeature: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.DELETE],\n    shouldHandleEvent: (event, editor) =>\n        cacheGetNeighborEntityElement(event, editor, true /*isNext*/, true /*collapseOnly*/),\n    handleEvent: (event, editor) => {\n        cacheGetNeighborEntityElement(\n            event,\n            editor,\n            true /*isNext*/,\n            true /*collapseOnly*/,\n            EntityOperation.RemoveFromStart\n        );\n    },\n};\n\nfunction cacheGetNeighborEntityElement(\n    event: PluginKeyboardEvent,\n    editor: IEditor,\n    isNext: boolean,\n    collapseOnly: boolean,\n    operation?: EntityOperation\n): HTMLElement | null {\n    const element = cacheGetEventData(\n        event,\n        'NEIGHBOR_ENTITY_ELEMENT_' + isNext + '_' + collapseOnly,\n        () => {\n            const range = editor.getSelectionRange();\n\n            if (!range || (collapseOnly && !range.collapsed)) {\n                return null;\n            }\n\n            const regions = editor.getSelectedRegions();\n            const regionRoot = regions[0]?.rootNode;\n\n            range.commonAncestorContainer.normalize();\n            const pos = Position.getEnd(range).normalize();\n            const isAtBeginOrEnd = pos.offset == 0 || pos.isAtEnd;\n            let entityNode: HTMLElement | null = null;\n\n            if (isAtBeginOrEnd && regionRoot) {\n                const traverser = ContentTraverser.createBodyTraverser(regionRoot, pos.node);\n                const sibling = isNext\n                    ? pos.offset == 0\n                        ? traverser.currentInlineElement\n                        : traverser.getNextInlineElement()\n                    : pos.isAtEnd\n                    ? traverser.currentInlineElement\n                    : traverser.getPreviousInlineElement();\n                let node = sibling && sibling.getContainerNode();\n\n                if (!collapseOnly) {\n                    const block = editor.getBlockElementAtNode(pos.node);\n                    if (!block || (node && !block.contains(node))) {\n                        node = null;\n                    }\n                }\n\n                entityNode = node && editor.getElementAtCursor(getEntitySelector(), node);\n            }\n\n            return entityNode;\n        }\n    );\n\n    if (element && operation !== undefined) {\n        const entity = getEntityFromElement(element);\n        if (entity) {\n            triggerOperation(entity, editor, operation, event);\n        }\n    }\n\n    return element;\n}\n\n/**\n * Content edit feature to move the cursor from Delimiters around Entities when using Right or Left Arrow Keys\n */\nconst MoveBetweenDelimitersFeature: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.RIGHT, Keys.LEFT],\n    allowFunctionKeys: true,\n    shouldHandleEvent: (event: PluginKeyboardEvent, editor: IEditor) => {\n        if (event.rawEvent.altKey) {\n            return false;\n        }\n\n        const element = editor.getElementAtCursor();\n        if (!element) {\n            return false;\n        }\n\n        const isRTL = getComputedStyle(element, 'direction') === 'rtl';\n        const shouldCheckBefore = isRTL == (event.rawEvent.which === Keys.LEFT);\n\n        return getIsDelimiterAtCursor(event, editor, shouldCheckBefore);\n    },\n    handleEvent(event: PluginKeyboardEvent, editor: IEditor) {\n        const checkBefore = cacheGetCheckBefore(event);\n        const delimiter = cacheDelimiter(event, checkBefore);\n\n        if (!delimiter) {\n            return;\n        }\n\n        const { delimiterPair, entity } = getRelatedElements(delimiter, checkBefore, editor);\n\n        if (delimiterPair && entity && matchesSelector(entity, getEntitySelector())) {\n            event.rawEvent.preventDefault();\n            editor.runAsync(() => {\n                const positionType = checkBefore\n                    ? event.rawEvent.shiftKey\n                        ? PositionType.After\n                        : PositionType.End\n                    : PositionType.Before;\n                const position = new Position(delimiterPair, positionType);\n                if (event.rawEvent.shiftKey) {\n                    const selection = delimiterPair.ownerDocument.getSelection();\n                    selection?.extend(position.node, position.offset);\n                } else {\n                    editor.select(position);\n                }\n            });\n        }\n    },\n};\n\n/**\n * Content edit Feature to trigger a Delete Entity Operation when one of the Delimiter is about to be removed with DELETE or Backspace\n */\nconst RemoveEntityBetweenDelimitersFeature: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE, Keys.DELETE],\n    shouldHandleEvent(event: PluginKeyboardEvent, editor: IEditor) {\n        const range = editor.getSelectionRange();\n        if (!range?.collapsed) {\n            return false;\n        }\n        const checkBefore = event.rawEvent.which === Keys.DELETE;\n        const isDelimiter = getIsDelimiterAtCursor(event, editor, checkBefore);\n\n        if (isDelimiter) {\n            const delimiter = cacheDelimiter(event, checkBefore);\n            const entityElement = checkBefore\n                ? delimiter?.nextElementSibling\n                : delimiter?.previousElementSibling;\n\n            return !!cacheEntityBetweenDelimiter(event, editor, checkBefore, entityElement);\n        }\n\n        return false;\n    },\n    handleEvent(event: PluginKeyboardEvent, editor: IEditor) {\n        const checkBefore = event.rawEvent.which === Keys.DELETE;\n        cacheEntityBetweenDelimiter(\n            event,\n            editor,\n            checkBefore,\n            null,\n            checkBefore ? EntityOperation.RemoveFromStart : EntityOperation.RemoveFromEnd\n        );\n    },\n};\n\nfunction getIsDelimiterAtCursor(event: PluginKeyboardEvent, editor: IEditor, checkBefore: boolean) {\n    const position = editor.getFocusedPosition()?.normalize();\n    cacheGetCheckBefore(event, checkBefore);\n\n    if (!position) {\n        return false;\n    }\n\n    const focusedElement =\n        position.node.nodeType == NodeType.Text\n            ? position.node\n            : position.node == position.element\n            ? position.element.childNodes.item(position.offset)\n            : position.element;\n\n    const data = checkBefore\n        ? {\n              class: DelimiterClasses.DELIMITER_BEFORE,\n              pairClass: DelimiterClasses.DELIMITER_AFTER,\n              isAtEndOrBeginning: position.isAtEnd,\n          }\n        : {\n              class: DelimiterClasses.DELIMITER_AFTER,\n              pairClass: DelimiterClasses.DELIMITER_BEFORE,\n              isAtEndOrBeginning: position.offset == 0,\n          };\n\n    const sibling = getNextSibling(editor, focusedElement, checkBefore);\n    if (data.isAtEndOrBeginning && sibling) {\n        const elAtCursor = editor.getElementAtCursor('.' + data.class, sibling);\n\n        if (elAtCursor && !!shouldHandle(elAtCursor)) {\n            return true;\n        }\n    }\n\n    const entityAtCursor =\n        focusedElement && editor.getElementAtCursor('.' + data.class, focusedElement);\n    return !!shouldHandle(entityAtCursor);\n\n    function shouldHandle(element: HTMLElement | null | undefined) {\n        if (!element) {\n            return false;\n        }\n\n        const { delimiterPair } = getRelatedElements(element, checkBefore, editor);\n\n        return (\n            delimiterPair &&\n            (delimiterPair.className || '').indexOf(data.pairClass) > -1 &&\n            cacheDelimiter(event, checkBefore, element)\n        );\n    }\n}\n\nfunction getNextSibling(editor: IEditor, element: Node, checkBefore: boolean) {\n    const traverser = getBlockTraverser(editor, element);\n    if (!traverser) {\n        return undefined;\n    }\n\n    const traverseFn = (t: IContentTraverser) =>\n        checkBefore ? t.getNextInlineElement() : t.getPreviousInlineElement();\n\n    let currentInline = traverser.currentInlineElement;\n    while (currentInline && currentInline.getContainerNode() === element) {\n        currentInline = traverseFn(traverser);\n    }\n    return currentInline?.getContainerNode();\n}\n\nfunction getBlockTraverser(editor: IEditor, element: Node | null | undefined) {\n    if (!element) {\n        return undefined;\n    }\n    const blockElement = editor.getBlockElementAtNode(element)?.getStartNode();\n    if (!blockElement || !isBlockElement(blockElement)) {\n        return undefined;\n    }\n    return ContentTraverser.createBodyTraverser(blockElement, element);\n}\n\nfunction cacheDelimiter(event: PluginEvent, checkBefore: boolean, delimiter?: HTMLElement | null) {\n    return cacheGetEventData(event, 'delimiter_cache_key_' + checkBefore, () => delimiter);\n}\n\nfunction cacheEntityBetweenDelimiter(\n    event: PluginKeyboardEvent,\n    editor: IEditor,\n    checkBefore: boolean,\n    entity?: Element | null,\n    operation?: EntityOperation\n) {\n    const element = cacheGetEventData(\n        event,\n        'entity_delimiter_cache_key_' + checkBefore,\n        () => entity && editor.getElementAtCursor(getEntitySelector(), entity)\n    );\n\n    if (element && operation !== undefined) {\n        const entity = getEntityFromElement(element);\n\n        if (entity) {\n            triggerOperation(entity, editor, operation, event);\n        }\n    }\n\n    return element;\n}\n\nfunction triggerOperation(\n    entity: Entity,\n    editor: IEditor,\n    operation: EntityOperation,\n    event: PluginKeyboardEvent\n) {\n    const { nextElementSibling, previousElementSibling } = entity.wrapper;\n    editor.triggerPluginEvent(PluginEventType.EntityOperation, {\n        operation,\n        rawEvent: event.rawEvent,\n        entity,\n    });\n\n    if (entity.isReadonly && !isBlockElement(entity.wrapper)) {\n        if (event.rawEvent.defaultPrevented) {\n            editor.runAsync(() => {\n                if (!editor.contains(entity.wrapper)) {\n                    removeDelimiters(nextElementSibling, previousElementSibling);\n                } else {\n                    const [delimiterAfter] = addDelimiters(entity.wrapper);\n                    if (delimiterAfter) {\n                        editor.select(delimiterAfter, PositionType.After);\n                    }\n                }\n            });\n        } else if (\n            getDelimiterFromElement(nextElementSibling) &&\n            getDelimiterFromElement(previousElementSibling)\n        ) {\n            editor.select(createRange(<Node>previousElementSibling, <Node>nextElementSibling));\n        }\n    }\n}\n\nfunction removeDelimiters(\n    nextElementSibling: Element | null,\n    previousElementSibling: Element | null\n) {\n    [nextElementSibling, previousElementSibling].forEach(sibling => {\n        if (getDelimiterFromElement(sibling)) {\n            sibling?.parentElement?.removeChild(sibling);\n        }\n    });\n}\n\nfunction cacheGetCheckBefore(event: PluginKeyboardEvent, checkBefore?: boolean): boolean {\n    return !!cacheGetEventData(event, 'Check_Before', () => checkBefore);\n}\n\nfunction getRelatedElements(delimiter: HTMLElement, checkBefore: boolean, editor: IEditor) {\n    let entity: HTMLElement | null = null;\n    let delimiterPair: HTMLElement | null = null;\n    const traverser = getBlockTraverser(editor, delimiter);\n    if (!traverser) {\n        return { delimiterPair, entity };\n    }\n\n    const selector = `.${\n        checkBefore ? DelimiterClasses.DELIMITER_AFTER : DelimiterClasses.DELIMITER_BEFORE\n    }`;\n    const traverseFn = (t: IContentTraverser) =>\n        checkBefore ? t.getNextInlineElement() : t.getPreviousInlineElement();\n    const getElementFromInline = (element: InlineElement, selector: string) => {\n        const node = element?.getContainerNode();\n        return (node && editor.getElementAtCursor(selector, node)) ?? null;\n    };\n    const entitySelector = getEntitySelector();\n\n    let current = traverser.currentInlineElement;\n    while (current && (!entity || !delimiterPair)) {\n        entity = entity || getElementFromInline(current, entitySelector);\n        delimiterPair = delimiterPair || getElementFromInline(current, selector);\n\n        if (entity) {\n            // If we found the entity but the next inline after the entity is not a delimiter,\n            // it means that the delimiter pair got removed or is invalid, return null instead.\n            if (!delimiterPair && !getElementFromInline(current, entitySelector)) {\n                delimiterPair = null;\n                break;\n            }\n            // If the delimiter is not editable keep looking for a editable one, by setting the value as null,\n            //  in case the entity is wrapping another inline readonly entity\n            if (delimiterPair && !delimiterPair.isContentEditable) {\n                delimiterPair = null;\n            }\n        }\n        current = traverseFn(traverser);\n    }\n\n    return { entity, delimiterPair };\n}\n\n/**\n * @internal\n */\nexport const EntityFeatures: Record<\n    keyof EntityFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    clickOnEntity: ClickOnEntityFeature,\n    escapeFromEntity: EscapeFromEntityFeature,\n    enterBeforeReadonlyEntity: EnterBeforeReadonlyEntityFeature,\n    backspaceAfterEntity: BackspaceAfterEntityFeature,\n    deleteBeforeEntity: DeleteBeforeEntityFeature,\n    moveBetweenDelimitersFeature: MoveBetweenDelimitersFeature,\n    removeEntityBetweenDelimiters: RemoveEntityBetweenDelimitersFeature,\n};\n"]}