{"version":3,"file":"codeFeatures.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/codeFeatures.ts"],"names":[],"mappings":"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","sourcesContent":["import { Keys, PositionType, QueryScope } from 'roosterjs-editor-types';\nimport {\n    isNodeEmpty,\n    cacheGetEventData,\n    safeInstanceOf,\n    splitBalancedNodeRange,\n    unwrap,\n} from 'roosterjs-editor-dom';\nimport type {\n    BuildInEditFeature,\n    PluginKeyboardEvent,\n    IEditor,\n    CodeFeatureSettings,\n} from 'roosterjs-editor-types';\n\nconst RemoveCodeWhenEnterOnEmptyLine: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.ENTER],\n    shouldHandleEvent: (event, editor) => {\n        const childOfCode = cacheGetCodeChild(event, editor);\n        return childOfCode && isNodeEmpty(childOfCode);\n    },\n    handleEvent: (event, editor) => {\n        event.rawEvent.preventDefault();\n        editor.addUndoSnapshot(\n            () => {\n                splitCode(event, editor);\n            },\n            undefined /* changeSource */,\n            true /* canUndoByBackspace */\n        );\n    },\n};\n\nconst RemoveCodeWhenBackspaceOnEmptyFirstLine: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE],\n    shouldHandleEvent: (event, editor) => {\n        const childOfCode = cacheGetCodeChild(event, editor);\n        return childOfCode && isNodeEmpty(childOfCode) && !childOfCode.previousSibling;\n    },\n    handleEvent: (event, editor) => {\n        event.rawEvent.preventDefault();\n        editor.addUndoSnapshot(() => splitCode(event, editor));\n    },\n};\n\nfunction cacheGetCodeChild(event: PluginKeyboardEvent, editor: IEditor): Node | null {\n    return cacheGetEventData(event, 'CODE_CHILD', () => {\n        const codeElement =\n            editor.getElementAtCursor('code') ??\n            editor.queryElements('code', QueryScope.OnSelection)[0];\n        if (codeElement) {\n            const pos = editor.getFocusedPosition();\n            const block = pos && editor.getBlockElementAtNode(pos.normalize().node);\n            if (block) {\n                const node =\n                    block.getStartNode() == codeElement.parentNode\n                        ? block.getStartNode()\n                        : block.collapseToSingleElement();\n                return isNodeEmpty(node) ? node : null;\n            }\n        }\n\n        return null;\n    });\n}\n\nfunction splitCode(event: PluginKeyboardEvent, editor: IEditor) {\n    const currentContainer = cacheGetCodeChild(event, editor);\n    if (!safeInstanceOf(currentContainer, 'HTMLElement')) {\n        return;\n    }\n    const codeChild = currentContainer.querySelector('code');\n    if (!codeChild) {\n        const codeParent = splitBalancedNodeRange(currentContainer);\n        if (codeParent) {\n            unwrap(codeParent);\n        }\n        if (safeInstanceOf(currentContainer.parentElement, 'HTMLPreElement')) {\n            const preParent = splitBalancedNodeRange(currentContainer);\n            if (preParent) {\n                unwrap(preParent);\n            }\n        }\n    } else {\n        //Content model\n        unwrap(codeChild);\n    }\n    editor.select(currentContainer, PositionType.Begin);\n}\n\n/**\n * @internal\n */\nexport const CodeFeatures: Record<\n    keyof CodeFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    removeCodeWhenEnterOnEmptyLine: RemoveCodeWhenEnterOnEmptyLine,\n    removeCodeWhenBackspaceOnEmptyFirstLine: RemoveCodeWhenBackspaceOnEmptyFirstLine,\n};\n"]}