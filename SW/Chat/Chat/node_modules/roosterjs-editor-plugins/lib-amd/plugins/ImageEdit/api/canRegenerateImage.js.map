{"version":3,"file":"canRegenerateImage.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/api/canRegenerateImage.ts"],"names":[],"mappings":";;;IAAA;;;;;OAKG;IACH,SAAwB,kBAAkB,CAAC,GAAqB;QAC5D,IAAI,CAAC,GAAG,EAAE;YACN,OAAO,KAAK,CAAC;SAChB;QAED,IAAI;YACA,IAAM,MAAM,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACzD,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;YAClB,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;YACnB,IAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,OAAO,EAAE;gBACT,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7B,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,OAAO,IAAI,CAAC;aACf;YAED,OAAO,KAAK,CAAC;SAChB;QAAC,WAAM;YACJ,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IApBD,qCAoBC","sourcesContent":["/**\n * Check if we can regenerate edited image from the source image.\n * An image can't regenerate result when there is CORS issue of the source content.\n * @param img The image element to test\n * @returns True when we can regenerate the edited image, otherwise false\n */\nexport default function canRegenerateImage(img: HTMLImageElement): boolean {\n    if (!img) {\n        return false;\n    }\n\n    try {\n        const canvas = img.ownerDocument.createElement('canvas');\n        canvas.width = 10;\n        canvas.height = 10;\n        const context = canvas.getContext('2d');\n        if (context) {\n            context.drawImage(img, 0, 0);\n            context.getImageData(0, 0, 1, 1);\n            return true;\n        }\n\n        return false;\n    } catch {\n        return false;\n    }\n}\n"]}