define(["require", "exports", "./checkEditInfoState", "roosterjs-editor-dom"], function (require, exports, checkEditInfoState_1, roosterjs_editor_dom_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getEditInfoFromImage = exports.deleteEditInfo = exports.saveEditInfo = void 0;
    /**
     * @internal
     * Save edit info to image
     * @param image The image to save edit info to
     * @param editInfo The edit info to save
     */
    function saveEditInfo(image, editInfo) {
        if (image) {
            (0, roosterjs_editor_dom_1.setMetadata)(image, editInfo);
        }
    }
    exports.saveEditInfo = saveEditInfo;
    /**
     * @internal
     * Delete edit info of an image if any
     * @param image The image to delete edit info from
     */
    function deleteEditInfo(image) {
        if (image) {
            (0, roosterjs_editor_dom_1.removeMetadata)(image);
        }
    }
    exports.deleteEditInfo = deleteEditInfo;
    /**
     * @internal
     * Get image edit info from an image. If the image doesn't have edit info, create one from this image.
     * When create new edit info, it will have width/height set to the image's current client width/height, and
     * natural width/height set to the image's natural width/height, src set to its current src, and all
     * other fields set to 0.
     * @param image The image to get edit info from
     */
    function getEditInfoFromImage(image) {
        var obj = (0, roosterjs_editor_dom_1.getMetadata)(image);
        return !obj || (0, checkEditInfoState_1.default)(obj) == 0 /* Invalid */
            ? getInitialEditInfo(image)
            : obj;
    }
    exports.getEditInfoFromImage = getEditInfoFromImage;
    function getInitialEditInfo(image) {
        return {
            src: image.getAttribute('src') || '',
            widthPx: image.clientWidth,
            heightPx: image.clientHeight,
            naturalWidth: image.naturalWidth,
            naturalHeight: image.naturalHeight,
            leftPercent: 0,
            rightPercent: 0,
            topPercent: 0,
            bottomPercent: 0,
            angleRad: 0,
        };
    }
});
//# sourceMappingURL=editInfo.js.map