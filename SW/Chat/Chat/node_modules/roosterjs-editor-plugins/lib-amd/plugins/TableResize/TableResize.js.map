{"version":3,"file":"TableResize.js","sourceRoot":"","sources":["../../../../../packages/roosterjs-editor-plugins/lib/plugins/TableResize/TableResize.ts"],"names":[],"mappings":"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","sourcesContent":["import TableEditor from './editors/TableEditor';\nimport { contains, normalizeRect, safeInstanceOf } from 'roosterjs-editor-dom';\nimport { PluginEventType } from 'roosterjs-editor-types';\nimport type {\n    CreateElementData,\n    EditorPlugin,\n    IEditor,\n    PluginEvent,\n    Rect,\n} from 'roosterjs-editor-types';\n\nconst TABLE_RESIZER_LENGTH = 12;\n\n/**\n * TableResize plugin, provides the ability to resize a table by drag-and-drop\n */\nexport default class TableResize implements EditorPlugin {\n    private editor: IEditor | null = null;\n    private onMouseMoveDisposer: (() => void) | null = null;\n    private tableRectMap: { table: HTMLTableElement; rect: Rect }[] | null = null;\n    private tableEditor: TableEditor | null = null;\n\n    /**\n     * Construct a new instance of TableResize plugin\n     * @param onShowHelperElement An optional callback to allow customize helper element of table resizing.\n     * To customize the helper element, add this callback and change the attributes of elementData then it\n     * will be picked up by TableResize code\n     * @param anchorContainerSelector An optional selector string to specify the container to host the plugin.\n     * The container must not be affected by transform: scale(), otherwise the position calculation will be wrong.\n     * If not specified, the plugin will be inserted in document.body\n     */\n    constructor(\n        private onShowHelperElement?: (\n            elementData: CreateElementData,\n            helperType: 'CellResizer' | 'TableInserter' | 'TableResizer' | 'TableSelector',\n            tableOrTd: HTMLTableElement | HTMLTableCellElement\n        ) => void,\n        private anchorContainerSelector?: string\n    ) {}\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'TableResize';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n        this.onMouseMoveDisposer = this.editor.addDomEventHandler({\n            mousemove: this.onMouseMove,\n        });\n        const scrollContainer = this.editor.getScrollContainer();\n        scrollContainer.addEventListener('mouseout', this.onMouseOut);\n    }\n\n    private onMouseOut = ({ relatedTarget, currentTarget }: MouseEvent) => {\n        if (\n            safeInstanceOf(relatedTarget, 'HTMLElement') &&\n            safeInstanceOf(currentTarget, 'HTMLElement') &&\n            this.tableEditor &&\n            !this.tableEditor.isOwnedElement(relatedTarget) &&\n            !contains(currentTarget, relatedTarget)\n        ) {\n            this.setTableEditor(null);\n        }\n    };\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        const scrollContainer = this.editor?.getScrollContainer();\n        scrollContainer?.removeEventListener('mouseout', this.onMouseOut);\n        this.onMouseMoveDisposer?.();\n        this.invalidateTableRects();\n        this.disposeTableEditor();\n        this.editor = null;\n        this.onMouseMoveDisposer = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(e: PluginEvent) {\n        switch (e.eventType) {\n            case PluginEventType.Input:\n            case PluginEventType.ContentChanged:\n            case PluginEventType.Scroll:\n            case PluginEventType.ZoomChanged:\n                this.setTableEditor(null);\n                this.invalidateTableRects();\n                break;\n        }\n    }\n\n    private onMouseMove = (event: Event) => {\n        const e = event as MouseEvent;\n\n        if (e.buttons > 0 || !this.editor) {\n            return;\n        }\n\n        this.ensureTableRects();\n\n        const editorWindow = this.editor.getDocument().defaultView || window;\n        const x = e.pageX - editorWindow.scrollX;\n        const y = e.pageY - editorWindow.scrollY;\n        let currentTable: HTMLTableElement | null = null;\n\n        if (this.tableRectMap) {\n            for (let i = this.tableRectMap.length - 1; i >= 0; i--) {\n                const { table, rect } = this.tableRectMap[i];\n\n                if (\n                    x >= rect.left - TABLE_RESIZER_LENGTH &&\n                    x <= rect.right + TABLE_RESIZER_LENGTH &&\n                    y >= rect.top - TABLE_RESIZER_LENGTH &&\n                    y <= rect.bottom + TABLE_RESIZER_LENGTH\n                ) {\n                    currentTable = table;\n                    break;\n                }\n            }\n        }\n\n        this.setTableEditor(currentTable, e);\n        this.tableEditor?.onMouseMove(x, y);\n    };\n\n    /**\n     * @internal Public only for unit test\n     * @param table Table to use when setting the Editors\n     * @param event (Optional) Mouse event\n     */\n    public setTableEditor(table: HTMLTableElement | null, event?: MouseEvent) {\n        if (this.tableEditor && !this.tableEditor.isEditing() && table != this.tableEditor.table) {\n            this.disposeTableEditor();\n        }\n\n        if (!this.tableEditor && table && this.editor && table.rows.length > 0) {\n            const container = this.anchorContainerSelector\n                ? this.editor.getDocument().querySelector(this.anchorContainerSelector)\n                : undefined;\n\n            this.tableEditor = new TableEditor(\n                this.editor,\n                table,\n                this.invalidateTableRects,\n                this.onShowHelperElement,\n                safeInstanceOf(container, 'HTMLElement') ? container : undefined,\n                event?.currentTarget\n            );\n        }\n    }\n\n    private invalidateTableRects = () => {\n        this.tableRectMap = null;\n    };\n\n    private disposeTableEditor() {\n        this.tableEditor?.dispose();\n        this.tableEditor = null;\n    }\n\n    private ensureTableRects() {\n        if (!this.tableRectMap && this.editor) {\n            this.tableRectMap = [];\n            this.editor.queryElements('table', table => {\n                if (table.isContentEditable) {\n                    const rect = normalizeRect(table.getBoundingClientRect());\n                    if (rect && this.tableRectMap) {\n                        this.tableRectMap.push({\n                            table,\n                            rect,\n                        });\n                    }\n                }\n            });\n        }\n    }\n}\n"]}