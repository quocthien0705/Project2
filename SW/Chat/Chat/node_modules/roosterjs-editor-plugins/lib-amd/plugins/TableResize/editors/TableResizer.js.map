{"version":3,"file":"TableResizer.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/TableResize/editors/TableResizer.ts"],"names":[],"mappings":"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","sourcesContent":["import DragAndDropHelper from '../../../pluginUtils/DragAndDropHelper';\nimport type TableEditFeature from './TableEditorFeature';\nimport type { CreateElementData, IEditor, Rect } from 'roosterjs-editor-types';\nimport {\n    createElement,\n    getComputedStyle,\n    normalizeRect,\n    safeInstanceOf,\n    VTable,\n} from 'roosterjs-editor-dom';\n\nconst TABLE_RESIZER_LENGTH = 12;\nconst MIN_CELL_WIDTH = 30;\nconst MIN_CELL_HEIGHT = 20;\n\n/**\n * @internal\n */\nexport default function createTableResizer(\n    table: HTMLTableElement,\n    editor: IEditor,\n    onStart: () => void,\n    onEnd: () => false,\n    onShowHelperElement?: (\n        elementData: CreateElementData,\n        helperType: 'CellResizer' | 'TableInserter' | 'TableResizer' | 'TableSelector',\n        table: HTMLTableElement\n    ) => void,\n    contentDiv?: EventTarget | null,\n    anchorContainer?: HTMLElement\n): TableEditFeature | null {\n    const rect = normalizeRect(table.getBoundingClientRect());\n\n    if (!isTableBottomVisible(editor, rect, contentDiv)) {\n        return null;\n    }\n\n    const document = table.ownerDocument;\n    const isRTL = getComputedStyle(table, 'direction') == 'rtl';\n    const zoomScale = editor.getZoomScale();\n    const createElementData = {\n        tag: 'div',\n        style: `position: fixed; cursor: ${\n            isRTL ? 'ne' : 'nw'\n        }-resize; user-select: none; border: 1px solid #808080`,\n    };\n\n    onShowHelperElement?.(createElementData, 'TableResizer', table);\n\n    const div = createElement(createElementData, document) as HTMLDivElement;\n\n    div.style.width = `${TABLE_RESIZER_LENGTH}px`;\n    div.style.height = `${TABLE_RESIZER_LENGTH}px`;\n\n    (anchorContainer || document.body).appendChild(div);\n\n    const context: DragAndDropContext = {\n        isRTL,\n        table,\n        zoomScale,\n        onStart,\n        onEnd,\n        div,\n        editor,\n        contentDiv,\n    };\n\n    setDivPosition(context, div);\n\n    const featureHandler = new DragAndDropHelper<DragAndDropContext, DragAndDropInitValue>(\n        div,\n        context,\n        hideResizer, // Resizer is hidden while dragging only\n        {\n            onDragStart,\n            onDragging,\n            onDragEnd,\n        },\n        zoomScale\n    );\n\n    return { node: table, div, featureHandler };\n}\n\ninterface DragAndDropContext {\n    table: HTMLTableElement;\n    isRTL: boolean;\n    zoomScale: number;\n    onStart: () => void;\n    onEnd: () => false;\n    div: HTMLDivElement;\n    editor: IEditor;\n    contentDiv?: EventTarget | null;\n}\n\ninterface DragAndDropInitValue {\n    originalRect: DOMRect;\n    vTable: VTable;\n}\n\nfunction onDragStart(context: DragAndDropContext) {\n    context.onStart();\n\n    return {\n        originalRect: context.table.getBoundingClientRect(),\n        vTable: new VTable(context.table, true /*normalizeTable*/, context.zoomScale),\n    };\n}\n\nfunction onDragging(\n    context: DragAndDropContext,\n    event: MouseEvent,\n    initValue: DragAndDropInitValue,\n    deltaX: number,\n    deltaY: number\n) {\n    const { isRTL, zoomScale } = context;\n    const { originalRect, vTable } = initValue;\n    const ratioX = 1.0 + (deltaX / originalRect.width) * zoomScale * (isRTL ? -1 : 1);\n    const ratioY = 1.0 + (deltaY / originalRect.height) * zoomScale;\n    const shouldResizeX = Math.abs(ratioX - 1.0) > 1e-3;\n    const shouldResizeY = Math.abs(ratioY - 1.0) > 1e-3;\n\n    if (vTable.cells && (shouldResizeX || shouldResizeY)) {\n        for (let i = 0; i < vTable.cells.length; i++) {\n            for (let j = 0; j < vTable.cells[i].length; j++) {\n                const cell = vTable.cells[i][j];\n                if (cell.td) {\n                    if (shouldResizeX) {\n                        // the width of some external table is fixed, we need to make it resizable\n                        vTable.table.style.setProperty('width', null);\n                        const newWidth = ((cell.width ?? 0) * ratioX) / zoomScale;\n                        cell.td.style.boxSizing = 'border-box';\n                        if (newWidth >= MIN_CELL_WIDTH) {\n                            cell.td.style.wordBreak = 'break-word';\n                            cell.td.style.whiteSpace = 'normal';\n                            cell.td.style.width = `${newWidth}px`;\n                        }\n                    }\n\n                    if (shouldResizeY) {\n                        // the height of some external table is fixed, we need to make it resizable\n                        vTable.table.style.setProperty('height', null);\n                        if (j == 0) {\n                            const newHeight = ((cell.height ?? 0) * ratioY) / zoomScale;\n                            if (newHeight >= MIN_CELL_HEIGHT) {\n                                cell.td.style.height = `${newHeight}px`;\n                            }\n                        } else {\n                            cell.td.style.setProperty('height', null);\n                        }\n                    }\n                }\n            }\n        }\n\n        // To avoid apply format styles when the table is being resizing, the skipApplyFormat is set to true.\n        vTable.writeBack(true /**skipApplyFormat*/);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction onDragEnd(\n    context: DragAndDropContext,\n    event: MouseEvent,\n    initValue: DragAndDropInitValue | undefined\n) {\n    if (\n        isTableBottomVisible(\n            context.editor,\n            normalizeRect(context.table.getBoundingClientRect()),\n            context.contentDiv\n        )\n    ) {\n        context.div.style.visibility = 'visible';\n        setDivPosition(context, context.div);\n    }\n    context.onEnd();\n    return false;\n}\n\nfunction setDivPosition(context: DragAndDropContext, trigger: HTMLElement) {\n    const { table, isRTL } = context;\n    const rect = normalizeRect(table.getBoundingClientRect());\n\n    if (rect) {\n        trigger.style.top = `${rect.bottom}px`;\n        trigger.style.left = isRTL\n            ? `${rect.left - TABLE_RESIZER_LENGTH - 2}px`\n            : `${rect.right}px`;\n    }\n}\n\nfunction hideResizer(context: DragAndDropContext, trigger: HTMLElement) {\n    trigger.style.visibility = 'hidden';\n}\n\nfunction isTableBottomVisible(\n    editor: IEditor,\n    rect: Rect | null,\n    contentDiv?: EventTarget | null\n): boolean {\n    const visibleViewport = editor.getVisibleViewport();\n    if (contentDiv && safeInstanceOf(contentDiv, 'HTMLElement') && visibleViewport && rect) {\n        const containerRect = normalizeRect(contentDiv.getBoundingClientRect());\n\n        return (\n            !!containerRect &&\n            containerRect.bottom >= rect.bottom &&\n            visibleViewport.bottom >= rect.bottom\n        );\n    }\n\n    return true;\n}\n"]}