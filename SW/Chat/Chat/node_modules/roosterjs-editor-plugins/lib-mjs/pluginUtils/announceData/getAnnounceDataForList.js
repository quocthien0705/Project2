import { convertDecimalsToAlpha, convertDecimalsToRoman, safeInstanceOf, VList, } from 'roosterjs-editor-dom';
/**
 * @internal
 * Get the announce data for the current List
 * @returns announce data for list or undefined.
 */
export default function getAnnounceDataForList(list, li) {
    if (!safeInstanceOf(li, 'HTMLLIElement')) {
        return undefined;
    }
    if (li && safeInstanceOf(list, 'HTMLOListElement')) {
        var vList = new VList(list);
        var listItemIndex = vList.getListItemIndex(li);
        var stringToAnnounce = listItemIndex == -1 ? '' : listItemIndex.toString();
        switch (list.style.listStyleType) {
            case 'lower-alpha':
            case 'lower-latin':
            case 'upper-alpha':
            case 'upper-latin':
                stringToAnnounce = convertDecimalsToAlpha(listItemIndex - 1);
                break;
            case 'lower-roman':
            case 'upper-roman':
                stringToAnnounce = convertDecimalsToRoman(listItemIndex);
                break;
        }
        return {
            defaultStrings: 1 /* AnnounceListItemNumbering */,
            formatStrings: [stringToAnnounce],
        };
    }
    else if (safeInstanceOf(list, 'HTMLUListElement')) {
        return {
            defaultStrings: 2 /* AnnounceListItemBullet */,
        };
    }
    return undefined;
}
//# sourceMappingURL=getAnnounceDataForList.js.map