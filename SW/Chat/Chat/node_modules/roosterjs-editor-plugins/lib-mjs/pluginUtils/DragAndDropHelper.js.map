{"version":3,"file":"DragAndDropHelper.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-plugins/lib/pluginUtils/DragAndDropHelper.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AA4B/C;;GAEG;AACH,IAAM,wBAAwB,GAAmB,CAAC;IAC9C,OAAO;QACH,SAAS,EAAE,WAAW;QACtB,SAAS,EAAE,WAAW;QACtB,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,mBAAmB;KACjC,CAAC;AACN,CAAC,CAAC,EAAE,CAAC;AAEL,IAAM,uBAAuB,GAAmB,CAAC;IAC7C,OAAO;QACH,SAAS,EAAE,YAAY;QACvB,SAAS,EAAE,WAAW;QACtB,OAAO,EAAE,UAAU;QACnB,SAAS,EAAE,mBAAmB;KACjC,CAAC;AACN,CAAC,CAAC,EAAE,CAAC;AAEL,SAAS,mBAAmB,CAAC,CAAa;IACtC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;AAC9B,CAAC;AAED,SAAS,mBAAmB,CAAC,CAAa;IACtC,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,CAAC,CAAC,aAAa,IAAI,CAAC,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;QAC/C,IAAM,KAAK,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QACjC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACpB,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;KACvB;IACD,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC1B,CAAC;AAED;;;GAGG;AACH;IAMI;;;;;;;;;;OAUG;IACH,2BACY,OAAoB,EACpB,OAAiB,EACjB,QAA2D,EAC3D,OAAiD,EACjD,SAAiB,EACzB,WAAqB;QANzB,iBAaC;QAZW,YAAO,GAAP,OAAO,CAAa;QACpB,YAAO,GAAP,OAAO,CAAU;QACjB,aAAQ,GAAR,QAAQ,CAAmD;QAC3D,YAAO,GAAP,OAAO,CAA0C;QACjD,cAAS,GAAT,SAAS,CAAQ;QArBrB,UAAK,GAAW,CAAC,CAAC;QAClB,UAAK,GAAW,CAAC,CAAC;QAClB,cAAS,GAA2B,SAAS,CAAC;QAqD9C,gBAAW,GAAG,UAAC,CAAQ;;;YAC3B,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,CAAC,CAAC,eAAe,EAAE,CAAC;YACpB,KAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,KAAA,OAA2B,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAA4B,CAAC,IAAA,EAA/E,KAAI,CAAC,KAAK,QAAA,EAAE,KAAI,CAAC,KAAK,QAAA,CAA0D;YACjF,KAAI,CAAC,SAAS,GAAG,MAAA,MAAA,KAAI,CAAC,OAAO,EAAC,WAAW,mDAAG,KAAI,CAAC,OAAO,EAAE,CAAe,CAAC,CAAC;QAC/E,CAAC,CAAC;QAEM,gBAAW,GAAG,UAAC,CAAQ;;YAC3B,CAAC,CAAC,cAAc,EAAE,CAAC;YACb,IAAA,KAAA,OAAiB,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAA4B,CAAC,IAAA,EAArE,KAAK,QAAA,EAAE,KAAK,QAAyD,CAAC;YAC7E,IAAM,MAAM,GAAG,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC;YACrD,IAAM,MAAM,GAAG,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC;YACrD,IACI,KAAI,CAAC,SAAS;iBACd,MAAA,MAAA,KAAI,CAAC,OAAO,EAAC,UAAU,mDAAG,KAAI,CAAC,OAAO,EAAE,CAAe,EAAE,KAAI,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA,EAC1F;gBACE,MAAA,KAAI,CAAC,QAAQ,+CAAb,KAAI,EAAY,KAAI,CAAC,OAAO,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;aAC/C;QACL,CAAC,CAAC;QAEM,cAAS,GAAG,UAAC,CAAQ;;YACzB,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,KAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,MAAA,MAAA,KAAI,CAAC,OAAO,EAAC,SAAS,mDAAG,KAAI,CAAC,OAAO,EAAE,CAAe,EAAE,KAAI,CAAC,SAAS,CAAC,EAAE;gBACzE,MAAA,KAAI,CAAC,QAAQ,+CAAb,KAAI,EAAY,KAAI,CAAC,OAAO,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;aAC/C;QACL,CAAC,CAAC;QA1DE,IAAI,CAAC,QAAQ;YACT,WAAW,IAAI,OAAO,CAAC,gBAAgB;gBACnC,CAAC,CAAC,uBAAuB;gBACzB,CAAC,CAAC,wBAAwB,CAAC;QACnC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACxE,CAAC;IAED;;OAEG;IACH,mCAAO,GAAP;QACI,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC5E,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAChC,CAAC;IAED,sBAAW,wCAAS;aAApB;YACI,OAAO,IAAI,CAAC,QAAQ,IAAI,uBAAuB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;QACxE,CAAC;;;OAAA;IAEO,6CAAiB,GAAzB;QACI,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;QACvC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QACrF,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACrF,CAAC;IAEO,gDAAoB,GAA5B;QACI,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;QACvC,GAAG,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QACxF,GAAG,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACxF,CAAC;IA8BL,wBAAC;AAAD,CAAC,AApFD,IAoFC","sourcesContent":["import { Browser } from 'roosterjs-editor-dom';\nimport type Disposable from './Disposable';\nimport type DragAndDropHandler from './DragAndDropHandler';\n\n/**\n * @internal\n */\ninterface MouseEventMoves {\n    MOUSEDOWN: string;\n    MOUSEMOVE: string;\n    MOUSEUP: string;\n}\n\n/**\n * @internal\n */\ninterface MouseEventInfo extends MouseEventMoves {\n    getPageXY: (e: MouseEvent) => number[];\n}\n\n/**\n * @internal\n * Compatible mouse event names for different platform\n */\ninterface TouchEventInfo extends MouseEventMoves {\n    getPageXY: (e: TouchEvent) => number[];\n}\n\n/**\n * Generate event names and getXY function based on different platforms to be compatible with desktop and mobile browsers\n */\nconst MOUSE_EVENT_INFO_DESKTOP: MouseEventInfo = (() => {\n    return {\n        MOUSEDOWN: 'mousedown',\n        MOUSEMOVE: 'mousemove',\n        MOUSEUP: 'mouseup',\n        getPageXY: getMouseEventPageXY,\n    };\n})();\n\nconst MOUSE_EVENT_INFO_MOBILE: TouchEventInfo = (() => {\n    return {\n        MOUSEDOWN: 'touchstart',\n        MOUSEMOVE: 'touchmove',\n        MOUSEUP: 'touchend',\n        getPageXY: getTouchEventPageXY,\n    };\n})();\n\nfunction getMouseEventPageXY(e: MouseEvent): [number, number] {\n    return [e.pageX, e.pageY];\n}\n\nfunction getTouchEventPageXY(e: TouchEvent): [number, number] {\n    let pageX = 0;\n    let pageY = 0;\n    if (e.targetTouches && e.targetTouches.length > 0) {\n        const touch = e.targetTouches[0];\n        pageX = touch.pageX;\n        pageY = touch.pageY;\n    }\n    return [pageX, pageY];\n}\n\n/**\n * @internal\n * A helper class to help manage drag and drop to an HTML element\n */\nexport default class DragAndDropHelper<TContext, TInitValue> implements Disposable {\n    private initX: number = 0;\n    private initY: number = 0;\n    private initValue: TInitValue | undefined = undefined;\n    private dndMouse: MouseEventInfo | TouchEventInfo;\n\n    /**\n     * Create a new instance of DragAndDropHelper class\n     * @param trigger The trigger element. When user start drag on this element,\n     * events will be fired to the handler object\n     * @param context Context object that will be passed to handler function when event is fired,\n     * so that the handler object knows which element it is triggered from.\n     * @param onSubmit A callback that will be invoked when event handler in handler object returns true\n     * @param handler The event handler object, see DragAndDropHandler interface for more information\n     * @param zoomScale The zoom scale of the editor\n     * @param forceMobile A boolean to force the use of touch controls for the helper\n     */\n    constructor(\n        private trigger: HTMLElement,\n        private context: TContext,\n        private onSubmit: (context: TContext, trigger: HTMLElement) => void,\n        private handler: DragAndDropHandler<TContext, TInitValue>,\n        private zoomScale: number,\n        forceMobile?: boolean\n    ) {\n        this.dndMouse =\n            forceMobile || Browser.isMobileOrTablet\n                ? MOUSE_EVENT_INFO_MOBILE\n                : MOUSE_EVENT_INFO_DESKTOP;\n        trigger.addEventListener(this.dndMouse.MOUSEDOWN, this.onMouseDown);\n    }\n\n    /**\n     * Dispose this object, remove all event listeners that has been attached\n     */\n    dispose() {\n        this.trigger.removeEventListener(this.dndMouse.MOUSEDOWN, this.onMouseDown);\n        this.removeDocumentEvents();\n    }\n\n    public get mouseType(): string {\n        return this.dndMouse == MOUSE_EVENT_INFO_MOBILE ? 'touch' : 'mouse';\n    }\n\n    private addDocumentEvents() {\n        const doc = this.trigger.ownerDocument;\n        doc.addEventListener(this.dndMouse.MOUSEMOVE, this.onMouseMove, true /*useCapture*/);\n        doc.addEventListener(this.dndMouse.MOUSEUP, this.onMouseUp, true /*useCapture*/);\n    }\n\n    private removeDocumentEvents() {\n        const doc = this.trigger.ownerDocument;\n        doc.removeEventListener(this.dndMouse.MOUSEMOVE, this.onMouseMove, true /*useCapture*/);\n        doc.removeEventListener(this.dndMouse.MOUSEUP, this.onMouseUp, true /*useCapture*/);\n    }\n\n    private onMouseDown = (e: Event) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.addDocumentEvents();\n        [this.initX, this.initY] = this.dndMouse.getPageXY(e as MouseEvent & TouchEvent);\n        this.initValue = this.handler.onDragStart?.(this.context, e as MouseEvent);\n    };\n\n    private onMouseMove = (e: Event) => {\n        e.preventDefault();\n        const [pageX, pageY] = this.dndMouse.getPageXY(e as MouseEvent & TouchEvent);\n        const deltaX = (pageX - this.initX) / this.zoomScale;\n        const deltaY = (pageY - this.initY) / this.zoomScale;\n        if (\n            this.initValue &&\n            this.handler.onDragging?.(this.context, e as MouseEvent, this.initValue, deltaX, deltaY)\n        ) {\n            this.onSubmit?.(this.context, this.trigger);\n        }\n    };\n\n    private onMouseUp = (e: Event) => {\n        e.preventDefault();\n        this.removeDocumentEvents();\n        if (this.handler.onDragEnd?.(this.context, e as MouseEvent, this.initValue)) {\n            this.onSubmit?.(this.context, this.trigger);\n        }\n    };\n}\n"]}