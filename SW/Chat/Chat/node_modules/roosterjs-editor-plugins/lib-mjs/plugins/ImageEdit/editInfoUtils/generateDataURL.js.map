{"version":3,"file":"generateDataURL.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/editInfoUtils/generateDataURL.ts"],"names":[],"mappings":"AAAA,OAAO,qBAAqB,MAAM,yBAAyB,CAAC;AAG5D;;;;;;;;;;GAUG;AACH,MAAM,CAAC,OAAO,UAAU,eAAe,CAAC,KAAuB,EAAE,QAAuB;IAEhF,IAAU,KAAK,GASf,QAAQ,SATO,EACN,KAAK,GAQd,QAAQ,QARM,EACJ,MAAM,GAOhB,QAAQ,SAPQ,EACD,MAAM,GAMrB,QAAQ,cANa,EACR,IAAI,GAKjB,QAAQ,YALS,EACH,KAAK,GAInB,QAAQ,aAJW,EACP,GAAG,GAGf,QAAQ,WAHO,EACf,YAAY,GAEZ,QAAQ,aAFI,EACZ,aAAa,GACb,QAAQ,cADK,CACJ;IACb,IAAM,UAAU,GAAG,YAAY,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;IACrD,IAAM,WAAW,GAAG,aAAa,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;IAEvD,iEAAiE;IACjE,IAAM,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,IAAI,CAAC,CAAC;IACtD,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC1C,IAAA,KAAgC,qBAAqB,CAAC,QAAQ,CAAC,EAA7D,WAAW,iBAAA,EAAE,YAAY,kBAAoC,CAAC;IACtE,MAAM,CAAC,KAAK,GAAG,WAAW,GAAG,gBAAgB,CAAC;IAC9C,MAAM,CAAC,MAAM,GAAG,YAAY,GAAG,gBAAgB,CAAC;IAEhD,IAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,OAAO,EAAE;QACT,OAAO,CAAC,KAAK,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;QAClD,OAAO,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,EAAE,YAAY,GAAG,CAAC,CAAC,CAAC;QACrD,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACtB,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtF,OAAO,CAAC,SAAS,CACb,KAAK,EACL,YAAY,GAAG,IAAI,EACnB,aAAa,GAAG,GAAG,EACnB,UAAU,EACV,WAAW,EACX,CAAC,KAAK,GAAG,CAAC,EACV,CAAC,MAAM,GAAG,CAAC,EACX,KAAK,EACL,MAAM,CACT,CAAC;KACL;IAED,OAAO,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;AAC9C,CAAC","sourcesContent":["import getGeneratedImageSize from './getGeneratedImageSize';\nimport type ImageEditInfo from '../types/ImageEditInfo';\n\n/**\n * @internal\n * Generate new dataURL from an image and edit info\n * @param image The image to generate data URL from. It is supposed to have original src loaded\n * @param editInfo Edit info of the image\n * @returns A BASE64 encoded string with image prefix that represents the content of the generated image.\n * If there are rotate/crop/resize info in the edit info, the generated image will also reflect the result.\n * It is possible to throw exception since the original image may not be able to read its content from\n * the code, so better check canRegenerateImage() of the image first.\n * @throws Exception when fail to generate dataURL from canvas\n */\nexport default function generateDataURL(image: HTMLImageElement, editInfo: ImageEditInfo): string {\n    const {\n        angleRad: angle,\n        widthPx: width,\n        heightPx: height,\n        bottomPercent: bottom,\n        leftPercent: left,\n        rightPercent: right,\n        topPercent: top,\n        naturalWidth,\n        naturalHeight,\n    } = editInfo;\n    const imageWidth = naturalWidth * (1 - left - right);\n    const imageHeight = naturalHeight * (1 - top - bottom);\n\n    // Adjust the canvas size and scaling for high display resolution\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const canvas = document.createElement('canvas');\n    const { targetWidth, targetHeight } = getGeneratedImageSize(editInfo);\n    canvas.width = targetWidth * devicePixelRatio;\n    canvas.height = targetHeight * devicePixelRatio;\n\n    const context = canvas.getContext('2d');\n    if (context) {\n        context.scale(devicePixelRatio, devicePixelRatio);\n        context.translate(targetWidth / 2, targetHeight / 2);\n        context.rotate(angle);\n        context.scale(editInfo.flippedHorizontal ? -1 : 1, editInfo.flippedVertical ? -1 : 1);\n        context.drawImage(\n            image,\n            naturalWidth * left,\n            naturalHeight * top,\n            imageWidth,\n            imageHeight,\n            -width / 2,\n            -height / 2,\n            width,\n            height\n        );\n    }\n\n    return canvas.toDataURL('image/png', 1.0);\n}\n"]}