{"version":3,"file":"Rotator.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/imageEditors/Rotator.ts"],"names":[],"mappings":"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","sourcesContent":["import { ImageEditElementClass } from '../types/ImageEditElementClass';\nimport type DragAndDropContext from '../types/DragAndDropContext';\nimport type DragAndDropHandler from '../../../pluginUtils/DragAndDropHandler';\nimport type ImageHtmlOptions from '../types/ImageHtmlOptions';\nimport type { CreateElementData, Rect } from 'roosterjs-editor-types';\nimport type { RotateInfo } from '../types/ImageEditInfo';\nimport {\n    DEFAULT_ROTATE_HANDLE_HEIGHT,\n    DEG_PER_RAD,\n    RESIZE_HANDLE_MARGIN,\n    ROTATE_GAP,\n    ROTATE_HANDLE_TOP,\n    ROTATE_ICON_MARGIN,\n    ROTATE_SIZE,\n    ROTATE_WIDTH,\n} from '../constants/constants';\n\n/**\n * @internal\n * The rotate drag and drop handler\n */\nexport const Rotator: DragAndDropHandler<DragAndDropContext, RotateInfo> = {\n    onDragStart: ({ editInfo }) => ({ ...editInfo }),\n    onDragging: ({ editInfo, options }, e, base, deltaX, deltaY) => {\n        const distance = editInfo.heightPx / 2 + DEFAULT_ROTATE_HANDLE_HEIGHT;\n        const newX = distance * Math.sin(base.angleRad) + deltaX;\n        const newY = distance * Math.cos(base.angleRad) - deltaY;\n        let angleInRad = Math.atan2(newX, newY);\n\n        if (!e.altKey && options && options.minRotateDeg !== undefined) {\n            const angleInDeg = angleInRad * DEG_PER_RAD;\n            const adjustedAngleInDeg =\n                Math.round(angleInDeg / options.minRotateDeg) * options.minRotateDeg;\n            angleInRad = adjustedAngleInDeg / DEG_PER_RAD;\n        }\n\n        if (editInfo.angleRad != angleInRad) {\n            editInfo.angleRad = angleInRad;\n            return true;\n        } else {\n            return false;\n        }\n    },\n};\n\n/**\n * @internal\n * Move rotate handle. When image is very close to the border of editor, rotate handle may not be visible.\n * Fix it by reduce the distance from image to rotate handle\n */\nexport function updateRotateHandleState(\n    editorRect: Rect,\n    angleRad: number,\n    wrapper: HTMLElement,\n    rotateCenter: HTMLElement,\n    rotateHandle: HTMLElement,\n    isSmallImage: boolean\n) {\n    if (isSmallImage) {\n        rotateCenter.style.display = 'none';\n        rotateHandle.style.display = 'none';\n        return;\n    } else {\n        rotateCenter.style.display = '';\n        rotateHandle.style.display = '';\n        const rotateCenterRect = rotateCenter.getBoundingClientRect();\n        const wrapperRect = wrapper.getBoundingClientRect();\n        const ROTATOR_HEIGHT = ROTATE_SIZE + ROTATE_GAP + RESIZE_HANDLE_MARGIN;\n        if (rotateCenterRect && wrapperRect) {\n            let adjustedDistance = Number.MAX_SAFE_INTEGER;\n            const angle = angleRad * DEG_PER_RAD;\n\n            if (angle < 45 && angle > -45 && wrapperRect.top - editorRect.top < ROTATOR_HEIGHT) {\n                const top = rotateCenterRect.top - editorRect.top;\n                adjustedDistance = top;\n            } else if (\n                angle <= -80 &&\n                angle >= -100 &&\n                wrapperRect.left - editorRect.left < ROTATOR_HEIGHT\n            ) {\n                const left = rotateCenterRect.left - editorRect.left;\n                adjustedDistance = left;\n            } else if (\n                angle >= 80 &&\n                angle <= 100 &&\n                editorRect.right - wrapperRect.right < ROTATOR_HEIGHT\n            ) {\n                const right = rotateCenterRect.right - editorRect.right;\n                adjustedDistance = Math.min(editorRect.right - wrapperRect.right, right);\n            } else if (\n                (angle <= -160 || angle >= 160) &&\n                editorRect.bottom - wrapperRect.bottom < ROTATOR_HEIGHT\n            ) {\n                const bottom = rotateCenterRect.bottom - editorRect.bottom;\n                adjustedDistance = Math.min(editorRect.bottom - wrapperRect.bottom, bottom);\n            }\n\n            const rotateGap = Math.max(Math.min(ROTATE_GAP, adjustedDistance), 0);\n            const rotateTop = Math.max(Math.min(ROTATE_SIZE, adjustedDistance - rotateGap), 0);\n            rotateCenter.style.top = -rotateGap - RESIZE_HANDLE_MARGIN + 'px';\n            rotateCenter.style.height = rotateGap + 'px';\n            rotateHandle.style.top = -rotateTop + 'px';\n        }\n    }\n}\n\n/**\n * @internal\n * Get HTML for rotate elements, including the rotate handle with icon, and a line between the handle and the image\n */\nexport function getRotateHTML({\n    borderColor,\n    rotateHandleBackColor,\n}: ImageHtmlOptions): CreateElementData[] {\n    const handleLeft = ROTATE_SIZE / 2;\n    return [\n        {\n            tag: 'div',\n            className: ImageEditElementClass.RotateCenter,\n            style: `position:absolute;left:50%;width:1px;background-color:${borderColor};top:${-ROTATE_HANDLE_TOP}px;height:${ROTATE_GAP}px;margin-left:${-ROTATE_WIDTH}px;`,\n            children: [\n                {\n                    tag: 'div',\n                    className: ImageEditElementClass.RotateHandle,\n                    style: `position:absolute;background-color:${rotateHandleBackColor};border:solid 1px ${borderColor};border-radius:50%;width:${ROTATE_SIZE}px;height:${ROTATE_SIZE}px;left:-${\n                        handleLeft + ROTATE_WIDTH\n                    }px;cursor:move;top:${-ROTATE_SIZE}px;line-height: 0px;`,\n                    children: [getRotateIconHTML(borderColor)],\n                },\n            ],\n        },\n    ];\n}\n\nfunction getRotateIconHTML(borderColor: string): CreateElementData {\n    return {\n        tag: 'svg',\n        namespace: 'http://www.w3.org/2000/svg',\n        style: `width:16px;height:16px;margin: ${ROTATE_ICON_MARGIN}px ${ROTATE_ICON_MARGIN}px`,\n        children: [\n            {\n                tag: 'path',\n                namespace: 'http://www.w3.org/2000/svg',\n                attributes: {\n                    d: 'M 10.5,10.0 A 3.8,3.8 0 1 1 6.7,6.3',\n                    transform: 'matrix(1.1 1.1 -1.1 1.1 11.6 -10.8)',\n                    ['fill-opacity']: '0',\n                    stroke: borderColor,\n                },\n            },\n            {\n                tag: 'path',\n                namespace: 'http://www.w3.org/2000/svg',\n                attributes: {\n                    d: 'M12.0 3.648l.884-.884.53 2.298-2.298-.53z',\n                    stroke: borderColor,\n                },\n            },\n        ],\n    };\n}\n"]}