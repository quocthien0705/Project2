{"version":3,"file":"resizeByPercentage.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/api/resizeByPercentage.ts"],"names":[],"mappings":"AAAA,OAAO,WAAW,MAAM,8BAA8B,CAAC;AACvD,OAAO,yBAAyB,MAAM,4CAA4C,CAAC;AACnF,OAAO,WAAW,MAAM,eAAe,CAAC;AAExC,OAAO,EAAE,oBAAoB,EAAE,MAAM,2BAA2B,CAAC;AAGjE;;;;;;;;GAQG;AACH,MAAM,CAAC,OAAO,UAAU,kBAAkB,CACtC,MAAe,EACf,KAAuB,EACvB,UAAkB,EAClB,QAAgB,EAChB,SAAiB;IAEjB,IAAM,QAAQ,GAAG,oBAAoB,CAAC,KAAK,CAAC,CAAC;IAE7C,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,UAAU,CAAC,EAAE;QACjC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;gBAC5D,IAAM,SAAO,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACpC,IAAA,KAAoB,yBAAyB,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAjE,KAAK,WAAA,EAAE,MAAM,YAAoD,CAAC;gBAC1E,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;gBAC7C,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;gBAEhD,MAAM,CAAC,eAAe,CAAC;oBACnB,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAO,IAAI,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC7E,CAAC,kCAA2B,CAAC;gBAC7B,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACxB;QACL,CAAC,CAAC,CAAC;KACN;AACL,CAAC;AAED,SAAS,SAAS,CAAC,GAAqB,EAAE,GAAW,EAAE,QAAoB;IACvE,GAAG,CAAC,MAAM,GAAG;QACT,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC;QAClB,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;QACnB,QAAQ,EAAE,CAAC;IACf,CAAC,CAAC;IACF,GAAG,CAAC,OAAO,GAAG;QACV,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC;QAClB,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;QACnB,QAAQ,EAAE,CAAC;IACf,CAAC,CAAC;IACF,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;AAClB,CAAC","sourcesContent":["import applyChange from '../editInfoUtils/applyChange';\nimport getTargetSizeByPercentage from '../editInfoUtils/getTargetSizeByPercentage';\nimport isResizedTo from './isResizedTo';\nimport { ChangeSource } from 'roosterjs-editor-types';\nimport { getEditInfoFromImage } from '../editInfoUtils/editInfo';\nimport type { IEditor } from 'roosterjs-editor-types';\n\n/**\n * Resize the image by percentage of its natural size. If the image is cropped or rotated,\n * the final size will also calculated with crop and rotate info.\n * @param editor The editor that contains the image\n * @param image The image to resize\n * @param percentage Percentage to resize to\n * @param minWidth Minimum width\n * @param minHeight Minimum height\n */\nexport default function resizeByPercentage(\n    editor: IEditor,\n    image: HTMLImageElement,\n    percentage: number,\n    minWidth: number,\n    minHeight: number\n) {\n    const editInfo = getEditInfoFromImage(image);\n\n    if (!isResizedTo(image, percentage)) {\n        loadImage(image, image.src, () => {\n            if (!editor.isDisposed() && editor.contains(image) && editInfo) {\n                const lastSrc = image.getAttribute('src');\n                const { width, height } = getTargetSizeByPercentage(editInfo, percentage);\n                editInfo.widthPx = Math.max(width, minWidth);\n                editInfo.heightPx = Math.max(height, minHeight);\n\n                editor.addUndoSnapshot(() => {\n                    applyChange(editor, image, editInfo, lastSrc || '', true /*wasResized*/);\n                }, ChangeSource.ImageResize);\n                editor.select(image);\n            }\n        });\n    }\n}\n\nfunction loadImage(img: HTMLImageElement, src: string, callback: () => void) {\n    img.onload = () => {\n        img.onload = null;\n        img.onerror = null;\n        callback();\n    };\n    img.onerror = () => {\n        img.onload = null;\n        img.onerror = null;\n        callback();\n    };\n    img.src = src;\n}\n"]}