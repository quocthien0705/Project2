import applyChange from '../editInfoUtils/applyChange';
import getTargetSizeByPercentage from '../editInfoUtils/getTargetSizeByPercentage';
import isResizedTo from './isResizedTo';
import { getEditInfoFromImage } from '../editInfoUtils/editInfo';
/**
 * Resize the image by percentage of its natural size. If the image is cropped or rotated,
 * the final size will also calculated with crop and rotate info.
 * @param editor The editor that contains the image
 * @param image The image to resize
 * @param percentage Percentage to resize to
 * @param minWidth Minimum width
 * @param minHeight Minimum height
 */
export default function resizeByPercentage(editor, image, percentage, minWidth, minHeight) {
    var editInfo = getEditInfoFromImage(image);
    if (!isResizedTo(image, percentage)) {
        loadImage(image, image.src, function () {
            if (!editor.isDisposed() && editor.contains(image) && editInfo) {
                var lastSrc_1 = image.getAttribute('src');
                var _a = getTargetSizeByPercentage(editInfo, percentage), width = _a.width, height = _a.height;
                editInfo.widthPx = Math.max(width, minWidth);
                editInfo.heightPx = Math.max(height, minHeight);
                editor.addUndoSnapshot(function () {
                    applyChange(editor, image, editInfo, lastSrc_1 || '', true /*wasResized*/);
                }, "ImageResize" /* ImageResize */);
                editor.select(image);
            }
        });
    }
}
function loadImage(img, src, callback) {
    img.onload = function () {
        img.onload = null;
        img.onerror = null;
        callback();
    };
    img.onerror = function () {
        img.onload = null;
        img.onerror = null;
        callback();
    };
    img.src = src;
}
//# sourceMappingURL=resizeByPercentage.js.map