{"version":3,"file":"isAfter.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/utils/isAfter.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAIhD;;GAEG;AACH,MAAM,UAAU,OAAO,CAAC,KAAqB,EAAE,KAAqB;;IAChE,IAAI,KAAK,IAAI,KAAK,EAAE;QAChB,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YACvB,IAAM,EAAE,GAAG,MAAA,MAAC,KAAiB,EAAC,qBAAqB,kDAAI,CAAC;YACxD,IAAM,EAAE,GAAG,MAAA,MAAC,KAAiB,EAAC,qBAAqB,kDAAI,CAAC;YACxD,IAAI,EAAE,IAAI,EAAE,EAAE;gBACV,OAAO,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;aACnD;SACJ;QAED,IAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,KAAK,eAAmB,CAAC;QACvD,OAAO,QAAQ,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,KAAK,eAAmB,CAAC,CAAC;KAClE;IACD,OAAO,KAAK,CAAC;AACjB,CAAC","sourcesContent":["import { Position } from 'roosterjs-editor-dom';\nimport { PositionType } from 'roosterjs-editor-types';\nimport type { Nullable } from '../TableCellSelectionState';\n\n/**\n * @internal\n */\nexport function isAfter(node1: Nullable<Node>, node2: Nullable<Node>) {\n    if (node1 && node2) {\n        if (node2.contains(node1)) {\n            const r1 = (node1 as Element).getBoundingClientRect?.();\n            const r2 = (node2 as Element).getBoundingClientRect?.();\n            if (r1 && r2) {\n                return r1.top > r2.top && r1.bottom < r2.bottom;\n            }\n        }\n\n        const position = new Position(node1, PositionType.End);\n        return position.isAfter(new Position(node2, PositionType.End));\n    }\n    return false;\n}\n"]}