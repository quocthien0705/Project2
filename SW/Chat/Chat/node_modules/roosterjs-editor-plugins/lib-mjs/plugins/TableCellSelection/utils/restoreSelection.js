import { isAfter } from './isAfter';
import { Position } from 'roosterjs-editor-dom';
import { updateSelection } from './updateSelection';
/**
 * @internal
 */
export function restoreSelection(state, editor) {
    if (!state.lastTarget || !state.firstTarget) {
        return;
    }
    if (state.firstTable) {
        editor.select(state.firstTable, null /* coordinates */);
    }
    state.tableSelection = false;
    var isBeginAboveEnd = isAfter(state.firstTarget, state.lastTarget);
    var targetPosition = new Position(state.lastTarget, isBeginAboveEnd ? -1 /* End */ : 0 /* Begin */);
    var firstTargetRange = new Range();
    if (state.firstTarget) {
        firstTargetRange.selectNodeContents(state.firstTarget);
    }
    updateSelection(editor, state.firstTarget, isBeginAboveEnd
        ? Position.getEnd(firstTargetRange).offset
        : Position.getStart(firstTargetRange).offset, targetPosition.element, targetPosition.offset);
}
//# sourceMappingURL=restoreSelection.js.map