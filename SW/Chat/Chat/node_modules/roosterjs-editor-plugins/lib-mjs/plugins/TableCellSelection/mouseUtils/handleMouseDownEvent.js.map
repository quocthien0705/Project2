{"version":3,"file":"handleMouseDownEvent.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/mouseUtils/handleMouseDownEvent.ts"],"names":[],"mappings":"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","sourcesContent":["import normalizeTableSelection from '../utils/normalizeTableSelection';\nimport { clearState } from '../utils/clearState';\nimport { contains, getTagOfNode, safeInstanceOf, VTable } from 'roosterjs-editor-dom';\nimport { getCellAtCursor } from '../utils/getCellAtCursor';\nimport { getCellCoordinates } from '../utils/getCellCoordinates';\nimport { getTableAtCursor } from '../utils/getTableAtCursor';\nimport { prepareSelection } from '../utils/prepareSelection';\nimport { restoreSelection } from '../utils/restoreSelection';\nimport { selectTable } from '../utils/selectTable';\nimport { setData } from '../utils/setData';\nimport { TABLE_CELL_SELECTOR } from '../constants';\nimport { updateSelection } from '../utils/updateSelection';\nimport type { IEditor, PluginMouseDownEvent } from 'roosterjs-editor-types';\nimport type { TableCellSelectionState } from '../TableCellSelectionState';\n\nconst LEFT_CLICK = 1;\nconst RIGHT_CLICK = 3;\n\n/**\n * @internal\n */\nexport function handleMouseDownEvent(\n    event: PluginMouseDownEvent,\n    state: TableCellSelectionState,\n    editor: IEditor\n) {\n    const { which, shiftKey, target, detail } = event.rawEvent;\n    const table = editor.getElementAtCursor('table', target as Node, event);\n    const tripleClick = detail >= 3;\n\n    if (table && !table.isContentEditable) {\n        return;\n    }\n\n    const td = editor.getElementAtCursor(TABLE_CELL_SELECTOR);\n    if (which == RIGHT_CLICK && state.tableSelection && state.vTable && td) {\n        //If the user is right clicking To open context menu\n        const coord = getCellCoordinates(state.vTable, td);\n        if (coord) {\n            const { firstCell, lastCell } = normalizeTableSelection(state.vTable) || {};\n            if (\n                firstCell &&\n                lastCell &&\n                coord.y >= firstCell.y &&\n                coord.y <= lastCell.y &&\n                coord.x >= firstCell.x &&\n                coord.x <= lastCell.x\n            ) {\n                state.firstTarget = state.vTable.getCell(firstCell.y, firstCell.x).td;\n                state.lastTarget = state.vTable.getCell(lastCell.y, lastCell.x).td;\n\n                if (state.firstTarget && state.lastTarget) {\n                    const selection = editor.getDocument().defaultView?.getSelection();\n                    selection?.setBaseAndExtent(state.firstTarget, 0, state.lastTarget, 0);\n                    selectTable(editor, state);\n                }\n\n                return;\n            }\n        }\n    }\n    if (which == LEFT_CLICK) {\n        if (!shiftKey && !tripleClick) {\n            clearState(state, editor);\n\n            if (getTableAtCursor(editor, event.rawEvent.target)) {\n                const doc = editor.getDocument() || document;\n\n                const mouseUpListener = getOnMouseUp(state);\n                const mouseMoveListener = onMouseMove(state, editor);\n                doc.addEventListener('mouseup', mouseUpListener, true /*setCapture*/);\n                doc.addEventListener('mousemove', mouseMoveListener, true /*setCapture*/);\n\n                state.mouseMoveDisposer = () => {\n                    doc.removeEventListener('mouseup', mouseUpListener, true /*setCapture*/);\n                    doc.removeEventListener('mousemove', mouseMoveListener, true /*setCapture*/);\n                };\n\n                state.startedSelection = true;\n            }\n        }\n\n        if (shiftKey || tripleClick) {\n            editor.runAsync(editor => {\n                const sel = editor.getDocument().defaultView?.getSelection();\n                const first = getCellAtCursor(editor, sel?.anchorNode);\n                // Triple clicking a cell will select that cell only\n                // Assign last the same as first to make sure we can select the cell\n                const last = tripleClick ? first : getCellAtCursor(editor, sel?.focusNode);\n                const firstTable = getTableAtCursor(editor, first);\n                if (\n                    firstTable &&\n                    safeInstanceOf(first, 'HTMLTableCellElement') &&\n                    safeInstanceOf(last, 'HTMLTableCellElement')\n                ) {\n                    state.vTable = new VTable(first);\n                    const firstCord = getCellCoordinates(state.vTable, first);\n                    const lastCord = getCellCoordinates(state.vTable, last);\n\n                    if (!firstCord || !lastCord) {\n                        return;\n                    }\n                    state.vTable.selection = {\n                        firstCell: firstCord,\n                        lastCell: lastCord,\n                    };\n\n                    state.firstTarget = first;\n                    state.lastTarget = last;\n                    selectTable(editor, state);\n\n                    state.tableSelection = true;\n                    state.firstTable = firstTable as HTMLTableElement;\n                    state.targetTable = firstTable;\n                    updateSelection(editor, first, 0);\n                }\n            });\n        }\n    }\n}\n\nfunction getOnMouseUp(state: TableCellSelectionState) {\n    return () => {\n        removeMouseUpEventListener(state);\n    };\n}\n\nfunction onMouseMove(state: TableCellSelectionState, editor: IEditor) {\n    return (event: MouseEvent) => {\n        if (!editor.contains(event.target as Node)) {\n            return;\n        }\n\n        //If already in table selection and the new target is contained in the last target cell, no need to\n        //Apply selection styles again.\n        if (\n            state.tableSelection &&\n            state.firstTarget &&\n            contains(state.lastTarget, event.target as Node, true)\n        ) {\n            updateSelection(editor, state.firstTarget, 0);\n            event.preventDefault();\n            return;\n        }\n\n        if (getTagOfNode(event.target as Node) == 'TABLE') {\n            event.preventDefault();\n            return;\n        }\n\n        setData(event.target as Node, state, editor);\n\n        // If there is a first target, but is not inside a table, no more actions to perform.\n        if (state.firstTarget && !state.firstTable) {\n            return;\n        }\n\n        //Ignore if\n        // Is a DIV that only contains a Table\n        // If the event target is not contained in the editor.\n        if (\n            state.lastTarget &&\n            ((state.lastTarget.lastChild == state.lastTarget.firstChild &&\n                getTagOfNode(state.lastTarget.lastChild) == 'TABLE' &&\n                getTagOfNode(state.lastTarget) == 'DIV') ||\n                !editor.contains(state.lastTarget))\n        ) {\n            event.preventDefault();\n            return;\n        }\n\n        prepareSelection(state, editor);\n        const isNewTDContainingFirstTable = safeInstanceOf(state.lastTarget, 'HTMLTableCellElement')\n            ? contains(state.lastTarget, state.firstTable)\n            : false;\n\n        if (\n            (state.firstTable && state.firstTable == state.targetTable) ||\n            isNewTDContainingFirstTable\n        ) {\n            //When starting selection inside of a table and ends inside of the same table.\n            selectionInsideTableMouseMove(event, state, editor);\n        } else if (state.tableSelection) {\n            restoreSelection(state, editor);\n        }\n\n        if (state.tableSelection && state.firstTarget) {\n            updateSelection(editor, state.firstTarget, 0);\n            event.preventDefault();\n        }\n    };\n}\n\n/**\n * @internal\n */\nexport function selectionInsideTableMouseMove(\n    event: MouseEvent,\n    state: TableCellSelectionState,\n    editor: IEditor\n) {\n    if (\n        state.firstTarget &&\n        state.firstTable &&\n        state.lastTarget != state.firstTarget &&\n        state.lastTarget\n    ) {\n        updateSelection(editor, state.firstTarget, 0);\n        if (\n            state.firstTable != state.targetTable &&\n            state.targetTable?.contains(state.firstTable)\n        ) {\n            //If selection started in a table that is inside of another table and moves to parent table\n            //Make the firstTarget the TD of the parent table.\n            state.firstTarget = editor.getElementAtCursor(TABLE_CELL_SELECTOR, state.lastTarget);\n        }\n\n        if (state.firstTable && state.firstTarget) {\n            state.tableSelection = true;\n\n            state.vTable = state.vTable || new VTable(state.firstTable);\n\n            const firstCell = getCellCoordinates(state.vTable, state.firstTarget);\n            const lastCell = getCellCoordinates(state.vTable, state.lastTarget);\n\n            if (!firstCell || !lastCell) {\n                return;\n            }\n\n            state.vTable.selection = {\n                firstCell,\n                lastCell,\n            };\n            selectTable(editor, state);\n        }\n\n        event.preventDefault();\n    } else if (\n        state.lastTarget == state.firstTarget &&\n        state.tableSelection &&\n        state.firstTable &&\n        state.firstTarget\n    ) {\n        state.vTable = new VTable(state.firstTable);\n        const cell = getCellCoordinates(state.vTable, state.firstTarget);\n        if (cell) {\n            state.vTable.selection = {\n                firstCell: cell,\n                lastCell: cell,\n            };\n        }\n\n        selectTable(editor, state);\n    }\n}\n\nfunction removeMouseUpEventListener(state: TableCellSelectionState): void {\n    if (state.startedSelection) {\n        state.startedSelection = false;\n        state.mouseMoveDisposer?.();\n    }\n}\n"]}