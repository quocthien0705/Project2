{"version":3,"file":"setData.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/utils/setData.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACtD,OAAO,EAAE,mBAAmB,EAAE,MAAM,cAAc,CAAC;AAInD;;GAEG;AACH,MAAM,UAAU,OAAO,CAAC,WAAiB,EAAE,KAA8B,EAAE,MAAe;IACtF,IAAM,GAAG,GAAG,MAAM,CAAC,kBAAkB,EAAE,CAAC;IACxC,IAAI,GAAG,EAAE;QACL,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,IAAI,eAAe,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;QAE3E,IAAI,KAAK,CAAC,WAAW,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;YAC9C,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;SACzF;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC,UAAU,EAAE;YACzD,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,UAAU,CAAC;SACxC;KACJ;IAED,KAAK,CAAC,UAAU,GAAG,gBAAgB,CAAC,MAAM,EAAE,KAAK,CAAC,WAAW,CAAqB,CAAC;IACnF,KAAK,CAAC,UAAU,GAAG,eAAe,CAAC,MAAM,EAAE,WAAmB,CAAC,CAAC;IAChE,KAAK,CAAC,WAAW,GAAG,gBAAgB,CAAC,MAAM,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;AACnE,CAAC","sourcesContent":["import { getCellAtCursor } from './getCellAtCursor';\nimport { getTableAtCursor } from './getTableAtCursor';\nimport { TABLE_CELL_SELECTOR } from '../constants';\nimport type { IEditor } from 'roosterjs-editor-types';\nimport type { TableCellSelectionState } from '../TableCellSelectionState';\n\n/**\n * @internal\n */\nexport function setData(eventTarget: Node, state: TableCellSelectionState, editor: IEditor) {\n    const pos = editor.getFocusedPosition();\n    if (pos) {\n        state.firstTarget = state.firstTarget || getCellAtCursor(editor, pos.node);\n\n        if (state.firstTarget.nodeType == Node.TEXT_NODE) {\n            state.firstTarget = editor.getElementAtCursor(TABLE_CELL_SELECTOR, state.firstTarget);\n        }\n        if (!editor.contains(state.firstTarget) && state.lastTarget) {\n            state.firstTarget = state.lastTarget;\n        }\n    }\n\n    state.firstTable = getTableAtCursor(editor, state.firstTarget) as HTMLTableElement;\n    state.lastTarget = getCellAtCursor(editor, eventTarget as Node);\n    state.targetTable = getTableAtCursor(editor, state.lastTarget);\n}\n"]}