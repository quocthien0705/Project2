import { getCellCoordinates } from '../utils/getCellCoordinates';
import { restoreSelection } from '../utils/restoreSelection';
import { selectTable } from '../utils/selectTable';
import { setData } from '../utils/setData';
import { updateSelection } from '../utils/updateSelection';
/**
 * @internal
 * Handle Scroll Event and mantains the selection range,
 * Since when we scroll the cursor does not trigger the on Mouse Move event
 * The table selection gets removed.
 */
export function handleScrollEvent(state, editor) {
    var _a;
    var eventTarget = editor.getElementAtCursor();
    if (!eventTarget) {
        return;
    }
    setData(eventTarget, state, editor);
    if (state.firstTable == state.targetTable &&
        state.firstTarget &&
        ((_a = state.vTable) === null || _a === void 0 ? void 0 : _a.selection) &&
        state.lastTarget &&
        state.tableSelection) {
        var newCell = getCellCoordinates(state.vTable, state.lastTarget);
        if (newCell) {
            state.vTable.selection.lastCell = newCell;
            selectTable(editor, state);
            updateSelection(editor, state.firstTarget, 0);
        }
    }
    else if (state.tableSelection) {
        restoreSelection(state, editor);
    }
}
//# sourceMappingURL=handleScrollEvent.js.map