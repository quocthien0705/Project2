{"version":3,"file":"prepareSelection.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/utils/prepareSelection.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,0BAA0B,EAAE,MAAM,sBAAsB,CAAC;AAClE,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACtD,OAAO,EAAE,mBAAmB,EAAE,MAAM,cAAc,CAAC;AAInD;;;GAGG;AACH,MAAM,UAAU,gBAAgB,CAAC,KAA8B,EAAE,MAAe;;IAC5E,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;QACzC,OAAO;KACV;IACD,IAAI,yBAAyB,GACzB,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,WAAW;SACrC,MAAA,KAAK,CAAC,UAAU,0CAAE,QAAQ,CACtB,0BAA0B,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,UAAU,EAAE,mBAAmB,CAAC,CACvF,CAAA,CAAC;IAEN,IAAI,yBAAyB,IAAI,KAAK,CAAC,cAAc,EAAE;QACnD,OAAO,yBAAyB,EAAE;YAC9B,KAAK,CAAC,UAAU,GAAG,0BAA0B,CACzC,KAAK,CAAC,WAAW,EACjB,KAAK,CAAC,UAAU,EAChB,mBAAmB,CACtB,CAAC;YACF,KAAK,CAAC,WAAW,GAAG,gBAAgB,CAAC,MAAM,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;YAC/D,yBAAyB;gBACrB,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,WAAW;qBACrC,MAAA,KAAK,CAAC,UAAU,0CAAE,QAAQ,CACtB,0BAA0B,CACtB,KAAK,CAAC,WAAW,EACjB,KAAK,CAAC,UAAU,EAChB,mBAAmB,CACtB,CACJ,CAAA,CAAC;SACT;KACJ;IAED,IAAI,2BAA2B,GAC3B,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,WAAW;SACrC,MAAA,KAAK,CAAC,WAAW,0CAAE,QAAQ,CACvB,0BAA0B,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,WAAW,EAAE,mBAAmB,CAAC,CACvF,CAAA,CAAC;IAEN,IAAI,2BAA2B,IAAI,KAAK,CAAC,cAAc,IAAI,KAAK,CAAC,WAAW,EAAE;QAC1E,OAAO,2BAA2B,EAAE;YAChC,KAAK,CAAC,WAAW,GAAG,0BAA0B,CAC1C,KAAK,CAAC,UAAU,EAChB,KAAK,CAAC,WAAW,EACjB,mBAAmB,CACtB,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACpB,OAAO;aACV;YACD,KAAK,CAAC,UAAU,GAAG,gBAAgB,CAAC,MAAM,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;YAC/D,2BAA2B;gBACvB,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,WAAW;qBACrC,MAAA,KAAK,CAAC,WAAW,0CAAE,QAAQ,CACvB,0BAA0B,CACtB,KAAK,CAAC,UAAU,EAChB,KAAK,CAAC,WAAW,EACjB,mBAAmB,CACtB,CACJ,CAAA,CAAC;SACT;KACJ;AACL,CAAC","sourcesContent":["import { findClosestElementAncestor } from 'roosterjs-editor-dom';\nimport { getTableAtCursor } from './getTableAtCursor';\nimport { TABLE_CELL_SELECTOR } from '../constants';\nimport type { IEditor } from 'roosterjs-editor-types';\nimport type { TableCellSelectionState } from '../TableCellSelectionState';\n\n/**\n * @internal\n *  Check if the selection started in a inner table.\n */\nexport function prepareSelection(state: TableCellSelectionState, editor: IEditor) {\n    if (!state.firstTable || !state.targetTable) {\n        return;\n    }\n    let isNewTargetTableContained =\n        state.lastTarget != state.firstTarget &&\n        state.firstTable?.contains(\n            findClosestElementAncestor(state.targetTable, state.firstTable, TABLE_CELL_SELECTOR)\n        );\n\n    if (isNewTargetTableContained && state.tableSelection) {\n        while (isNewTargetTableContained) {\n            state.lastTarget = findClosestElementAncestor(\n                state.targetTable,\n                state.firstTable,\n                TABLE_CELL_SELECTOR\n            );\n            state.targetTable = getTableAtCursor(editor, state.lastTarget);\n            isNewTargetTableContained =\n                state.lastTarget != state.firstTarget &&\n                state.firstTable?.contains(\n                    findClosestElementAncestor(\n                        state.targetTable,\n                        state.firstTable,\n                        TABLE_CELL_SELECTOR\n                    )\n                );\n        }\n    }\n\n    let isFirstTargetTableContained =\n        state.lastTarget != state.firstTarget &&\n        state.targetTable?.contains(\n            findClosestElementAncestor(state.firstTable, state.targetTable, TABLE_CELL_SELECTOR)\n        );\n\n    if (isFirstTargetTableContained && state.tableSelection && state.targetTable) {\n        while (isFirstTargetTableContained) {\n            state.firstTarget = findClosestElementAncestor(\n                state.firstTable,\n                state.targetTable,\n                TABLE_CELL_SELECTOR\n            );\n            if (!state.firstTarget) {\n                return;\n            }\n            state.firstTable = getTableAtCursor(editor, state.firstTarget);\n            isFirstTargetTableContained =\n                state.lastTarget != state.firstTarget &&\n                state.targetTable?.contains(\n                    findClosestElementAncestor(\n                        state.firstTable,\n                        state.targetTable,\n                        TABLE_CELL_SELECTOR\n                    )\n                );\n        }\n    }\n}\n"]}