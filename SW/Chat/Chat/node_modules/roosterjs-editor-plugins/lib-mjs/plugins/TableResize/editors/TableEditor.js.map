{"version":3,"file":"TableEditor.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/TableResize/editors/TableEditor.ts"],"names":[],"mappings":"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","sourcesContent":["import createCellResizer from './CellResizer';\nimport createTableInserter from './TableInserter';\nimport createTableResizer from './TableResizer';\nimport createTableSelector from './TableSelector';\nimport { ChangeSource } from 'roosterjs-editor-types';\nimport { disposeTableEditFeature } from './TableEditorFeature';\nimport type TableEditFeature from './TableEditorFeature';\nimport {\n    contains,\n    getComputedStyle,\n    normalizeRect,\n    Position,\n    safeInstanceOf,\n    VTable,\n} from 'roosterjs-editor-dom';\nimport type {\n    IEditor,\n    NodePosition,\n    TableSelection,\n    CreateElementData,\n} from 'roosterjs-editor-types';\n\nconst INSERTER_HOVER_OFFSET = 6;\nconst enum TOP_OR_SIDE {\n    top = 0,\n    side = 1,\n}\n/**\n * @internal\n *\n * A table has 6 hot areas to be resized/edited (take LTR example):\n *\n *   [6]  [                ]\n *       +[      1         ]+--------------------+\n *       |[                ]|                    |\n *      [ ]               [ ]                    |\n *      [ ]               [ ]                    |\n *      [2]               [3]                    |\n *      [ ]               [ ]                    |\n *      [ ][       4       ]|                    |\n *       +------------------+--------------------+\n *       |                  |                    |\n *       |                  |                    |\n *       |                  |                    |\n *       +------------------+--------------------+\n *                                                [5]\n *\n * 1 - Hover area to show insert column button\n * 2 - Hover area to show insert row button\n * 3 - Hover area to show vertical resizing bar\n * 4 - Hover area to show horizontal resizing bar\n * 5 - Hover area to show whole table resize button\n * 6 - Hover area to show whole table selector button\n *\n * When set a different current table or change current TD, we need to update these areas\n */\nexport default class TableEditor {\n    // 1, 2 - Insert a column or a row\n    private horizontalInserter: TableEditFeature | null = null;\n    private verticalInserter: TableEditFeature | null = null;\n\n    // 3, 4 - Resize a column or a row from a cell\n    private horizontalResizer: TableEditFeature | null = null;\n    private verticalResizer: TableEditFeature | null = null;\n\n    // 5 - Resize whole table\n    private tableResizer: TableEditFeature | null = null;\n\n    // 6 - Select whole table\n    private tableSelector: TableEditFeature | null = null;\n\n    private isRTL: boolean;\n    private start: NodePosition | null = null;\n    private end: NodePosition | null = null;\n    private isCurrentlyEditing: boolean;\n\n    constructor(\n        private editor: IEditor,\n        public readonly table: HTMLTableElement,\n        private onChanged: () => void,\n        private onShowHelperElement?: (\n            elementData: CreateElementData,\n            helperType: 'CellResizer' | 'TableInserter' | 'TableResizer' | 'TableSelector',\n            tableOrTd: HTMLTableElement | HTMLTableCellElement\n        ) => void,\n        private anchorContainer?: HTMLElement,\n        private contentDiv?: EventTarget | null\n    ) {\n        this.isRTL = getComputedStyle(table, 'direction') == 'rtl';\n        this.setEditorFeatures();\n        this.isCurrentlyEditing = false;\n    }\n\n    dispose() {\n        this.disposeTableResizer();\n        this.disposeCellResizers();\n        this.disposeTableInserter();\n        this.disposeTableSelector();\n    }\n\n    isEditing(): boolean {\n        return this.isCurrentlyEditing;\n    }\n\n    isOwnedElement(node: Node) {\n        return [\n            this.tableResizer,\n            this.tableSelector,\n            this.horizontalInserter,\n            this.verticalInserter,\n            this.horizontalResizer,\n            this.verticalResizer,\n        ]\n            .filter(feature => !!feature?.div)\n            .some(feature => contains(feature?.div, node, true /* treatSameNodeAsContain */));\n    }\n\n    onMouseMove(x: number, y: number) {\n        // Get whole table rect\n        const tableRect = normalizeRect(this.table.getBoundingClientRect());\n\n        if (!tableRect) {\n            return;\n        }\n\n        // Determine if cursor is on top or side\n        const topOrSide =\n            y <= tableRect.top + INSERTER_HOVER_OFFSET\n                ? TOP_OR_SIDE.top\n                : this.isRTL\n                ? x >= tableRect.right - INSERTER_HOVER_OFFSET\n                    ? TOP_OR_SIDE.side\n                    : undefined\n                : x <= tableRect.left + INSERTER_HOVER_OFFSET\n                ? TOP_OR_SIDE.side\n                : undefined;\n        const topOrSideBinary = topOrSide ? 1 : 0;\n\n        // i is row index, j is column index\n        for (let i = 0; i < this.table.rows.length; i++) {\n            const tr = this.table.rows[i];\n            let j = 0;\n            for (; j < tr.cells.length; j++) {\n                const td = tr.cells[j];\n                const tdRect = normalizeRect(td.getBoundingClientRect());\n\n                if (!tdRect || !tableRect) {\n                    continue;\n                }\n\n                // Determine the cell the cursor is in range of\n                // Offset is only used for first row and column\n                const lessThanBottom = y <= tdRect.bottom;\n                const lessThanRight = this.isRTL\n                    ? x <= tdRect.right + INSERTER_HOVER_OFFSET * topOrSideBinary\n                    : x <= tdRect.right;\n                const moreThanLeft = this.isRTL\n                    ? x >= tdRect.left\n                    : x >= tdRect.left - INSERTER_HOVER_OFFSET * topOrSideBinary;\n\n                if (lessThanBottom && lessThanRight && moreThanLeft) {\n                    if (i === 0 && topOrSide == TOP_OR_SIDE.top) {\n                        const center = (tdRect.left + tdRect.right) / 2;\n                        const isOnRightHalf = this.isRTL ? x < center : x > center;\n                        this.setInserterTd(\n                            isOnRightHalf ? td : tr.cells[j - 1],\n                            false /*isHorizontal*/\n                        );\n                    } else if (j === 0 && topOrSide == TOP_OR_SIDE.side) {\n                        const tdAbove = this.table.rows[i - 1]?.cells[0];\n                        const tdAboveRect = tdAbove\n                            ? normalizeRect(tdAbove.getBoundingClientRect())\n                            : null;\n\n                        const isTdNotAboveMerged = !tdAboveRect\n                            ? null\n                            : this.isRTL\n                            ? tdAboveRect.right === tdRect.right\n                            : tdAboveRect.left === tdRect.left;\n\n                        this.setInserterTd(\n                            y < (tdRect.top + tdRect.bottom) / 2 && isTdNotAboveMerged\n                                ? tdAbove\n                                : td,\n                            true /*isHorizontal*/\n                        );\n                    } else {\n                        this.setInserterTd(null);\n                    }\n\n                    this.setResizingTd(td);\n\n                    //Cell found\n                    break;\n                }\n            }\n\n            if (j < tr.cells.length) {\n                break;\n            }\n        }\n\n        // Create Selector and Resizer\n        this.setEditorFeatures();\n    }\n\n    private setEditorFeatures() {\n        if (!this.tableSelector) {\n            this.tableSelector = createTableSelector(\n                this.table,\n                this.editor,\n                this.onSelect,\n                this.getOnMouseOut,\n                this.onShowHelperElement,\n                this.contentDiv,\n                this.anchorContainer\n            );\n        }\n\n        if (!this.tableResizer) {\n            this.tableResizer = createTableResizer(\n                this.table,\n                this.editor,\n                this.onStartTableResize,\n                this.onFinishEditing,\n                this.onShowHelperElement,\n                this.contentDiv,\n                this.anchorContainer\n            );\n        }\n    }\n\n    private setResizingTd(td: HTMLTableCellElement) {\n        if (this.horizontalResizer && this.horizontalResizer.node != td) {\n            this.disposeCellResizers();\n        }\n\n        if (!this.horizontalResizer && td) {\n            const zoomScale = this.editor.getZoomScale();\n            this.horizontalResizer = createCellResizer(\n                td,\n                zoomScale,\n                this.isRTL,\n                true /*isHorizontal*/,\n                this.onStartCellResize,\n                this.onFinishEditing,\n                this.onShowHelperElement,\n                this.anchorContainer\n            );\n            this.verticalResizer = createCellResizer(\n                td,\n                zoomScale,\n                this.isRTL,\n                false /*isHorizontal*/,\n                this.onStartCellResize,\n                this.onFinishEditing,\n                this.onShowHelperElement,\n                this.anchorContainer\n            );\n        }\n    }\n\n    /**\n     * create or remove TableInserter\n     * @param td td to attach to, set this to null to remove inserters (both horizontal and vertical)\n     */\n    private setInserterTd(td: HTMLTableCellElement | null, isHorizontal?: boolean) {\n        const inserter = isHorizontal ? this.horizontalInserter : this.verticalInserter;\n        if (td === null || (inserter && inserter.node != td)) {\n            this.disposeTableInserter();\n        }\n\n        if (!this.horizontalInserter && !this.verticalInserter && td) {\n            const newInserter = createTableInserter(\n                this.editor,\n                td,\n                this.isRTL,\n                !!isHorizontal,\n                this.onInserted,\n                this.getOnMouseOut,\n                this.onShowHelperElement,\n                this.anchorContainer\n            );\n            if (isHorizontal) {\n                this.horizontalInserter = newInserter;\n            } else {\n                this.verticalInserter = newInserter;\n            }\n        }\n    }\n\n    private disposeTableResizer() {\n        if (this.tableResizer) {\n            disposeTableEditFeature(this.tableResizer);\n            this.tableResizer = null;\n        }\n    }\n\n    private disposeTableInserter() {\n        if (this.horizontalInserter) {\n            disposeTableEditFeature(this.horizontalInserter);\n            this.horizontalInserter = null;\n        }\n        if (this.verticalInserter) {\n            disposeTableEditFeature(this.verticalInserter);\n            this.verticalInserter = null;\n        }\n    }\n\n    private disposeCellResizers() {\n        if (this.horizontalResizer) {\n            disposeTableEditFeature(this.horizontalResizer);\n            this.horizontalResizer = null;\n        }\n        if (this.verticalResizer) {\n            disposeTableEditFeature(this.verticalResizer);\n            this.verticalResizer = null;\n        }\n    }\n\n    private disposeTableSelector() {\n        if (this.tableSelector) {\n            disposeTableEditFeature(this.tableSelector);\n            this.tableSelector = null;\n        }\n    }\n\n    private onFinishEditing = (): false => {\n        this.editor.focus();\n\n        if (this.start && this.end) {\n            this.editor.select(this.start, this.end);\n        }\n\n        this.editor.addUndoSnapshot(() => {}, ChangeSource.Format); // Pass in an empty callback to make sure ContentChangedEvent is triggered\n        this.onChanged();\n        this.isCurrentlyEditing = false;\n\n        return false;\n    };\n\n    private onStartTableResize = () => {\n        this.isCurrentlyEditing = true;\n        this.onStartResize();\n    };\n\n    private onStartCellResize = () => {\n        this.isCurrentlyEditing = true;\n        this.disposeTableResizer();\n        this.onStartResize();\n    };\n\n    private onStartResize() {\n        this.isCurrentlyEditing = true;\n        const range = this.editor.getSelectionRange();\n\n        if (range) {\n            this.start = Position.getStart(range);\n            this.end = Position.getEnd(range);\n        }\n\n        this.editor.addUndoSnapshot();\n    }\n\n    private onInserted = (table: HTMLTableElement) => {\n        this.editor.transformToDarkColor(table);\n        this.disposeTableResizer();\n        this.onFinishEditing();\n    };\n\n    /**\n     * Public only for testing purposes\n     * @param table the table to select\n     */\n    public onSelect = (table: HTMLTableElement) => {\n        this.editor.focus();\n        if (table) {\n            const vTable = new VTable(table);\n            if (vTable.cells) {\n                const rows = vTable.cells.length - 1;\n                let lastCellIndex: number = 0;\n                vTable.cells[rows].forEach((cell, index) => {\n                    lastCellIndex = index;\n                });\n\n                const selection: TableSelection = {\n                    firstCell: {\n                        x: 0,\n                        y: 0,\n                    },\n                    lastCell: {\n                        y: rows,\n                        x: lastCellIndex,\n                    },\n                };\n                this.editor.select(table, selection);\n            }\n        }\n    };\n\n    private getOnMouseOut = (feature: HTMLElement) => {\n        return (ev: MouseEvent) => {\n            if (\n                feature &&\n                ev.relatedTarget != feature &&\n                safeInstanceOf(this.contentDiv, 'HTMLElement') &&\n                safeInstanceOf(ev.relatedTarget, 'HTMLElement') &&\n                !contains(this.contentDiv, ev.relatedTarget, true /* treatSameNodeAsContain */)\n            ) {\n                this.dispose();\n            }\n        };\n    };\n}\n"]}