{"version":3,"file":"shortcutFeatures.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/shortcutFeatures.ts"],"names":[],"mappings":"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","sourcesContent":["import { Browser, cacheGetEventData } from 'roosterjs-editor-dom';\nimport { FontSizeChange, Keys, PluginEventType } from 'roosterjs-editor-types';\nimport type {\n    BuildInEditFeature,\n    IEditor,\n    PluginKeyboardEvent,\n    ShortcutFeatureSettings,\n} from 'roosterjs-editor-types';\nimport {\n    changeFontSize,\n    toggleBold,\n    toggleItalic,\n    toggleUnderline,\n    toggleBullet,\n    toggleNumbering,\n    clearFormat,\n} from 'roosterjs-editor-api';\n\ninterface ShortcutCommand {\n    winKey: number;\n    macKey: number;\n    action: (editor: IEditor) => any;\n}\n\nfunction createCommand(\n    winKey: number,\n    macKey: number,\n    action: (editor: IEditor) => any,\n    disabled: boolean = false\n) {\n    if (disabled) {\n        return null;\n    }\n    return {\n        winKey,\n        macKey,\n        action,\n    };\n}\n\nconst commands: ShortcutCommand[] = [\n    createCommand(Keys.Ctrl | Keys.B, Keys.Meta | Keys.B, toggleBold),\n    createCommand(Keys.Ctrl | Keys.I, Keys.Meta | Keys.I, toggleItalic),\n    createCommand(Keys.Ctrl | Keys.U, Keys.Meta | Keys.U, toggleUnderline),\n    createCommand(Keys.Ctrl | Keys.SPACE, Keys.Meta | Keys.SPACE, clearFormat),\n    createCommand(Keys.Ctrl | Keys.Z, Keys.Meta | Keys.Z, editor => editor.undo()),\n    createCommand(\n        Keys.ALT | Keys.BACKSPACE,\n        Keys.ALT | Keys.BACKSPACE,\n        editor => editor.undo(),\n        Browser.isMac /* Option+Backspace to be handled by browsers on Mac */\n    ),\n    createCommand(Keys.Ctrl | Keys.Y, Keys.Meta | Keys.Shift | Keys.Z, editor => editor.redo()),\n    createCommand(Keys.Ctrl | Keys.PERIOD, Keys.Meta | Keys.PERIOD, toggleBullet),\n    createCommand(Keys.Ctrl | Keys.FORWARD_SLASH, Keys.Meta | Keys.FORWARD_SLASH, toggleNumbering),\n    createCommand(\n        Keys.Ctrl | Keys.Shift | Keys.PERIOD,\n        Keys.Meta | Keys.Shift | Keys.PERIOD,\n        editor => changeFontSize(editor, FontSizeChange.Increase)\n    ),\n    createCommand(\n        Keys.Ctrl | Keys.Shift | Keys.COMMA,\n        Keys.Meta | Keys.Shift | Keys.COMMA,\n        editor => changeFontSize(editor, FontSizeChange.Decrease)\n    ),\n].filter((command): command is ShortcutCommand => !!command);\n\n/**\n * DefaultShortcut edit feature, provides shortcuts for the following features:\n * Ctrl/Meta+B: toggle bold style\n * Ctrl/Meta+I: toggle italic style\n * Ctrl/Meta+U: toggle underline style\n * Ctrl/Meta+Space: clear formatting\n * Alt+Backspace: undo\n * Ctrl/Meta+Z: undo\n * Ctrl+Y/Meta+Shift+Z: redo\n * Ctrl/Meta+PERIOD: toggle bullet list\n * Ctrl/Meta+/: toggle numbering list\n * Ctrl/Meta+Shift+>: increase font size\n * Ctrl/Meta+Shift+<: decrease font size\n */\nconst DefaultShortcut: BuildInEditFeature<PluginKeyboardEvent> = {\n    allowFunctionKeys: true,\n    keys: [\n        Keys.B,\n        Keys.I,\n        Keys.U,\n        Keys.Y,\n        Keys.Z,\n        Keys.COMMA,\n        Keys.PERIOD,\n        Keys.FORWARD_SLASH,\n        Keys.SPACE,\n        Keys.BACKSPACE,\n    ],\n    shouldHandleEvent: cacheGetCommand,\n    handleEvent: (event, editor) => {\n        const command = cacheGetCommand(event);\n        if (command) {\n            command.action(editor);\n            event.rawEvent.preventDefault();\n            event.rawEvent.stopPropagation();\n        }\n    },\n};\n\nfunction cacheGetCommand(event: PluginKeyboardEvent) {\n    return cacheGetEventData(event, 'DEFAULT_SHORT_COMMAND', () => {\n        const e = event.rawEvent;\n        const key =\n            // Need to check AltGraph isn't being pressed since some languages (e.g. Polski) use AltGr\n            // to input some special characters. In that case, ctrlKey and altKey are both true in Edge,\n            // but we should not trigger any shortcut function here. However, we still want to capture\n            // the ALT+BACKSPACE combination.\n            event.eventType == PluginEventType.KeyDown && !e.getModifierState('AltGraph')\n                ? e.which |\n                  (<number>(e.metaKey && Keys.Meta)) |\n                  (<number>(e.shiftKey && Keys.Shift)) |\n                  (<number>(e.ctrlKey && Keys.Ctrl)) |\n                  (<number>(e.altKey && Keys.ALT))\n                : 0;\n        return key && commands.filter(cmd => (Browser.isMac ? cmd.macKey : cmd.winKey) == key)[0];\n    });\n}\n\n/**\n * @internal\n */\nexport const ShortcutFeatures: Record<\n    keyof ShortcutFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    defaultShortcut: DefaultShortcut,\n};\n"]}