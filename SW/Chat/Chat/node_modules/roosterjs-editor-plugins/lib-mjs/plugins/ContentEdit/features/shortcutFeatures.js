import { Browser, cacheGetEventData } from 'roosterjs-editor-dom';
import { changeFontSize, toggleBold, toggleItalic, toggleUnderline, toggleBullet, toggleNumbering, clearFormat, } from 'roosterjs-editor-api';
function createCommand(winKey, macKey, action, disabled) {
    if (disabled === void 0) { disabled = false; }
    if (disabled) {
        return null;
    }
    return {
        winKey: winKey,
        macKey: macKey,
        action: action,
    };
}
var commands = [
    createCommand(4096 /* Ctrl */ | 66 /* B */, 8192 /* Meta */ | 66 /* B */, toggleBold),
    createCommand(4096 /* Ctrl */ | 73 /* I */, 8192 /* Meta */ | 73 /* I */, toggleItalic),
    createCommand(4096 /* Ctrl */ | 85 /* U */, 8192 /* Meta */ | 85 /* U */, toggleUnderline),
    createCommand(4096 /* Ctrl */ | 32 /* SPACE */, 8192 /* Meta */ | 32 /* SPACE */, clearFormat),
    createCommand(4096 /* Ctrl */ | 90 /* Z */, 8192 /* Meta */ | 90 /* Z */, function (editor) { return editor.undo(); }),
    createCommand(18 /* ALT */ | 8 /* BACKSPACE */, 18 /* ALT */ | 8 /* BACKSPACE */, function (editor) { return editor.undo(); }, Browser.isMac /* Option+Backspace to be handled by browsers on Mac */),
    createCommand(4096 /* Ctrl */ | 89 /* Y */, 8192 /* Meta */ | 16384 /* Shift */ | 90 /* Z */, function (editor) { return editor.redo(); }),
    createCommand(4096 /* Ctrl */ | 190 /* PERIOD */, 8192 /* Meta */ | 190 /* PERIOD */, toggleBullet),
    createCommand(4096 /* Ctrl */ | 191 /* FORWARD_SLASH */, 8192 /* Meta */ | 191 /* FORWARD_SLASH */, toggleNumbering),
    createCommand(4096 /* Ctrl */ | 16384 /* Shift */ | 190 /* PERIOD */, 8192 /* Meta */ | 16384 /* Shift */ | 190 /* PERIOD */, function (editor) { return changeFontSize(editor, 0 /* Increase */); }),
    createCommand(4096 /* Ctrl */ | 16384 /* Shift */ | 188 /* COMMA */, 8192 /* Meta */ | 16384 /* Shift */ | 188 /* COMMA */, function (editor) { return changeFontSize(editor, 1 /* Decrease */); }),
].filter(function (command) { return !!command; });
/**
 * DefaultShortcut edit feature, provides shortcuts for the following features:
 * Ctrl/Meta+B: toggle bold style
 * Ctrl/Meta+I: toggle italic style
 * Ctrl/Meta+U: toggle underline style
 * Ctrl/Meta+Space: clear formatting
 * Alt+Backspace: undo
 * Ctrl/Meta+Z: undo
 * Ctrl+Y/Meta+Shift+Z: redo
 * Ctrl/Meta+PERIOD: toggle bullet list
 * Ctrl/Meta+/: toggle numbering list
 * Ctrl/Meta+Shift+>: increase font size
 * Ctrl/Meta+Shift+<: decrease font size
 */
var DefaultShortcut = {
    allowFunctionKeys: true,
    keys: [
        66 /* B */,
        73 /* I */,
        85 /* U */,
        89 /* Y */,
        90 /* Z */,
        188 /* COMMA */,
        190 /* PERIOD */,
        191 /* FORWARD_SLASH */,
        32 /* SPACE */,
        8 /* BACKSPACE */,
    ],
    shouldHandleEvent: cacheGetCommand,
    handleEvent: function (event, editor) {
        var command = cacheGetCommand(event);
        if (command) {
            command.action(editor);
            event.rawEvent.preventDefault();
            event.rawEvent.stopPropagation();
        }
    },
};
function cacheGetCommand(event) {
    return cacheGetEventData(event, 'DEFAULT_SHORT_COMMAND', function () {
        var e = event.rawEvent;
        var key = 
        // Need to check AltGraph isn't being pressed since some languages (e.g. Polski) use AltGr
        // to input some special characters. In that case, ctrlKey and altKey are both true in Edge,
        // but we should not trigger any shortcut function here. However, we still want to capture
        // the ALT+BACKSPACE combination.
        event.eventType == 0 /* KeyDown */ && !e.getModifierState('AltGraph')
            ? e.which |
                (e.metaKey && 8192 /* Meta */) |
                (e.shiftKey && 16384 /* Shift */) |
                (e.ctrlKey && 4096 /* Ctrl */) |
                (e.altKey && 18 /* ALT */)
            : 0;
        return key && commands.filter(function (cmd) { return (Browser.isMac ? cmd.macKey : cmd.winKey) == key; })[0];
    });
}
/**
 * @internal
 */
export var ShortcutFeatures = {
    defaultShortcut: DefaultShortcut,
};
//# sourceMappingURL=shortcutFeatures.js.map