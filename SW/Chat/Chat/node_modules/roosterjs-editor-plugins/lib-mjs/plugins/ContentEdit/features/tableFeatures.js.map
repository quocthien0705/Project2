{"version":3,"file":"tableFeatures.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/tableFeatures.ts"],"names":[],"mappings":"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","sourcesContent":["import { editTable, setIndentation } from 'roosterjs-editor-api';\nimport type {\n    BuildInEditFeature,\n    IEditor,\n    PluginEvent,\n    TableFeatureSettings,\n    PluginKeyboardEvent,\n    TableSelectionRange,\n} from 'roosterjs-editor-types';\nimport {\n    Keys,\n    NodeType,\n    PositionType,\n    TableOperation,\n    SelectionRangeTypes,\n    Indentation,\n    ExperimentalFeatures,\n} from 'roosterjs-editor-types';\nimport {\n    cacheGetEventData,\n    contains,\n    getTagOfNode,\n    isVoidHtmlElement,\n    isWholeTableSelected,\n    Position,\n    VTable,\n} from 'roosterjs-editor-dom';\n\n/**\n * TabInTable edit feature, provides the ability to jump between cells when user press TAB in table\n */\nconst TabInTable: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.TAB],\n    shouldHandleEvent: (event: PluginKeyboardEvent, editor: IEditor) =>\n        cacheGetTableCell(event, editor) && !cacheIsWholeTableSelected(event, editor),\n    handleEvent: (event, editor) => {\n        const shift = event.rawEvent.shiftKey;\n        const td = cacheGetTableCell(event, editor);\n        if (!td) {\n            return;\n        }\n        const vtable = cacheVTable(event, td);\n\n        for (\n            let step = shift ? -1 : 1, row = vtable.row ?? 0, col = (vtable.col ?? 0) + step;\n            ;\n            col += step\n        ) {\n            const tableCells = vtable.cells ?? [];\n            if (col < 0 || col >= tableCells[row].length) {\n                row += step;\n                if (row < 0) {\n                    editor.select(vtable.table, PositionType.Before);\n                    break;\n                } else if (row >= tableCells.length) {\n                    editTable(editor, TableOperation.InsertBelow);\n                    break;\n                }\n                col = shift ? tableCells[row].length - 1 : 0;\n            }\n            const cell = vtable.getCell(row, col);\n            if (cell.td) {\n                const newPos = new Position(cell.td, PositionType.Begin).normalize();\n                editor.select(newPos);\n                break;\n            }\n        }\n        event.rawEvent.preventDefault();\n    },\n};\n\n/**\n * IndentTableOnTab edit feature, provides the ability to indent the table if it is all cells are selected.\n */\nconst IndentTableOnTab: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.TAB],\n    shouldHandleEvent: (event: PluginKeyboardEvent, editor: IEditor) =>\n        cacheGetTableCell(event, editor) && cacheIsWholeTableSelected(event, editor),\n    handleEvent: (event, editor) => {\n        event.rawEvent.preventDefault();\n\n        editor.addUndoSnapshot(() => {\n            const shift = event.rawEvent.shiftKey;\n            const selection = editor.getSelectionRangeEx() as TableSelectionRange;\n            const td = cacheGetTableCell(event, editor);\n            if (!td) {\n                return;\n            }\n            const vtable = cacheVTable(event, td);\n\n            if (shift && editor.getElementAtCursor('blockquote', vtable.table, event)) {\n                setIndentation(editor, Indentation.Decrease);\n            } else if (!shift) {\n                setIndentation(editor, Indentation.Increase);\n            }\n\n            if (selection.coordinates) {\n                editor.select(selection.table, selection.coordinates);\n            }\n        });\n    },\n};\n\n/**\n * UpDownInTable edit feature, provides the ability to jump to cell above/below when user press UP/DOWN\n * in table\n */\nconst UpDownInTable: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.UP, Keys.DOWN],\n    shouldHandleEvent: (event: PluginKeyboardEvent, editor: IEditor) =>\n        cacheGetTableCell(event, editor) && !cacheIsWholeTableSelected(event, editor),\n    handleEvent: (event, editor) => {\n        const td = cacheGetTableCell(event, editor);\n        if (!td) {\n            return;\n        }\n        const vtable = new VTable(td);\n        const isUp = event.rawEvent.which == Keys.UP;\n        const step = isUp ? -1 : 1;\n        const hasShiftKey = event.rawEvent.shiftKey;\n        const selection = editor.getDocument().defaultView?.getSelection();\n        let targetTd: HTMLTableCellElement | null = null;\n\n        if (selection) {\n            const { anchorNode, anchorOffset } = selection;\n\n            for (\n                let row = vtable.row ?? 0;\n                row >= 0 && vtable.cells && row < vtable.cells.length;\n                row += step\n            ) {\n                const cell = vtable.getCell(row, vtable.col ?? 0);\n                if (cell.td && cell.td != td) {\n                    targetTd = cell.td;\n                    break;\n                }\n            }\n\n            editor.runAsync(editor => {\n                const newContainer = editor.getElementAtCursor();\n                if (\n                    contains(vtable.table, newContainer) &&\n                    !contains(td, newContainer, true /*treatSameNodeAsContain*/)\n                ) {\n                    let newPos = targetTd\n                        ? new Position(targetTd, PositionType.Begin)\n                        : new Position(\n                              vtable.table,\n                              isUp ? PositionType.Before : PositionType.After\n                          );\n                    if (hasShiftKey) {\n                        newPos =\n                            newPos.node.nodeType == NodeType.Element &&\n                            isVoidHtmlElement(newPos.node)\n                                ? new Position(\n                                      newPos.node,\n                                      newPos.isAtEnd ? PositionType.After : PositionType.Before\n                                  )\n                                : newPos;\n                        const selection = editor.getDocument().defaultView?.getSelection();\n                        if (anchorNode) {\n                            selection?.setBaseAndExtent(\n                                anchorNode,\n                                anchorOffset,\n                                newPos.node,\n                                newPos.offset\n                            );\n                        }\n                    } else {\n                        editor.select(newPos.normalize());\n                    }\n                }\n            });\n        }\n    },\n};\n\n/**\n * Requires @see ExperimentalFeatures.DeleteTableWithBackspace\n * Delete a table selected with the table selector pressing Backspace key\n */\nconst DeleteTableWithBackspace: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE],\n    shouldHandleEvent: (event: PluginKeyboardEvent, editor: IEditor) =>\n        editor.isFeatureEnabled(ExperimentalFeatures.DeleteTableWithBackspace) &&\n        cacheIsWholeTableSelected(event, editor),\n    handleEvent: (event, editor) => {\n        const td = cacheGetTableCell(event, editor);\n        if (!td) {\n            return;\n        }\n        const vtable = new VTable(td);\n        vtable.edit(TableOperation.DeleteTable);\n        vtable.writeBack();\n    },\n};\n\nfunction cacheGetTableCell(event: PluginEvent, editor: IEditor): HTMLTableCellElement | null {\n    return cacheGetEventData(event, 'TABLE_CELL_FOR_TABLE_FEATURES', () => {\n        const pos = editor.getFocusedPosition();\n        const firstTd = pos && editor.getElementAtCursor('TD,TH,LI', pos.node);\n        return (\n            firstTd && (getTagOfNode(firstTd) == 'LI' ? null : (firstTd as HTMLTableCellElement))\n        );\n    });\n}\n\nfunction cacheIsWholeTableSelected(event: PluginEvent, editor: IEditor) {\n    return cacheGetEventData(event, 'WHOLE_TABLE_SELECTED_FOR_FEATURES', () => {\n        const td = cacheGetTableCell(event, editor);\n        if (!td) {\n            return false;\n        }\n        const vtable = cacheVTable(event, td);\n        const selection = editor.getSelectionRangeEx();\n        return (\n            selection.type == SelectionRangeTypes.TableSelection &&\n            selection.coordinates &&\n            isWholeTableSelected(vtable, selection.coordinates)\n        );\n    });\n}\n\nfunction cacheVTable(event: PluginEvent, td: HTMLTableCellElement) {\n    return cacheGetEventData(event, 'VTABLE_FOR_TABLE_FEATURES', () => {\n        return new VTable(td);\n    });\n}\n\n/**\n * @internal\n */\nexport const TableFeatures: Record<\n    keyof TableFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    tabInTable: TabInTable,\n    upDownInTable: UpDownInTable,\n    indentTableOnTab: IndentTableOnTab,\n    deleteTableWithBackspace: DeleteTableWithBackspace,\n};\n"]}