{"version":3,"file":"WordConverterArguments.js","sourceRoot":"","sources":["../../../../../../packages/roosterjs-editor-plugins/lib/plugins/Paste/wordConverter/WordConverterArguments.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,cAAc,CAAC;AAyChD;;;GAGG;AACH,MAAM,UAAU,4BAA4B,CACxC,KAA8B;IAE9B,OAAO;QACH,KAAK,EAAE,KAAK;QACZ,YAAY,EAAE,CAAC;QACf,KAAK,EAAE,EAAE;QACT,SAAS,EAAE,EAAE;QACb,sBAAsB,EAAE,CAAC,gBAAgB,EAAE,CAAC;QAC5C,iBAAiB,EAAE,IAAI;KAC1B,CAAC;AACN,CAAC","sourcesContent":["import { createLevelLists } from './LevelLists';\nimport type LevelLists from './LevelLists';\nimport type ListItemMetadata from './ListItemMetadata';\nimport type ListMetadata from './ListMetadata';\n\n/**\n * @internal\n * Contains the state of the WordConverter when called back after yielding\n */\nexport default interface WordConverterArguments {\n    /** The list of element nodes being processed */\n    nodes: NodeListOf<HTMLElement>;\n\n    /** The index of the element currently being processed */\n    currentIndex: number;\n\n    /**\n     * Holds the metadata for all the lists we have found\n     * key: unique list id, value: list metadata\n     */\n    lists: { [key: string]: ListMetadata };\n\n    /**\n     * Stores the list item meta data of the items we\n     * have found that need to be converted\n     */\n    listItems: ListItemMetadata[];\n\n    /**\n     * This array holds the list id of the lists we are processing\n     * that are next to each other.. This list will be used to determine\n     * if list items are next to each other or if they are separated...\n     * Separated items are ignored from the conversion\n     */\n\n    currentListIdsByLevels: LevelLists[];\n\n    /** Remembers the item that was last processed  */\n    lastProcessedItem: HTMLElement | null;\n}\n\n/**\n * @internal\n * create an empty WordConverterArguments\n */\nexport function createWordConverterArguments(\n    nodes: NodeListOf<HTMLElement>\n): WordConverterArguments {\n    return {\n        nodes: nodes,\n        currentIndex: 0,\n        lists: {},\n        listItems: [],\n        currentListIdsByLevels: [createLevelLists()],\n        lastProcessedItem: null,\n    };\n}\n"]}