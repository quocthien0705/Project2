{"version":3,"file":"definitionCreators.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-dom/lib/metadata/definitionCreators.ts"],"names":[],"mappings":";;;AAWA;;;;;;;;GAQG;AACH,SAAgB,sBAAsB,CAClC,UAAoB,EACpB,KAAc,EACd,QAAiB,EACjB,QAAiB,EACjB,SAAmB;IAEnB,OAAO;QACH,IAAI,gBAAuB;QAC3B,UAAU,YAAA;QACV,KAAK,OAAA;QACL,QAAQ,UAAA;QACR,QAAQ,UAAA;QACR,SAAS,WAAA;KACZ,CAAC;AACN,CAAC;AAfD,wDAeC;AAED;;;;;;GAMG;AACH,SAAgB,uBAAuB,CACnC,UAAoB,EACpB,KAAe,EACf,SAAmB;IAEnB,OAAO;QACH,IAAI,iBAAwB;QAC5B,UAAU,YAAA;QACV,KAAK,OAAA;QACL,SAAS,WAAA;KACZ,CAAC;AACN,CAAC;AAXD,0DAWC;AAED;;;;;;GAMG;AACH,SAAgB,sBAAsB,CAClC,UAAoB,EACpB,KAAc,EACd,SAAmB;IAEnB,OAAO;QACH,IAAI,gBAAuB;QAC3B,UAAU,YAAA;QACV,KAAK,OAAA;QACL,SAAS,WAAA;KACZ,CAAC;AACN,CAAC;AAXD,wDAWC;AAED;;;;;;GAMG;AACH,SAAgB,qBAAqB,CACjC,OAAsB,EACtB,UAAoB,EACpB,SAAkB,EAClB,SAAkB,EAClB,SAAmB;IAEnB,OAAO;QACH,IAAI,eAAsB;QAC1B,UAAU,YAAA;QACV,OAAO,SAAA;QACP,SAAS,WAAA;QACT,SAAS,WAAA;QACT,SAAS,WAAA;KACZ,CAAC;AACN,CAAC;AAfD,sDAeC;AAED;;;;;;GAMG;AACH,SAAgB,sBAAsB,CAClC,WAAwC,EACxC,UAAoB,EACpB,SAAmB;IAEnB,OAAO;QACH,IAAI,gBAAuB;QAC3B,UAAU,YAAA;QACV,WAAW,aAAA;QACX,SAAS,WAAA;KACZ,CAAC;AACN,CAAC;AAXD,wDAWC","sourcesContent":["import { DefinitionType } from 'roosterjs-editor-types';\nimport type {\n    Definition,\n    NumberDefinition,\n    ArrayDefinition,\n    BooleanDefinition,\n    StringDefinition,\n    ObjectDefinition,\n    ObjectPropertyDefinition,\n} from 'roosterjs-editor-types';\n\n/**\n * Create a number definition\n * @param isOptional Whether this property is optional\n * @param value Optional value of the number\n * @param minValue Optional minimum value\n * @param maxValue Optional maximum value\n * @param allowNull Allow the property to be null\n * @returns The number definition object\n */\nexport function createNumberDefinition(\n    isOptional?: boolean,\n    value?: number,\n    minValue?: number,\n    maxValue?: number,\n    allowNull?: boolean\n): NumberDefinition {\n    return {\n        type: DefinitionType.Number,\n        isOptional,\n        value,\n        maxValue,\n        minValue,\n        allowNull,\n    };\n}\n\n/**\n * Create a boolean definition\n * @param isOptional  Whether this property is optional\n * @param value Optional expected boolean value\n * @param allowNull Allow the property to be null\n * @returns  The boolean definition object\n */\nexport function createBooleanDefinition(\n    isOptional?: boolean,\n    value?: boolean,\n    allowNull?: boolean\n): BooleanDefinition {\n    return {\n        type: DefinitionType.Boolean,\n        isOptional,\n        value,\n        allowNull,\n    };\n}\n\n/**\n * Create a string definition\n * @param isOptional  Whether this property is optional\n * @param value Optional expected string value\n * @param allowNull Allow the property to be null\n * @returns  The string definition object\n */\nexport function createStringDefinition(\n    isOptional?: boolean,\n    value?: string,\n    allowNull?: boolean\n): StringDefinition {\n    return {\n        type: DefinitionType.String,\n        isOptional,\n        value,\n        allowNull,\n    };\n}\n\n/**\n * Create an array definition\n * @param itemDef Definition of each item of the related array\n * @param isOptional  Whether this property is optional\n * @param allowNull Allow the property to be null\n * @returns  The array definition object\n */\nexport function createArrayDefinition<T>(\n    itemDef: Definition<T>,\n    isOptional?: boolean,\n    minLength?: number,\n    maxLength?: number,\n    allowNull?: boolean\n): ArrayDefinition<T[]> {\n    return {\n        type: DefinitionType.Array,\n        isOptional,\n        itemDef,\n        minLength,\n        maxLength,\n        allowNull,\n    };\n}\n\n/**\n * Create an object definition\n * @param propertyDef Definition of each property of the related object\n * @param isOptional  Whether this property is optional\n * @param allowNull Allow the property to be null\n * @returns  The object definition object\n */\nexport function createObjectDefinition<T extends Object>(\n    propertyDef: ObjectPropertyDefinition<T>,\n    isOptional?: boolean,\n    allowNull?: boolean\n): ObjectDefinition<T> {\n    return {\n        type: DefinitionType.Object,\n        isOptional,\n        propertyDef,\n        allowNull,\n    };\n}\n"]}