import { QueryScope } from 'roosterjs-editor-types';
import type { CompatibleQueryScope } from 'roosterjs-editor-types/lib/compatibleTypes';
/**
 * Query HTML elements in the container by a selector string
 * @param container Container element to query from
 * @param selector Selector string to query
 * @param forEachCallback An optional callback to be invoked on each node in query result
 * @param scope The scope of the query, default value is QueryScope.Body
 * @param range The selection range to query with. This is required when scope is not Body
 * @returns HTML Element array of the query result
 */
export default function queryElements(container: ParentNode, selector: string, forEachCallback?: ((node: HTMLElement) => any) | null, scope?: QueryScope | CompatibleQueryScope, range?: Range): HTMLElement[];
