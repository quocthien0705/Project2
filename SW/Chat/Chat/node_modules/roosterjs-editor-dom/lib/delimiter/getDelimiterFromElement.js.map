{"version":3,"file":"getDelimiterFromElement.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-dom/lib/delimiter/getDelimiterFromElement.ts"],"names":[],"mappings":";;AAAA,0DAAqD;AAGrD,IAAM,gBAAgB,GAAG,QAAQ,CAAC;AAElC;;;;GAIG;AACH,SAAwB,uBAAuB,CAAC,OAAgC;IAC5E,IAAI,CAAC,OAAO,EAAE;QACV,OAAO,IAAI,CAAC;KACf;IACD,IACI,IAAA,wBAAc,EAAC,OAAO,EAAE,iBAAiB,CAAC;QAC1C,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,8CAAkC;YACzD,OAAO,CAAC,SAAS,CAAC,QAAQ,gDAAmC,CAAC;QAClE,OAAO,CAAC,WAAW,KAAK,gBAAgB,EAC1C;QACE,OAAO,OAAO,CAAC;KAClB;IAED,OAAO,IAAI,CAAC;AAChB,CAAC;AAdD,0CAcC","sourcesContent":["import safeInstanceOf from '../utils/safeInstanceOf';\nimport { DelimiterClasses } from 'roosterjs-editor-types';\n\nconst ZERO_WIDTH_SPACE = '\\u200B';\n\n/**\n * Retrieves Delimiter information from a provided element.\n * @param element element to try to retrieve a delimiter\n * @returns delimiter info if it is a Delimiter, else null\n */\nexport default function getDelimiterFromElement(element: Node | null | undefined): Element | null {\n    if (!element) {\n        return null;\n    }\n    if (\n        safeInstanceOf(element, 'HTMLSpanElement') &&\n        (element.classList.contains(DelimiterClasses.DELIMITER_AFTER) ||\n            element.classList.contains(DelimiterClasses.DELIMITER_BEFORE)) &&\n        element.textContent === ZERO_WIDTH_SPACE\n    ) {\n        return element;\n    }\n\n    return null;\n}\n"]}