{"version":3,"file":"isNodeInRegion.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-dom/lib/region/isNodeInRegion.ts"],"names":[],"mappings":";;AAAA,8CAAyC;AAIzC;;;;GAIG;AACH,SAAwB,cAAc,CAAC,MAAkB,EAAE,IAAU;IACjE,OAAO,CAAC,CAAC,CACL,MAAM;QACN,IAAA,kBAAQ,EAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC;QAC/B,CAAC,CAAC,MAAM,CAAC,UAAU;YACf,MAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC,IAAI,CAAC,qBAA8B,CAAC;QAClF,CAAC,CAAC,MAAM,CAAC,SAAS;YACd,MAAM,CAAC,SAAS,CAAC,uBAAuB,CAAC,IAAI,CAAC,qBAA8B,CAAC,CACpF,CAAC;AACN,CAAC;AATD,iCASC","sourcesContent":["import contains from '../utils/contains';\nimport { DocumentPosition } from 'roosterjs-editor-types';\nimport type { RegionBase } from 'roosterjs-editor-types';\n\n/**\n * Check if a given node is contained by the given region\n * @param region The region to check from\n * @param node The node or block element to check\n */\nexport default function isNodeInRegion(region: RegionBase, node: Node): boolean {\n    return !!(\n        region &&\n        contains(region.rootNode, node) &&\n        (!region.nodeBefore ||\n            region.nodeBefore.compareDocumentPosition(node) == DocumentPosition.Following) &&\n        (!region.nodeAfter ||\n            region.nodeAfter.compareDocumentPosition(node) == DocumentPosition.Preceding)\n    );\n}\n"]}