import { createBooleanDefinition, createObjectDefinition } from '../metadata/definitionCreators';
import { getMetadata, setMetadata } from '../metadata/metadata';
var BooleanDefinition = createBooleanDefinition(true /** isOptional */, undefined /** value */, true /** allowNull */);
var TableCellFormatMetadata = createObjectDefinition({
    bgColorOverride: BooleanDefinition,
    vAlignOverride: BooleanDefinition,
    borderOverride: BooleanDefinition,
}, false /* isOptional */, true /** allowNull */);
/**
 * @internal
 * Get the format info of a table cell
 * @param cell The table cell to use
 */
export function getTableCellMetadata(cell) {
    return getMetadata(cell, TableCellFormatMetadata);
}
/**
 * Add metadata to a cell
 * @param cell The table cell to add the metadata
 * @param format The format of the table
 */
export function saveTableCellMetadata(cell, format) {
    if (cell && format) {
        setMetadata(cell, format, TableCellFormatMetadata);
    }
}
//# sourceMappingURL=tableCellInfo.js.map