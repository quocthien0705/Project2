import { getMetadata, setMetadata } from '../metadata/metadata';
import { createBooleanDefinition, createNumberDefinition, createObjectDefinition, createStringDefinition, } from '../metadata/definitionCreators';
var NullStringDefinition = createStringDefinition(false /** isOptional */, undefined /** value */, true /** allowNull */);
var BooleanDefinition = createBooleanDefinition(false /** isOptional */);
var TableFormatMetadata = createObjectDefinition({
    topBorderColor: NullStringDefinition,
    bottomBorderColor: NullStringDefinition,
    verticalBorderColor: NullStringDefinition,
    hasHeaderRow: BooleanDefinition,
    headerRowColor: NullStringDefinition,
    hasFirstColumn: BooleanDefinition,
    hasBandedColumns: BooleanDefinition,
    hasBandedRows: BooleanDefinition,
    bgColorEven: NullStringDefinition,
    bgColorOdd: NullStringDefinition,
    tableBorderFormat: createNumberDefinition(false /** isOptional */, undefined /* value */, 0 /* DEFAULT */, 8 /* CLEAR */),
    keepCellShade: createBooleanDefinition(true /** isOptional */),
    verticalAlign: NullStringDefinition,
}, false /* isOptional */, true /** allowNull */);
/**
 * Get the format info of a table
 * If the table does not have a info saved, it will be retrieved from the css styles
 * @param table The table that has the info
 */
export function getTableFormatInfo(table) {
    return getMetadata(table, TableFormatMetadata);
}
/**
 * @internal
 * Save the format info of a table
 * @param table The table the info will be saved
 * @param format The format of the table
 */
export function saveTableInfo(table, format) {
    if (table && format) {
        setMetadata(table, format, TableFormatMetadata);
    }
}
//# sourceMappingURL=tableFormatInfo.js.map