{"version":3,"file":"applyTextStyle.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-dom/lib/inlineElements/applyTextStyle.ts"],"names":[],"mappings":"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","sourcesContent":["import getTagOfNode from '../utils/getTagOfNode';\nimport Position from '../selection/Position';\nimport safeInstanceOf from '../utils/safeInstanceOf';\nimport splitTextNode from '../utils/splitTextNode';\nimport wrap from '../utils/wrap';\nimport { getNextLeafSibling } from '../utils/getLeafSibling';\nimport { NodeType, PositionType } from 'roosterjs-editor-types';\nimport { splitBalancedNodeRange } from '../utils/splitParentNode';\nimport type { NodePosition } from 'roosterjs-editor-types';\n\nconst STYLET_AGS = 'SPAN,B,I,U,EM,STRONG,STRIKE,S,SMALL,SUP,SUB'.split(',');\n\n/**\n * Apply style using a styler function to the given container node in the given range\n * @param container The container node to apply style to\n * @param styler The styler function\n * @param fromPosition From position\n * @param toPosition To position\n */\nexport default function applyTextStyle(\n    container: Node,\n    styler: (node: HTMLElement, isInnerNode?: boolean) => any,\n    from: NodePosition = new Position(container, PositionType.Begin).normalize(),\n    to: NodePosition = new Position(container, PositionType.End).normalize()\n) {\n    let formatNodes: Node[] = [];\n    let fromPosition: NodePosition | null = from;\n    const toPosition: NodePosition | null = to;\n\n    while (fromPosition && toPosition && toPosition.isAfter(fromPosition)) {\n        let formatNode = fromPosition.node;\n        const parentTag = getTagOfNode(formatNode.parentNode);\n\n        // The code below modifies DOM. Need to get the next sibling first otherwise you won't be able to reliably get a good next sibling node\n        const nextNode = getNextLeafSibling(container, formatNode);\n\n        if (formatNode.nodeType == NodeType.Text && ['TR', 'TABLE'].indexOf(parentTag) < 0) {\n            if (formatNode == toPosition.node && !toPosition.isAtEnd) {\n                formatNode = splitTextNode(\n                    <Text>formatNode,\n                    toPosition.offset,\n                    true /*returnFirstPart*/\n                );\n            }\n\n            if (fromPosition.offset > 0) {\n                formatNode = splitTextNode(\n                    <Text>formatNode,\n                    fromPosition.offset,\n                    false /*returnFirstPart*/\n                );\n            }\n\n            formatNodes.push(formatNode);\n        }\n\n        fromPosition = nextNode && new Position(nextNode, PositionType.Begin);\n    }\n\n    if (formatNodes.length > 0) {\n        if (formatNodes.every(node => node.parentNode == formatNodes[0].parentNode)) {\n            const newNode = formatNodes.shift()!;\n            formatNodes.forEach(node => {\n                const newNodeValue = (newNode.nodeValue || '') + (node.nodeValue || '');\n                newNode.nodeValue = newNodeValue;\n                node.parentNode?.removeChild(node);\n            });\n            formatNodes = [newNode];\n        }\n\n        formatNodes.forEach(startingNode => {\n            // When apply style within style tags like B/I/U/..., we split the tag and apply outside them\n            // So that the inner style tag such as U, STRIKE can inherit the style we added\n            let node: Node | null = startingNode;\n            while (\n                node &&\n                getTagOfNode(node) != 'SPAN' &&\n                STYLET_AGS.indexOf(getTagOfNode(node.parentNode)) >= 0\n            ) {\n                callStylerWithInnerNode(node, styler);\n                node = splitBalancedNodeRange(node);\n            }\n\n            if (node && getTagOfNode(node) != 'SPAN') {\n                callStylerWithInnerNode(node, styler);\n                node = wrap(node, 'SPAN');\n            }\n\n            if (safeInstanceOf(node, 'HTMLElement')) {\n                styler(node);\n            }\n        });\n    }\n}\n\nfunction callStylerWithInnerNode(\n    node: Node,\n    styler: (node: HTMLElement, isInnerNode?: boolean) => any\n) {\n    if (node && node.nodeType == NodeType.Element) {\n        styler(node as HTMLElement, true /*isInnerNode*/);\n    }\n}\n"]}