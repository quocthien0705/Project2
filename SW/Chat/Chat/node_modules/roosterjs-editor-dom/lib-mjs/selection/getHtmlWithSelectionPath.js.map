{"version":3,"file":"getHtmlWithSelectionPath.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-dom/lib/selection/getHtmlWithSelectionPath.ts"],"names":[],"mappings":"AAAA,OAAO,YAAY,MAAM,uBAAuB,CAAC;AACjD,OAAO,gBAAgB,MAAM,oBAAoB,CAAC;AAElD;;;;;;GAMG;AACH,MAAM,CAAC,OAAO,UAAU,wBAAwB,CAC5C,QAAwC,EACxC,KAAmB;IAEnB,IAAI,CAAC,QAAQ,EAAE;QACX,OAAO,EAAE,CAAC;KACb;IAED,IAAM,OAAO,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;IACvC,IAAM,aAAa,GAAG,KAAK,IAAI,gBAAgB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAEjE,OAAO,aAAa,CAAC,CAAC,CAAI,OAAO,YAAO,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,QAAK,CAAC,CAAC,CAAC,OAAO,CAAC;AACzF,CAAC","sourcesContent":["import getInnerHTML from '../utils/getInnerHTML';\nimport getSelectionPath from './getSelectionPath';\n\n/**\n * Get inner Html of a root node with a selection path which can be used for restore selection.\n * The result string can be used by setHtmlWithSelectionPath() to restore the HTML and selection.\n * @param rootNode Root node to get inner Html from\n * @param range The range of selection. If pass null, no selection path will be added\n * @returns Inner HTML of the root node, followed by HTML comment contains selection path if the given range is valid\n */\nexport default function getHtmlWithSelectionPath(\n    rootNode: HTMLElement | DocumentFragment,\n    range: Range | null\n): string {\n    if (!rootNode) {\n        return '';\n    }\n\n    const content = getInnerHTML(rootNode);\n    const selectionPath = range && getSelectionPath(rootNode, range);\n\n    return selectionPath ? `${content}<!--${JSON.stringify(selectionPath)}-->` : content;\n}\n"]}