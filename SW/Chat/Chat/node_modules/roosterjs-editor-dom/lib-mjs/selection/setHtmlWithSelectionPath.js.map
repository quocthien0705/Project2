{"version":3,"file":"setHtmlWithSelectionPath.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-dom/lib/selection/setHtmlWithSelectionPath.ts"],"names":[],"mappings":"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","sourcesContent":["import createRange from './createRange';\r\nimport safeInstanceOf from '../utils/safeInstanceOf';\r\nimport validate from '../metadata/validate';\r\nimport { SelectionRangeTypes } from 'roosterjs-editor-types';\r\nimport {\r\n    createArrayDefinition,\r\n    createBooleanDefinition,\r\n    createNumberDefinition,\r\n    createObjectDefinition,\r\n    createStringDefinition,\r\n} from '../metadata/definitionCreators';\r\nimport type {\r\n    ContentMetadata,\r\n    TrustedHTMLHandler,\r\n    ImageContentMetadata,\r\n    NormalContentMetadata,\r\n    TableContentMetadata,\r\n    Coordinates,\r\n} from 'roosterjs-editor-types';\r\nconst NumberArrayDefinition = createArrayDefinition<number>(createNumberDefinition());\r\n\r\nconst CoordinatesDefinition = createObjectDefinition<Coordinates>({\r\n    x: createNumberDefinition(),\r\n    y: createNumberDefinition(),\r\n});\r\n\r\nconst IsDarkModeDefinition = createBooleanDefinition(true /*isOptional*/);\r\n\r\nconst NormalContentMetadataDefinition = createObjectDefinition<NormalContentMetadata>({\r\n    type: createNumberDefinition(true /*isOptional*/, SelectionRangeTypes.Normal),\r\n    isDarkMode: IsDarkModeDefinition,\r\n    start: NumberArrayDefinition,\r\n    end: NumberArrayDefinition,\r\n});\r\n\r\nconst TableContentMetadataDefinition = createObjectDefinition<TableContentMetadata>({\r\n    type: createNumberDefinition(false /*isOptional*/, SelectionRangeTypes.TableSelection),\r\n    isDarkMode: IsDarkModeDefinition,\r\n    tableId: createStringDefinition(),\r\n    firstCell: CoordinatesDefinition,\r\n    lastCell: CoordinatesDefinition,\r\n});\r\n\r\nconst ImageContentMetadataDefinition = createObjectDefinition<ImageContentMetadata>({\r\n    type: createNumberDefinition(false /*isOptional*/, SelectionRangeTypes.ImageSelection),\r\n    isDarkMode: IsDarkModeDefinition,\r\n    imageId: createStringDefinition(),\r\n});\r\n\r\n/**\r\n * @deprecated Use setHtmlWithMetadata instead\r\n * Restore inner HTML of a root element from given html string. If the string contains selection path,\r\n * remove the selection path and return a range represented by the path\r\n * @param root The root element\r\n * @param html The HTML to restore\r\n * @param trustedHTMLHandler An optional trusted HTML handler to convert HTML string to security string\r\n * @returns A selection range if the html contains a valid selection path, otherwise null\r\n */\r\nexport default function setHtmlWithSelectionPath(\r\n    rootNode: HTMLElement,\r\n    html: string,\r\n    trustedHTMLHandler?: TrustedHTMLHandler\r\n): Range | null {\r\n    const metadata = setHtmlWithMetadata(rootNode, html, trustedHTMLHandler);\r\n    return metadata?.type == SelectionRangeTypes.Normal\r\n        ? createRange(rootNode, metadata.start, metadata.end)\r\n        : null;\r\n}\r\n\r\n/**\r\n * Restore inner HTML of a root element from given html string. If the string contains metadata,\r\n * remove it from DOM tree and return the metadata\r\n * @param root The root element\r\n * @param html The HTML to restore\r\n * @param trustedHTMLHandler An optional trusted HTML handler to convert HTML string to security string\r\n * @returns Content metadata if any, or undefined\r\n */\r\nexport function setHtmlWithMetadata(\r\n    rootNode: HTMLElement,\r\n    html: string,\r\n    trustedHTMLHandler?: TrustedHTMLHandler\r\n): ContentMetadata | undefined {\r\n    if (!rootNode) {\r\n        return undefined;\r\n    }\r\n\r\n    html = html || '';\r\n    rootNode.innerHTML = trustedHTMLHandler?.(html) || html;\r\n\r\n    return extractContentMetadata(rootNode);\r\n}\r\n\r\n/**\r\n * Extract content metadata from DOM tree\r\n * @param rootNode Root of the DOM tree\r\n * @returns If there is a valid content metadata node in the give DOM tree, return this metadata object, otherwise undefined\r\n */\r\nexport function extractContentMetadata(rootNode: HTMLElement): ContentMetadata | undefined {\r\n    const potentialMetadataComment = rootNode.lastChild;\r\n\r\n    if (safeInstanceOf(potentialMetadataComment, 'Comment')) {\r\n        try {\r\n            const obj = JSON.parse(potentialMetadataComment.nodeValue || '');\r\n\r\n            if (\r\n                validate(obj, NormalContentMetadataDefinition) ||\r\n                validate(obj, TableContentMetadataDefinition) ||\r\n                validate(obj, ImageContentMetadataDefinition)\r\n            ) {\r\n                rootNode.removeChild(potentialMetadataComment);\r\n                obj.type = typeof obj.type === 'undefined' ? SelectionRangeTypes.Normal : obj.type;\r\n                obj.isDarkMode = obj.isDarkMode || false;\r\n\r\n                return obj;\r\n            }\r\n        } catch {}\r\n    }\r\n\r\n    return undefined;\r\n}\r\n"]}