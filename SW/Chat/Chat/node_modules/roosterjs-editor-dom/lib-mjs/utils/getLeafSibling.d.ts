/**
 * @internal
 * This walks forwards/backwards DOM tree to get next meaningful node
 * @param rootNode Root node to scope the leaf sibling node
 * @param startNode current node to get sibling node from
 * @param isNext True to get next leaf sibling node, false to get previous leaf sibling node
 * @param skipTags (Optional) tags that child elements will be skipped
 * @param ignoreSpace (Optional) Ignore pure space text node when check if the node should be skipped
 */
export declare function getLeafSibling(rootNode: Node, startNode: Node, isNext: boolean, skipTags?: string[], ignoreSpace?: boolean): Node | null;
/**
 * This walks forwards DOM tree to get next meaningful node
 * @param rootNode Root node to scope the leaf sibling node
 * @param startNode current node to get sibling node from
 * @param skipTags (Optional) tags that child elements will be skipped
 */
export declare function getNextLeafSibling(rootNode: Node, startNode: Node, skipTags?: string[]): Node | null;
/**
 * This walks backwards DOM tree to get next meaningful node
 * @param rootNode Root node to scope the leaf sibling node
 * @param startNode current node to get sibling node from
 * @param skipTags (Optional) tags that child elements will be skipped
 */
export declare function getPreviousLeafSibling(rootNode: Node, startNode: Node, skipTags?: string[]): Node | null;
