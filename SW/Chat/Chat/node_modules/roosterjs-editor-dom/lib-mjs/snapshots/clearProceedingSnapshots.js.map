{"version":3,"file":"clearProceedingSnapshots.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-dom/lib/snapshots/clearProceedingSnapshots.ts"],"names":[],"mappings":"AAAA,OAAO,sBAAsB,MAAM,0BAA0B,CAAC;AAkB9D;;;GAGG;AACH,MAAM,CAAC,OAAO,UAAU,wBAAwB,CAC5C,SAAuB,EACvB,SAAmC;IAEnC,SAAS,GAAG,SAAS,IAAI,CAAC,UAAA,GAAG,YAAI,OAAA,CAAA,MAAe,GAAK,0CAAE,MAAM,KAAI,CAAC,CAAA,EAAA,CAAC,CAAC;IACpE,IAAI,sBAAsB,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE;QACtC,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,YAAY,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1E,WAAW,IAAI,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SACpD;QACD,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QACvD,SAAS,CAAC,SAAS,IAAI,WAAW,CAAC;QACnC,SAAS,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;KACpC;AACL,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,0BAA0B,CAAC,SAA8B;IACrE,wBAAwB,CAAC,SAAS,EAAE,UAAA,CAAC,YAAI,OAAA,CAAA,MAAA,CAAC,CAAC,IAAI,0CAAE,MAAM,KAAI,CAAC,CAAA,EAAA,CAAC,CAAC;AAClE,CAAC","sourcesContent":["import canMoveCurrentSnapshot from './canMoveCurrentSnapshot';\r\nimport type { Snapshot, Snapshots } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Clear all snapshots after the current one\r\n * @param snapshots The snapshots data structure to clear\r\n */\r\nexport default function clearProceedingSnapshots(snapshots: Snapshots<string>): void;\r\n\r\n/**\r\n * Clear all snapshots after the current one\r\n * @param snapshots The snapshots data structure to clear\r\n */\r\nexport default function clearProceedingSnapshots<T>(\r\n    snapshots: Snapshots<T>,\r\n    getLength: (snapshot: T) => number\r\n): void;\r\n\r\n/**\r\n * Clear all snapshots after the current one\r\n * @param snapshots The snapshots data structure to clear\r\n */\r\nexport default function clearProceedingSnapshots<T>(\r\n    snapshots: Snapshots<T>,\r\n    getLength?: (snapshot: T) => number\r\n) {\r\n    getLength = getLength || (str => (<string>(<any>str))?.length || 0);\r\n    if (canMoveCurrentSnapshot(snapshots, 1)) {\r\n        let removedSize = 0;\r\n        for (let i = snapshots.currentIndex + 1; i < snapshots.snapshots.length; i++) {\r\n            removedSize += getLength(snapshots.snapshots[i]);\r\n        }\r\n        snapshots.snapshots.splice(snapshots.currentIndex + 1);\r\n        snapshots.totalSize -= removedSize;\r\n        snapshots.autoCompleteIndex = -1;\r\n    }\r\n}\r\n\r\n/**\r\n * Clear all snapshots after the current one\r\n * @param snapshots The snapshots data structure to clear\r\n */\r\nexport function clearProceedingSnapshotsV2(snapshots: Snapshots<Snapshot>) {\r\n    clearProceedingSnapshots(snapshots, s => s.html?.length || 0);\r\n}\r\n"]}