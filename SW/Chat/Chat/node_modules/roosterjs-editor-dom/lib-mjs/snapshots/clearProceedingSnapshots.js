import canMoveCurrentSnapshot from './canMoveCurrentSnapshot';
/**
 * Clear all snapshots after the current one
 * @param snapshots The snapshots data structure to clear
 */
export default function clearProceedingSnapshots(snapshots, getLength) {
    getLength = getLength || (function (str) { var _a; return ((_a = str) === null || _a === void 0 ? void 0 : _a.length) || 0; });
    if (canMoveCurrentSnapshot(snapshots, 1)) {
        var removedSize = 0;
        for (var i = snapshots.currentIndex + 1; i < snapshots.snapshots.length; i++) {
            removedSize += getLength(snapshots.snapshots[i]);
        }
        snapshots.snapshots.splice(snapshots.currentIndex + 1);
        snapshots.totalSize -= removedSize;
        snapshots.autoCompleteIndex = -1;
    }
}
/**
 * Clear all snapshots after the current one
 * @param snapshots The snapshots data structure to clear
 */
export function clearProceedingSnapshotsV2(snapshots) {
    clearProceedingSnapshots(snapshots, function (s) { var _a; return ((_a = s.html) === null || _a === void 0 ? void 0 : _a.length) || 0; });
}
//# sourceMappingURL=clearProceedingSnapshots.js.map