{"version":3,"file":"moveCurrentSnapshot.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-dom/lib/snapshots/moveCurrentSnapshot.ts"],"names":[],"mappings":"AAAA,OAAO,sBAAsB,MAAM,0BAA0B,CAAC;AAG9D;;;;;GAKG;AACH,MAAM,CAAC,OAAO,UAAU,mBAAmB,CACvC,SAAuB,EACvB,IAAY;IAEZ,IAAI,sBAAsB,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE;QACzC,SAAS,CAAC,YAAY,IAAI,IAAI,CAAC;QAC/B,SAAS,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;QACjC,OAAO,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;KACtD;SAAM;QACH,OAAO,IAAI,CAAC;KACf;AACL,CAAC;AAED;;;GAGG;AACH,MAAM,CAAC,IAAM,mBAAmB,GAAG,mBAAmB,CAAC","sourcesContent":["import canMoveCurrentSnapshot from './canMoveCurrentSnapshot';\nimport type { Snapshots } from 'roosterjs-editor-types';\n\n/**\n * Move current snapshot with the given step if can move this step. Otherwise no action and return null\n * @param snapshots The snapshots data structure to move\n * @param step The step to move\n * @returns If can move with the given step, returns the snapshot after move, otherwise null\n */\nexport default function moveCurrentSnapshot<T = string>(\n    snapshots: Snapshots<T>,\n    step: number\n): T | null {\n    if (canMoveCurrentSnapshot(snapshots, step)) {\n        snapshots.currentIndex += step;\n        snapshots.autoCompleteIndex = -1;\n        return snapshots.snapshots[snapshots.currentIndex];\n    } else {\n        return null;\n    }\n}\n\n/**\n * @deprecated\n * For backward compatibility only\n */\nexport const moveCurrentSnapsnot = moveCurrentSnapshot;\n"]}