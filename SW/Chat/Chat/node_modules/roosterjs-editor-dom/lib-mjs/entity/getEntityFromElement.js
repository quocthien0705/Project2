/**
 * Get Entity object from an entity root element
 * @param element The entity root element. If this element is not an entity root element,
 * it will return null
 */
export default function getEntityFromElement(element) {
    var _a;
    var isEntity = false;
    var type = '';
    var id = '';
    var isReadonly = false;
    (_a = element === null || element === void 0 ? void 0 : element.className) === null || _a === void 0 ? void 0 : _a.split(' ').forEach(function (name) {
        if (name == "_Entity" /* ENTITY_INFO_NAME */) {
            isEntity = true;
        }
        else if (name.indexOf("_EType_" /* ENTITY_TYPE_PREFIX */) == 0) {
            type = name.substr("_EType_" /* ENTITY_TYPE_PREFIX */.length);
        }
        else if (name.indexOf("_EId_" /* ENTITY_ID_PREFIX */) == 0) {
            id = name.substr("_EId_" /* ENTITY_ID_PREFIX */.length);
        }
        else if (name.indexOf("_EReadonly_" /* ENTITY_READONLY_PREFIX */) == 0) {
            isReadonly = name.substr("_EReadonly_" /* ENTITY_READONLY_PREFIX */.length) == '1';
        }
    });
    return isEntity
        ? {
            wrapper: element,
            id: id,
            type: type,
            isReadonly: isReadonly,
        }
        : null;
}
//# sourceMappingURL=getEntityFromElement.js.map