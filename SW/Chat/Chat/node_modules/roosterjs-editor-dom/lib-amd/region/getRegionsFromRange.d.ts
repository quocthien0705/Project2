import { RegionType } from 'roosterjs-editor-types';
import type { Region } from 'roosterjs-editor-types';
import type { CompatibleRegionType } from 'roosterjs-editor-types/lib/compatibleTypes';
/**
 * Get regions impacted by the given range under the root node
 * @param root Root node to get regions from
 * @param range A selection range. Regions will be created according to this range. Each region will be
 * fully or partially covered by this range.
 * @param type Type of region. Currently we only support TABLE region.
 */
export default function getRegionsFromRange(root: HTMLElement, range: Range, type: RegionType | CompatibleRegionType): Region[];
/**
 * @internal export for test only
 */
export declare function getRegionCreator(fullRange: Range, skipTags: string[]): (rootNode: HTMLElement, nodeBefore?: Node, nodeAfter?: Node) => Region | null;
