{"version":3,"file":"tableFormatInfo.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-dom/lib/table/tableFormatInfo.ts"],"names":[],"mappings":";;;;IAUA,IAAM,oBAAoB,GAAG,IAAA,2CAAsB,EAC/C,KAAK,CAAC,iBAAiB,EACvB,SAAS,CAAC,YAAY,EACtB,IAAI,CAAC,gBAAgB,CACxB,CAAC;IAEF,IAAM,iBAAiB,GAAG,IAAA,4CAAuB,EAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;IAE3E,IAAM,mBAAmB,GAAG,IAAA,2CAAsB,EAC9C;QACI,cAAc,EAAE,oBAAoB;QACpC,iBAAiB,EAAE,oBAAoB;QACvC,mBAAmB,EAAE,oBAAoB;QACzC,YAAY,EAAE,iBAAiB;QAC/B,cAAc,EAAE,oBAAoB;QACpC,cAAc,EAAE,iBAAiB;QACjC,gBAAgB,EAAE,iBAAiB;QACnC,aAAa,EAAE,iBAAiB;QAChC,WAAW,EAAE,oBAAoB;QACjC,UAAU,EAAE,oBAAoB;QAChC,iBAAiB,EAAE,IAAA,2CAAsB,EACrC,KAAK,CAAC,iBAAiB,EACvB,SAAS,CAAC,WAAW,iCAGxB;QACD,aAAa,EAAE,IAAA,4CAAuB,EAAC,IAAI,CAAC,iBAAiB,CAAC;QAC9D,aAAa,EAAE,oBAAoB;KACtC,EACD,KAAK,CAAC,gBAAgB,EACtB,IAAI,CAAC,gBAAgB,CACxB,CAAC;IAEF;;;;OAIG;IACH,SAAgB,kBAAkB,CAAC,KAAuB;QACtD,OAAO,IAAA,sBAAW,EAAC,KAAK,EAAE,mBAAmB,CAAC,CAAC;IACnD,CAAC;IAFD,gDAEC;IAED;;;;;OAKG;IACH,SAAgB,aAAa,CAAC,KAAuB,EAAE,MAAmB;QACtE,IAAI,KAAK,IAAI,MAAM,EAAE;YACjB,IAAA,sBAAW,EAAC,KAAK,EAAE,MAAM,EAAE,mBAAmB,CAAC,CAAC;SACnD;IACL,CAAC;IAJD,sCAIC","sourcesContent":["import { getMetadata, setMetadata } from '../metadata/metadata';\nimport { TableBorderFormat } from 'roosterjs-editor-types';\nimport type { TableFormat } from 'roosterjs-editor-types';\nimport {\n    createBooleanDefinition,\n    createNumberDefinition,\n    createObjectDefinition,\n    createStringDefinition,\n} from '../metadata/definitionCreators';\n\nconst NullStringDefinition = createStringDefinition(\n    false /** isOptional */,\n    undefined /** value */,\n    true /** allowNull */\n);\n\nconst BooleanDefinition = createBooleanDefinition(false /** isOptional */);\n\nconst TableFormatMetadata = createObjectDefinition<Required<TableFormat>>(\n    {\n        topBorderColor: NullStringDefinition,\n        bottomBorderColor: NullStringDefinition,\n        verticalBorderColor: NullStringDefinition,\n        hasHeaderRow: BooleanDefinition,\n        headerRowColor: NullStringDefinition,\n        hasFirstColumn: BooleanDefinition,\n        hasBandedColumns: BooleanDefinition,\n        hasBandedRows: BooleanDefinition,\n        bgColorEven: NullStringDefinition,\n        bgColorOdd: NullStringDefinition,\n        tableBorderFormat: createNumberDefinition(\n            false /** isOptional */,\n            undefined /* value */,\n            TableBorderFormat.DEFAULT /* first table border format, TODO: Use Min/Max to specify valid values */,\n            TableBorderFormat.CLEAR /* last table border format, , TODO: Use Min/Max to specify valid values */\n        ),\n        keepCellShade: createBooleanDefinition(true /** isOptional */),\n        verticalAlign: NullStringDefinition,\n    },\n    false /* isOptional */,\n    true /** allowNull */\n);\n\n/**\n * Get the format info of a table\n * If the table does not have a info saved, it will be retrieved from the css styles\n * @param table The table that has the info\n */\nexport function getTableFormatInfo(table: HTMLTableElement) {\n    return getMetadata(table, TableFormatMetadata);\n}\n\n/**\n * @internal\n * Save the format info of a table\n * @param table The table the info will be saved\n * @param format The format of the table\n */\nexport function saveTableInfo(table: HTMLTableElement, format: TableFormat) {\n    if (table && format) {\n        setMetadata(table, format, TableFormatMetadata);\n    }\n}\n"]}