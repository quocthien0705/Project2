{"version":3,"file":"tableCellInfo.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-dom/lib/table/tableCellInfo.ts"],"names":[],"mappings":";;;;IAIA,IAAM,iBAAiB,GAAG,IAAA,4CAAuB,EAC7C,IAAI,CAAC,iBAAiB,EACtB,SAAS,CAAC,YAAY,EACtB,IAAI,CAAC,gBAAgB,CACxB,CAAC;IAEF,IAAM,uBAAuB,GAAG,IAAA,2CAAsB,EAClD;QACI,eAAe,EAAE,iBAAiB;QAClC,cAAc,EAAE,iBAAiB;QACjC,cAAc,EAAE,iBAAiB;KACpC,EACD,KAAK,CAAC,gBAAgB,EACtB,IAAI,CAAC,gBAAgB,CACxB,CAAC;IAEF;;;;OAIG;IACH,SAAgB,oBAAoB,CAAC,IAA0B;QAC3D,OAAO,IAAA,sBAAW,EAAC,IAAI,EAAE,uBAAuB,CAAC,CAAC;IACtD,CAAC;IAFD,oDAEC;IAED;;;;OAIG;IACH,SAAgB,qBAAqB,CAAC,IAA0B,EAAE,MAA+B;QAC7F,IAAI,IAAI,IAAI,MAAM,EAAE;YAChB,IAAA,sBAAW,EAAC,IAAI,EAAE,MAAM,EAAE,uBAAuB,CAAC,CAAC;SACtD;IACL,CAAC;IAJD,sDAIC","sourcesContent":["import { createBooleanDefinition, createObjectDefinition } from '../metadata/definitionCreators';\nimport { getMetadata, setMetadata } from '../metadata/metadata';\nimport type { TableCellMetadataFormat } from 'roosterjs-editor-types';\n\nconst BooleanDefinition = createBooleanDefinition(\n    true /** isOptional */,\n    undefined /** value */,\n    true /** allowNull */\n);\n\nconst TableCellFormatMetadata = createObjectDefinition<Required<TableCellMetadataFormat>>(\n    {\n        bgColorOverride: BooleanDefinition,\n        vAlignOverride: BooleanDefinition,\n        borderOverride: BooleanDefinition,\n    },\n    false /* isOptional */,\n    true /** allowNull */\n);\n\n/**\n * @internal\n * Get the format info of a table cell\n * @param cell The table cell to use\n */\nexport function getTableCellMetadata(cell: HTMLTableCellElement) {\n    return getMetadata(cell, TableCellFormatMetadata);\n}\n\n/**\n * Add metadata to a cell\n * @param cell The table cell to add the metadata\n * @param format The format of the table\n */\nexport function saveTableCellMetadata(cell: HTMLTableCellElement, format: TableCellMetadataFormat) {\n    if (cell && format) {\n        setMetadata(cell, format, TableCellFormatMetadata);\n    }\n}\n"]}