define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * Split a text node into two parts by an offset number, and return one of them
     * @param textNode The text node to split
     * @param offset The offset number to split at
     * @param returnFirstPart True to return the first part, then the passed in textNode will become the second part.
     * Otherwise return the second part, and the passed in textNode will become the first part
     */
    function splitTextNode(textNode, offset, returnFirstPart) {
        var _a, _b, _c;
        var firstPart = ((_a = textNode.nodeValue) === null || _a === void 0 ? void 0 : _a.substring(0, offset)) || '';
        var secondPart = ((_b = textNode.nodeValue) === null || _b === void 0 ? void 0 : _b.substring(offset)) || '';
        var newNode = textNode.ownerDocument.createTextNode(returnFirstPart ? firstPart : secondPart);
        textNode.nodeValue = returnFirstPart ? secondPart : firstPart;
        (_c = textNode.parentNode) === null || _c === void 0 ? void 0 : _c.insertBefore(newNode, returnFirstPart ? textNode : textNode.nextSibling);
        return newNode;
    }
    exports.default = splitTextNode;
});
//# sourceMappingURL=splitTextNode.js.map