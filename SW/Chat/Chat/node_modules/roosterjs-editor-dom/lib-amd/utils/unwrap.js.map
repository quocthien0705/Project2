{"version":3,"file":"unwrap.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-dom/lib/utils/unwrap.ts"],"names":[],"mappings":";;;IAAA;;;OAGG;IACH,SAAwB,MAAM,CAAC,IAAU;QACrC,+BAA+B;QAC/B,IAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;QACjD,IAAI,CAAC,UAAU,EAAE;YACb,OAAO,IAAI,CAAC;SACf;QAED,OAAO,IAAI,CAAC,UAAU,EAAE;YACpB,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;SAClD;QAED,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC7B,OAAO,UAAU,CAAC;IACtB,CAAC;IAbD,yBAaC","sourcesContent":["/**\r\n * Removes the node and keep all children in place, return the parentNode where the children are attached\r\n * @param node the node to remove\r\n */\r\nexport default function unwrap(node: Node): Node | null {\r\n    // Unwrap requires a parentNode\r\n    const parentNode = node ? node.parentNode : null;\r\n    if (!parentNode) {\r\n        return null;\r\n    }\r\n\r\n    while (node.firstChild) {\r\n        parentNode.insertBefore(node.firstChild, node);\r\n    }\r\n\r\n    parentNode.removeChild(node);\r\n    return parentNode;\r\n}\r\n"]}