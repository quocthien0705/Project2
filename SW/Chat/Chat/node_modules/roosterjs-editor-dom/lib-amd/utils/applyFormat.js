define(["require", "exports", "./setColor"], function (require, exports, setColor_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * Apply format to an HTML element
     * @param element The HTML element to apply format to
     * @param format The format to apply
     * @param isDarkMode Whether the content should be formatted in dark mode
     * @param darkColorHandler An optional dark color handler object. When it is passed, we will use this handler to do variable-based dark color instead of original dataset base dark color
     */
    function applyFormat(element, format, isDarkMode, darkColorHandler) {
        if (format) {
            var elementStyle = element.style;
            var fontFamily = format.fontFamily, fontSize = format.fontSize, textColor = format.textColor, textColors = format.textColors, backgroundColor = format.backgroundColor, backgroundColors = format.backgroundColors, bold = format.bold, italic = format.italic, underline = format.underline;
            if (fontFamily) {
                elementStyle.fontFamily = fontFamily;
            }
            if (fontSize) {
                elementStyle.fontSize = fontSize;
            }
            if (textColors) {
                (0, setColor_1.default)(element, textColors, false /*isBackground*/, isDarkMode, false /*shouldAdaptFontColor*/, darkColorHandler);
            }
            else if (textColor) {
                (0, setColor_1.default)(element, textColor, false /*isBackground*/, isDarkMode, false /*shouldAdaptFontColor*/, darkColorHandler);
            }
            if (backgroundColors) {
                (0, setColor_1.default)(element, backgroundColors, true /*isBackground*/, isDarkMode, false /*shouldAdaptFontColor*/, darkColorHandler);
            }
            else if (backgroundColor) {
                (0, setColor_1.default)(element, backgroundColor, true /*isBackground*/, isDarkMode, false /*shouldAdaptFontColor*/, darkColorHandler);
            }
            if (bold) {
                elementStyle.fontWeight = 'bold';
            }
            if (italic) {
                elementStyle.fontStyle = 'italic';
            }
            if (underline) {
                elementStyle.textDecoration = 'underline';
            }
        }
    }
    exports.default = applyFormat;
});
//# sourceMappingURL=applyFormat.js.map