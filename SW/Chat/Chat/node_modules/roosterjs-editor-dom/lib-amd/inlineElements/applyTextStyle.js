define(["require", "exports", "../utils/getTagOfNode", "../selection/Position", "../utils/safeInstanceOf", "../utils/splitTextNode", "../utils/wrap", "../utils/getLeafSibling", "../utils/splitParentNode"], function (require, exports, getTagOfNode_1, Position_1, safeInstanceOf_1, splitTextNode_1, wrap_1, getLeafSibling_1, splitParentNode_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var STYLET_AGS = 'SPAN,B,I,U,EM,STRONG,STRIKE,S,SMALL,SUP,SUB'.split(',');
    /**
     * Apply style using a styler function to the given container node in the given range
     * @param container The container node to apply style to
     * @param styler The styler function
     * @param fromPosition From position
     * @param toPosition To position
     */
    function applyTextStyle(container, styler, from, to) {
        if (from === void 0) { from = new Position_1.default(container, 0 /* Begin */).normalize(); }
        if (to === void 0) { to = new Position_1.default(container, -1 /* End */).normalize(); }
        var formatNodes = [];
        var fromPosition = from;
        var toPosition = to;
        while (fromPosition && toPosition && toPosition.isAfter(fromPosition)) {
            var formatNode = fromPosition.node;
            var parentTag = (0, getTagOfNode_1.default)(formatNode.parentNode);
            // The code below modifies DOM. Need to get the next sibling first otherwise you won't be able to reliably get a good next sibling node
            var nextNode = (0, getLeafSibling_1.getNextLeafSibling)(container, formatNode);
            if (formatNode.nodeType == 3 /* Text */ && ['TR', 'TABLE'].indexOf(parentTag) < 0) {
                if (formatNode == toPosition.node && !toPosition.isAtEnd) {
                    formatNode = (0, splitTextNode_1.default)(formatNode, toPosition.offset, true /*returnFirstPart*/);
                }
                if (fromPosition.offset > 0) {
                    formatNode = (0, splitTextNode_1.default)(formatNode, fromPosition.offset, false /*returnFirstPart*/);
                }
                formatNodes.push(formatNode);
            }
            fromPosition = nextNode && new Position_1.default(nextNode, 0 /* Begin */);
        }
        if (formatNodes.length > 0) {
            if (formatNodes.every(function (node) { return node.parentNode == formatNodes[0].parentNode; })) {
                var newNode_1 = formatNodes.shift();
                formatNodes.forEach(function (node) {
                    var _a;
                    var newNodeValue = (newNode_1.nodeValue || '') + (node.nodeValue || '');
                    newNode_1.nodeValue = newNodeValue;
                    (_a = node.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(node);
                });
                formatNodes = [newNode_1];
            }
            formatNodes.forEach(function (startingNode) {
                // When apply style within style tags like B/I/U/..., we split the tag and apply outside them
                // So that the inner style tag such as U, STRIKE can inherit the style we added
                var node = startingNode;
                while (node &&
                    (0, getTagOfNode_1.default)(node) != 'SPAN' &&
                    STYLET_AGS.indexOf((0, getTagOfNode_1.default)(node.parentNode)) >= 0) {
                    callStylerWithInnerNode(node, styler);
                    node = (0, splitParentNode_1.splitBalancedNodeRange)(node);
                }
                if (node && (0, getTagOfNode_1.default)(node) != 'SPAN') {
                    callStylerWithInnerNode(node, styler);
                    node = (0, wrap_1.default)(node, 'SPAN');
                }
                if ((0, safeInstanceOf_1.default)(node, 'HTMLElement')) {
                    styler(node);
                }
            });
        }
    }
    exports.default = applyTextStyle;
    function callStylerWithInnerNode(node, styler) {
        if (node && node.nodeType == 1 /* Element */) {
            styler(node, true /*isInnerNode*/);
        }
    }
});
//# sourceMappingURL=applyTextStyle.js.map