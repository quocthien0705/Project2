{"version":3,"file":"createVListFromRegion.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-dom/lib/list/createVListFromRegion.ts"],"names":[],"mappings":"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","sourcesContent":["import createElement from '../utils/createElement';\nimport getRootListNode from './getRootListNode';\nimport getSelectedBlockElementsInRegion from '../region/getSelectedBlockElementsInRegion';\nimport isNodeInRegion from '../region/isNodeInRegion';\nimport Position from '../selection/Position';\nimport safeInstanceOf from '../utils/safeInstanceOf';\nimport shouldSkipNode from '../utils/shouldSkipNode';\nimport toArray from '../jsUtils/toArray';\nimport VList from './VList';\nimport wrap from '../utils/wrap';\nimport { getLeafSibling } from '../utils/getLeafSibling';\nimport { isListElement } from './getListTypeFromNode';\nimport { KnownCreateElementDataIndex, ListType, PositionType } from 'roosterjs-editor-types';\nimport type { Region } from 'roosterjs-editor-types';\n\nconst ListSelector = 'ol,ul';\n\n/**\n * Create a VList object from the given region.\n * @param region The region to get VList from\n * @param includeSiblingLists True to also try get lists before and after the selection and merge them together,\n * false to only include the list for the selected blocks\n * @param startNode (Optional) When specified, try get VList which will contain this node.\n * If not specified, get VList from selection of this region\n */\nexport default function createVListFromRegion(\n    region: Region,\n    includeSiblingLists?: boolean,\n    startNode?: Node\n): VList | null {\n    if (!region) {\n        return null;\n    }\n\n    let nodes: Node[] = [];\n\n    if (startNode) {\n        const list = getRootListNode(region, ListSelector, startNode);\n        if (list) {\n            nodes.push(list);\n        }\n    } else {\n        const blocks = getSelectedBlockElementsInRegion(\n            region,\n            undefined,\n            true /* shouldApplyFormatToSpan */\n        );\n        blocks.forEach(block => {\n            const list = getRootListNode(region, ListSelector, block.getStartNode());\n\n            if (list) {\n                if (nodes[nodes.length - 1] != list) {\n                    nodes.push(list);\n                }\n                if (\n                    nodes.length == 1 &&\n                    safeInstanceOf(list, 'HTMLOListElement') &&\n                    list.start > 1\n                ) {\n                    // Do not include sibling lists if this list is not start from 1\n                    includeSiblingLists = false;\n                }\n            } else {\n                nodes.push(block.collapseToSingleElement());\n            }\n        });\n\n        if (nodes.length == 0 && !region.rootNode.firstChild) {\n            const newNode = createElement(\n                KnownCreateElementDataIndex.EmptyLine,\n                region.rootNode.ownerDocument\n            )!;\n            region.rootNode.appendChild(newNode);\n            nodes.push(newNode);\n            region.fullSelectionStart = new Position(newNode, PositionType.Begin);\n            region.fullSelectionEnd = new Position(newNode, PositionType.End);\n        }\n\n        if (includeSiblingLists) {\n            tryIncludeSiblingNode(region, nodes, false /*isNext*/);\n            tryIncludeSiblingNode(region, nodes, true /*isNext*/);\n        }\n\n        nodes = nodes.filter(node => !shouldSkipNode(node, true /*ignoreSpace*/));\n    }\n\n    let vList: VList | null = null;\n\n    if (nodes.length > 0) {\n        const firstNode = nodes.shift() || null;\n        vList = isListElement(firstNode)\n            ? new VList(firstNode)\n            : firstNode\n            ? createVListFromItemNode(firstNode)\n            : null;\n\n        if (vList) {\n            nodes.forEach(node => {\n                if (isListElement(node)) {\n                    vList!.mergeVList(new VList(node));\n                } else {\n                    vList!.appendItem(node, ListType.None);\n                }\n            });\n        }\n    }\n\n    return vList;\n}\n\nfunction tryIncludeSiblingNode(region: Region, nodes: Node[], isNext: boolean) {\n    let node: Node | null = nodes[isNext ? nodes.length - 1 : 0];\n    node = getLeafSibling(region.rootNode, node, isNext, region.skipTags, true /*ignoreSpace*/);\n    node = getRootListNode(region, ListSelector, node);\n    if (isNodeInRegion(region, node) && isListElement(node)) {\n        if (isNext) {\n            if (!safeInstanceOf(node, 'HTMLOListElement') || node.start == 1) {\n                // Only include sibling list when\n                // 1. This is a unordered list, OR\n                // 2. This list starts from 1\n                nodes.push(node);\n            }\n        } else {\n            nodes.unshift(node);\n        }\n    }\n}\n\nfunction createVListFromItemNode(node: Node): VList {\n    // Wrap all child nodes under a single one, and put the new list under original root node\n    // so that the list can carry over styles under the root node.\n    const childNodes = toArray(node.childNodes);\n    const nodeForItem = childNodes.length == 1 ? childNodes[0] : wrap(childNodes, 'SPAN');\n\n    // Create a temporary OL root element for this list.\n    const listNode = node.ownerDocument!.createElement('ol'); // Either OL or UL is ok here\n    node.appendChild(listNode);\n\n    // Create the VList and append items\n    const vList = new VList(listNode);\n    vList.appendItem(nodeForItem, ListType.None);\n\n    return vList;\n}\n"]}