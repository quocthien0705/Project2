{"version":3,"file":"getListTypeFromNode.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-dom/lib/list/getListTypeFromNode.ts"],"names":[],"mappings":";;;;IAwBA,SAAwB,mBAAmB,CAAC,IAAiB;QACzD,QAAQ,IAAA,sBAAY,EAAC,IAAI,CAAC,EAAE;YACxB,KAAK,IAAI;gBACL,uBAAwB;YAC5B,KAAK,IAAI;gBACL,yBAA0B;YAC9B;gBACI,oBAAqB;SAC5B;IACL,CAAC;IATD,sCASC;IAED;;;;OAIG;IACH,SAAgB,aAAa,CAAC,IAAiB;QAC3C,OAAO,mBAAmB,CAAC,IAAI,CAAC,gBAAiB,CAAC;IACtD,CAAC;IAFD,sCAEC","sourcesContent":["import getTagOfNode from '../utils/getTagOfNode';\nimport { ListType } from 'roosterjs-editor-types';\nimport type { CompatibleListType } from 'roosterjs-editor-types/lib/compatibleTypes';\n\n/**\n * @internal\n * Get list type from a list element. The result will be either Ordered or Unordered ListType\n * @param listElement the element to get list type from\n */\nexport default function getListTypeFromNode(\n    listElement: HTMLOListElement | HTMLUListElement\n):\n    | ListType.Ordered\n    | ListType.Unordered\n    | CompatibleListType.Ordered\n    | CompatibleListType.Unordered;\n\n/**\n * @internal\n * Get list type from a DOM node. It is possible to return ListType.None\n * @param node the node to get list type from\n */\nexport default function getListTypeFromNode(node: Node | null): ListType | CompatibleListType;\n\nexport default function getListTypeFromNode(node: Node | null): ListType | CompatibleListType {\n    switch (getTagOfNode(node)) {\n        case 'OL':\n            return ListType.Ordered;\n        case 'UL':\n            return ListType.Unordered;\n        default:\n            return ListType.None;\n    }\n}\n\n/**\n * @internal\n * Check if the given DOM node is a list element (OL or UL)\n * @param node The node to check\n */\nexport function isListElement(node: Node | null): node is HTMLUListElement | HTMLOListElement {\n    return getListTypeFromNode(node) != ListType.None;\n}\n"]}