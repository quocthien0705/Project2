{"version":3,"file":"setListItemStyle.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-dom/lib/list/setListItemStyle.ts"],"names":[],"mappings":"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","sourcesContent":["import ContentTraverser from '../contentTraverser/ContentTraverser';\nimport findClosestElementAncestor from '../utils/findClosestElementAncestor';\nimport safeInstanceOf from '../utils/safeInstanceOf';\nimport type { InlineElement } from 'roosterjs-editor-types';\n\n/**\n * Set the Style of a List Item provided, with the styles that the inline child elements have\n * If the child inline elements have different styles, it will not modify the styles of the list item\n * @param element the LI Element to set the styles\n * @param styles The styles that should be applied to the element.\n * @param isCssStyle True means the given styles are CSS style names, false means they are HTML attributes @default true\n */\nexport default function setListItemStyle(\n    element: HTMLLIElement,\n    styles: string[],\n    isCssStyle: boolean = true\n) {\n    const elementsStyles = getInlineChildElementsStyle(element, styles, isCssStyle);\n\n    styles.forEach(styleName => {\n        const styleValues = elementsStyles.map(style =>\n            style[styleName] !== undefined ? style[styleName] : ''\n        );\n\n        if (\n            styleValues &&\n            (styleValues.length == 1 || new Set(styleValues).size == 1) &&\n            styleValues[0]\n        ) {\n            if (isCssStyle) {\n                element.style.setProperty(styleName, styleValues[0]);\n            } else {\n                element.setAttribute(styleName, styleValues[0]);\n            }\n        }\n    });\n}\n\nfunction getInlineChildElementsStyle(element: HTMLElement, styles: string[], isCssStyle: boolean) {\n    const result: Record<string, string>[] = [];\n    const contentTraverser = ContentTraverser.createBodyTraverser(element);\n    let currentInlineElement: InlineElement | null = null;\n\n    while (contentTraverser.currentInlineElement != currentInlineElement) {\n        currentInlineElement = contentTraverser.currentInlineElement;\n        let currentNode = currentInlineElement?.getContainerNode() || null;\n        let currentStyle: Record<string, string> | null = null;\n\n        currentNode = currentNode ? findClosestElementAncestor(currentNode) : null;\n\n        // we should consider of when it is the single child node of element, the parentNode's style should add\n        // such as the \"i\", \"b\", \"span\" node in <li><span><b><i>aa</i></b></span></li>\n        while (\n            currentNode &&\n            currentNode !== element &&\n            safeInstanceOf(currentNode, 'HTMLElement') &&\n            (result.length == 0 || (currentNode.textContent?.trim().length || 0) > 0)\n        ) {\n            const element: HTMLElement = currentNode;\n\n            styles.forEach(styleName => {\n                const styleValue = isCssStyle\n                    ? element.style.getPropertyValue(styleName)\n                    : element.getAttribute(styleName);\n\n                if (!currentStyle) {\n                    currentStyle = {};\n                }\n\n                if (styleValue && !currentStyle[styleName]) {\n                    currentStyle[styleName] = styleValue;\n                }\n            });\n\n            if (currentNode?.parentNode?.childNodes.length === 1) {\n                currentNode = currentNode.parentNode;\n            } else {\n                currentNode = null;\n            }\n        }\n\n        if (currentStyle) {\n            result.push(currentStyle);\n        }\n\n        contentTraverser.getNextInlineElement();\n    }\n\n    return result;\n}\n"]}