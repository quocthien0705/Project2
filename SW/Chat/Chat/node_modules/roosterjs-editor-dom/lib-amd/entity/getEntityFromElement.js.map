{"version":3,"file":"getEntityFromElement.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-dom/lib/entity/getEntityFromElement.ts"],"names":[],"mappings":";;;IAGA;;;;OAIG;IACH,SAAwB,oBAAoB,CAAC,OAAoB;;QAC7D,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,EAAE,GAAG,EAAE,CAAC;QACZ,IAAI,UAAU,GAAG,KAAK,CAAC;QAEvB,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,0CAAE,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,UAAA,IAAI;YACvC,IAAI,IAAI,oCAAkC,EAAE;gBACxC,QAAQ,GAAG,IAAI,CAAC;aACnB;iBAAM,IAAI,IAAI,CAAC,OAAO,oCAAkC,IAAI,CAAC,EAAE;gBAC5D,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,mCAAiC,MAAM,CAAC,CAAC;aAC/D;iBAAM,IAAI,IAAI,CAAC,OAAO,gCAAgC,IAAI,CAAC,EAAE;gBAC1D,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,+BAA+B,MAAM,CAAC,CAAC;aAC3D;iBAAM,IAAI,IAAI,CAAC,OAAO,4CAAsC,IAAI,CAAC,EAAE;gBAChE,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,2CAAqC,MAAM,CAAC,IAAI,GAAG,CAAC;aAChF;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,QAAQ;YACX,CAAC,CAAC;gBACI,OAAO,EAAE,OAAO;gBAChB,EAAE,IAAA;gBACF,IAAI,MAAA;gBACJ,UAAU,YAAA;aACb;YACH,CAAC,CAAC,IAAI,CAAC;IACf,CAAC;IA1BD,uCA0BC","sourcesContent":["import { EntityClasses } from 'roosterjs-editor-types';\nimport type { Entity } from 'roosterjs-editor-types';\n\n/**\n * Get Entity object from an entity root element\n * @param element The entity root element. If this element is not an entity root element,\n * it will return null\n */\nexport default function getEntityFromElement(element: HTMLElement): Entity | null {\n    let isEntity = false;\n    let type = '';\n    let id = '';\n    let isReadonly = false;\n\n    element?.className?.split(' ').forEach(name => {\n        if (name == EntityClasses.ENTITY_INFO_NAME) {\n            isEntity = true;\n        } else if (name.indexOf(EntityClasses.ENTITY_TYPE_PREFIX) == 0) {\n            type = name.substr(EntityClasses.ENTITY_TYPE_PREFIX.length);\n        } else if (name.indexOf(EntityClasses.ENTITY_ID_PREFIX) == 0) {\n            id = name.substr(EntityClasses.ENTITY_ID_PREFIX.length);\n        } else if (name.indexOf(EntityClasses.ENTITY_READONLY_PREFIX) == 0) {\n            isReadonly = name.substr(EntityClasses.ENTITY_READONLY_PREFIX.length) == '1';\n        }\n    });\n\n    return isEntity\n        ? {\n              wrapper: element,\n              id,\n              type,\n              isReadonly,\n          }\n        : null;\n}\n"]}