{"version":3,"file":"moveCurrentSnapshot.js","sourceRoot":"","sources":["../../../../packages/roosterjs-editor-dom/lib/snapshots/moveCurrentSnapshot.ts"],"names":[],"mappings":";;;;IAGA;;;;;OAKG;IACH,SAAwB,mBAAmB,CACvC,SAAuB,EACvB,IAAY;QAEZ,IAAI,IAAA,gCAAsB,EAAC,SAAS,EAAE,IAAI,CAAC,EAAE;YACzC,SAAS,CAAC,YAAY,IAAI,IAAI,CAAC;YAC/B,SAAS,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;YACjC,OAAO,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;SACtD;aAAM;YACH,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IAXD,sCAWC;IAED;;;OAGG;IACU,QAAA,mBAAmB,GAAG,mBAAmB,CAAC","sourcesContent":["import canMoveCurrentSnapshot from './canMoveCurrentSnapshot';\nimport type { Snapshots } from 'roosterjs-editor-types';\n\n/**\n * Move current snapshot with the given step if can move this step. Otherwise no action and return null\n * @param snapshots The snapshots data structure to move\n * @param step The step to move\n * @returns If can move with the given step, returns the snapshot after move, otherwise null\n */\nexport default function moveCurrentSnapshot<T = string>(\n    snapshots: Snapshots<T>,\n    step: number\n): T | null {\n    if (canMoveCurrentSnapshot(snapshots, step)) {\n        snapshots.currentIndex += step;\n        snapshots.autoCompleteIndex = -1;\n        return snapshots.snapshots[snapshots.currentIndex];\n    } else {\n        return null;\n    }\n}\n\n/**\n * @deprecated\n * For backward compatibility only\n */\nexport const moveCurrentSnapsnot = moveCurrentSnapshot;\n"]}