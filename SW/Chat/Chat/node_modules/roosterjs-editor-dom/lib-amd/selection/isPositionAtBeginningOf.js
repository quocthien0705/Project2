define(["require", "exports", "../utils/contains", "../utils/getTagOfNode", "../utils/isNodeEmpty"], function (require, exports, contains_1, getTagOfNode_1, isNodeEmpty_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * Check if this position is at beginning of the given node.
     * This will return true if all nodes between the beginning of target node and the position are empty.
     * @param position The position to check
     * @param targetNode The node to check
     * @returns True if position is at beginning of the node, otherwise false
     */
    function isPositionAtBeginningOf(position, targetNode) {
        if (position) {
            position = position.normalize();
            var node = position.node;
            var offset = position.offset;
            if (offset == 0) {
                while (node && (0, contains_1.default)(targetNode, node) && areAllPreviousNodesEmpty(node)) {
                    node = (node === null || node === void 0 ? void 0 : node.parentNode) || null;
                }
                return node == targetNode;
            }
        }
        return false;
    }
    exports.default = isPositionAtBeginningOf;
    function areAllPreviousNodesEmpty(node) {
        while (node.previousSibling) {
            node = node.previousSibling;
            if ((0, getTagOfNode_1.default)(node) == 'BR' || !(0, isNodeEmpty_1.default)(node)) {
                return false;
            }
        }
        return true;
    }
});
//# sourceMappingURL=isPositionAtBeginningOf.js.map