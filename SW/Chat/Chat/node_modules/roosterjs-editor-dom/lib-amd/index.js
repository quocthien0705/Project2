define(["require", "exports", "./blockElements/getBlockElementAtNode", "./blockElements/getFirstLastBlockElement", "./contentTraverser/ContentTraverser", "./contentTraverser/PositionContentSearcher", "./delimiter/addDelimiters", "./delimiter/getDelimiterFromElement", "./inlineElements/getInlineElementAtNode", "./inlineElements/ImageInlineElement", "./inlineElements/LinkInlineElement", "./inlineElements/NodeInlineElement", "./inlineElements/PartialInlineElement", "./inlineElements/applyTextStyle", "./clipboard/extractClipboardEvent", "./clipboard/extractClipboardItems", "./clipboard/extractClipboardItemsForIE", "./clipboard/handleImagePaste", "./clipboard/handleTextPaste", "./clipboard/retrieveMetadataFromClipboard", "./clipboard/sanitizePasteContent", "./clipboard/getPasteType", "./utils/Browser", "./utils/applyFormat", "./utils/changeElementTag", "./utils/collapseNodes", "./utils/contains", "./utils/findClosestElementAncestor", "./utils/fromHtml", "./utils/getComputedStyles", "./utils/getPendableFormatState", "./utils/getTagOfNode", "./utils/isBlockElement", "./utils/isNodeEmpty", "./utils/isVoidHtmlElement", "./utils/matchLink", "./utils/queryElements", "./utils/splitParentNode", "./utils/unwrap", "./utils/wrap", "./utils/getLeafSibling", "./utils/getLeafNode", "./utils/splitTextNode", "./utils/normalizeRect", "./utils/safeInstanceOf", "./utils/readFile", "./utils/getInnerHTML", "./utils/setColor", "./utils/matchesSelector", "./utils/createElement", "./utils/moveChildNodes", "./utils/getIntersectedRect", "./utils/isNodeAfter", "./utils/parseColor", "./table/VTable", "./table/isWholeTableSelected", "./list/VList", "./list/VListItem", "./list/createVListFromRegion", "./list/VListChain", "./list/convertDecimalsToAlpha", "./list/convertDecimalsToRomans", "./list/setListItemStyle", "./table/tableFormatInfo", "./table/tableCellInfo", "./table/tableCellInfo", "./region/getRegionsFromRange", "./region/getSelectedBlockElementsInRegion", "./region/collapseNodesInRegion", "./region/isNodeInRegion", "./region/getSelectionRangeInRegion", "./region/mergeBlocksInRegion", "./selection/Position", "./selection/createRange", "./selection/getPositionRect", "./selection/isPositionAtBeginningOf", "./selection/getSelectionPath", "./selection/getHtmlWithSelectionPath", "./selection/setHtmlWithSelectionPath", "./selection/addRangeToSelection", "./snapshots/addSnapshot", "./snapshots/canMoveCurrentSnapshot", "./snapshots/clearProceedingSnapshots", "./snapshots/moveCurrentSnapshot", "./snapshots/createSnapshots", "./snapshots/canUndoAutoComplete", "./htmlSanitizer/HtmlSanitizer", "./htmlSanitizer/getInheritableStyles", "./htmlSanitizer/createDefaultHtmlSanitizerOptions", "./htmlSanitizer/chainSanitizerCallback", "./entity/commitEntity", "./entity/getEntityFromElement", "./entity/getEntitySelector", "./entity/entityPlaceholderUtils", "./event/cacheGetEventData", "./event/clearEventDataCache", "./event/isModifierKey", "./event/isCharacterValue", "./event/isCtrlOrMetaPressed", "./style/getStyles", "./style/setStyles", "./style/removeImportantStyleRule", "./style/setGlobalCssStyles", "./style/removeGlobalCssStyle", "./edit/adjustInsertPosition", "./edit/deleteSelectedContent", "./edit/getTextContent", "./metadata/validate", "./metadata/definitionCreators", "./metadata/metadata", "./jsUtils/arrayPush", "./jsUtils/getObjectKeys", "./jsUtils/toArray", "./pasteSourceValidations/getPasteSource"], function (require, exports, getBlockElementAtNode_1, getFirstLastBlockElement_1, ContentTraverser_1, PositionContentSearcher_1, addDelimiters_1, getDelimiterFromElement_1, getInlineElementAtNode_1, ImageInlineElement_1, LinkInlineElement_1, NodeInlineElement_1, PartialInlineElement_1, applyTextStyle_1, extractClipboardEvent_1, extractClipboardItems_1, extractClipboardItemsForIE_1, handleImagePaste_1, handleTextPaste_1, retrieveMetadataFromClipboard_1, sanitizePasteContent_1, getPasteType_1, Browser_1, applyFormat_1, changeElementTag_1, collapseNodes_1, contains_1, findClosestElementAncestor_1, fromHtml_1, getComputedStyles_1, getPendableFormatState_1, getTagOfNode_1, isBlockElement_1, isNodeEmpty_1, isVoidHtmlElement_1, matchLink_1, queryElements_1, splitParentNode_1, unwrap_1, wrap_1, getLeafSibling_1, getLeafNode_1, splitTextNode_1, normalizeRect_1, safeInstanceOf_1, readFile_1, getInnerHTML_1, setColor_1, matchesSelector_1, createElement_1, moveChildNodes_1, getIntersectedRect_1, isNodeAfter_1, parseColor_1, VTable_1, isWholeTableSelected_1, VList_1, VListItem_1, createVListFromRegion_1, VListChain_1, convertDecimalsToAlpha_1, convertDecimalsToRomans_1, setListItemStyle_1, tableFormatInfo_1, tableCellInfo_1, tableCellInfo_2, getRegionsFromRange_1, getSelectedBlockElementsInRegion_1, collapseNodesInRegion_1, isNodeInRegion_1, getSelectionRangeInRegion_1, mergeBlocksInRegion_1, Position_1, createRange_1, getPositionRect_1, isPositionAtBeginningOf_1, getSelectionPath_1, getHtmlWithSelectionPath_1, setHtmlWithSelectionPath_1, addRangeToSelection_1, addSnapshot_1, canMoveCurrentSnapshot_1, clearProceedingSnapshots_1, moveCurrentSnapshot_1, createSnapshots_1, canUndoAutoComplete_1, HtmlSanitizer_1, getInheritableStyles_1, createDefaultHtmlSanitizerOptions_1, chainSanitizerCallback_1, commitEntity_1, getEntityFromElement_1, getEntitySelector_1, entityPlaceholderUtils_1, cacheGetEventData_1, clearEventDataCache_1, isModifierKey_1, isCharacterValue_1, isCtrlOrMetaPressed_1, getStyles_1, setStyles_1, removeImportantStyleRule_1, setGlobalCssStyles_1, removeGlobalCssStyle_1, adjustInsertPosition_1, deleteSelectedContent_1, getTextContent_1, validate_1, definitionCreators_1, metadata_1, arrayPush_1, getObjectKeys_1, toArray_1, getPasteSource_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getPasteSource = exports.toArray = exports.getObjectKeys = exports.arrayPush = exports.removeMetadata = exports.setMetadata = exports.getMetadata = exports.createObjectDefinition = exports.createArrayDefinition = exports.createStringDefinition = exports.createBooleanDefinition = exports.createNumberDefinition = exports.validate = exports.getTextContent = exports.deleteSelectedContent = exports.adjustInsertPosition = exports.removeGlobalCssStyle = exports.setGlobalCssStyles = exports.removeImportantStyleRule = exports.setStyles = exports.getStyles = exports.isCtrlOrMetaPressed = exports.isCharacterValue = exports.isModifierKey = exports.clearEventDataCache = exports.cacheGetEventData = exports.restoreContentWithEntityPlaceholder = exports.moveContentWithEntityPlaceholders = exports.createEntityPlaceholder = exports.getEntitySelector = exports.getEntityFromElement = exports.commitEntity = exports.chainSanitizerCallback = exports.createDefaultHtmlSanitizerOptions = exports.getInheritableStyles = exports.HtmlSanitizer = exports.canUndoAutoComplete = exports.createSnapshots = exports.moveCurrentSnapsnot = exports.moveCurrentSnapshot = exports.clearProceedingSnapshotsV2 = exports.clearProceedingSnapshots = exports.canMoveCurrentSnapshot = exports.addSnapshotV2 = exports.addSnapshot = exports.addRangeToSelection = exports.extractContentMetadata = exports.setHtmlWithMetadata = exports.setHtmlWithSelectionPath = exports.getHtmlWithSelectionPath = exports.getSelectionPath = exports.isPositionAtBeginningOf = exports.getPositionRect = exports.createRange = exports.Position = exports.mergeBlocksInRegion = exports.getSelectionRangeInRegion = exports.isNodeInRegion = exports.collapseNodesInRegion = exports.getSelectedBlockElementsInRegion = exports.getRegionsFromRange = exports.getTableCellMetadata = exports.saveTableCellMetadata = exports.getTableFormatInfo = exports.setListItemStyle = exports.convertDecimalsToRoman = exports.convertDecimalsToAlpha = exports.VListChain = exports.createVListFromRegion = exports.VListItem = exports.VList = exports.isWholeTableSelected = exports.VTable = exports.parseColor = exports.isNodeAfter = exports.getIntersectedRect = exports.moveChildNodes = exports.KnownCreateElementData = exports.createElement = exports.matchesSelector = exports.setColor = exports.getInnerHTML = exports.readFile = exports.safeInstanceOf = exports.normalizeRect = exports.splitTextNode = exports.getLastLeafNode = exports.getFirstLeafNode = exports.getPreviousLeafSibling = exports.getNextLeafSibling = exports.wrap = exports.unwrap = exports.splitBalancedNodeRange = exports.splitParentNode = exports.queryElements = exports.matchLink = exports.isVoidHtmlElement = exports.isNodeEmpty = exports.isBlockElement = exports.getTagOfNode = exports.PendableFormatCommandMap = exports.getPendableFormatState = exports.getComputedStyle = exports.getComputedStyles = exports.fromHtml = exports.findClosestElementAncestor = exports.contains = exports.collapseNodes = exports.changeElementTag = exports.applyFormat = exports.getBrowserInfo = exports.Browser = exports.getPasteType = exports.sanitizePasteContent = exports.retrieveMetadataFromClipboard = exports.handleTextPaste = exports.handleImagePaste = exports.extractClipboardItemsForIE = exports.extractClipboardItems = exports.extractClipboardEvent = exports.applyTextStyle = exports.PartialInlineElement = exports.NodeInlineElement = exports.LinkInlineElement = exports.ImageInlineElement = exports.getInlineElementAtNode = exports.getDelimiterFromElement = exports.addDelimiterBefore = exports.addDelimiterAfter = exports.addDelimiters = exports.PositionContentSearcher = exports.ContentTraverser = exports.getFirstLastBlockElement = exports.getBlockElementAtNode = void 0;
    Object.defineProperty(exports, "getBlockElementAtNode", { enumerable: true, get: function () { return getBlockElementAtNode_1.default; } });
    Object.defineProperty(exports, "getFirstLastBlockElement", { enumerable: true, get: function () { return getFirstLastBlockElement_1.default; } });
    Object.defineProperty(exports, "ContentTraverser", { enumerable: true, get: function () { return ContentTraverser_1.default; } });
    Object.defineProperty(exports, "PositionContentSearcher", { enumerable: true, get: function () { return PositionContentSearcher_1.default; } });
    Object.defineProperty(exports, "addDelimiters", { enumerable: true, get: function () { return addDelimiters_1.default; } });
    Object.defineProperty(exports, "addDelimiterAfter", { enumerable: true, get: function () { return addDelimiters_1.addDelimiterAfter; } });
    Object.defineProperty(exports, "addDelimiterBefore", { enumerable: true, get: function () { return addDelimiters_1.addDelimiterBefore; } });
    Object.defineProperty(exports, "getDelimiterFromElement", { enumerable: true, get: function () { return getDelimiterFromElement_1.default; } });
    Object.defineProperty(exports, "getInlineElementAtNode", { enumerable: true, get: function () { return getInlineElementAtNode_1.default; } });
    Object.defineProperty(exports, "ImageInlineElement", { enumerable: true, get: function () { return ImageInlineElement_1.default; } });
    Object.defineProperty(exports, "LinkInlineElement", { enumerable: true, get: function () { return LinkInlineElement_1.default; } });
    Object.defineProperty(exports, "NodeInlineElement", { enumerable: true, get: function () { return NodeInlineElement_1.default; } });
    Object.defineProperty(exports, "PartialInlineElement", { enumerable: true, get: function () { return PartialInlineElement_1.default; } });
    Object.defineProperty(exports, "applyTextStyle", { enumerable: true, get: function () { return applyTextStyle_1.default; } });
    Object.defineProperty(exports, "extractClipboardEvent", { enumerable: true, get: function () { return extractClipboardEvent_1.default; } });
    Object.defineProperty(exports, "extractClipboardItems", { enumerable: true, get: function () { return extractClipboardItems_1.default; } });
    Object.defineProperty(exports, "extractClipboardItemsForIE", { enumerable: true, get: function () { return extractClipboardItemsForIE_1.default; } });
    Object.defineProperty(exports, "handleImagePaste", { enumerable: true, get: function () { return handleImagePaste_1.default; } });
    Object.defineProperty(exports, "handleTextPaste", { enumerable: true, get: function () { return handleTextPaste_1.default; } });
    Object.defineProperty(exports, "retrieveMetadataFromClipboard", { enumerable: true, get: function () { return retrieveMetadataFromClipboard_1.default; } });
    Object.defineProperty(exports, "sanitizePasteContent", { enumerable: true, get: function () { return sanitizePasteContent_1.default; } });
    Object.defineProperty(exports, "getPasteType", { enumerable: true, get: function () { return getPasteType_1.default; } });
    Object.defineProperty(exports, "Browser", { enumerable: true, get: function () { return Browser_1.Browser; } });
    Object.defineProperty(exports, "getBrowserInfo", { enumerable: true, get: function () { return Browser_1.getBrowserInfo; } });
    Object.defineProperty(exports, "applyFormat", { enumerable: true, get: function () { return applyFormat_1.default; } });
    Object.defineProperty(exports, "changeElementTag", { enumerable: true, get: function () { return changeElementTag_1.default; } });
    Object.defineProperty(exports, "collapseNodes", { enumerable: true, get: function () { return collapseNodes_1.default; } });
    Object.defineProperty(exports, "contains", { enumerable: true, get: function () { return contains_1.default; } });
    Object.defineProperty(exports, "findClosestElementAncestor", { enumerable: true, get: function () { return findClosestElementAncestor_1.default; } });
    Object.defineProperty(exports, "fromHtml", { enumerable: true, get: function () { return fromHtml_1.default; } });
    Object.defineProperty(exports, "getComputedStyles", { enumerable: true, get: function () { return getComputedStyles_1.default; } });
    Object.defineProperty(exports, "getComputedStyle", { enumerable: true, get: function () { return getComputedStyles_1.getComputedStyle; } });
    Object.defineProperty(exports, "getPendableFormatState", { enumerable: true, get: function () { return getPendableFormatState_1.default; } });
    Object.defineProperty(exports, "PendableFormatCommandMap", { enumerable: true, get: function () { return getPendableFormatState_1.PendableFormatCommandMap; } });
    Object.defineProperty(exports, "getTagOfNode", { enumerable: true, get: function () { return getTagOfNode_1.default; } });
    Object.defineProperty(exports, "isBlockElement", { enumerable: true, get: function () { return isBlockElement_1.default; } });
    Object.defineProperty(exports, "isNodeEmpty", { enumerable: true, get: function () { return isNodeEmpty_1.default; } });
    Object.defineProperty(exports, "isVoidHtmlElement", { enumerable: true, get: function () { return isVoidHtmlElement_1.default; } });
    Object.defineProperty(exports, "matchLink", { enumerable: true, get: function () { return matchLink_1.default; } });
    Object.defineProperty(exports, "queryElements", { enumerable: true, get: function () { return queryElements_1.default; } });
    Object.defineProperty(exports, "splitParentNode", { enumerable: true, get: function () { return splitParentNode_1.default; } });
    Object.defineProperty(exports, "splitBalancedNodeRange", { enumerable: true, get: function () { return splitParentNode_1.splitBalancedNodeRange; } });
    Object.defineProperty(exports, "unwrap", { enumerable: true, get: function () { return unwrap_1.default; } });
    Object.defineProperty(exports, "wrap", { enumerable: true, get: function () { return wrap_1.default; } });
    Object.defineProperty(exports, "getNextLeafSibling", { enumerable: true, get: function () { return getLeafSibling_1.getNextLeafSibling; } });
    Object.defineProperty(exports, "getPreviousLeafSibling", { enumerable: true, get: function () { return getLeafSibling_1.getPreviousLeafSibling; } });
    Object.defineProperty(exports, "getFirstLeafNode", { enumerable: true, get: function () { return getLeafNode_1.getFirstLeafNode; } });
    Object.defineProperty(exports, "getLastLeafNode", { enumerable: true, get: function () { return getLeafNode_1.getLastLeafNode; } });
    Object.defineProperty(exports, "splitTextNode", { enumerable: true, get: function () { return splitTextNode_1.default; } });
    Object.defineProperty(exports, "normalizeRect", { enumerable: true, get: function () { return normalizeRect_1.default; } });
    Object.defineProperty(exports, "safeInstanceOf", { enumerable: true, get: function () { return safeInstanceOf_1.default; } });
    Object.defineProperty(exports, "readFile", { enumerable: true, get: function () { return readFile_1.default; } });
    Object.defineProperty(exports, "getInnerHTML", { enumerable: true, get: function () { return getInnerHTML_1.default; } });
    Object.defineProperty(exports, "setColor", { enumerable: true, get: function () { return setColor_1.default; } });
    Object.defineProperty(exports, "matchesSelector", { enumerable: true, get: function () { return matchesSelector_1.default; } });
    Object.defineProperty(exports, "createElement", { enumerable: true, get: function () { return createElement_1.default; } });
    Object.defineProperty(exports, "KnownCreateElementData", { enumerable: true, get: function () { return createElement_1.KnownCreateElementData; } });
    Object.defineProperty(exports, "moveChildNodes", { enumerable: true, get: function () { return moveChildNodes_1.default; } });
    Object.defineProperty(exports, "getIntersectedRect", { enumerable: true, get: function () { return getIntersectedRect_1.default; } });
    Object.defineProperty(exports, "isNodeAfter", { enumerable: true, get: function () { return isNodeAfter_1.default; } });
    Object.defineProperty(exports, "parseColor", { enumerable: true, get: function () { return parseColor_1.default; } });
    Object.defineProperty(exports, "VTable", { enumerable: true, get: function () { return VTable_1.default; } });
    Object.defineProperty(exports, "isWholeTableSelected", { enumerable: true, get: function () { return isWholeTableSelected_1.default; } });
    Object.defineProperty(exports, "VList", { enumerable: true, get: function () { return VList_1.default; } });
    Object.defineProperty(exports, "VListItem", { enumerable: true, get: function () { return VListItem_1.default; } });
    Object.defineProperty(exports, "createVListFromRegion", { enumerable: true, get: function () { return createVListFromRegion_1.default; } });
    Object.defineProperty(exports, "VListChain", { enumerable: true, get: function () { return VListChain_1.default; } });
    Object.defineProperty(exports, "convertDecimalsToAlpha", { enumerable: true, get: function () { return convertDecimalsToAlpha_1.default; } });
    Object.defineProperty(exports, "convertDecimalsToRoman", { enumerable: true, get: function () { return convertDecimalsToRomans_1.default; } });
    Object.defineProperty(exports, "setListItemStyle", { enumerable: true, get: function () { return setListItemStyle_1.default; } });
    Object.defineProperty(exports, "getTableFormatInfo", { enumerable: true, get: function () { return tableFormatInfo_1.getTableFormatInfo; } });
    Object.defineProperty(exports, "saveTableCellMetadata", { enumerable: true, get: function () { return tableCellInfo_1.saveTableCellMetadata; } });
    Object.defineProperty(exports, "getTableCellMetadata", { enumerable: true, get: function () { return tableCellInfo_2.getTableCellMetadata; } });
    Object.defineProperty(exports, "getRegionsFromRange", { enumerable: true, get: function () { return getRegionsFromRange_1.default; } });
    Object.defineProperty(exports, "getSelectedBlockElementsInRegion", { enumerable: true, get: function () { return getSelectedBlockElementsInRegion_1.default; } });
    Object.defineProperty(exports, "collapseNodesInRegion", { enumerable: true, get: function () { return collapseNodesInRegion_1.default; } });
    Object.defineProperty(exports, "isNodeInRegion", { enumerable: true, get: function () { return isNodeInRegion_1.default; } });
    Object.defineProperty(exports, "getSelectionRangeInRegion", { enumerable: true, get: function () { return getSelectionRangeInRegion_1.default; } });
    Object.defineProperty(exports, "mergeBlocksInRegion", { enumerable: true, get: function () { return mergeBlocksInRegion_1.default; } });
    Object.defineProperty(exports, "Position", { enumerable: true, get: function () { return Position_1.default; } });
    Object.defineProperty(exports, "createRange", { enumerable: true, get: function () { return createRange_1.default; } });
    Object.defineProperty(exports, "getPositionRect", { enumerable: true, get: function () { return getPositionRect_1.default; } });
    Object.defineProperty(exports, "isPositionAtBeginningOf", { enumerable: true, get: function () { return isPositionAtBeginningOf_1.default; } });
    Object.defineProperty(exports, "getSelectionPath", { enumerable: true, get: function () { return getSelectionPath_1.default; } });
    Object.defineProperty(exports, "getHtmlWithSelectionPath", { enumerable: true, get: function () { return getHtmlWithSelectionPath_1.default; } });
    Object.defineProperty(exports, "setHtmlWithSelectionPath", { enumerable: true, get: function () { return setHtmlWithSelectionPath_1.default; } });
    Object.defineProperty(exports, "setHtmlWithMetadata", { enumerable: true, get: function () { return setHtmlWithSelectionPath_1.setHtmlWithMetadata; } });
    Object.defineProperty(exports, "extractContentMetadata", { enumerable: true, get: function () { return setHtmlWithSelectionPath_1.extractContentMetadata; } });
    Object.defineProperty(exports, "addRangeToSelection", { enumerable: true, get: function () { return addRangeToSelection_1.default; } });
    Object.defineProperty(exports, "addSnapshot", { enumerable: true, get: function () { return addSnapshot_1.default; } });
    Object.defineProperty(exports, "addSnapshotV2", { enumerable: true, get: function () { return addSnapshot_1.addSnapshotV2; } });
    Object.defineProperty(exports, "canMoveCurrentSnapshot", { enumerable: true, get: function () { return canMoveCurrentSnapshot_1.default; } });
    Object.defineProperty(exports, "clearProceedingSnapshots", { enumerable: true, get: function () { return clearProceedingSnapshots_1.default; } });
    Object.defineProperty(exports, "clearProceedingSnapshotsV2", { enumerable: true, get: function () { return clearProceedingSnapshots_1.clearProceedingSnapshotsV2; } });
    Object.defineProperty(exports, "moveCurrentSnapshot", { enumerable: true, get: function () { return moveCurrentSnapshot_1.default; } });
    Object.defineProperty(exports, "moveCurrentSnapsnot", { enumerable: true, get: function () { return moveCurrentSnapshot_1.moveCurrentSnapsnot; } });
    Object.defineProperty(exports, "createSnapshots", { enumerable: true, get: function () { return createSnapshots_1.default; } });
    Object.defineProperty(exports, "canUndoAutoComplete", { enumerable: true, get: function () { return canUndoAutoComplete_1.default; } });
    Object.defineProperty(exports, "HtmlSanitizer", { enumerable: true, get: function () { return HtmlSanitizer_1.default; } });
    Object.defineProperty(exports, "getInheritableStyles", { enumerable: true, get: function () { return getInheritableStyles_1.default; } });
    Object.defineProperty(exports, "createDefaultHtmlSanitizerOptions", { enumerable: true, get: function () { return createDefaultHtmlSanitizerOptions_1.default; } });
    Object.defineProperty(exports, "chainSanitizerCallback", { enumerable: true, get: function () { return chainSanitizerCallback_1.default; } });
    Object.defineProperty(exports, "commitEntity", { enumerable: true, get: function () { return commitEntity_1.default; } });
    Object.defineProperty(exports, "getEntityFromElement", { enumerable: true, get: function () { return getEntityFromElement_1.default; } });
    Object.defineProperty(exports, "getEntitySelector", { enumerable: true, get: function () { return getEntitySelector_1.default; } });
    Object.defineProperty(exports, "createEntityPlaceholder", { enumerable: true, get: function () { return entityPlaceholderUtils_1.createEntityPlaceholder; } });
    Object.defineProperty(exports, "moveContentWithEntityPlaceholders", { enumerable: true, get: function () { return entityPlaceholderUtils_1.moveContentWithEntityPlaceholders; } });
    Object.defineProperty(exports, "restoreContentWithEntityPlaceholder", { enumerable: true, get: function () { return entityPlaceholderUtils_1.restoreContentWithEntityPlaceholder; } });
    Object.defineProperty(exports, "cacheGetEventData", { enumerable: true, get: function () { return cacheGetEventData_1.default; } });
    Object.defineProperty(exports, "clearEventDataCache", { enumerable: true, get: function () { return clearEventDataCache_1.default; } });
    Object.defineProperty(exports, "isModifierKey", { enumerable: true, get: function () { return isModifierKey_1.default; } });
    Object.defineProperty(exports, "isCharacterValue", { enumerable: true, get: function () { return isCharacterValue_1.default; } });
    Object.defineProperty(exports, "isCtrlOrMetaPressed", { enumerable: true, get: function () { return isCtrlOrMetaPressed_1.default; } });
    Object.defineProperty(exports, "getStyles", { enumerable: true, get: function () { return getStyles_1.default; } });
    Object.defineProperty(exports, "setStyles", { enumerable: true, get: function () { return setStyles_1.default; } });
    Object.defineProperty(exports, "removeImportantStyleRule", { enumerable: true, get: function () { return removeImportantStyleRule_1.default; } });
    Object.defineProperty(exports, "setGlobalCssStyles", { enumerable: true, get: function () { return setGlobalCssStyles_1.default; } });
    Object.defineProperty(exports, "removeGlobalCssStyle", { enumerable: true, get: function () { return removeGlobalCssStyle_1.default; } });
    Object.defineProperty(exports, "adjustInsertPosition", { enumerable: true, get: function () { return adjustInsertPosition_1.default; } });
    Object.defineProperty(exports, "deleteSelectedContent", { enumerable: true, get: function () { return deleteSelectedContent_1.default; } });
    Object.defineProperty(exports, "getTextContent", { enumerable: true, get: function () { return getTextContent_1.default; } });
    Object.defineProperty(exports, "validate", { enumerable: true, get: function () { return validate_1.default; } });
    Object.defineProperty(exports, "createNumberDefinition", { enumerable: true, get: function () { return definitionCreators_1.createNumberDefinition; } });
    Object.defineProperty(exports, "createBooleanDefinition", { enumerable: true, get: function () { return definitionCreators_1.createBooleanDefinition; } });
    Object.defineProperty(exports, "createStringDefinition", { enumerable: true, get: function () { return definitionCreators_1.createStringDefinition; } });
    Object.defineProperty(exports, "createArrayDefinition", { enumerable: true, get: function () { return definitionCreators_1.createArrayDefinition; } });
    Object.defineProperty(exports, "createObjectDefinition", { enumerable: true, get: function () { return definitionCreators_1.createObjectDefinition; } });
    Object.defineProperty(exports, "getMetadata", { enumerable: true, get: function () { return metadata_1.getMetadata; } });
    Object.defineProperty(exports, "setMetadata", { enumerable: true, get: function () { return metadata_1.setMetadata; } });
    Object.defineProperty(exports, "removeMetadata", { enumerable: true, get: function () { return metadata_1.removeMetadata; } });
    Object.defineProperty(exports, "arrayPush", { enumerable: true, get: function () { return arrayPush_1.default; } });
    Object.defineProperty(exports, "getObjectKeys", { enumerable: true, get: function () { return getObjectKeys_1.default; } });
    Object.defineProperty(exports, "toArray", { enumerable: true, get: function () { return toArray_1.default; } });
    Object.defineProperty(exports, "getPasteSource", { enumerable: true, get: function () { return getPasteSource_1.default; } });
});
//# sourceMappingURL=index.js.map