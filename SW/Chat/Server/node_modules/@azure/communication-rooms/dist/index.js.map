{"version":3,"file":"index.js","sources":["../src/logger.ts","../src/tracing.ts","../src/generated/src/tracing.ts","../src/generated/src/models/mappers.ts","../src/generated/src/models/parameters.ts","../src/generated/src/operations/rooms.ts","../src/generated/src/operations/participants.ts","../src/generated/src/roomsRestClient.ts","../src/models/mappers.ts","../src/models/uuid.ts","../src/roomsClient.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The \\@azure/logger configuration for this package.\n */\nexport const logger = createClientLogger(\"communication-rooms\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createTracingClient } from \"@azure/core-tracing\";\n\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nexport const tracingClient = createTracingClient({\n  packageName: \"Azure.Communication\",\n  namespace: \"Microsoft.Communication\",\n});\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { createTracingClient } from \"@azure/core-tracing\";\n\nexport const tracingClient = createTracingClient({\n  namespace: \"Microsoft.Communication\",\n  packageName: \"@azure/communication-rooms\",\n  packageVersion: \"1.1.0-beta.1\"\n});\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const CreateRoomRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateRoomRequest\",\n    modelProperties: {\n      validFrom: {\n        serializedName: \"validFrom\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      validUntil: {\n        serializedName: \"validUntil\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      pstnDialOutEnabled: {\n        serializedName: \"pstnDialOutEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      participants: {\n        serializedName: \"participants\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"ParticipantProperties\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ParticipantProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ParticipantProperties\",\n    modelProperties: {\n      role: {\n        serializedName: \"role\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Presenter\", \"Attendee\", \"Consumer\"]\n        }\n      }\n    }\n  }\n};\n\nexport const RoomModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomModel\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      validFrom: {\n        serializedName: \"validFrom\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      validUntil: {\n        serializedName: \"validUntil\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      pstnDialOutEnabled: {\n        serializedName: \"pstnDialOutEnabled\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationError\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CommunicationError\"\n            }\n          }\n        }\n      },\n      innerError: {\n        serializedName: \"innererror\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationError\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoomsCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomsCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoomModel\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateRoomRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateRoomRequest\",\n    modelProperties: {\n      validFrom: {\n        serializedName: \"validFrom\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      validUntil: {\n        serializedName: \"validUntil\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      pstnDialOutEnabled: {\n        serializedName: \"pstnDialOutEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ParticipantsCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ParticipantsCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoomParticipant\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoomParticipant: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomParticipant\",\n    modelProperties: {\n      rawId: {\n        serializedName: \"rawId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      role: {\n        serializedName: \"role\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Presenter\", \"Attendee\", \"Consumer\"]\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateParticipantsRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateParticipantsRequest\",\n    modelProperties: {\n      participants: {\n        serializedName: \"participants\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"ParticipantProperties\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RoomsCreateExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomsCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoomsListExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomsListExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoomsGetExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomsGetExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoomsUpdateExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomsUpdateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoomsDeleteExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomsDeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoomsListNextExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomsListNextExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ParticipantsListExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ParticipantsListExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ParticipantsUpdateExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ParticipantsUpdateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ParticipantsListNextExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ParticipantsListNextExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  CreateRoomRequest as CreateRoomRequestMapper,\n  UpdateRoomRequest as UpdateRoomRequestMapper,\n  UpdateParticipantsRequest as UpdateParticipantsRequestMapper\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const validFrom: OperationParameter = {\n  parameterPath: [\"options\", \"validFrom\"],\n  mapper: CreateRoomRequestMapper\n};\n\nexport const validUntil: OperationParameter = {\n  parameterPath: [\"options\", \"validUntil\"],\n  mapper: CreateRoomRequestMapper\n};\n\nexport const pstnDialOutEnabled: OperationParameter = {\n  parameterPath: [\"options\", \"pstnDialOutEnabled\"],\n  mapper: CreateRoomRequestMapper\n};\n\nexport const participants: OperationParameter = {\n  parameterPath: [\"options\", \"participants\"],\n  mapper: CreateRoomRequestMapper\n};\n\nexport const endpoint: OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2023-10-30-preview\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const repeatabilityRequestID: OperationParameter = {\n  parameterPath: [\"options\", \"repeatabilityRequestID\"],\n  mapper: {\n    serializedName: \"Repeatability-Request-ID\",\n    type: {\n      name: \"Uuid\"\n    }\n  }\n};\n\nexport const repeatabilityFirstSent: OperationParameter = {\n  parameterPath: [\"options\", \"repeatabilityFirstSent\"],\n  mapper: {\n    serializedName: \"Repeatability-First-Sent\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\n\nexport const roomId: OperationURLParameter = {\n  parameterPath: \"roomId\",\n  mapper: {\n    serializedName: \"roomId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType1: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/merge-patch+json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const validFrom1: OperationParameter = {\n  parameterPath: [\"options\", \"validFrom\"],\n  mapper: UpdateRoomRequestMapper\n};\n\nexport const validUntil1: OperationParameter = {\n  parameterPath: [\"options\", \"validUntil\"],\n  mapper: UpdateRoomRequestMapper\n};\n\nexport const pstnDialOutEnabled1: OperationParameter = {\n  parameterPath: [\"options\", \"pstnDialOutEnabled\"],\n  mapper: UpdateRoomRequestMapper\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const participants1: OperationParameter = {\n  parameterPath: [\"options\", \"participants\"],\n  mapper: UpdateParticipantsRequestMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { tracingClient } from \"../tracing\";\nimport { Rooms } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { RoomsRestClient } from \"../roomsRestClient\";\nimport {\n  RoomsCreateOptionalParams,\n  RoomsCreateResponse,\n  RoomsListOptionalParams,\n  RoomsListResponse,\n  RoomsGetOptionalParams,\n  RoomsGetResponse,\n  RoomsUpdateOptionalParams,\n  RoomsUpdateResponse,\n  RoomsDeleteOptionalParams,\n  RoomsListNextOptionalParams,\n  RoomsListNextResponse\n} from \"../models\";\n\n/** Class containing Rooms operations. */\nexport class RoomsImpl implements Rooms {\n  private readonly client: RoomsRestClient;\n\n  /**\n   * Initialize a new instance of the class Rooms class.\n   * @param client Reference to the service client\n   */\n  constructor(client: RoomsRestClient) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a new room.\n   * @param options The options parameters.\n   */\n  async create(\n    options?: RoomsCreateOptionalParams\n  ): Promise<RoomsCreateResponse> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient.create\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { options },\n          createOperationSpec\n        ) as Promise<RoomsCreateResponse>;\n      }\n    );\n  }\n\n  /**\n   * Retrieves all created rooms.\n   * @param options The options parameters.\n   */\n  async list(options?: RoomsListOptionalParams): Promise<RoomsListResponse> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient.list\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { options },\n          listOperationSpec\n        ) as Promise<RoomsListResponse>;\n      }\n    );\n  }\n\n  /**\n   * Retrieves an existing room by id.\n   * @param roomId The id of the room requested.\n   * @param options The options parameters.\n   */\n  async get(\n    roomId: string,\n    options?: RoomsGetOptionalParams\n  ): Promise<RoomsGetResponse> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient.get\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { roomId, options },\n          getOperationSpec\n        ) as Promise<RoomsGetResponse>;\n      }\n    );\n  }\n\n  /**\n   * Update a room with given changes.\n   * @param roomId The id of the room requested.\n   * @param options The options parameters.\n   */\n  async update(\n    roomId: string,\n    options?: RoomsUpdateOptionalParams\n  ): Promise<RoomsUpdateResponse> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient.update\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { roomId, options },\n          updateOperationSpec\n        ) as Promise<RoomsUpdateResponse>;\n      }\n    );\n  }\n\n  /**\n   * Delete a room.\n   * @param roomId The id of the room to be deleted.\n   * @param options The options parameters.\n   */\n  async delete(\n    roomId: string,\n    options?: RoomsDeleteOptionalParams\n  ): Promise<void> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient.delete\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { roomId, options },\n          deleteOperationSpec\n        ) as Promise<void>;\n      }\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  async listNext(\n    nextLink: string,\n    options?: RoomsListNextOptionalParams\n  ): Promise<RoomsListNextResponse> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient.listNext\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { nextLink, options },\n          listNextOperationSpec\n        ) as Promise<RoomsListNextResponse>;\n      }\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.RoomModel\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsCreateExceptionHeaders\n    }\n  },\n  requestBody: {\n    parameterPath: {\n      validFrom: [\"options\", \"validFrom\"],\n      validUntil: [\"options\", \"validUntil\"],\n      pstnDialOutEnabled: [\"options\", \"pstnDialOutEnabled\"],\n      participants: [\"options\", \"participants\"]\n    },\n    mapper: { ...Mappers.CreateRoomRequest, required: true }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoomsCollection\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsListExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoomModel\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsGetExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoomModel\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsUpdateExceptionHeaders\n    }\n  },\n  requestBody: {\n    parameterPath: {\n      validFrom: [\"options\", \"validFrom\"],\n      validUntil: [\"options\", \"validUntil\"],\n      pstnDialOutEnabled: [\"options\", \"pstnDialOutEnabled\"]\n    },\n    mapper: { ...Mappers.UpdateRoomRequest, required: true }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.accept, Parameters.contentType1],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsDeleteExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoomsCollection\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsListNextExceptionHeaders\n    }\n  },\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { tracingClient } from \"../tracing\";\nimport { Participants } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { RoomsRestClient } from \"../roomsRestClient\";\nimport {\n  ParticipantsListOptionalParams,\n  ParticipantsListResponse,\n  ParticipantsUpdateOptionalParams,\n  ParticipantsUpdateResponse,\n  ParticipantsListNextOptionalParams,\n  ParticipantsListNextResponse\n} from \"../models\";\n\n/** Class containing Participants operations. */\nexport class ParticipantsImpl implements Participants {\n  private readonly client: RoomsRestClient;\n\n  /**\n   * Initialize a new instance of the class Participants class.\n   * @param client Reference to the service client\n   */\n  constructor(client: RoomsRestClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get participants in a room.\n   * @param roomId The id of the room to get participants from.\n   * @param options The options parameters.\n   */\n  async list(\n    roomId: string,\n    options?: ParticipantsListOptionalParams\n  ): Promise<ParticipantsListResponse> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient.list\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { roomId, options },\n          listOperationSpec\n        ) as Promise<ParticipantsListResponse>;\n      }\n    );\n  }\n\n  /**\n   * Update participants in a room.\n   * @param roomId The id of the room to update the participants in.\n   * @param options The options parameters.\n   */\n  async update(\n    roomId: string,\n    options?: ParticipantsUpdateOptionalParams\n  ): Promise<ParticipantsUpdateResponse> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient.update\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { roomId, options },\n          updateOperationSpec\n        ) as Promise<ParticipantsUpdateResponse>;\n      }\n    );\n  }\n\n  /**\n   * ListNext\n   * @param roomId The id of the room to get participants from.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  async listNext(\n    roomId: string,\n    nextLink: string,\n    options?: ParticipantsListNextOptionalParams\n  ): Promise<ParticipantsListNextResponse> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient.listNext\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { roomId, nextLink, options },\n          listNextOperationSpec\n        ) as Promise<ParticipantsListNextResponse>;\n      }\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}/participants\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ParticipantsCollection\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.ParticipantsListExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}/participants\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.ParticipantsUpdateExceptionHeaders\n    }\n  },\n  requestBody: {\n    parameterPath: { participants: [\"options\", \"participants\"] },\n    mapper: { ...Mappers.UpdateParticipantsRequest, required: true }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.accept, Parameters.contentType1],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ParticipantsCollection\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.ParticipantsListNextExceptionHeaders\n    }\n  },\n  urlParameters: [Parameters.endpoint, Parameters.roomId, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport { RoomsImpl, ParticipantsImpl } from \"./operations\";\nimport { Rooms, Participants } from \"./operationsInterfaces\";\nimport { RoomsRestClientOptionalParams } from \"./models\";\n\nexport class RoomsRestClient extends coreClient.ServiceClient {\n  endpoint: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the RoomsRestClient class.\n   * @param endpoint The endpoint of the Azure Communication resource.\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: RoomsRestClientOptionalParams) {\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: RoomsRestClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-communication-rooms/1.1.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{endpoint}\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.endpoint = endpoint;\n\n    // Assigning values to Constant parameters\n    this.apiVersion = options.apiVersion || \"2023-10-30-preview\";\n    this.rooms = new RoomsImpl(this);\n    this.participants = new ParticipantsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  rooms: Rooms;\n  participants: Participants;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as RestModel from \"../generated/src/models\";\nimport {\n  CommunicationRoom,\n  ParticipantRole,\n  RoomParticipant,\n  RoomParticipantPatch,\n} from \"./models\";\nimport {\n  CommunicationIdentifier,\n  getIdentifierKind,\n  getIdentifierRawId,\n} from \"@azure/communication-common\";\nimport {\n  ParticipantProperties,\n  RoomParticipant as RESTRoomParticipant,\n} from \"../generated/src/models\";\nimport { createIdentifierFromRawId } from \"@azure/communication-common\";\n\nconst defaultRole: ParticipantRole = \"Attendee\";\n\n/**\n * @internal\n * Mapping room participant customer model to room participant REST model.\n */\nexport const mapToRoomParticipantRestModel = (\n  roomParticipant: RoomParticipantPatch\n): RESTRoomParticipant => {\n  const { id, role } = roomParticipant;\n  if (getIdentifierKind(id).kind !== \"communicationUser\") {\n    throwException(\"We currently only support CommunicationUsers\");\n  }\n  return {\n    rawId: getIdentifierRawId(id),\n    role: role || defaultRole,\n  };\n};\n\n/**\n * @internal\n * Mapping room participant REST model to room participant customer model\n */\nexport const mapToRoomParticipantSDKModel = (\n  roomParticipant: RESTRoomParticipant\n): RoomParticipant => {\n  const { rawId, role } = roomParticipant;\n  return {\n    id: createIdentifierFromRawId(rawId),\n    role: role || defaultRole,\n  };\n};\n\n/**\n * @internal\n * Mapping room participant role to participants rawId.\n */\nexport const mapRoomParticipantToRawId = (\n  participants?: RoomParticipantPatch[]\n): Record<string, ParticipantProperties> => {\n  participants = participants ?? [];\n  const mappedParticipants: Record<string, RestModel.ParticipantProperties> = {};\n  for (const participant of participants) {\n    const mappedParticipant = mapToRoomParticipantRestModel(participant);\n    mappedParticipants[mappedParticipant.rawId] = { role: mappedParticipant.role || defaultRole };\n  }\n\n  return mappedParticipants;\n};\n\n/**\n * @internal\n * Mapping communication identifier for removal.\n */\nexport const mapRoomParticipantForRemoval = (\n  ids: CommunicationIdentifier[]\n): Record<string, ParticipantProperties> => {\n  const mappedParticipants: Record<string, any> = {};\n  for (const id of ids) {\n    const rawId = getIdentifierRawId(id);\n    mappedParticipants[rawId] = null;\n  }\n\n  return mappedParticipants;\n};\n\n/**\n * @internal\n * Mapping room rest model to room customer model.\n */\nexport const mapCommunicationRoomToSDKModel = (room: RestModel.RoomModel): CommunicationRoom => {\n  const { createdAt, ...rest } = room;\n  return {\n    createdOn: createdAt,\n    ...rest,\n  };\n};\n\nfunction throwException(errorMessage: string): never {\n  throw new Error(errorMessage);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { v4 as uuidv4 } from \"uuid\";\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n * @internal\n */\nexport function generateUuid(): string {\n  return uuidv4();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { InternalClientPipelineOptions } from \"@azure/core-client\";\nimport { KeyCredential, TokenCredential } from \"@azure/core-auth\";\nimport {\n  CommunicationIdentifier,\n  createCommunicationAuthPolicy,\n  isKeyCredential,\n  parseClientArguments,\n} from \"@azure/communication-common\";\n\nimport { logger } from \"./logger\";\nimport { tracingClient } from \"./tracing\";\nimport { RoomsRestClient } from \"./generated/src\";\nimport {\n  mapCommunicationRoomToSDKModel,\n  mapRoomParticipantForRemoval,\n  mapRoomParticipantToRawId,\n  mapToRoomParticipantSDKModel,\n} from \"./models/mappers\";\nimport { CommunicationRoom, RoomParticipantPatch, RoomParticipant } from \"./models/models\";\nimport {\n  CreateRoomOptions,\n  DeleteRoomOptions,\n  GetRoomOptions,\n  ListParticipantsOptions,\n  ListRoomOptions,\n  RemoveParticipantsOptions,\n  RoomsClientOptions,\n  UpdateRoomOptions,\n  AddOrUpdateParticipantsOptions,\n} from \"./models/options\";\nimport { generateUuid } from \"./models/uuid\";\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\n\n/**\n * @internal\n * Checks whether the type of a value is RoomsClientOptions or not.\n * @param options - The value being checked.\n */\nconst isRoomsClientOptions = (options: any): options is RoomsClientOptions =>\n  !!options && !isKeyCredential(options);\n\n/**\n * @internal\n * Arguments for retrieving the next page of search results.\n */\ninterface ListPageSettings {\n  /**\n   * A token used for retrieving the next page of results when the server\n   * enforces pagination.\n   */\n  continuationToken?: string;\n}\n\n/**\n * The Rooms service client.\n */\nexport class RoomsClient {\n  private readonly client: RoomsRestClient;\n\n  /**\n   * Initializes a new instance of the RoomsClient class.\n   * @param connectionString - Connection string to connect to an Azure Communication Service resource.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(connectionString: string, options?: RoomsClientOptions);\n\n  /**\n   * Initializes a new instance of the RoomsClient using a TokenCredential\n   * @param endpoint - The url of the Communication Services resource\n   * @param credential - An object that is used to authenticate requests to the service. Use the Azure KeyCredential from `@azure/identity` or AzureCommunicationTokenCredential from `@azure/communication-common` to create a credential.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    endpoint: string,\n    credential: KeyCredential | TokenCredential,\n    options?: RoomsClientOptions\n  );\n\n  constructor(\n    connectionStringOrUrl: string,\n    credentialOrOptions?: RoomsClientOptions | KeyCredential | TokenCredential,\n    maybeOptions: RoomsClientOptions = {}\n  ) {\n    const { url, credential } = parseClientArguments(connectionStringOrUrl, credentialOrOptions);\n    const options = isRoomsClientOptions(credentialOrOptions) ? credentialOrOptions : maybeOptions;\n\n    const internalPipelineOptions: InternalClientPipelineOptions = {\n      ...options,\n      ...{\n        loggingOptions: {\n          logger: logger.info,\n        },\n      },\n    };\n\n    this.client = new RoomsRestClient(url, { endpoint: url, ...internalPipelineOptions });\n\n    const authPolicy = createCommunicationAuthPolicy(credential);\n\n    this.client.pipeline.addPolicy(authPolicy);\n  }\n\n  /**\n   * Creates a new room asynchronously.\n   * @param request - Request for creating a room.\n   * @param options - Operation options.\n   * @returns a RoomModel object with the values of the created room.\n   */\n  public async createRoom(options: CreateRoomOptions = {}): Promise<CommunicationRoom> {\n    const repeatabilityRequestId = generateUuid();\n    const repeatabilityFirstSent = new Date();\n    return tracingClient.withSpan(\"RoomsClient-CreateRoom\", options, async () => {\n      const room = await this.client.rooms.create({\n        ...options,\n        repeatabilityFirstSent: repeatabilityFirstSent,\n        repeatabilityRequestID: repeatabilityRequestId,\n        participants: mapRoomParticipantToRawId(options.participants),\n      });\n      return mapCommunicationRoomToSDKModel(room);\n    });\n  }\n\n  /**\n   * Updates a room asynchronously.\n   * @param roomId - ID of the room.\n   * @param request - Request for updating a room.\n   * @param options - Operational options.\n   * @returns a RoomModel object with the values of the created room.\n   */\n  public async updateRoom(\n    roomId: string,\n    options: UpdateRoomOptions = {}\n  ): Promise<CommunicationRoom> {\n    return tracingClient.withSpan(\"RoomsClient-UpdateRoom\", options, async () => {\n      const room = await this.client.rooms.update(roomId, options);\n      return mapCommunicationRoomToSDKModel(room);\n    });\n  }\n\n  /**\n   * Gets a room by id asynchronously.\n   * @param roomId - ID of the room.\n   * @param options - Operational options.\n   * @returns a RoomModel object with the values of the created room.\n   */\n  public async getRoom(roomId: string, options: GetRoomOptions = {}): Promise<CommunicationRoom> {\n    return tracingClient.withSpan(\"RoomsClient-GetRoom\", options, async (updatedOptions) => {\n      const room = await this.client.rooms.get(roomId, updatedOptions);\n      return mapCommunicationRoomToSDKModel(room);\n    });\n  }\n\n  private async *listRoomsPage(\n    pageSettings: ListPageSettings,\n    options: ListRoomOptions = {}\n  ): AsyncIterableIterator<CommunicationRoom[]> {\n    if (!pageSettings.continuationToken) {\n      const currentSetResponse = await this.client.rooms.list(options);\n      pageSettings.continuationToken = currentSetResponse.nextLink;\n      if (currentSetResponse.value) {\n        yield currentSetResponse.value.map((room) => mapCommunicationRoomToSDKModel(room));\n      }\n    }\n\n    while (pageSettings.continuationToken) {\n      const currentSetResponse = await this.client.rooms.listNext(\n        pageSettings.continuationToken,\n        options\n      );\n      pageSettings.continuationToken = currentSetResponse.nextLink;\n      if (currentSetResponse.value) {\n        yield currentSetResponse.value.map((room) => mapCommunicationRoomToSDKModel(room));\n      } else {\n        break;\n      }\n    }\n  }\n\n  private async *listRoomsAll(\n    options: ListRoomOptions = {}\n  ): AsyncIterableIterator<CommunicationRoom> {\n    for await (const page of this.listRoomsPage({}, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the list of rooms\n   * @param options - Operational options\n   */\n  public listRooms(options: ListRoomOptions = {}): PagedAsyncIterableIterator<CommunicationRoom> {\n    const { span, updatedOptions } = tracingClient.startSpan(\"RoomsClient-ListRooms\", options);\n    try {\n      const iter = this.listRoomsAll(updatedOptions);\n      return {\n        next() {\n          return iter.next();\n        },\n        [Symbol.asyncIterator]() {\n          return this;\n        },\n        byPage: (settings: ListPageSettings = {}) => {\n          return this.listRoomsPage(settings, updatedOptions);\n        },\n      };\n    } catch (e: any) {\n      span.setStatus({\n        error: e,\n        status: \"error\",\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Deletes a room by id asynchronously.\n   * @param roomId - ID of the room.\n   * @param options - Operational options.\n   */\n  public async deleteRoom(roomId: string, options: DeleteRoomOptions = {}): Promise<void> {\n    return tracingClient.withSpan(\"RoomsClient-DeleteRoom\", options, async (updatedOptions) => {\n      await this.client.rooms.delete(roomId, updatedOptions);\n    });\n  }\n\n  private async *listParticipantsPage(\n    roomId: string,\n    pageSettings: ListPageSettings,\n    options: ListParticipantsOptions = {}\n  ): AsyncIterableIterator<RoomParticipant[]> {\n    if (!pageSettings.continuationToken) {\n      const currentSetResponse = await this.client.participants.list(roomId, options);\n      pageSettings.continuationToken = currentSetResponse.nextLink;\n      if (currentSetResponse.value) {\n        yield currentSetResponse.value.map(mapToRoomParticipantSDKModel, this);\n      }\n    }\n\n    while (pageSettings.continuationToken) {\n      const currentSetResponse = await this.client.participants.listNext(\n        roomId,\n        pageSettings.continuationToken,\n        options\n      );\n      pageSettings.continuationToken = currentSetResponse.nextLink;\n      if (currentSetResponse.value) {\n        yield currentSetResponse.value.map(mapToRoomParticipantSDKModel, this);\n      } else {\n        break;\n      }\n    }\n  }\n\n  private async *listParticipantsAll(\n    roomId: string,\n    options: ListParticipantsOptions = {}\n  ): AsyncIterableIterator<RoomParticipant> {\n    for await (const page of this.listParticipantsPage(roomId, {}, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the participants of a room asynchronously.\n   * @param roomId - ID of the room.\n   * @param options - Operational options.\n   * @returns a list of all the participants in the room.\n   */\n  public listParticipants(\n    roomId: string,\n    options: ListParticipantsOptions = {}\n  ): PagedAsyncIterableIterator<RoomParticipant> {\n    const { span, updatedOptions } = tracingClient.startSpan(\n      \"RoomsClient-GetParticipants\",\n      options\n    );\n    try {\n      const iter = this.listParticipantsAll(roomId, updatedOptions);\n      return {\n        next() {\n          return iter.next();\n        },\n        [Symbol.asyncIterator]() {\n          return this;\n        },\n        byPage: (settings: ListPageSettings = {}) => {\n          return this.listParticipantsPage(roomId, settings, updatedOptions);\n        },\n      };\n    } catch (e: any) {\n      span.setStatus({\n        error: e,\n        status: \"error\",\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Updates the Participants in a Room asynchronously.\n   * Participant is added to room if they did not exist and updated if already in room.\n   * @param roomId - ID of the room.\n   * @param participants - List of participants to add or update.\n   * @param options - Operational options.\n   * @returns a list of all the participants in the room.\n   */\n  public async addOrUpdateParticipants(\n    roomId: string,\n    participants: RoomParticipantPatch[],\n    options: AddOrUpdateParticipantsOptions = {}\n  ): Promise<void> {\n    return tracingClient.withSpan(\n      \"RoomsClient-AddOrUpdateParticipants\",\n      options,\n      (updatedOptions) => {\n        this.client.participants.update(roomId, {\n          ...updatedOptions,\n          participants: mapRoomParticipantToRawId(participants),\n        });\n      }\n    );\n  }\n\n  /**\n   * Removes Participants from a Room asynchronously.\n   * @param roomId - ID of the room.\n   * @param participantIdentifiers - List of participants' communication identifiers to remove from room.\n   * @param options - Operational options.\n   * @returns a list of all the participants in the room.\n   */\n  public async removeParticipants(\n    roomId: string,\n    participantIdentifiers: CommunicationIdentifier[],\n    options: RemoveParticipantsOptions = {}\n  ): Promise<void> {\n    return tracingClient.withSpan(\"RoomsClient-RemoveParticipants\", options, (updatedOptions) => {\n      this.client.participants.update(roomId, {\n        ...updatedOptions,\n        participants: mapRoomParticipantForRemoval(participantIdentifiers),\n      });\n    });\n  }\n}\n"],"names":["createClientLogger","tracingClient","createTracingClient","listOperationSpec","updateOperationSpec","listNextOperationSpec","serializer","coreClient","Mappers.RoomModel","Mappers.CommunicationErrorResponse","Mappers.RoomsCreateExceptionHeaders","Mappers.CreateRoomRequest","Parameters.apiVersion","Parameters.endpoint","Parameters.contentType","Parameters.accept","Parameters.repeatabilityRequestID","Parameters.repeatabilityFirstSent","Mappers.RoomsCollection","Mappers.RoomsListExceptionHeaders","Mappers.RoomsGetExceptionHeaders","Parameters.roomId","Mappers.RoomsUpdateExceptionHeaders","Mappers.UpdateRoomRequest","Parameters.contentType1","Mappers.RoomsDeleteExceptionHeaders","Mappers.RoomsListNextExceptionHeaders","Parameters.nextLink","Mappers.ParticipantsCollection","Mappers.ParticipantsListExceptionHeaders","Mappers.ParticipantsUpdateExceptionHeaders","Mappers.UpdateParticipantsRequest","Mappers.ParticipantsListNextExceptionHeaders","getIdentifierKind","getIdentifierRawId","createIdentifierFromRawId","__rest","uuidv4","isKeyCredential","parseClientArguments","createCommunicationAuthPolicy","__await","__asyncValues","__asyncDelegator"],"mappings":"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"}