{"version":3,"file":"participants.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/participants.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { tracingClient } from \"../tracing\";\nimport { Participants } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { RoomsRestClient } from \"../roomsRestClient\";\nimport {\n  ParticipantsListOptionalParams,\n  ParticipantsListResponse,\n  ParticipantsUpdateOptionalParams,\n  ParticipantsUpdateResponse,\n  ParticipantsListNextOptionalParams,\n  ParticipantsListNextResponse\n} from \"../models\";\n\n/** Class containing Participants operations. */\nexport class ParticipantsImpl implements Participants {\n  private readonly client: RoomsRestClient;\n\n  /**\n   * Initialize a new instance of the class Participants class.\n   * @param client Reference to the service client\n   */\n  constructor(client: RoomsRestClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get participants in a room.\n   * @param roomId The id of the room to get participants from.\n   * @param options The options parameters.\n   */\n  async list(\n    roomId: string,\n    options?: ParticipantsListOptionalParams\n  ): Promise<ParticipantsListResponse> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient.list\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { roomId, options },\n          listOperationSpec\n        ) as Promise<ParticipantsListResponse>;\n      }\n    );\n  }\n\n  /**\n   * Update participants in a room.\n   * @param roomId The id of the room to update the participants in.\n   * @param options The options parameters.\n   */\n  async update(\n    roomId: string,\n    options?: ParticipantsUpdateOptionalParams\n  ): Promise<ParticipantsUpdateResponse> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient.update\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { roomId, options },\n          updateOperationSpec\n        ) as Promise<ParticipantsUpdateResponse>;\n      }\n    );\n  }\n\n  /**\n   * ListNext\n   * @param roomId The id of the room to get participants from.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  async listNext(\n    roomId: string,\n    nextLink: string,\n    options?: ParticipantsListNextOptionalParams\n  ): Promise<ParticipantsListNextResponse> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient.listNext\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { roomId, nextLink, options },\n          listNextOperationSpec\n        ) as Promise<ParticipantsListNextResponse>;\n      }\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}/participants\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ParticipantsCollection\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.ParticipantsListExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}/participants\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.ParticipantsUpdateExceptionHeaders\n    }\n  },\n  requestBody: {\n    parameterPath: { participants: [\"options\", \"participants\"] },\n    mapper: { ...Mappers.UpdateParticipantsRequest, required: true }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.accept, Parameters.contentType1],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ParticipantsCollection\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.ParticipantsListNextExceptionHeaders\n    }\n  },\n  urlParameters: [Parameters.endpoint, Parameters.roomId, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"]}