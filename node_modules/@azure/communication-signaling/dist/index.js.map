{"version":3,"file":"index.js","sources":["../../../common/temp/node_modules/.pnpm/@skype+tsregistrar@2022.35.0-1.29-430fb/node_modules/@skype/tsregistrar/lib/webpack:/webpack/universalModuleDefinition","../../../common/temp/node_modules/.pnpm/@skype+tsregistrar@2022.35.0-1.29-430fb/node_modules/@skype/tsregistrar/lib/webpack:/webpack/bootstrap 591b2d84fdd0197cb53a","../../../common/temp/node_modules/.pnpm/@skype+tsregistrar@2022.35.0-1.29-430fb/node_modules/@skype/tsregistrar/lib/webpack:/tsregistrar.js","../../../common/temp/node_modules/.pnpm/@skype+tsregistrar@2022.35.0-1.29-430fb/node_modules/@skype/tsregistrar/lib/webpack:/lib_temp/Common.ts","../../../common/temp/node_modules/.pnpm/@skype+tsregistrar@2022.35.0-1.29-430fb/node_modules/@skype/tsregistrar/lib/webpack:/lib_temp/RegistrarClient.ts","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/webpack/universalModuleDefinition","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/webpack/bootstrap 278ec14d51dba60bf7eb","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/tstrouter.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/Logger.ts","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/Constants.ts","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/Interfaces.ts","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/Common.ts","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/(webpack)/buildin/global.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/InternalInterfaces.ts","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/TrouterConnection.ts","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/MessageHandler.ts","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/SkypeTokenProviderWithCache.ts","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/TrouterManager.ts","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/TrouterUrlPromise.ts","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/socket.io.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/config/versionTemplate.txt","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/utils.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/asap.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/then.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/promise/resolve.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/-internal.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/enumerator.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/promise/all.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/promise/race.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/promise/reject.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/promise.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise/polyfill.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib/es6-promise.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/~/process/browser.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/(webpack)/buildin/module.js","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/ConnectionTracker.ts","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/ExponentialBackoff.ts","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/TrouterFsm.ts","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/TrouterManagerFsm.ts","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/lib_temp/TsTrouter.ts","../../../common/temp/node_modules/.pnpm/@skype+tstrouter@2022.35.0-1.29-430fb/node_modules/@skype/tstrouter/lib/webpack:/external \"@skype/tsregistrar\"","../dist-esm/src/constants.js","../dist-esm/src/TrouterUtils.js","../dist-esm/src/TrouterSettings.js","../dist-esm/src/SignalingClient.js","../dist-esm/src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@skype/tsregistrar\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@skype/tsregistrar\"] = factory();\n\telse\n\t\troot[\"@skype/tsregistrar\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 591b2d84fdd0197cb53a","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@skype/tsregistrar\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@skype/tsregistrar\"] = factory();\n\telse\n\t\troot[\"@skype/tsregistrar\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable:no-any\r\n// tslint:disable:export-name\r\n/** Wrapper to send request with specified timeout */\r\n// tslint:disable-next-line:promise-function-async\r\nfunction fetchWithTimeout(request, timeoutMs) {\r\n    var timeoutId;\r\n    var fetchPromise = new Promise(function (resolve, reject) {\r\n        fetch(request).then(function (response) {\r\n            clearTimeout(timeoutId);\r\n            resolve(response);\r\n        }).catch(function (error) {\r\n            clearTimeout(timeoutId);\r\n            reject(error);\r\n        });\r\n    });\r\n    if (timeoutMs !== 0) {\r\n        var timeoutPromise = new Promise(function (resolve, reject) {\r\n            // tslint:disable-next-line:no-string-based-set-timeout - false positive\r\n            timeoutId = setTimeout(reject, timeoutMs, new Error(\"Fetch for '\" + request.url + \"' timed out\"));\r\n        });\r\n        return Promise.race([fetchPromise, timeoutPromise]);\r\n    }\r\n    return fetchPromise;\r\n}\r\nexports.fetchWithTimeout = fetchWithTimeout;\r\nfunction toJson(obj) {\r\n    try {\r\n        return JSON.stringify(obj);\r\n    }\r\n    catch (error) {\r\n        return \"Unable to serialize object of type \" + typeof obj;\r\n    }\r\n}\r\nexports.toJson = toJson;\r\n/**\r\n * Simplify calculation of time intervals\r\n */\r\nvar Timespan = /** @class */ (function () {\r\n    function Timespan() {\r\n        this.start = Date.now();\r\n    }\r\n    Object.defineProperty(Timespan.prototype, \"duration\", {\r\n        /**\r\n         * Returns number of milliseconds from start\r\n         */\r\n        get: function () {\r\n            return Date.now() - this.start;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Timespan.prototype, \"startTime\", {\r\n        /**\r\n         * Returns start time\r\n         */\r\n        get: function () {\r\n            return this.start;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Reset start of interval to current timestamp\r\n     */\r\n    Timespan.prototype.reset = function () {\r\n        this.start = Date.now();\r\n    };\r\n    return Timespan;\r\n}());\r\nexports.Timespan = Timespan;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Common_1 = __webpack_require__(0);\r\n/**\r\n * Thrown when retry process was cancelled\r\n */\r\nvar CancelationError = /** @class */ (function (_super) {\r\n    __extends(CancelationError, _super);\r\n    function CancelationError(message) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.name = 'CancelationError';\r\n        return _this;\r\n    }\r\n    return CancelationError;\r\n}(Error));\r\n/**\r\n * Randomized exponential delay used for retries\r\n */\r\nvar ExponentialDelay = /** @class */ (function () {\r\n    function ExponentialDelay(logger, maxBackoffInMs, initialDelay) {\r\n        this.logger = logger;\r\n        this.maxBackoffInMs = maxBackoffInMs;\r\n        this.initialDelay = initialDelay;\r\n        this.backoffCount = 0;\r\n        this.id = ++ExponentialDelay.idCounter;\r\n    }\r\n    // tslint:disable-next-line: promise-function-async\r\n    ExponentialDelay.prototype.delay = function (taskName) {\r\n        var _this = this;\r\n        if (this.timerHandle !== undefined) {\r\n            throw new Error('Retry sequence logical failure');\r\n        }\r\n        if (this.backoffCount === -1) {\r\n            return new Promise(function (resolve, reject) { reject(new CancelationError('Cancelled')); });\r\n        }\r\n        var backoffMs = this.calculateNextBackoffMs();\r\n        this.backoffCount++;\r\n        this.logger.info(\"[RegistrarClient] Backing off \" + taskName + \" for \" + backoffMs + \" milliseconds with ID \" + this.id);\r\n        return new Promise(function (resolve, reject) {\r\n            _this.cancelFunc = reject;\r\n            _this.timerHandle = setTimeout(function () {\r\n                _this.logger.info(\"[RegistrarClient] Back off for \" + taskName + \" with ID \" + _this.id + \" complete\");\r\n                _this.timerHandle = undefined;\r\n                resolve();\r\n            }, backoffMs);\r\n        });\r\n    };\r\n    ExponentialDelay.prototype.cancel = function () {\r\n        if (this.timerHandle !== undefined) {\r\n            this.logger.debug('Resetting back off');\r\n            clearTimeout(this.timerHandle);\r\n            if (this.cancelFunc !== undefined) {\r\n                this.cancelFunc(new CancelationError('Cancelled'));\r\n            }\r\n        }\r\n        this.backoffCount = -1;\r\n    };\r\n    ExponentialDelay.prototype.calculateNextBackoffMs = function () {\r\n        // tslint:disable-next-line:insecure-random\r\n        var fudge = 1 + (Math.random() - 0.5) * 0.4; // +/- 20%\r\n        var backoff = this.initialDelay * Math.pow(2, this.backoffCount) * fudge;\r\n        backoff = Math.round(backoff);\r\n        return Math.min(this.maxBackoffInMs, backoff);\r\n    };\r\n    ExponentialDelay.idCounter = 0;\r\n    return ExponentialDelay;\r\n}());\r\n/**\r\n * Registrar client implementation\r\n */\r\nvar RegistrarClient = /** @class */ (function () {\r\n    function RegistrarClient(logger, skypeTokenProvider, options) {\r\n        this.logger = logger;\r\n        this.skypeTokenProvider = skypeTokenProvider;\r\n        this.options = options;\r\n        this.DEFAULT_MAX_RETRIES_FOR_GET_TOKEN = 15;\r\n        // Default value for maximum backoff between retries\r\n        this.DEFAULT_MAX_BACKOFF_TIME_IN_MS = 300000; // 5 minutes\r\n        this.backoffs = {};\r\n        this.maxBackOffTime =\r\n            this.options.maxRetryDelayMs > 0\r\n                ? this.options.maxRetryDelayMs\r\n                : this.DEFAULT_MAX_BACKOFF_TIME_IN_MS;\r\n        this.maxRetriesForGetToken =\r\n            options.maxRetriesForGetToken === undefined ||\r\n                options.maxRetriesForGetToken === null\r\n                ? this.DEFAULT_MAX_RETRIES_FOR_GET_TOKEN\r\n                : options.maxRetriesForGetToken;\r\n    }\r\n    RegistrarClient.prototype.setTelemetryLogger = function (eventLogger) {\r\n        this.eventLogger = eventLogger;\r\n    };\r\n    RegistrarClient.prototype.register = function (client, transports) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.performRegistration(client, transports, 'pr_set_registration')];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.cachedRegistrationParams = [client, transports];\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RegistrarClient.prototype.unregister = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var unregisterRequest;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.info('[RegistrarClient] sending unregister request');\r\n                        unregisterRequest = new Request(this.options.registrarUrl + \"/\" + this.options.registrationId, {\r\n                            method: 'DELETE',\r\n                            mode: 'cors',\r\n                            headers: new Headers({\r\n                                accept: 'application/json, text/javascript'\r\n                            })\r\n                        });\r\n                        return [4 /*yield*/, this.callRegistrar(unregisterRequest, 'pr_delete_registration')];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RegistrarClient.prototype.cancelPendingRequests = function () {\r\n        var _this = this;\r\n        Object.keys(this.backoffs).forEach(function (id) {\r\n            _this.backoffs[id].cancel();\r\n        });\r\n        this.backoffs = {};\r\n    };\r\n    RegistrarClient.prototype.resendRegistration = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.cachedRegistrationParams) {\r\n                            throw new Error('Re-registration failed because there is no registration parameters cached');\r\n                        }\r\n                        return [4 /*yield*/, this.performRegistration(this.cachedRegistrationParams[0], this.cachedRegistrationParams[1], 'pr_resend_registration')];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RegistrarClient.prototype.performRegistration = function (client, transports, eventName) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var payload, registerRequest;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.info('[RegistrarClient] Sending register request');\r\n                        payload = {\r\n                            clientDescription: client,\r\n                            registrationId: this.options.registrationId,\r\n                            nodeId: '',\r\n                            transports: transports\r\n                        };\r\n                        registerRequest = new Request(this.options.registrarUrl, {\r\n                            method: 'POST',\r\n                            mode: 'cors',\r\n                            headers: new Headers({\r\n                                'content-type': 'application/json',\r\n                                accept: 'application/json, text/javascript'\r\n                            }),\r\n                            body: Common_1.toJson(payload)\r\n                        });\r\n                        return [4 /*yield*/, this.callRegistrar(registerRequest, eventName)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RegistrarClient.prototype.startBackoff = function () {\r\n        var backoff = new ExponentialDelay(this.logger, this.maxBackOffTime, this.options.initialRetryDelayMs);\r\n        this.backoffs[backoff.id] = backoff;\r\n        return backoff;\r\n    };\r\n    RegistrarClient.prototype.stopBackoff = function (backoff) {\r\n        backoff.cancel();\r\n        delete this.backoffs[backoff.id];\r\n    };\r\n    RegistrarClient.prototype.getSkypeToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var backoff, retryCount, token, error_1, stringfiedError, err, cancelError_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        backoff = this.startBackoff();\r\n                        retryCount = 0;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 8]);\r\n                        this.logger.info('[RegistrarClient] Asking for a new skypetoken');\r\n                        return [4 /*yield*/, this.skypeTokenProvider(true)];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        this.stopBackoff(backoff);\r\n                        return [2 /*return*/, token];\r\n                    case 3:\r\n                        error_1 = _a.sent();\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        _a.trys.push([4, 6, , 7]);\r\n                        retryCount++;\r\n                        stringfiedError = JSON.stringify(error_1);\r\n                        if (retryCount > this.maxRetriesForGetToken) {\r\n                            err = \"[RegistrarClient] getSkypeToken retry limit hit. Will not retry now. Error: \" + stringfiedError;\r\n                            this.logger.error(err);\r\n                            this.stopBackoff(backoff);\r\n                            return [2 /*return*/, Promise.reject(err)];\r\n                        }\r\n                        this.logger.warn(\"[RegistrarClient] Retrying for a new skype token. Retry Count: \" + retryCount + \" Error: \" + stringfiedError);\r\n                        return [4 /*yield*/, backoff.delay('Fetching a new skypetoken')];\r\n                    case 5:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 6:\r\n                        cancelError_1 = _a.sent();\r\n                        this.stopBackoff(backoff);\r\n                        throw cancelError_1;\r\n                    case 7: return [3 /*break*/, 8];\r\n                    case 8: return [3 /*break*/, 1];\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RegistrarClient.prototype.callRegistrar = function (request, eventName) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var backoff, cachedSkypetoken, stopwatch, retryCount, response, req, err, _a, _b, error_2, canceledError_1, details, _c, _d, error_3, message;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        backoff = this.startBackoff();\r\n                        return [4 /*yield*/, this.skypeTokenProvider(false)];\r\n                    case 1:\r\n                        cachedSkypetoken = _e.sent();\r\n                        this.setSkypeTokenHeader(request, cachedSkypetoken);\r\n                        stopwatch = new Common_1.Timespan();\r\n                        retryCount = 0;\r\n                        _e.label = 2;\r\n                    case 2:\r\n                        response = void 0;\r\n                        _e.label = 3;\r\n                    case 3:\r\n                        _e.trys.push([3, 8, 13, 14]);\r\n                        req = request.clone();\r\n                        return [4 /*yield*/, Common_1.fetchWithTimeout(req, this.options.requestTimeoutMs)];\r\n                    case 4:\r\n                        response = _e.sent();\r\n                        if (!(response.status === 401)) return [3 /*break*/, 6];\r\n                        retryCount++;\r\n                        if (retryCount > this.maxRetriesForGetToken) {\r\n                            err = \"[RegistrarClient] getSkypeToken retry limit hit. Will not retry now. Request '\" + request.url + \"' failed with \" + response.status + \" \" + response.statusText;\r\n                            this.logger.error(err);\r\n                            this.stopBackoff(backoff);\r\n                            return [2 /*return*/, Promise.reject(err)];\r\n                        }\r\n                        this.logger.warn(\"[RegistrarClient] Retry Count \" + retryCount + \". Request '\" + request.url + \"' failed with \" + response.status + \" \" + response.statusText);\r\n                        _a = this.setSkypeTokenHeader;\r\n                        _b = [request];\r\n                        return [4 /*yield*/, this.getSkypeToken()];\r\n                    case 5:\r\n                        _a.apply(this, _b.concat([_e.sent()]));\r\n                        //should we wait before retrying with a new skypetoken?\r\n                        return [3 /*break*/, 20];\r\n                    case 6:\r\n                        if (response.status >= 500 && response.status < 600) {\r\n                            // throw and retry after in the catch section\r\n                            throw new Error(\"Fetch for '\" + request.url + \"' failed with \" + response.status + \" \" + response.statusText);\r\n                        }\r\n                        _e.label = 7;\r\n                    case 7: return [3 /*break*/, 14];\r\n                    case 8:\r\n                        error_2 = _e.sent();\r\n                        this.logger.error(\"[RegistrarClient] Request failed with \" + error_2);\r\n                        _e.label = 9;\r\n                    case 9:\r\n                        _e.trys.push([9, 11, , 12]);\r\n                        // retry on network errors (thrown by fetch) and retryable codes\r\n                        return [4 /*yield*/, backoff.delay('Registrar call retry')];\r\n                    case 10:\r\n                        // retry on network errors (thrown by fetch) and retryable codes\r\n                        _e.sent();\r\n                        return [3 /*break*/, 20];\r\n                    case 11:\r\n                        canceledError_1 = _e.sent();\r\n                        this.logger.error('[RegistrarClient] Request cancelled');\r\n                        this.stopBackoff(backoff);\r\n                        throw canceledError_1;\r\n                    case 12: return [3 /*break*/, 14];\r\n                    case 13:\r\n                        this.sendTelemetryEvent(eventName, request, response, stopwatch);\r\n                        return [7 /*endfinally*/];\r\n                    case 14:\r\n                        this.stopBackoff(backoff);\r\n                        if (!response.ok) return [3 /*break*/, 15];\r\n                        return [2 /*return*/, response];\r\n                    case 15:\r\n                        details = void 0;\r\n                        _e.label = 16;\r\n                    case 16:\r\n                        _e.trys.push([16, 18, , 19]);\r\n                        _d = (_c = JSON).stringify;\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 17:\r\n                        details = _d.apply(_c, [_e.sent()]);\r\n                        return [3 /*break*/, 19];\r\n                    case 18:\r\n                        error_3 = _e.sent();\r\n                        details = 'no details';\r\n                        return [3 /*break*/, 19];\r\n                    case 19:\r\n                        message = \"Fetch for '\" + request.url + \"' failed with \" + response.status + \" \" + response.statusText + \" (\" + details + \", MS-CV: \" + response.headers.get('MS-CV') + \")\";\r\n                        this.logger.error(\"[RegistrarClient] \" + message);\r\n                        throw new Error(message);\r\n                    case 20: return [3 /*break*/, 2];\r\n                    case 21: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RegistrarClient.prototype.setSkypeTokenHeader = function (request, skypetoken) {\r\n        // tslint:disable-next-line: no-backbone-get-set-outside-model\r\n        request.headers.set('X-Skypetoken', skypetoken);\r\n    };\r\n    RegistrarClient.prototype.sendTelemetryEvent = function (eventName, request, response, stopwatch) {\r\n        if (this.eventLogger === undefined) {\r\n            return;\r\n        }\r\n        var clientEvent = {\r\n            name: eventName,\r\n            properties: {\r\n                url: { value: request.url },\r\n                result_code: { value: response !== undefined ? response.status : 0 },\r\n                begin_timestamp: { value: stopwatch.startTime },\r\n                elapsed: { value: stopwatch.duration }\r\n            }\r\n        };\r\n        this.eventLogger.logEvent(clientEvent);\r\n    };\r\n    return RegistrarClient;\r\n}());\r\nexports.RegistrarClient = RegistrarClient;\r\nfunction createRegistrarClient(logProvider, skypeTokenProvider, options) {\r\n    return new RegistrarClient(logProvider, skypeTokenProvider, options);\r\n}\r\nexports.createRegistrarClient = createRegistrarClient;\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// tsregistrar.js","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\n// tslint:disable:no-any\r\n// tslint:disable:export-name\r\n\r\n/** Wrapper to send request with specified timeout */\r\n// tslint:disable-next-line:promise-function-async\r\nexport function fetchWithTimeout(request: Request, timeoutMs: number): Promise<Response> {\r\n    let timeoutId: number | undefined;\r\n    const fetchPromise = new Promise<Response>((resolve, reject) => {\r\n        fetch(request).then((response) => {\r\n            clearTimeout(timeoutId);\r\n            resolve(response);\r\n        }).catch((error) => {\r\n            clearTimeout(timeoutId);\r\n            reject(error);\r\n        });\r\n    });\r\n    if (timeoutMs !== 0) {\r\n        const timeoutPromise = new Promise<Response>((resolve, reject) => {\r\n            // tslint:disable-next-line:no-string-based-set-timeout - false positive\r\n            timeoutId = setTimeout(reject, timeoutMs, new Error(`Fetch for '${request.url}' timed out`));\r\n          });\r\n\r\n        return Promise.race([fetchPromise, timeoutPromise]);\r\n    }\r\n\r\n    return fetchPromise;\r\n}\r\n\r\nexport function toJson(obj: any): string {\r\n    try {\r\n        return JSON.stringify(obj);\r\n    } catch (error) {\r\n        return `Unable to serialize object of type ${typeof obj}`;\r\n    }\r\n}\r\n\r\n/**\r\n * Simplify calculation of time intervals\r\n */\r\nexport class Timespan {\r\n    private start: number;\r\n\r\n    constructor() {\r\n        this.start = Date.now();\r\n    }\r\n\r\n    /**\r\n     * Returns number of milliseconds from start\r\n     */\r\n    public get duration(): number {\r\n        return Date.now() - this.start;\r\n    }\r\n\r\n    /**\r\n     * Returns start time\r\n     */\r\n    public get startTime() {\r\n        return this.start;\r\n    }\r\n\r\n    /**\r\n     * Reset start of interval to current timestamp\r\n     */\r\n    public reset() {\r\n        this.start = Date.now();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/Common.ts","import { fetchWithTimeout, Timespan, toJson } from './Common';\r\nimport { IClientDescription, IRegistrarClient, IRegistrarClientOptions, ITelemetrySender,\r\n         ITransports, LogProvider, SkypeTokenProvider, TelemetryEvent } from './Interfaces';\r\n\r\n\r\n/**\r\n * Thrown when retry process was cancelled\r\n */\r\nclass CancelationError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.name = 'CancelationError';\r\n    }\r\n}\r\n\r\n/**\r\n * Randomized exponential delay used for retries\r\n */\r\nclass ExponentialDelay {\r\n    private static idCounter: number = 0;\r\n\r\n    public readonly id: number;\r\n\r\n    private backoffCount: number = 0;\r\n    private timerHandle?: number;\r\n    // tslint:disable-next-line: no-any\r\n    private cancelFunc: ((err?: any) => void) | undefined;\r\n\r\n    public constructor(\r\n        private logger: LogProvider,\r\n        private maxBackoffInMs: number,\r\n        private initialDelay: number\r\n    ) {\r\n        this.id = ++ExponentialDelay.idCounter;\r\n    }\r\n\r\n    // tslint:disable-next-line: promise-function-async\r\n    public delay(taskName: string): Promise<void> {\r\n        if (this.timerHandle !== undefined) {\r\n            throw new Error('Retry sequence logical failure');\r\n        }\r\n\r\n        if (this.backoffCount === -1) {\r\n            return new Promise((resolve, reject) => { reject(new CancelationError('Cancelled')); });\r\n        }\r\n\r\n        const backoffMs = this.calculateNextBackoffMs();\r\n        this.backoffCount++;\r\n        this.logger.info(`[RegistrarClient] Backing off ${taskName} for ${backoffMs} milliseconds with ID ${this.id}`);\r\n\r\n        return new Promise( (resolve, reject) => {\r\n            this.cancelFunc = reject;\r\n            this.timerHandle = setTimeout(() => {\r\n                this.logger.info(`[RegistrarClient] Back off for ${taskName} with ID ${this.id} complete`);\r\n                this.timerHandle = undefined;\r\n                resolve();\r\n            }, backoffMs);\r\n        });\r\n    }\r\n\r\n    public cancel(): void {\r\n        if (this.timerHandle !== undefined) {\r\n            this.logger.debug('Resetting back off');\r\n            clearTimeout(this.timerHandle);\r\n            if (this.cancelFunc !== undefined) {\r\n                this.cancelFunc(new CancelationError('Cancelled'));\r\n            }\r\n        }\r\n        this.backoffCount = -1;\r\n    }\r\n\r\n    private calculateNextBackoffMs(): number {\r\n        // tslint:disable-next-line:insecure-random\r\n        const fudge = 1 + (Math.random() - 0.5) * 0.4; // +/- 20%\r\n        let backoff = this.initialDelay * Math.pow(2, this.backoffCount) * fudge;\r\n        backoff = Math.round(backoff);\r\n\r\n        return Math.min(this.maxBackoffInMs, backoff);\r\n    }\r\n}\r\n\r\n/**\r\n * Registrar client implementation\r\n */\r\nexport class RegistrarClient implements IRegistrarClient {\r\n    private backoffs: { [id: string]: ExponentialDelay };\r\n    private eventLogger?: ITelemetrySender;\r\n    private cachedRegistrationParams?: [IClientDescription, ITransports];\r\n    private maxBackOffTime: number;\r\n    private maxRetriesForGetToken: number;\r\n    private readonly DEFAULT_MAX_RETRIES_FOR_GET_TOKEN = 15;\r\n\r\n    // Default value for maximum backoff between retries\r\n    private readonly DEFAULT_MAX_BACKOFF_TIME_IN_MS = 300000; // 5 minutes\r\n\r\n    constructor(\r\n        private logger: LogProvider,\r\n        private skypeTokenProvider: SkypeTokenProvider,\r\n        private options: IRegistrarClientOptions\r\n    ) {\r\n        this.backoffs = {};\r\n        this.maxBackOffTime =\r\n          this.options.maxRetryDelayMs > 0\r\n            ? this.options.maxRetryDelayMs\r\n            : this.DEFAULT_MAX_BACKOFF_TIME_IN_MS;\r\n        this.maxRetriesForGetToken =\r\n          options.maxRetriesForGetToken === undefined ||\r\n          options.maxRetriesForGetToken === null\r\n            ? this.DEFAULT_MAX_RETRIES_FOR_GET_TOKEN\r\n            : options.maxRetriesForGetToken;\r\n    }\r\n\r\n    public setTelemetryLogger(eventLogger: ITelemetrySender) {\r\n        this.eventLogger = eventLogger;\r\n    }\r\n\r\n    public async register(client: IClientDescription, transports: ITransports): Promise<void> {\r\n        await this.performRegistration(client, transports, 'pr_set_registration');\r\n        this.cachedRegistrationParams = [client, transports];\r\n    }\r\n\r\n    public async unregister(): Promise<void> {\r\n        this.logger.info('[RegistrarClient] sending unregister request');\r\n\r\n        const unregisterRequest = new Request(`${this.options.registrarUrl}/${this.options.registrationId}`,\r\n            {\r\n                method: 'DELETE',\r\n                mode: 'cors',\r\n                headers: new Headers({\r\n                    accept: 'application/json, text/javascript'\r\n                })\r\n            });\r\n\r\n            await this.callRegistrar(unregisterRequest, 'pr_delete_registration');\r\n    }\r\n\r\n    public cancelPendingRequests() {\r\n        Object.keys(this.backoffs).forEach((id: string) => {\r\n            this.backoffs[id].cancel();\r\n        });\r\n        this.backoffs = {};\r\n    }\r\n\r\n    public async resendRegistration(): Promise<void> {\r\n        if (!this.cachedRegistrationParams) {\r\n            throw new Error('Re-registration failed because there is no registration parameters cached');\r\n        }\r\n\r\n        await this.performRegistration(this.cachedRegistrationParams[0], this.cachedRegistrationParams[1], 'pr_resend_registration');\r\n    }\r\n\r\n    private async performRegistration(client: IClientDescription, transports: ITransports, eventName: string) {\r\n        this.logger.info('[RegistrarClient] Sending register request');\r\n        const payload = {\r\n            clientDescription: client,\r\n            registrationId: this.options.registrationId,\r\n            nodeId: '',\r\n            transports: transports\r\n        };\r\n        const registerRequest = new Request(this.options.registrarUrl, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: new Headers({\r\n                'content-type': 'application/json',\r\n                accept: 'application/json, text/javascript'\r\n            }),\r\n            body: toJson(payload)\r\n        });\r\n        await this.callRegistrar(registerRequest, eventName);\r\n    }\r\n\r\n    private startBackoff() {\r\n        const backoff = new ExponentialDelay(\r\n          this.logger,\r\n          this.maxBackOffTime,\r\n          this.options.initialRetryDelayMs\r\n        );\r\n        this.backoffs[backoff.id] = backoff;\r\n\r\n        return backoff;\r\n    }\r\n\r\n    private stopBackoff(backoff: ExponentialDelay) {\r\n        backoff.cancel();\r\n        delete this.backoffs[backoff.id];\r\n    }\r\n\r\n    private async getSkypeToken(): Promise<string> {\r\n        const backoff = this.startBackoff();\r\n        let retryCount = 0;\r\n        for (;;) {\r\n            try {\r\n                this.logger.info('[RegistrarClient] Asking for a new skypetoken');\r\n                const token = await this.skypeTokenProvider(true);\r\n                this.stopBackoff(backoff);\r\n\r\n                return token;\r\n            } catch (error) {\r\n                try {\r\n                    retryCount++;\r\n                    const stringfiedError = JSON.stringify(error);\r\n                    if (retryCount > this.maxRetriesForGetToken) {\r\n                        const err = `[RegistrarClient] getSkypeToken retry limit hit. Will not retry now. Error: ${stringfiedError}`;\r\n                        this.logger.error(err);\r\n                        this.stopBackoff(backoff);\r\n\r\n                        return Promise.reject(err);\r\n                    }\r\n\r\n                    this.logger.warn(`[RegistrarClient] Retrying for a new skype token. Retry Count: ${retryCount} Error: ${stringfiedError}`);\r\n                    await backoff.delay('Fetching a new skypetoken');\r\n                    continue;\r\n                } catch (cancelError) {\r\n                    this.stopBackoff(backoff);\r\n                    throw cancelError;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private async callRegistrar(request: Request, eventName: string): Promise<Response> {\r\n        const backoff = this.startBackoff();\r\n\r\n        const cachedSkypetoken = await this.skypeTokenProvider(false);\r\n        this.setSkypeTokenHeader(request, cachedSkypetoken);\r\n\r\n        const stopwatch = new Timespan();\r\n        let retryCount = 0;\r\n\r\n        for (;;) {\r\n            let response: Response | undefined;\r\n            try {\r\n                // Make a clone in case we need to retry, one Request cannot be used twice with fetch()\r\n                const req = request.clone();\r\n                response = await fetchWithTimeout(req, this.options.requestTimeoutMs);\r\n                if (response.status === 401) {\r\n                    retryCount++;\r\n                    if (retryCount > this.maxRetriesForGetToken) {\r\n                        const err = `[RegistrarClient] getSkypeToken retry limit hit. Will not retry now. Request '${request.url}' failed with ${response.status} ${response.statusText}`;\r\n                        this.logger.error(err);\r\n                        this.stopBackoff(backoff);\r\n\r\n                        return Promise.reject(err);\r\n                    }\r\n\r\n                    this.logger.warn(`[RegistrarClient] Retry Count ${retryCount}. Request '${request.url}' failed with ${response.status} ${response.statusText}`);\r\n                    this.setSkypeTokenHeader(request, await this.getSkypeToken());\r\n                    //should we wait before retrying with a new skypetoken?\r\n                    continue;\r\n                } else if (response.status >= 500 && response.status < 600) {\r\n                    // throw and retry after in the catch section\r\n                    throw new Error(`Fetch for '${request.url}' failed with ${response.status} ${response.statusText}`);\r\n                }\r\n            } catch (error) {\r\n                this.logger.error(`[RegistrarClient] Request failed with ${error}`);\r\n                try {\r\n                    // retry on network errors (thrown by fetch) and retryable codes\r\n                    await backoff.delay('Registrar call retry');\r\n                    continue;\r\n                } catch (canceledError) {\r\n                    this.logger.error('[RegistrarClient] Request cancelled');\r\n                    this.stopBackoff(backoff);\r\n                    throw canceledError;\r\n                }\r\n            } finally {\r\n                this.sendTelemetryEvent(eventName, request, response, stopwatch);\r\n            }\r\n\r\n            this.stopBackoff(backoff);\r\n            if (response.ok) {\r\n                return response;\r\n            } else  {\r\n                let details: string;\r\n                try {\r\n                    details = JSON.stringify(await response.json());\r\n                } catch (error) {\r\n                    details = 'no details';\r\n                }\r\n                // Note MS-CV will be null until Registrar service CORS fix\r\n                // https://dev.azure.com/skype/SCC/_workitems/edit/2353812\r\n                const message = `Fetch for '${request.url}' failed with ${response.status} ${response.statusText} (${details}, MS-CV: ${response.headers.get('MS-CV')})`;\r\n                this.logger.error(`[RegistrarClient] ${message}`);\r\n                throw new Error(message);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setSkypeTokenHeader(request: Request, skypetoken: string) {\r\n        // tslint:disable-next-line: no-backbone-get-set-outside-model\r\n        request.headers.set('X-Skypetoken', skypetoken);\r\n    }\r\n\r\n    private sendTelemetryEvent(eventName: string, request: Request, response: Response | undefined, stopwatch: Timespan) {\r\n        if (this.eventLogger === undefined) {\r\n            return;\r\n        }\r\n\r\n        const clientEvent: TelemetryEvent = {\r\n            name: eventName,\r\n            properties: {\r\n                url: { value: request.url },\r\n                result_code: { value: response !== undefined ? response.status : 0 },\r\n                begin_timestamp: { value: stopwatch.startTime },\r\n                elapsed: { value: stopwatch.duration }\r\n            }\r\n        };\r\n\r\n        this.eventLogger.logEvent(clientEvent);\r\n    }\r\n}\r\n\r\nexport function createRegistrarClient(\r\n    logProvider: LogProvider,\r\n    skypeTokenProvider: SkypeTokenProvider,\r\n    options: IRegistrarClientOptions\r\n): IRegistrarClient {\r\n    return new RegistrarClient(logProvider, skypeTokenProvider, options);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/RegistrarClient.ts","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@skype/tsregistrar\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@skype/tstrouter\", [\"@skype/tsregistrar\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@skype/tstrouter\"] = factory(require(\"@skype/tsregistrar\"));\n\telse\n\t\troot[\"@skype/tstrouter\"] = factory(root[\"@skype/tsregistrar\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_20__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 278ec14d51dba60bf7eb","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@skype/tsregistrar\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@skype/tstrouter\", [\"@skype/tsregistrar\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@skype/tstrouter\"] = factory(require(\"@skype/tsregistrar\"));\n\telse\n\t\troot[\"@skype/tstrouter\"] = factory(root[\"@skype/tsregistrar\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_20__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 19);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Simple logger\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(name, logger) {\r\n        this.name = name;\r\n        this.logger = logger;\r\n    }\r\n    Logger.prototype.debug = function (message) {\r\n        this.logger.debug(\"[\" + this.name + \"] \" + message);\r\n    };\r\n    Logger.prototype.info = function (message) {\r\n        this.logger.info(\"[\" + this.name + \"] \" + message);\r\n    };\r\n    Logger.prototype.warn = function (message) {\r\n        this.logger.warn(\"[\" + this.name + \"] \" + message);\r\n    };\r\n    Logger.prototype.error = function (message) {\r\n        this.logger.error(\"[\" + this.name + \"] \" + message);\r\n    };\r\n    return Logger;\r\n}());\r\nexports.Logger = Logger;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.constants = {\r\n    TROUTER_INIT: 'trouterinit',\r\n    TROUTER_READY_EVENT: 'trouterReadyEvent',\r\n    TROUTER_READY_TIMEOUT: 'trouterReadyTimeout',\r\n    TROUTER_TOKEN_REQUEST: 'trouterTokenRequest',\r\n    TROUTER_TOKEN_GET_SUCCEEDED: 'trouterTokenGetSucceeded',\r\n    TROUTER_TOKEN_GET_FAILED: 'trouterTokenGetFailed',\r\n    TROUTER_RECONNECTING: 'trouterReconnecting',\r\n    RENEWAL: 'renewal',\r\n    NEW_CONNECTION: 'newConnection',\r\n    ENDPOINT_REGISTRATION_FAILED: 'endpointRegistrationFailed'\r\n};\r\nexports.CLIENT_VERSION = '2022.35.01.29';\r\nexports.HANDLED_MESSAGE_ACK = 200;\r\nexports.UNHANDLED_MESSAGE_ACK = 404;\r\nexports.FAILED_MESSAGE_ACK = 500;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Type definitions for Trouter JavaScript Client 2022.35.01.29\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * States that a user can reach\r\n *\r\n * Use with the `setUserActivityState()` method.\r\n */\r\nvar UserActivityState;\r\n(function (UserActivityState) {\r\n    UserActivityState[UserActivityState[\"Unknown\"] = 0] = \"Unknown\";\r\n    UserActivityState[UserActivityState[\"Active\"] = 1] = \"Active\";\r\n    UserActivityState[UserActivityState[\"Inactive\"] = 2] = \"Inactive\"; /// User is not active according to the application\r\n})(UserActivityState = exports.UserActivityState || (exports.UserActivityState = {}));\r\n/** Headers for HTTP request */\r\nvar HttpHeaders = /** @class */ (function () {\r\n    function HttpHeaders() {\r\n    }\r\n    return HttpHeaders;\r\n}());\r\nexports.HttpHeaders = HttpHeaders;\r\nvar TrouterState;\r\n(function (TrouterState) {\r\n    /** Initial state */\r\n    TrouterState[TrouterState[\"Unknown\"] = 0] = \"Unknown\";\r\n    /** ready to work */\r\n    TrouterState[TrouterState[\"Connected\"] = 2] = \"Connected\";\r\n    /** waiting for 'connected' event */\r\n    TrouterState[TrouterState[\"Disconnected\"] = 3] = \"Disconnected\";\r\n    /** waiting for 'register' from second connection */\r\n    TrouterState[TrouterState[\"Switching\"] = 9] = \"Switching\";\r\n})(TrouterState = exports.TrouterState || (exports.TrouterState = {}));\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable:no-any\r\n// tslint:disable:export-name\r\n// tslint:disable:function-name\r\nfunction toJson(obj) {\r\n    try {\r\n        return JSON.stringify(obj);\r\n    }\r\n    catch (error) {\r\n        return \"Unable to serialize object of type \" + typeof obj;\r\n    }\r\n}\r\nexports.toJson = toJson;\r\nfunction calculateTtlInSec(expirationTsInSec) {\r\n    var now = Math.round(new Date().getTime() / 1000);\r\n    return expirationTsInSec !== undefined && expirationTsInSec > now\r\n        ? expirationTsInSec - now\r\n        : 0;\r\n}\r\nexports.calculateTtlInSec = calculateTtlInSec;\r\nfunction calculateExpireTsInSec(ttlInSec) {\r\n    return Math.round(new Date().getTime() / 1000) + ttlInSec;\r\n}\r\nexports.calculateExpireTsInSec = calculateExpireTsInSec;\r\n/** Wrapper to send request with specified timeout */\r\nfunction fetchWithTimeout(request, timeoutMs) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var timeoutId, fetchPromise, timeoutPromise;\r\n        return __generator(this, function (_a) {\r\n            fetchPromise = new Promise(function (resolve, reject) {\r\n                fetch(request).then(function (response) {\r\n                    clearTimeout(timeoutId);\r\n                    resolve(response);\r\n                }).catch(function (error) {\r\n                    clearTimeout(timeoutId);\r\n                    reject(error);\r\n                });\r\n            });\r\n            if (timeoutMs !== 0) {\r\n                timeoutPromise = new Promise(function (resolve, reject) {\r\n                    // We make a compromise on how much information to show in the error message.\r\n                    // Having the URL there is useful, but including any query parameters is both\r\n                    // cumbersome (millions of different errors in telemetry) and unsafe (secret\r\n                    // fields that would need to be redacted). \"Origin\" and \"pathname\" achieve that.\r\n                    var url = new URL(request.url);\r\n                    var error = new Error(request.method + \" \" + url.origin + url.pathname + \" timed out\");\r\n                    // tslint:disable-next-line:no-string-based-set-timeout - false positive on 'reject'\r\n                    timeoutId = setTimeout(reject, timeoutMs, error);\r\n                });\r\n                return [2 /*return*/, Promise.race([fetchPromise, timeoutPromise])];\r\n            }\r\n            return [2 /*return*/, fetchPromise];\r\n        });\r\n    });\r\n}\r\nexports.fetchWithTimeout = fetchWithTimeout;\r\n/***\r\n * Correlation vector\r\n */\r\nvar CorrelationVector = /** @class */ (function () {\r\n    function CorrelationVector(correlationVector) {\r\n        this.base = (correlationVector !== undefined) ? correlationVector : this.createCorrelationVectorBase();\r\n        this.extension = 0;\r\n    }\r\n    CorrelationVector.extend = function (correlationVector) {\r\n        return new CorrelationVector(correlationVector);\r\n    };\r\n    CorrelationVector.prototype.increase = function () {\r\n        this.extension++;\r\n    };\r\n    CorrelationVector.prototype.value = function () {\r\n        return this.base + \".\" + this.extension;\r\n    };\r\n    CorrelationVector.prototype.createCorrelationVectorBase = function () {\r\n        var length = 21;\r\n        var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0987654321/+';\r\n        var endChars = 'AQgw';\r\n        var result = '';\r\n        for (var i = 0; i < length; i++) {\r\n            // tslint:disable-next-line:insecure-random\r\n            result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n        // tslint:disable-next-line:insecure-random\r\n        result += endChars.charAt(Math.floor(Math.random() * endChars.length));\r\n        return result;\r\n    };\r\n    return CorrelationVector;\r\n}());\r\nexports.CorrelationVector = CorrelationVector;\r\n/**\r\n * Simplify calculation of time intervals\r\n */\r\nvar Timespan = /** @class */ (function () {\r\n    function Timespan() {\r\n        this.start = Date.now();\r\n    }\r\n    Object.defineProperty(Timespan.prototype, \"duration\", {\r\n        /**\r\n         * Returns number of milliseconds from start\r\n         */\r\n        get: function () {\r\n            return Date.now() - this.start;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Timespan.prototype, \"startTime\", {\r\n        /**\r\n         * Returns start time\r\n         */\r\n        get: function () {\r\n            return this.start;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Reset start of interval to current timestamp\r\n     */\r\n    Timespan.prototype.reset = function () {\r\n        this.start = Date.now();\r\n    };\r\n    return Timespan;\r\n}());\r\nexports.Timespan = Timespan;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Internal type definitions for Trouter JavaScript Client\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Common_1 = __webpack_require__(3);\r\n/**\r\n * Information about server connection\r\n */\r\nvar ServerState = /** @class */ (function () {\r\n    function ServerState(\r\n    /** Trouter client connection ID */\r\n    connectionId, \r\n    /** Trouter client connected client ID */\r\n    connectedClientId, \r\n    /** window.location.hostname */\r\n    domId, \r\n    /** Unsecure Trouter url at which client can be reached */\r\n    unsecureUrl, \r\n    /** Secure Trouter url at which client can be reached */\r\n    url, \r\n    /** URL base to use for client-to-client requests */\r\n    c2cUrlBase, \r\n    /** expiration timestamp for connection in seconds */\r\n    expirationTsSec) {\r\n        this.connectionId = connectionId;\r\n        this.connectedClientId = connectedClientId;\r\n        this.domId = domId;\r\n        this.unsecureUrl = unsecureUrl;\r\n        this.url = url;\r\n        this.c2cUrlBase = c2cUrlBase;\r\n        this.expirationTsSec = expirationTsSec;\r\n    }\r\n    /** Return connection TTL, i.e. number of seconds till expiration */\r\n    ServerState.prototype.getRemainingTtlInSec = function () {\r\n        return Common_1.calculateTtlInSec(this.expirationTsSec);\r\n    };\r\n    return ServerState;\r\n}());\r\nexports.ServerState = ServerState;\r\nvar UserActivityEventReason;\r\n(function (UserActivityEventReason) {\r\n    UserActivityEventReason[UserActivityEventReason[\"Unknown\"] = 0] = \"Unknown\";\r\n    UserActivityEventReason[UserActivityEventReason[\"Modified\"] = 1] = \"Modified\";\r\n    UserActivityEventReason[UserActivityEventReason[\"Snapshot\"] = 2] = \"Snapshot\";\r\n    UserActivityEventReason[UserActivityEventReason[\"Connected\"] = 3] = \"Connected\";\r\n})(UserActivityEventReason = exports.UserActivityEventReason || (exports.UserActivityEventReason = {}));\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable:no-any\r\n// tslint:disable:no-unsafe-any\r\n// tslint:disable:strict-boolean-expressions\r\n// tslint:disable:max-classes-per-file\r\n// tslint:disable:promise-function-async\r\nvar tsregistrar_1 = __webpack_require__(20);\r\nvar es6_promise_1 = __webpack_require__(12);\r\nvar Common_1 = __webpack_require__(3);\r\nvar ConnectionTracker_1 = __webpack_require__(15);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar ExponentialBackoff_1 = __webpack_require__(16);\r\nvar Interfaces_1 = __webpack_require__(2);\r\nvar InternalInterfaces_1 = __webpack_require__(5);\r\nvar Logger_1 = __webpack_require__(0);\r\nvar TrouterFsm_1 = __webpack_require__(17);\r\n// This is the current API version\r\nvar VERSION = 'v4';\r\n// Default value for registration timeout\r\nvar DEFAULT_REGISTRATION_TIMEOUT_SEC = 3600;\r\nvar io = __webpack_require__(11);\r\n/**\r\n * Stub for IClientInfo\r\n */\r\nvar ClientInfo = /** @class */ (function () {\r\n    function ClientInfo() {\r\n        this.cv = Constants_1.CLIENT_VERSION;\r\n        this.ua = '';\r\n        this.hr = '';\r\n        this.v = '';\r\n    }\r\n    return ClientInfo;\r\n}());\r\n/**\r\n * Stub for ISocketIoOptions\r\n */\r\nvar SocketIoOptions = /** @class */ (function () {\r\n    function SocketIoOptions() {\r\n        this['force new connection'] = true;\r\n        this['reconnect'] = false;\r\n        this['query'] = '';\r\n        this.ackTimeoutMs = 5000;\r\n    }\r\n    return SocketIoOptions;\r\n}());\r\nvar cvHeader = 'MS-CV';\r\n/**\r\n * Request from downstream service\r\n */\r\nvar TrouterRequest = /** @class */ (function () {\r\n    function TrouterRequest(requestJson) {\r\n        this.cvCounter = 0;\r\n        var json = JSON.parse(requestJson);\r\n        this.startTS = json.hasOwnProperty('startTS') ? json.startTS : 0;\r\n        this.url = json.hasOwnProperty('url') ? json.url : '';\r\n        this.shortUrl = json.hasOwnProperty('shortUrl') ? json.shortUrl : '';\r\n        this.body = json.hasOwnProperty('body') ? json.body : '';\r\n        this.headers = json.hasOwnProperty('headers') ? json.headers : {};\r\n        this.id = (json.hasOwnProperty('id') && typeof json.id === 'number') ? json.id : -1;\r\n        this.method = json.hasOwnProperty('method') ? json.method : '';\r\n        this.replied = false;\r\n        this.timedout = false;\r\n        this.timeoutTimerId = 0;\r\n        this.receivedCv = this.headers[cvHeader];\r\n        this.updateCvHeader();\r\n    }\r\n    Object.defineProperty(TrouterRequest.prototype, \"correlationVector\", {\r\n        get: function () {\r\n            return this.receivedCv ? this.receivedCv + \".\" + this.cvCounter : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TrouterRequest.prototype.on = function (target, targetCallback) {\r\n        if (target === 'data') {\r\n            this.dataCallback = targetCallback;\r\n        }\r\n        else if (target === 'end') {\r\n            if (typeof this.dataCallback === 'function') {\r\n                this.dataCallback(this.body);\r\n            }\r\n            targetCallback();\r\n        }\r\n    };\r\n    TrouterRequest.prototype.incrementCorrelationVector = function () {\r\n        ++this.cvCounter;\r\n        this.updateCvHeader();\r\n    };\r\n    TrouterRequest.prototype.updateCvHeader = function () {\r\n        var cv = this.correlationVector;\r\n        if (cv) {\r\n            this.headers[cvHeader] = cv;\r\n        }\r\n    };\r\n    return TrouterRequest;\r\n}());\r\n/**\r\n * Response to downstream service\r\n */\r\nvar TrouterResponse = /** @class */ (function () {\r\n    function TrouterResponse(request, responseData, sendResponse) {\r\n        this.request = request;\r\n        this.responseData = responseData;\r\n        this.sendResponse = sendResponse;\r\n    }\r\n    TrouterResponse.prototype.writeHead = function (status, headers) {\r\n        this.responseData.status = status;\r\n        this.responseData.headers = headers;\r\n    };\r\n    TrouterResponse.prototype.write = function (chunk) {\r\n        this.responseData.body += chunk;\r\n    };\r\n    TrouterResponse.prototype.end = function (chunk) {\r\n        if (chunk) {\r\n            this.responseData.body += chunk;\r\n        }\r\n        return this.sendResponse(this.request, this.responseData);\r\n    };\r\n    return TrouterResponse;\r\n}());\r\n/**\r\n * An client-initiated event that is to be sent to trouter.\r\n */\r\nvar DownstreamEvent = /** @class */ (function () {\r\n    function DownstreamEvent(name) {\r\n        this.name = name;\r\n        this.args = {};\r\n        this.timeoutTimerId = 0;\r\n    }\r\n    return DownstreamEvent;\r\n}());\r\n/**\r\n * Reason why a connection switch is happening.\r\n */\r\nvar ReconnectReason;\r\n(function (ReconnectReason) {\r\n    /** Configuration change coming from ECS, containing different URL */\r\n    ReconnectReason[ReconnectReason[\"Configuration\"] = 0] = \"Configuration\";\r\n    /** In response to a `trouter.reconnect` socket.io event */\r\n    ReconnectReason[ReconnectReason[\"ServerInitiated\"] = 1] = \"ServerInitiated\";\r\n})(ReconnectReason = exports.ReconnectReason || (exports.ReconnectReason = {}));\r\n/**\r\n * Trouter + registration flow implementation\r\n */\r\nvar TrouterConnection = /** @class */ (function () {\r\n    function TrouterConnection(logProvider, options, manager, tokenProvider, initialUserActivityState) {\r\n        var _this = this;\r\n        this.options = options;\r\n        this.manager = manager;\r\n        this.tokenProvider = tokenProvider;\r\n        this.connectionId = '';\r\n        this.inIncallMode = false;\r\n        this.connectionAttempt = 0;\r\n        this.connectedClientId = '';\r\n        this.isNavigatorOnline = true;\r\n        this.onNavigatorOnlineStatusUpdateBound = this.onNavigatorOnlineStatusUpdate.bind(this); // Bound to allow removing the listener\r\n        this.c2cUrlBase = '';\r\n        this.allocationErrorsInRow = 0;\r\n        /** Keeps track of 401s */\r\n        this.unauthorizedErrorCount = 0;\r\n        this.pendingTimers = {};\r\n        this.lastDisconnectReason = '';\r\n        this.UNKNOWN_TRANSPORT = 'unknown_transport';\r\n        this.logger = new Logger_1.Logger('Connection', logProvider);\r\n        this.timeoutOptions = this.options.timeoutOptions;\r\n        this.tokenBackoff = new ExponentialBackoff_1.ExponentialBackoff(this.logger, this.timeoutOptions.maxBackoffMs);\r\n        this.clientID = Date.now();\r\n        // tslint:disable-next-line:no-typeof-undefined - window exists only in browser\r\n        if ((typeof window !== 'undefined') && window.location) {\r\n            this.domId = window.location.hostname;\r\n        }\r\n        this.clientInfo = new ClientInfo();\r\n        this.clientInfo.cv = Constants_1.CLIENT_VERSION;\r\n        this.clientInfo.ua = '';\r\n        if (this.options && this.options.clientInfo) {\r\n            this.clientInfo.ua = this.safeString(this.options.clientInfo.ua);\r\n            this.clientInfo.v = this.safeString(this.options.clientInfo.v);\r\n        }\r\n        this.connectionTracker = new ConnectionTracker_1.ConnectionTracker(logProvider, this.clientID, this.clientInfo, function () { return _this.getServerState(); }, this.options.endpointId, this.options.clientCorrelationID, this.options.environment);\r\n        this.applyConnectionTrackerOptions(options);\r\n        var useIncallMode = this.options.incallModeTimeoutMs > 0;\r\n        this.fsm = new TrouterFsm_1.TrouterFsm(logProvider, this, useIncallMode);\r\n        if (options.registration) {\r\n            var registrarOptions = {\r\n                registrarUrl: options.registration.registrarUrl,\r\n                registrationId: options.registration.registrationId,\r\n                requestTimeoutMs: options.timeoutOptions.fetchTimeoutMs,\r\n                initialRetryDelayMs: 1000,\r\n                maxRetryDelayMs: options.timeoutOptions.maxBackoffMs\r\n            };\r\n            this.registrarClient = tsregistrar_1.createRegistrarClient(logProvider, this.tokenProvider, registrarOptions);\r\n        }\r\n        this.userActivityState = initialUserActivityState;\r\n    }\r\n    TrouterConnection.prototype.start = function (externalConnectParams) {\r\n        this.logger.info('Starting');\r\n        this.reconnectParams = externalConnectParams;\r\n        // tslint:disable-next-line:no-typeof-undefined - window exists only in browser\r\n        if (typeof window !== 'undefined' && window.navigator) {\r\n            this.isNavigatorOnline = window.navigator.onLine;\r\n            window.addEventListener('online', this.onNavigatorOnlineStatusUpdateBound);\r\n            window.addEventListener('offline', this.onNavigatorOnlineStatusUpdateBound);\r\n            this.logger.debug(\"Registered for browser online notifications - current state: \" + this.isNavigatorOnline);\r\n        }\r\n        else {\r\n            this.isNavigatorOnline = true; // Assume always online if the API is not available\r\n        }\r\n        this.fsm.start();\r\n    };\r\n    TrouterConnection.prototype.stop = function (dontUnregister) {\r\n        this.logger.info('Stopping');\r\n        // tslint:disable-next-line:no-typeof-undefined - window exists only in browser\r\n        if (typeof window !== 'undefined' && window.navigator) {\r\n            window.removeEventListener('online', this.onNavigatorOnlineStatusUpdateBound);\r\n            window.removeEventListener('offline', this.onNavigatorOnlineStatusUpdateBound);\r\n        }\r\n        this.fsm.stop(dontUnregister);\r\n        this.connectionTracker.close();\r\n    };\r\n    TrouterConnection.prototype.configure = function (options) {\r\n        // Currently only baseUrl and telemetrySettings options are supported for reconfiguration\r\n        var urlChanged = this.options.trouterUrl !== options.trouterUrl;\r\n        this.options = options;\r\n        this.applyConnectionTrackerOptions(options);\r\n        if (urlChanged) {\r\n            this.logger.info('Configuration changed. Reconnection required.');\r\n            this.fsm.onReconnectRequired(false, ReconnectReason.Configuration);\r\n        }\r\n    };\r\n    TrouterConnection.prototype.checkConnection = function (disconnectDetected) {\r\n        this.logger.info(\"checkConnection called with \" + disconnectDetected);\r\n        this.fsm.checkConnection(disconnectDetected);\r\n        // Don't send on disconnectDetected === false, because Teams client calls it on timer\r\n        if (disconnectDetected) {\r\n            this.connectionTracker.sendTelemetry(ConnectionTracker_1.ClientEventName.CheckConnection, {\r\n                disconnectDetected: disconnectDetected\r\n            }, []);\r\n        }\r\n    };\r\n    TrouterConnection.prototype.disableRegistrationsAndAutoReconnect = function () {\r\n        this.stopRegisterTimer();\r\n        this.resetRegisterBackoff();\r\n        this.fsm.disableAutoReconnect();\r\n    };\r\n    /** Returns info about connection */\r\n    TrouterConnection.prototype.getServerState = function () {\r\n        return new InternalInterfaces_1.ServerState(this.connectionId, this.connectedClientId, this.domId ? this.domId : '', this.allocateResult ? this.allocateResult.url : '', this.allocateResult ? this.allocateResult.surl : '', this.c2cUrlBase, this.connectionExpireTimestampInSecs);\r\n    };\r\n    //////// Implement IWorker ////////\r\n    TrouterConnection.prototype.getToken = function (useCache, backoff, retryCounter) {\r\n        var _this = this;\r\n        if (retryCounter === void 0) { retryCounter = 0; }\r\n        this.logger.info(\"Getting token \" + (backoff ? 'with backoff' : 'without backoff'));\r\n        var requestFunction = function () {\r\n            _this.connectionTracker.trackStart('token');\r\n            // tslint:disable-next-line:no-floating-promises\r\n            _this.tokenProvider(!useCache).then(function (token) {\r\n                _this.logger.debug('token is received');\r\n                _this.connectionTracker.trackEnd('token');\r\n                _this.fsm.onTokenReceived(token);\r\n            }).catch(function (error) {\r\n                var msg = Common_1.toJson(error.stack);\r\n                _this.logger.error(\"Getting token failed, will retry after timeout. Error: \" + msg);\r\n                _this.connectionTracker.trackError('token', msg);\r\n                // Can't retry getToken request, which means client would not receive any notifications from trouter.\r\n                // Unrecoverable error unless client tries to reconnect with Trouter\r\n                //     - retryCounter tracks internal loop\r\n                //     - unauthorizedErrorCount tracks external loop (consecutive number of sendAllocationFailures as a result of 401s)\r\n                if (!_this.canRetryTokenFetchRequest(retryCounter + _this.unauthorizedErrorCount)) {\r\n                    var errorMessage = 'getToken retry limit hit, reached terminal error state';\r\n                    _this.connectionTracker.trackError('token', errorMessage);\r\n                    _this.resetTokenBackoff();\r\n                    _this.fsm.onTerminalError();\r\n                    return;\r\n                }\r\n                _this.getToken(useCache, true, retryCounter + 1);\r\n            });\r\n        };\r\n        if (backoff) {\r\n            this.tokenBackoff.backoff('getting token', requestFunction);\r\n        }\r\n        else {\r\n            this.resetTokenBackoff();\r\n            requestFunction();\r\n        }\r\n    };\r\n    TrouterConnection.prototype.startConnectionTimer = function () {\r\n        var _this = this;\r\n        this.stopConnectionTimer();\r\n        this.logger.debug(\"Starting connection timeout for \" + this.timeoutOptions.connectionTimeoutMs + \" ms\");\r\n        this.connectionTimeoutId = setTimeout(function () {\r\n            _this.logger.info('Connection timeout is fired');\r\n            _this.fsm.onConnectingTimeout();\r\n        }, this.timeoutOptions.connectionTimeoutMs);\r\n    };\r\n    TrouterConnection.prototype.stopConnectionTimer = function () {\r\n        if (this.connectionTimeoutId) {\r\n            this.logger.debug('Stopping connection timeout');\r\n            clearTimeout(this.connectionTimeoutId);\r\n            this.connectionTimeoutId = undefined;\r\n        }\r\n    };\r\n    TrouterConnection.prototype.startPingTimer = function () {\r\n        var _this = this;\r\n        if (this.transportTypeName === 'websocket') {\r\n            this.logger.debug(\"Starting ping timeout for \" + this.timeoutOptions.pingTimeoutMs + \" ms\");\r\n            this.pingTimerId = setInterval(function () {\r\n                _this.logger.info('Ping interval fired');\r\n                _this.fsm.onPingInterval();\r\n            }, this.timeoutOptions.pingTimeoutMs);\r\n        }\r\n        else {\r\n            this.logger.debug(\"Not starting ping for transport \" + this.transportTypeName);\r\n        }\r\n    };\r\n    TrouterConnection.prototype.stopPingTimer = function () {\r\n        if (this.pingTimerId) {\r\n            this.logger.debug('Stopping ping timeout');\r\n            this.clearPingResponseTimer();\r\n            clearInterval(this.pingTimerId);\r\n            this.pingTimerId = undefined;\r\n        }\r\n    };\r\n    TrouterConnection.prototype.shouldSkipRegistration = function () {\r\n        return this.options.registration === undefined;\r\n    };\r\n    TrouterConnection.prototype.hasCustomRegisterTtl = function () {\r\n        return this.options.registration && this.options.registration.registrarTtlSec;\r\n    };\r\n    TrouterConnection.prototype.startRegisterTimer = function () {\r\n        var _this = this;\r\n        if (this.registrationTimerId !== undefined) {\r\n            this.stopRegisterTimer();\r\n        }\r\n        var timeForReregistrationSec = 30;\r\n        var _a = this.getRegistrationTtl(), ttl = _a[0], _ = _a[1];\r\n        var delay = ttl - timeForReregistrationSec;\r\n        // Check bug(#2676421) for more info\r\n        if (delay <= 0) {\r\n            this.logger.debug(\"Not starting registration timer, ttl too low(\" + ttl + \" sec)\");\r\n            return;\r\n        }\r\n        this.logger.debug(\"Starting registration timeout for \" + delay + \" sec\");\r\n        this.registrationTimerId = setTimeout(function () {\r\n            _this.logger.info('Registration timeout is fired');\r\n            _this.registrationTimerId = setTimeout(function () {\r\n                _this.registrationTimerId = undefined;\r\n                _this.logger.debug('Re-registration did not happen in time');\r\n                _this.dispatchUnregistered();\r\n            }, timeForReregistrationSec * 1000);\r\n            _this.fsm.onRegistrationTimeout();\r\n        }, delay * 1000);\r\n    };\r\n    TrouterConnection.prototype.stopRegisterTimer = function () {\r\n        if (this.registrationTimerId) {\r\n            this.logger.debug('Stopping registration timeout');\r\n            clearTimeout(this.registrationTimerId);\r\n            this.registrationTimerId = undefined;\r\n        }\r\n    };\r\n    TrouterConnection.prototype.resendRegistration = function () {\r\n        if (!this.registrarClient) {\r\n            throw new Error('Trouter Client not configured to handle registrations');\r\n        }\r\n        return this.registrarClient.resendRegistration();\r\n    };\r\n    TrouterConnection.prototype.buildSocketIoUrlParams = function () {\r\n        if (!this.allocateResult) {\r\n            throw new Error('Allocate result is undefined in buildSocketIoUrlParams()');\r\n        }\r\n        var urlParams = {};\r\n        // Copy connection parameters (i.e. signature) from allocation response\r\n        var signatureData = this.allocateResult.connectparams;\r\n        for (var _i = 0, _a = Object.keys(signatureData); _i < _a.length; _i++) {\r\n            var i = _a[_i];\r\n            if (signatureData.hasOwnProperty(i) && signatureData[i] !== undefined) {\r\n                urlParams[i] = signatureData[i];\r\n            }\r\n        }\r\n        // And add some more fields\r\n        urlParams.v = VERSION;\r\n        urlParams.tc = encodeURI(Common_1.toJson(this.clientInfo));\r\n        urlParams.timeout = this.timeoutOptions.pingTimeoutMs / 1000;\r\n        urlParams.auth = 'true';\r\n        if (this.options.endpointId) {\r\n            urlParams.epid = this.options.endpointId;\r\n        }\r\n        if (this.userActivityState.state !== Interfaces_1.UserActivityState.Unknown) {\r\n            urlParams.userActivity = encodeURI(Common_1.toJson(this.userActivityState.toEventObject()));\r\n        }\r\n        return this.appendConnectedClientIds(this.buildQuery(urlParams), true);\r\n    };\r\n    TrouterConnection.prototype.startSocketIo = function () {\r\n        var _this = this;\r\n        this.logger.info('Starting socket io');\r\n        this.connectionTracker.trackStart('connectSocket');\r\n        //this.connectionAttempt++;\r\n        if (!this.allocateResult) {\r\n            throw new Error('Allocate result is undefined in startSocketIo()');\r\n        }\r\n        var options = this.options.ioOptions || new SocketIoOptions();\r\n        // Regardless of any passed in socket.io options, force the following settings.\r\n        options['force new connection'] = true;\r\n        options.reconnect = false;\r\n        // Query params to each socket.io request\r\n        options.query = this.buildSocketIoUrlParams();\r\n        this.logger.info(\"connecting to \" + this.allocateResult.socketio + \"?\" + options.query);\r\n        // msg868 - clear all events and disconnect\r\n        this.stopSocketIo();\r\n        this.socket = (this.options.io || io).connect(this.allocateResult.socketio, options);\r\n        if (this.socket === undefined) {\r\n            throw new Error('Can\\'t create Socket.io object');\r\n        }\r\n        this.socket.on('connecting', function (transportTypeName) { _this.onSocketConnecting(transportTypeName); });\r\n        this.socket.on('connect', function () { _this.onSocketConnect(); });\r\n        this.socket.on('connect_failed', function (reason) { _this.onSocketConnectFailed(reason); });\r\n        this.socket.on('disconnect', function (reason) { _this.onSocketDisconnect(reason); });\r\n        this.socket.on('reconnect', function () { _this.onSocketReconnect(); });\r\n        this.socket.on('reconnect_failed', function (reason) { _this.onSocketReconnectFailed(reason); });\r\n        this.socket.on('reconnecting', function () { _this.onSocketReconnecting(); });\r\n        this.socket.on('error', function (error) { _this.onSocketError(error); });\r\n        this.socket.on('message', function (request) { _this.onSocketMessage(request); });\r\n        this.socket.on('trouter.connected', function (eventArgs) { _this.onTrouterConnected(eventArgs); });\r\n        this.socket.on('trouter.reconnect', function (eventArgs) { _this.onTrouterReconnect(eventArgs); });\r\n        this.socket.on('trouter.message_loss', function (eventArgs) { _this.onTrouterMessageLoss(eventArgs); });\r\n    };\r\n    TrouterConnection.prototype.stopSocketIo = function () {\r\n        if (this.socket) {\r\n            this.logger.info('clearing socket.io');\r\n            try {\r\n                for (var _i = 0, _a = [\r\n                    'connecting', 'connect', 'connect_failed', 'disconnect', 'reconnect', 'reconnect_failed',\r\n                    'reconnecting', 'error', 'message', 'trouter.connected', 'trouter.reconnect', 'trouter.message_loss'\r\n                ]; _i < _a.length; _i++) {\r\n                    var event_1 = _a[_i];\r\n                    this.socket.removeAllListeners(event_1);\r\n                }\r\n                this.socket.disconnect();\r\n                this.logger.debug('cleared socket');\r\n                this.socket = undefined;\r\n            }\r\n            catch (error) {\r\n                this.logger.error(\"exception in disconnecting previous socket. Error: \" + Common_1.toJson(error.stack));\r\n            }\r\n        }\r\n    };\r\n    TrouterConnection.prototype.dispatchConnected = function () {\r\n        this.logger.info('dispatching connected');\r\n        this.manager.onConnected(this);\r\n    };\r\n    TrouterConnection.prototype.dispatchRegistered = function () {\r\n        this.logger.info('dispatching registered');\r\n        this.manager.onRegistered(this);\r\n    };\r\n    TrouterConnection.prototype.dispatchUnregistered = function () {\r\n        this.logger.info('dispatching unregistered');\r\n        this.manager.onUnregistered(this);\r\n    };\r\n    TrouterConnection.prototype.dispatchDownstreamRequest = function (request) {\r\n        var _this = this;\r\n        this.logger.info('dispatching downstream request');\r\n        try {\r\n            var response = new TrouterResponse(request, new ConnectionTracker_1.ResponseData(request.id), function (req, responseData) {\r\n                _this.logger.info('sending response to downstream');\r\n                return _this.sendResponse(req, responseData);\r\n            });\r\n            this.manager.onDownstreamRequest(this, request, response);\r\n        }\r\n        catch (error) {\r\n            this.logger.error(\"exception in socket.on message. Error : \" + Common_1.toJson(error.stack));\r\n        }\r\n    };\r\n    TrouterConnection.prototype.dispatchReconnecting = function () {\r\n        this.logger.info('dispatching reconnecting');\r\n        this.manager.onReconnecting(this);\r\n    };\r\n    TrouterConnection.prototype.dispatchReconnectIsRequired = function (useConnectParamsFromCache, reason) {\r\n        this.logger.info('dispatching reconnect is required by server');\r\n        this.manager.onReconnectIsRequired(this, useConnectParamsFromCache, reason);\r\n    };\r\n    TrouterConnection.prototype.dispatchDisconnected = function () {\r\n        this.logger.info('dispatching disconnected');\r\n        this.manager.onDisconnected(this);\r\n    };\r\n    TrouterConnection.prototype.dispatchTrouterMessageLost = function (messageLossIndicators) {\r\n        this.logger.info('dispatching trouter lost message');\r\n        this.manager.onTrouterMessageLost(messageLossIndicators);\r\n    };\r\n    TrouterConnection.prototype.sendProcessedDroppedIndicators = function (messageLossIndicators) {\r\n        var _this = this;\r\n        try {\r\n            this.logger.info('emitting processed flow tags to the server');\r\n            var processedMessageLossEvent = new DownstreamEvent('trouter.processed_message_loss');\r\n            processedMessageLossEvent.args = { droppedIndicators: messageLossIndicators };\r\n            this.sendDownstreamEvent(processedMessageLossEvent, function () {\r\n                _this.logger.info('emitted processed flow tags to the server');\r\n            });\r\n        }\r\n        catch (error) {\r\n            var msg = Common_1.toJson(error.stack);\r\n            this.logger.error(\"unable to send processed message loss event. Error: \" + msg);\r\n            this.connectionTracker.trackError('trouter.processed_message_loss', msg, false);\r\n        }\r\n    };\r\n    // tslint:disable-next-line:max-func-body-length\r\n    TrouterConnection.prototype.sendAllocateRequest = function (token) {\r\n        var _this = this;\r\n        this.connectionAttempt++;\r\n        this.connectionTracker.trackNewConnection();\r\n        var serviceUrl = this.options.trouterUrl;\r\n        var url = serviceUrl;\r\n        var connectParams;\r\n        var rp = this.reconnectParams;\r\n        if (rp && rp.se && parseInt(rp.se, 10) <= Date.now() + 3600000) { // 1 hour\r\n            this.logger.warn(\"Dropping expired cached connection parameters: \" + new Date(parseInt(rp.se, 10)));\r\n            this.reconnectParams = rp = undefined;\r\n        }\r\n        if (rp && rp.serviceUrl !== url) {\r\n            this.logger.warn(\"Dropping cached connection parameters for a different environment (\" + rp.serviceUrl + \", now \" + url + \")\");\r\n            this.reconnectParams = rp = undefined;\r\n        }\r\n        if (rp && rp.reconnectUrl) {\r\n            url = rp.reconnectUrl;\r\n        }\r\n        if (rp) {\r\n            // Do not append serviceUrl and reconnectUrl as query parameters\r\n            connectParams = __assign({}, rp, { serviceUrl: undefined, reconnectUrl: undefined });\r\n        }\r\n        else {\r\n            connectParams = null;\r\n        }\r\n        url = this.appendCorrelationIds(url, false);\r\n        url = this.appendEndpointId(url, false);\r\n        if (connectParams) {\r\n            url += \"&\" + this.buildQuery(connectParams);\r\n            // Currently server doesn't return \"v\" in allocate result, but it\r\n            // can be changed, so implement it this way just in case\r\n            if (!connectParams.v) {\r\n                url += \"&v=\" + VERSION;\r\n            }\r\n        }\r\n        var allocateRequest = new Request(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: new Headers({\r\n                'X-Skypetoken': token,\r\n                'Content-Type': 'text/plain'\r\n            })\r\n        });\r\n        this.logger.info(\"sendAllocateRequest: POST \" + url);\r\n        this.connectionTracker.trackStart('allocation');\r\n        var startTimestamp = Date.now();\r\n        var responseStatusCode = -1;\r\n        Common_1.fetchWithTimeout(allocateRequest, this.timeoutOptions.fetchTimeoutMs).then(function (response) {\r\n            responseStatusCode = response.status;\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText);\r\n            }\r\n            // tslint:disable-next-line:no-backbone-get-set-outside-model\r\n            var contentType = response.headers.get('content-type');\r\n            if (!contentType || (contentType !== 'application/json' && contentType.substring(0, 17) !== 'application/json;')) {\r\n                throw new Error(\"Content-type '\" + contentType + \"' is unexpected\");\r\n            }\r\n            _this.connectionTracker.trackEnd('allocation');\r\n            return response.json();\r\n        }).then(function (responseObj) {\r\n            _this.allocationErrorsInRow = 0;\r\n            _this.unauthorizedErrorCount = 0;\r\n            _this.onAllocationResponse(responseObj, serviceUrl);\r\n        }).catch(function (error) {\r\n            _this.allocationErrorsInRow++;\r\n            var msg = error + \", status code \" + responseStatusCode;\r\n            _this.logger.error(_this.allocationErrorsInRow + \" failed allocation attempt(s) in a row. Error: \" + msg);\r\n            _this.connectionTracker.trackError('allocation', msg);\r\n            if (responseStatusCode === 401) {\r\n                _this.unauthorizedErrorCount++;\r\n            }\r\n            if (!_this.canRetryTokenFetchRequest(_this.unauthorizedErrorCount)) {\r\n                var errorMessage = 'getToken retry limit hit, reached terminal error state';\r\n                _this.connectionTracker.trackError('allocation', errorMessage);\r\n                _this.fsm.onTerminalError();\r\n                return;\r\n            }\r\n            if (responseStatusCode === -1 && !_this.isNavigatorOnline) {\r\n                _this.logger.info('Expected failure, the browser says it is not online at the moment');\r\n            }\r\n            else if (_this.reconnectParams && _this.allocationErrorsInRow >= 3) {\r\n                if (responseStatusCode >= 400 && responseStatusCode <= 599) {\r\n                    _this.logger.warn(_this.allocationErrorsInRow + \" connection attempts, server-side failure: erasing cached connection parameters\");\r\n                    _this.reconnectParams = undefined;\r\n                }\r\n                else if (_this.reconnectParams.reconnectUrl && _this.allocationErrorsInRow % 3 === 0) {\r\n                    _this.logger.warn(_this.allocationErrorsInRow + \" connection attempts, testing nominal service URL\");\r\n                    // Make sure to finish the check before connection timeout passes to avoid unexpected FSM calls\r\n                    var timeoutMs = Math.min(_this.timeoutOptions.connectionTimeoutMs - (Date.now() - startTimestamp) - 500, _this.timeoutOptions.fetchTimeoutMs);\r\n                    _this.testNominalUrlConnectivity(timeoutMs)\r\n                        .then(function (result) {\r\n                        _this.connectionTracker.trackProgress('nomcheck', result ? 'ok' : 'failed');\r\n                        if (result) {\r\n                            _this.logger.warn('Nominal service URL is reachable, erasing cached reconnect URL');\r\n                            if (_this.reconnectParams) {\r\n                                delete _this.reconnectParams.reconnectUrl;\r\n                            }\r\n                        }\r\n                        else {\r\n                            _this.logger.warn('Nominal service URL is not reachable either, keeping cached reconnect URL');\r\n                        }\r\n                        _this.fsm.onAllocationFailed(false);\r\n                    }, function (_) {\r\n                        // Should not happen, but removes no-floating-promises warning\r\n                        _this.fsm.onAllocationFailed(false);\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n            _this.fsm.onAllocationFailed(responseStatusCode === 401);\r\n        });\r\n    };\r\n    TrouterConnection.prototype.testNominalUrlConnectivity = function (timeoutMs) {\r\n        var _this = this;\r\n        if (timeoutMs < 1000) {\r\n            this.logger.warn(\"There is no time left to reasonably perform the nominal service URL connectivity check (\" + timeoutMs + \" ms), falling back to assuming that the connectivity is fine\");\r\n            return es6_promise_1.Promise.resolve(true);\r\n        }\r\n        var testRequest;\r\n        try {\r\n            var url = new URL(this.options.trouterUrl);\r\n            // Modify the URL to reach the root page (which returns a plain text string \"Trouter\")\r\n            url.pathname = '/';\r\n            // Add a few query parameters for possible classification and troubleshooting\r\n            // tslint:disable-next-line:prefer-template readability\r\n            url.search = '?' + this.buildQuery({\r\n                check: Date.now(),\r\n                cor_id: encodeURIComponent(this.options.clientCorrelationID),\r\n                epid: encodeURIComponent(this.options.endpointId ? this.options.endpointId : ''),\r\n                tc: encodeURIComponent(Common_1.toJson(this.clientInfo))\r\n            });\r\n            testRequest = new Request(url.toString(), {\r\n                method: 'GET',\r\n                headers: { Accept: 'text/plain' }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.logger.warn(\"Nominal service URL connectivity test request could not be created (\" + error + \"), falling back to assuming that the connectivity is fine\");\r\n            return es6_promise_1.Promise.resolve(true);\r\n        }\r\n        return Common_1.fetchWithTimeout(testRequest, timeoutMs)\r\n            .then(function (response) {\r\n            if (response.status !== 200) {\r\n                throw new Error(\"Not 200 OK: \" + response.status + \" \" + response.statusText);\r\n            }\r\n            return response.text();\r\n        })\r\n            .then(function (body) {\r\n            if (body !== 'Trouter') {\r\n                throw new Error(\"Not \\\"Trouter\\\": \" + body.substring(0, 16) + (body.length > 16 ? '...' : ''));\r\n            }\r\n            return true;\r\n        })\r\n            .catch(function (error) {\r\n            _this.logger.error(\"Nominal service URL connectivity test failed: \" + error);\r\n            return false;\r\n        });\r\n    };\r\n    TrouterConnection.prototype.sendPingRequest = function () {\r\n        var _this = this;\r\n        if (this.socket && this.pingResponseTimerId === undefined) {\r\n            try {\r\n                this.logger.info('emitting ping event');\r\n                var timeoutReached_1 = false;\r\n                this.socket.emit('ping', function () {\r\n                    if (timeoutReached_1 === true) {\r\n                        return;\r\n                    }\r\n                    _this.onPingResponse();\r\n                });\r\n                this.pingResponseTimerId = setTimeout(function () {\r\n                    _this.logger.error('Ping response timeout is fired');\r\n                    timeoutReached_1 = true;\r\n                    _this.clearPingResponseTimer();\r\n                    _this.fsm.onPingResponseTimeout();\r\n                }, this.timeoutOptions.pongTimeoutMs);\r\n            }\r\n            catch (error) {\r\n                var msg = Common_1.toJson(error.stack);\r\n                this.logger.error(\"unable to send ping. Error: \" + msg);\r\n                this.connectionTracker.trackError('ping', msg, false);\r\n            }\r\n        }\r\n    };\r\n    TrouterConnection.prototype.setUserActivityState = function (userActivityObject) {\r\n        var changed = (userActivityObject.state !== this.userActivityState.state);\r\n        this.userActivityState = userActivityObject;\r\n        this.fsm.onSetUserActivityState(userActivityObject, changed);\r\n    };\r\n    TrouterConnection.prototype.sendUserActivityState = function (reason, connected) {\r\n        if (this.userActivityState.state === Interfaces_1.UserActivityState.Unknown) {\r\n            return;\r\n        }\r\n        if (this.transportTypeName === 'websocket' && connected) {\r\n            if (reason === InternalInterfaces_1.UserActivityEventReason.Connected) {\r\n                this.sendUserActivityStateMultiple(2);\r\n            }\r\n            else {\r\n                this.sendUserActivityStateMultiple(1);\r\n            }\r\n        }\r\n        else if (this.transportTypeName === 'xhr-polling') { // ignoring the connected flag\r\n            if (reason === InternalInterfaces_1.UserActivityEventReason.Modified) {\r\n                this.fsm.forceReconnect('user activity/force reconnect');\r\n            }\r\n        }\r\n    };\r\n    TrouterConnection.prototype.sendRegisterRequest = function () {\r\n        var _this = this;\r\n        if (!this.options.registration || !this.registrarClient) {\r\n            throw new Error('Internal error - options.registration is undefined');\r\n        }\r\n        if (!this.allocateResult) {\r\n            throw new Error('Allocate result is undefined in sendRegisterRequest()');\r\n        }\r\n        this.logger.info('sending register request');\r\n        var span = new Common_1.Timespan();\r\n        this.connectionTracker.trackStart('registration');\r\n        var _a = this.getRegistrationTtl(), registrationTtl = _a[0], isRegistrationTtlLowerThanKnownAllocationTtl = _a[1];\r\n        this.registrarClient.register({\r\n            appId: this.options.registration.pnhAppId,\r\n            aesKey: '',\r\n            languageId: 'en-US',\r\n            platform: this.options.registration.platform,\r\n            templateKey: this.options.registration.pnhTemplateKey,\r\n            platformUIVersion: this.options.registration.platformUIVersion,\r\n            productContext: this.options.registration.productContext\r\n        }, {\r\n            TROUTER: [{\r\n                    context: this.options.registration.context,\r\n                    path: this.allocateResult.surl,\r\n                    ttl: registrationTtl\r\n                }]\r\n        }).then(function () {\r\n            _this.logger.info('Register request successful');\r\n            _this.connectionTracker.trackEnd('registration');\r\n            _this.fsm.onRegistrationSucceed(isRegistrationTtlLowerThanKnownAllocationTtl);\r\n            _this.connectionTracker.sendTelemetry(ConnectionTracker_1.ClientEventName.Registration, {\r\n                duration: span.duration\r\n            }, []);\r\n        }).catch(function (error) {\r\n            _this.logger.error(\"Register request failed. Error: \" + error);\r\n            _this.connectionTracker.trackError('registration', error.message);\r\n            _this.fsm.onRegistrationFailed(false); // Auth challenges are handled within tsregistrar\r\n            _this.connectionTracker.sendTelemetry(ConnectionTracker_1.ClientEventName.Registration, {\r\n                duration: span.duration\r\n            }, []);\r\n        });\r\n    };\r\n    TrouterConnection.prototype.sendUnregisterRequest = function () {\r\n        var _this = this;\r\n        this.logger.info('sending unregister request');\r\n        var span = new Common_1.Timespan();\r\n        if (!this.options.registration || !this.registrarClient) {\r\n            throw new Error('Internal error - options.registration is undefined');\r\n        }\r\n        this.connectionTracker.trackStart('unregistration');\r\n        this.registrarClient.unregister().then(function () {\r\n            _this.logger.info('Unregister request successful');\r\n            _this.connectionTracker.trackEnd('unregistration');\r\n            _this.fsm.onUnregistrationSucceed();\r\n            _this.connectionTracker.sendTelemetry(ConnectionTracker_1.ClientEventName.Unregistration, {\r\n                duration: span.duration\r\n            }, []);\r\n        }).catch(function (error) {\r\n            _this.logger.error(\"Unregister request failed. Error: \" + error);\r\n            _this.connectionTracker.trackError('unregistration', error.message);\r\n            _this.fsm.onUnregistrationFailed(false);\r\n            _this.connectionTracker.sendTelemetry(ConnectionTracker_1.ClientEventName.Unregistration, {\r\n                duration: span.duration\r\n            }, []);\r\n        });\r\n    };\r\n    TrouterConnection.prototype.resetTokenBackoff = function () {\r\n        this.tokenBackoff.reset();\r\n    };\r\n    TrouterConnection.prototype.resetRegisterBackoff = function () {\r\n        if (this.registrarClient) {\r\n            this.registrarClient.cancelPendingRequests();\r\n        }\r\n    };\r\n    TrouterConnection.prototype.clearTimers = function () {\r\n        this.logger.debug('Clearing all pending downstream events related timers');\r\n        for (var _i = 0, _a = Object.keys(this.pendingTimers); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            this.clearTimer(Number(key));\r\n        }\r\n    };\r\n    TrouterConnection.prototype.restartIncallModeTimer = function () {\r\n        var _this = this;\r\n        this.clearIncallModeTimerId();\r\n        this.logger.debug('Restarting incall mode timer');\r\n        this.incallModeTimerId = setTimeout(function () {\r\n            _this.logger.info('Call mode timer fired');\r\n            _this.fsm.onIncallModeTimer();\r\n        }, this.options.incallModeTimeoutMs);\r\n    };\r\n    TrouterConnection.prototype.enterIncallMode = function () {\r\n        this.logger.info('Entering incall mode');\r\n        this.timeoutOptions = this.options.incallTimeoutOptions;\r\n        this.tokenBackoff.setMaxBackoffMs(this.timeoutOptions.maxBackoffMs);\r\n        // Uncomment to enable change of timeout in XHR mode - do it once server start to support it\r\n        // if (this.socket) {\r\n        //     this.socket.socket.options.query = this.buildSocketIoUrlParams();\r\n        // }\r\n        this.inIncallMode = true;\r\n    };\r\n    TrouterConnection.prototype.exitIncallMode = function () {\r\n        this.logger.info('Exiting incall mode');\r\n        this.clearIncallModeTimerId();\r\n        this.timeoutOptions = this.options.timeoutOptions;\r\n        this.tokenBackoff.setMaxBackoffMs(this.timeoutOptions.maxBackoffMs);\r\n        // Uncomment to enable change of timeout in XHR mode - do it once server start to support it\r\n        // if (this.socket) {\r\n        //     this.socket.socket.options.query = this.buildSocketIoUrlParams();\r\n        // }\r\n        this.inIncallMode = false;\r\n    };\r\n    TrouterConnection.prototype.isIncallMode = function () {\r\n        return this.inIncallMode;\r\n    };\r\n    TrouterConnection.prototype.sendDisconnectTelemetryEvent = function (reason) {\r\n        var props = { reason: reason, serverClosed: !this.fsm.isActive() };\r\n        this.connectionTracker.trackDisconnected(props);\r\n        this.connectionTracker.clearConnectedInfo();\r\n    };\r\n    ////////// SocketIO callbacks //////////\r\n    TrouterConnection.prototype.onSocketConnecting = function (transportTypeName) {\r\n        this.logger.info(\"onSocketConnecting(\" + transportTypeName + \")\");\r\n        this.transportTypeName = transportTypeName;\r\n        this.connectionTracker.trackProgress('connecting', this.transportTypeName);\r\n        this.fsm.onConnecting();\r\n    };\r\n    TrouterConnection.prototype.onSocketConnect = function () {\r\n        this.logger.info('onSocketConnect');\r\n    };\r\n    TrouterConnection.prototype.onSocketConnectFailed = function (reason) {\r\n        this.logger.error('onSocketConnectFailed');\r\n        this.connectionTracker.trackError('connect_failed', reason, true, this.transportTypeName ? this.transportTypeName : this.UNKNOWN_TRANSPORT);\r\n        this.fsm.onConnectingFailed();\r\n    };\r\n    TrouterConnection.prototype.onSocketDisconnect = function (reason) {\r\n        this.logger.error(\"onSocketDisconnect, reason: \" + reason);\r\n        var sessionLengthMs = this.connectionTracker.getSessionLength() || 0;\r\n        if (reason === 'dup' && this.lastDisconnectReason === 'dup' &&\r\n            sessionLengthMs < this.options.duplicateDisconnectThresholdMs) {\r\n            this.logger.warn('Socket was closed by server as Duplicate for the second time in a row ' +\r\n                (\"after \" + sessionLengthMs + \" ms which is below the threshold of \") +\r\n                (this.options.duplicateDisconnectThresholdMs + \" ms. Resetting cached \") +\r\n                'connection parameters and making a new allocation.');\r\n            this.reconnectParams = undefined;\r\n        }\r\n        this.lastDisconnectReason = reason;\r\n        this.fsm.onSocketDisconnect(reason);\r\n        this.connectionExpireTimestampInSecs = undefined;\r\n    };\r\n    TrouterConnection.prototype.onSocketReconnect = function () {\r\n        // this callback should not be called, because reconnect on socket.io is disabled, but\r\n        // leave it here in case error in socket.io\r\n        this.logger.error('onSocketReconnect');\r\n        this.fsm.onTrouterConnected();\r\n    };\r\n    TrouterConnection.prototype.onSocketReconnectFailed = function (reason) {\r\n        // this callback should not be called, because reconnect on socket.io is disabled, but\r\n        // leave it here in case error in socket.io\r\n        this.logger.error(\"onSocketReconnectFailed with '\" + reason + \"'\");\r\n        this.fsm.onSocketDisconnect(typeof reason === 'string' ? reason : undefined);\r\n    };\r\n    TrouterConnection.prototype.onSocketReconnecting = function () {\r\n        // this callback should not be called, because reconnect on socket.io is disabled, but\r\n        // leave it here in case error in socket.io\r\n        this.logger.error('onSocketReconnecting');\r\n    };\r\n    TrouterConnection.prototype.onSocketError = function (errorObject) {\r\n        this.logger.error(\"onSocketError with '\" + Common_1.toJson(errorObject) + \"'\");\r\n        this.connectionTracker.trackError('connectSocket', errorObject);\r\n        this.fsm.onSocketDisconnect(typeof errorObject === 'string' ? errorObject : undefined);\r\n    };\r\n    TrouterConnection.prototype.onSocketMessage = function (requestJson) {\r\n        var _this = this;\r\n        this.logger.info('onSocketMessage');\r\n        var request;\r\n        try {\r\n            request = new TrouterRequest(requestJson);\r\n            var chainId = request.headers && request.headers['X-Microsoft-Skype-Chain-ID'];\r\n            var chainIdLogText = chainId ? \" Chain-Id \" + chainId : '';\r\n            this.logger.info(\"Received request N \" + request.id + chainIdLogText + \" CV \" + request.correlationVector + \" to '\" + request.url + \"'\");\r\n            request.startTS = Date.now();\r\n            if (request.url && this.urlPath && request.url.indexOf(this.urlPath) === 0) {\r\n                request.shortUrl = request.url.substring(this.urlPath.length);\r\n            }\r\n        }\r\n        catch (error) {\r\n            var msg = Common_1.toJson(error.stack);\r\n            this.logger.error(\"unable to parse request. Error: \" + msg);\r\n            this.connectionTracker.trackRequest(undefined, msg);\r\n            this.connectionTracker.sendResponseError(\"unable to parse request, error: \" + error);\r\n            return;\r\n        }\r\n        request.timeoutTimerId = setTimeout(function () {\r\n            if (request.replied) {\r\n                return;\r\n            }\r\n            _this.logger.error(\"Request \" + request.id + \" timed out\");\r\n            var responseData = new ConnectionTracker_1.ResponseData(request.id);\r\n            responseData.status = 504;\r\n            responseData.headers = { 'Trouter-Responder': 'ClientLib' };\r\n            _this.sendResponse(request, responseData);\r\n            request.timedout = true;\r\n        }, this.timeoutOptions.requestTimeoutMs);\r\n        try {\r\n            this.connectionTracker.trackRequest(request);\r\n            this.fsm.onDownstreamRequest(request);\r\n        }\r\n        catch (error) {\r\n            this.logger.error(\"exception in socket.on message. Error: \" + Common_1.toJson(error.stack));\r\n            this.connectionTracker.sendResponseError(error.message, request, undefined);\r\n        }\r\n    };\r\n    TrouterConnection.prototype.onTrouterConnected = function (eventArgs) {\r\n        if (!this.allocateResult) {\r\n            this.logger.error('Invalid internal state - received onTrouterConnected while allocateResult is not set');\r\n            return;\r\n        }\r\n        this.logger.info(\"onTrouterConnected: \" + this.allocateResult.url);\r\n        // Prevent next 'trouter.connected' responses from other trouter nodes\r\n        // hackish way, since socket.io doesn't have API for that\r\n        if (this.socket && this.socket.socket && this.socket.socket.options && this.socket.socket.options.query) {\r\n            this.socket.socket.options.query += '&connected=true';\r\n        }\r\n        // Strip off the first part of the URL, up to the path\r\n        this.urlPath = this.allocateResult.url.replace(/https?:\\/\\/([A-z0-9\\:\\$\\-\\_\\.\\+\\!\\*\\\"\\(\\)\\,]*)\\//, '/');\r\n        var isNewUrl = (this.connectedUrl !== this.allocateResult.url);\r\n        this.connectedUrl = this.allocateResult.url;\r\n        this.connectionExpireTimestampInSecs = Common_1.calculateExpireTsInSec(eventArgs.ttl);\r\n        this.connectionTracker.trackEnd('connectSocket');\r\n        this.connectionTracker.trackConnected(isNewUrl, this.transportTypeName ? this.transportTypeName : this.UNKNOWN_TRANSPORT);\r\n        this.fsm.onTrouterConnected();\r\n    };\r\n    TrouterConnection.prototype.onTrouterReconnect = function (eventArgs) {\r\n        var target = eventArgs.target;\r\n        this.logger.info(\"onTrouterReconnect target: \" + target);\r\n        if (target === 'self') {\r\n            this.fsm.onReconnectRequired(true, ReconnectReason.ServerInitiated);\r\n        }\r\n        else {\r\n            this.fsm.onReconnectRequired(false, ReconnectReason.ServerInitiated);\r\n        }\r\n    };\r\n    TrouterConnection.prototype.onTrouterMessageLoss = function (eventArgs) {\r\n        this.logger.info('onTrouterMessageLoss');\r\n        // Send only array of tags for further processing\r\n        this.fsm.onTrouterMessageLost(eventArgs.droppedIndicators);\r\n    };\r\n    ////////// Other functions //////////\r\n    TrouterConnection.prototype.onNavigatorOnlineStatusUpdate = function (e) {\r\n        var state = window.navigator.onLine;\r\n        this.logger.debug(\"Browser online status update - new state: \" + state + \", previously: \" + this.isNavigatorOnline);\r\n        if (state && !this.isNavigatorOnline) {\r\n            this.isNavigatorOnline = true;\r\n            this.tokenBackoff.expediteIfPending();\r\n            this.connectionTracker.trackProgress('browserNet', 'online');\r\n        }\r\n        else if (!state && this.isNavigatorOnline) {\r\n            this.isNavigatorOnline = false;\r\n            this.connectionTracker.trackProgress('browserNet', 'offline');\r\n        }\r\n    };\r\n    TrouterConnection.prototype.onAllocationResponse = function (allocateResult, serviceUrl) {\r\n        this.logger.info(\"Received allocation response \" + JSON.stringify(allocateResult));\r\n        this.allocateResult = allocateResult;\r\n        this.reconnectParams = __assign({ serviceUrl: serviceUrl, \r\n            // The service does not send reconnectUrl (yet), make it up based\r\n            // on other fields - 'socketio' is simply the root\r\n            reconnectUrl: this.allocateResult.socketio + \"v4/a\" }, allocateResult.connectparams);\r\n        // in V4 ttl is a string in IAllocateResult - converting it to number with \"+\"\r\n        var ttl = +allocateResult.ttl;\r\n        // Don't use allocateResult.connectparams.se here since system clock can be\r\n        // incorrect on client's machine, so using TTL is safer\r\n        this.connectionExpireTimestampInSecs = Common_1.calculateExpireTsInSec(ttl);\r\n        this.connectionId = this.allocateResult.id || '';\r\n        this.connectedClientId = this.allocateResult.ccid;\r\n        this.logger.info(\"connected client id set {connectedClientId:\" + this.connectedClientId + \"}\");\r\n        this.c2cUrlBase = allocateResult.curlb || '';\r\n        if (this.c2cUrlBase === '') {\r\n            // Try to just remove the port as a fallback if the service didn't provide anything\r\n            var pos = allocateResult.surl.indexOf('://');\r\n            if (pos >= 0) {\r\n                pos = allocateResult.surl.indexOf('/', pos + 3);\r\n                if (pos >= 5 && allocateResult.surl.substr(pos - 5, 5) === ':3443') {\r\n                    this.c2cUrlBase = allocateResult.surl.substr(0, pos - 5);\r\n                }\r\n            }\r\n        }\r\n        // tslint:disable-next-line:no-non-null-assertion cannot be null, was set earlier\r\n        this.manager.onConnectionParametersUpdated(this.reconnectParams);\r\n        this.fsm.onAllocationSucceed();\r\n    };\r\n    TrouterConnection.prototype.onPingResponse = function () {\r\n        this.logger.info('onPingResponse');\r\n        this.connectionTracker.increasePingResponseCount();\r\n        this.clearPingResponseTimer();\r\n        this.fsm.onPingResponse();\r\n    };\r\n    TrouterConnection.prototype.clearPingResponseTimer = function () {\r\n        if (this.pingResponseTimerId !== undefined) {\r\n            clearTimeout(this.pingResponseTimerId);\r\n            this.pingResponseTimerId = undefined;\r\n        }\r\n    };\r\n    TrouterConnection.prototype.buildQuery = function (map) {\r\n        // TO-DO: Replace this and all other similar functions around with URLSearchParams\r\n        var components = [];\r\n        for (var _i = 0, _a = Object.keys(map); _i < _a.length; _i++) {\r\n            var i = _a[_i];\r\n            if (map.hasOwnProperty(i) && map[i] !== undefined) {\r\n                components.push(i + \"=\" + map[i]);\r\n            }\r\n        }\r\n        return components.join('&');\r\n    };\r\n    TrouterConnection.prototype.appendConnectedClientIds = function (url, isParamsOnly) {\r\n        var params = '';\r\n        if (url.indexOf('ccid=') < 0) {\r\n            params = \"ccid=\" + this.connectedClientId + \"&\";\r\n        }\r\n        if (this.domId) {\r\n            params += \"dom=\" + this.domId + \"&\";\r\n        }\r\n        if (params.length > 0) {\r\n            params = params.slice(0, -1);\r\n        }\r\n        var sep = (isParamsOnly || url.indexOf('?') !== -1) ? ('&') : ('?');\r\n        return this.appendCorrelationIds(url + sep + params, isParamsOnly);\r\n    };\r\n    TrouterConnection.prototype.appendEndpointId = function (url, isParamsOnly) {\r\n        var sep = (isParamsOnly || url.indexOf('?') !== -1) ? ('&') : ('?');\r\n        return (url.indexOf('epid') < 0 && this.options.endpointId)\r\n            ? \"\" + url + sep + \"epid=\" + this.options.endpointId\r\n            : url;\r\n    };\r\n    TrouterConnection.prototype.appendCorrelationIds = function (url, isParamsOnly) {\r\n        var sep = (isParamsOnly || url.indexOf('?') !== -1) ? ('&') : ('?');\r\n        return (url.indexOf('cor_id') < 0)\r\n            ? \"\" + url + sep + \"cor_id=\" + this.options.clientCorrelationID\r\n                + (\"&con_num=\" + this.clientID + \"_\" + this.connectionAttempt)\r\n            : url;\r\n    };\r\n    TrouterConnection.prototype.safeString = function (str) {\r\n        return (typeof (str) === 'string') ? str : '';\r\n    };\r\n    TrouterConnection.prototype.sendResponse = function (request, responseData) {\r\n        if (request.timedout) {\r\n            this.logger.error(\"Request \" + request.id + \" already timed out\");\r\n            return 1 /* Timeout */;\r\n        }\r\n        if (request.replied) {\r\n            this.logger.error(\"Response for request \" + request.id + \" already sent\");\r\n            return 2 /* Duplicate */;\r\n        }\r\n        clearTimeout(request.timeoutTimerId);\r\n        request.timeoutTimerId = 0;\r\n        request.replied = true;\r\n        responseData.headers = responseData.headers || {};\r\n        var cv = request.correlationVector;\r\n        this.logger.info(\"Sending response for request N \" + request.id + \" CV \" + cv + \" with status \" + responseData.status);\r\n        if (cv) {\r\n            responseData.headers[cvHeader] = cv;\r\n        }\r\n        // Echo back the incoming \"trouter-request\" header\r\n        if (request.headers && request.headers['trouter-request'] && !responseData.headers['trouter-request']) {\r\n            responseData.headers['trouter-request'] = request.headers['trouter-request'];\r\n        }\r\n        // Fill in \"trouter-client\" header\r\n        var latencyMS = Date.now() - request.startTS;\r\n        responseData.headers['trouter-client'] = Common_1.toJson({\r\n            cd: latencyMS\r\n        });\r\n        this.logger.debug(\"response: \" + Common_1.toJson(responseData));\r\n        if (this.socket) {\r\n            try {\r\n                this.socket.send(Common_1.toJson(responseData));\r\n                responseData.sentTS = Date.now();\r\n                request.incrementCorrelationVector();\r\n                this.connectionTracker.trackResponse(request, latencyMS, responseData);\r\n                if (this.transportTypeName === 'websocket') {\r\n                    // Send ping request immediately to emulate 'ack' from server, so\r\n                    // client can faster react on network issues\r\n                    this.sendPingRequest();\r\n                }\r\n                return 0 /* OK */;\r\n            }\r\n            catch (error) {\r\n                var errorMsg = \"unable to send data on response.end. Error: \" + Common_1.toJson(error.stack);\r\n                this.logger.error(errorMsg);\r\n                this.connectionTracker.sendResponseError(errorMsg, request, responseData);\r\n                return 4 /* Disconnected */;\r\n            }\r\n        }\r\n        else {\r\n            this.connectionTracker.sendResponseError('no socket', request, responseData);\r\n            return 4 /* Disconnected */;\r\n        }\r\n    };\r\n    /*\r\n        Sends the activity state event to Trouter.\r\n        Has implemented support for sending the current state twice (or multiple times)\r\n        after reconnect, first immediately, and theen the second after configured delay.\r\n\r\n        If after the first sent state event the client app changes the state,\r\n        the new state is sent in the second event after the delay.\r\n        Meanwhile the new state is also sent immediately upon\r\n        the change, but the planned second sending (after delay) is triggered anyway,\r\n        to fulfill it's purpose, which is to prevent server-side race condition.\r\n     */\r\n    TrouterConnection.prototype.sendUserActivityStateMultiple = function (remaining) {\r\n        var _this = this;\r\n        var activityEvent = new DownstreamEvent('user.activity');\r\n        var activityEventObject = this.userActivityState.toEventObject();\r\n        activityEvent.args = activityEventObject;\r\n        this.userActivityState.correlationVector.increase();\r\n        this.logger.debug(\"Sending user activity '\" + this.userActivityState.toEventJSON() + \"', remaining \" + (remaining - 1));\r\n        var timeoutReached = false;\r\n        this.sendDownstreamEvent(activityEvent, function () {\r\n            if (timeoutReached === true) {\r\n                return;\r\n            }\r\n            _this.logger.info(\"User activity state: \" + activityEventObject.state + \", cv: \" + activityEventObject.cv + \" accepted\");\r\n            if (_this.manager.onUserActivityStateAccepted) {\r\n                _this.manager.onUserActivityStateAccepted(activityEventObject.cv);\r\n            }\r\n            _this.clearTimer(activityEvent.timeoutTimerId);\r\n            if (remaining > 1) {\r\n                var timerId_1 = setTimeout(function () {\r\n                    _this.clearTimer(timerId_1);\r\n                    _this.sendUserActivityStateMultiple(remaining - 1);\r\n                }, _this.options.userActivitySecondResendDelayMs);\r\n                _this.registerTimer(timerId_1, 'user.activity/resend');\r\n            }\r\n        });\r\n        activityEvent.timeoutTimerId = setTimeout(function () {\r\n            _this.logger.error('Activity state response timeout is fired');\r\n            timeoutReached = true;\r\n            _this.fsm.onActivityStateResponseTimeout();\r\n            _this.clearTimer(activityEvent.timeoutTimerId);\r\n        }, this.timeoutOptions.userActivityResponseTimeoutMs);\r\n        this.registerTimer(activityEvent.timeoutTimerId, 'user.activity/response');\r\n    };\r\n    TrouterConnection.prototype.sendDownstreamEvent = function (event, responseCallback) {\r\n        this.logger.info(\"Sending downstream event \" + event.name);\r\n        if (this.socket) {\r\n            this.socket.emit(event.name, event.args, responseCallback);\r\n        }\r\n    };\r\n    TrouterConnection.prototype.registerTimer = function (timerId, timerDescription) {\r\n        this.logger.debug(\"registering timer \" + timerId + \" -> \" + timerDescription);\r\n        this.pendingTimers[timerId] = timerDescription;\r\n    };\r\n    TrouterConnection.prototype.clearTimer = function (id) {\r\n        var timerDescription = this.pendingTimers[id];\r\n        this.logger.debug(\"clearing timer \" + id + \" -> \" + timerDescription);\r\n        delete this.pendingTimers[id];\r\n        clearTimeout(id);\r\n    };\r\n    /**\r\n     * Calculate registration interval. Result is based on configuration parameters\r\n     * and allocation ttl value from trouter server.\r\n     * Returns true only if the registration ttl is present and is smaller than known `allocationTtl`.\r\n     * This means we'll need to re-register to keep the registration alive for the duration of the allocation.\r\n     */\r\n    TrouterConnection.prototype.getRegistrationTtl = function () {\r\n        var allocationTtl = Common_1.calculateTtlInSec(this.connectionExpireTimestampInSecs);\r\n        this.logger.debug(\"Current connectionID will expire in \" + allocationTtl + \" seconds\");\r\n        if (this.options.registration && this.options.registration.registrarTtlSec && allocationTtl > 0) {\r\n            var isLower = this.options.registration.registrarTtlSec < allocationTtl;\r\n            return [Math.min(this.options.registration.registrarTtlSec, allocationTtl), isLower];\r\n        }\r\n        else if (this.options.registration && this.options.registration.registrarTtlSec) {\r\n            return [this.options.registration.registrarTtlSec, false];\r\n        }\r\n        else if (allocationTtl > 0) {\r\n            return [allocationTtl, false];\r\n        }\r\n        return [DEFAULT_REGISTRATION_TIMEOUT_SEC, false];\r\n    };\r\n    TrouterConnection.prototype.clearIncallModeTimerId = function () {\r\n        if (this.incallModeTimerId !== undefined) {\r\n            this.logger.debug('Clearing in-call mode timer');\r\n            clearTimeout(this.incallModeTimerId);\r\n            this.incallModeTimerId = undefined;\r\n        }\r\n    };\r\n    TrouterConnection.prototype.applyConnectionTrackerOptions = function (options) {\r\n        try {\r\n            var eventLoggerSent = (options.eventLogger && typeof options.eventLogger.logEvent === 'function');\r\n            if (!eventLoggerSent) {\r\n                this.logger.warn('Trouter client event logging disabled due to invalid configuration.');\r\n            }\r\n            else {\r\n                this.connectionTracker.mergeSettings(options.telemetrySettings);\r\n                this.connectionTracker.enable(options.eventLogger);\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.logger.warn(\"Trouter client event logging disabled. Error: \" + Common_1.toJson(error.stack));\r\n            this.connectionTracker.disable();\r\n        }\r\n    };\r\n    /**\r\n     * Returns boolean indicating if we can retry token fetch\r\n     * based on value of optional configuration 'retryLimitOnTokenFetch'\r\n     * @returns boolean\r\n     */\r\n    TrouterConnection.prototype.canRetryTokenFetchRequest = function (currentCounter) {\r\n        var retryLimit = this.options.retryLimitOnTokenFetch;\r\n        if (retryLimit === null || retryLimit === undefined) {\r\n            return true;\r\n        }\r\n        if (currentCounter < retryLimit) {\r\n            return true;\r\n        }\r\n        this.logger.warn(\"Reached limit on maximum number of token fetch request. Current count: \" + currentCounter + \", retry limit: \" + retryLimit);\r\n        return false;\r\n    };\r\n    return TrouterConnection;\r\n}());\r\nexports.TrouterConnection = TrouterConnection;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable:export-name\r\nvar Constants_1 = __webpack_require__(1);\r\n/**\r\n * Registry of message handlers.\r\n * Safely executes individual handlers and aggregates results\r\n */\r\nvar MessageHandlerRegistry = /** @class */ (function () {\r\n    function MessageHandlerRegistry(logger) {\r\n        this.logger = logger;\r\n        this.messageHandlers = [];\r\n    }\r\n    MessageHandlerRegistry.prototype.register = function (handler) {\r\n        if (this.messageHandlers.some(function (item) { return item === handler; })) {\r\n            throw new Error('Registering the same handler twice is not allowed');\r\n        }\r\n        this.messageHandlers.push(handler);\r\n    };\r\n    MessageHandlerRegistry.prototype.clear = function () {\r\n        this.logger.debug('Clearing message handlers');\r\n        this.messageHandlers = [];\r\n    };\r\n    MessageHandlerRegistry.prototype.active = function () {\r\n        return (this.messageHandlers.length > 0);\r\n    };\r\n    MessageHandlerRegistry.prototype.handleMessage = function (message) {\r\n        var unhandledMessageResult = {\r\n            resultCode: Constants_1.UNHANDLED_MESSAGE_ACK,\r\n            isHandled: false\r\n        };\r\n        for (var _i = 0, _a = this.messageHandlers; _i < _a.length; _i++) {\r\n            var messageHandler = _a[_i];\r\n            var result = this.safeExecuteHandle(messageHandler, message);\r\n            if (result !== undefined && (result.isHandled === undefined || result.isHandled)) {\r\n                if (result.resultCode === undefined) {\r\n                    result.resultCode = Constants_1.HANDLED_MESSAGE_ACK;\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        return unhandledMessageResult;\r\n    };\r\n    MessageHandlerRegistry.prototype.safeExecuteHandle = function (handler, message) {\r\n        try {\r\n            return handler.handleMessage(message);\r\n        }\r\n        catch (exception) {\r\n            this.logger.warn(\"A trouter message handler is throwing exceptions. exception: \" + exception);\r\n            return undefined;\r\n        }\r\n    };\r\n    return MessageHandlerRegistry;\r\n}());\r\nexports.MessageHandlerRegistry = MessageHandlerRegistry;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable-next-line:export-name\r\nfunction addCacheAsBackupTo(provider) {\r\n    var _this = this;\r\n    var cachedToken;\r\n    return function (forceRefresh) { return __awaiter(_this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            if (forceRefresh) {\r\n                cachedToken = undefined;\r\n            }\r\n            return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                    provider(forceRefresh).then(function (token) {\r\n                        cachedToken = token;\r\n                        resolve(token);\r\n                    }).catch(function (error) {\r\n                        if (cachedToken !== undefined && cachedToken.length > 0) {\r\n                            resolve(cachedToken);\r\n                        }\r\n                        reject(error);\r\n                    });\r\n                })];\r\n        });\r\n    }); };\r\n}\r\nexports.addCacheAsBackupTo = addCacheAsBackupTo;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable:strict-boolean-expressions\r\n// tslint:disable:promise-function-async\r\nvar Common_1 = __webpack_require__(3);\r\nvar Interfaces_1 = __webpack_require__(2);\r\nvar Logger_1 = __webpack_require__(0);\r\nvar TrouterConnection_1 = __webpack_require__(6);\r\nvar TrouterManagerFsm_1 = __webpack_require__(18);\r\n/**\r\n * UserActivity object\r\n */\r\nvar UserActivityObject = /** @class */ (function () {\r\n    function UserActivityObject(state, correlationVector) {\r\n        this.state = state;\r\n        this.correlationVector = correlationVector !== undefined ? correlationVector : Common_1.CorrelationVector.extend();\r\n    }\r\n    UserActivityObject.prototype.getStateString = function () {\r\n        switch (this.state) {\r\n            case Interfaces_1.UserActivityState.Active: return 'active';\r\n            case Interfaces_1.UserActivityState.Inactive: return 'inactive';\r\n            case Interfaces_1.UserActivityState.Unknown: return 'unknown';\r\n            default: return 'undefined';\r\n        }\r\n    };\r\n    UserActivityObject.prototype.toEventObject = function () {\r\n        return { state: this.getStateString(), cv: this.correlationVector.value() };\r\n    };\r\n    UserActivityObject.prototype.toEventJSON = function () {\r\n        return Common_1.toJson(this.toEventObject());\r\n    };\r\n    return UserActivityObject;\r\n}());\r\nexports.UserActivityObject = UserActivityObject;\r\n/**\r\n * Trouter implementation\r\n */\r\nvar TrouterManager = /** @class */ (function () {\r\n    function TrouterManager(logFunc, options, tokenProvider, listener) {\r\n        this.logFunc = logFunc;\r\n        this.options = options;\r\n        this.tokenProvider = tokenProvider;\r\n        this.listener = listener;\r\n        this.logger = new Logger_1.Logger('Manager', logFunc);\r\n        this.logger.info(\"Created TrouterManager with options \" + Common_1.toJson(this.options));\r\n        this.fsm = new TrouterManagerFsm_1.TrouterManagerFsm(logFunc, this);\r\n        this.baseEndpointUrl = '';\r\n        this.processedMessageLoss = {};\r\n        this.userActivityObject = new UserActivityObject(Interfaces_1.UserActivityState.Unknown);\r\n    }\r\n    TrouterManager.prototype.start = function () {\r\n        this.fsm.start();\r\n    };\r\n    TrouterManager.prototype.stop = function (dontUnregister) {\r\n        this.fsm.stop(dontUnregister);\r\n    };\r\n    TrouterManager.prototype.configure = function (options) {\r\n        this.options = options;\r\n        if (this.firstConnection !== undefined) {\r\n            this.firstConnection.configure(options);\r\n        }\r\n        if (this.secondConnection !== undefined) {\r\n            this.secondConnection.configure(options);\r\n        }\r\n        this.logger.info(\"Reconfigured TrouterManager with options \" + Common_1.toJson(this.options));\r\n    };\r\n    TrouterManager.prototype.checkConnection = function (disconnectDetected) {\r\n        if (this.firstConnection !== undefined) {\r\n            this.firstConnection.checkConnection(disconnectDetected);\r\n        }\r\n        if (this.secondConnection !== undefined) {\r\n            this.secondConnection.checkConnection(disconnectDetected);\r\n        }\r\n    };\r\n    TrouterManager.prototype.resendRegistration = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (this.secondConnection !== undefined) {\r\n                    this.logger.info('Resending registration on the second/new connection');\r\n                    return [2 /*return*/, this.secondConnection.resendRegistration()];\r\n                }\r\n                if (this.firstConnection !== undefined) {\r\n                    this.logger.info('Resending registration on the first/current connection');\r\n                    return [2 /*return*/, this.firstConnection.resendRegistration()];\r\n                }\r\n                this.logger.info('No connection to resend registration on, will be done upon (re)connect');\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    TrouterManager.prototype.getServerState = function () {\r\n        if (this.firstConnection !== undefined) {\r\n            return this.firstConnection.getServerState();\r\n        }\r\n        return undefined;\r\n    };\r\n    /** Returns current state */\r\n    TrouterManager.prototype.getState = function () {\r\n        return this.fsm.getState();\r\n    };\r\n    //////////// IManagerWorker ////////////\r\n    TrouterManager.prototype.startFirstConnection = function () {\r\n        var connection = new TrouterConnection_1.TrouterConnection(this.logFunc, this.options, this, this.tokenProvider, this.userActivityObject);\r\n        this.firstConnection = connection;\r\n        this.getConnectionCache()\r\n            .then(function (connectionCache) {\r\n            connection.start(connectionCache);\r\n        })\r\n            .catch();\r\n    };\r\n    TrouterManager.prototype.startSecondConnection = function (useConnectParamsFromCache) {\r\n        var connection = new TrouterConnection_1.TrouterConnection(this.logFunc, this.options, this, this.tokenProvider, this.userActivityObject);\r\n        this.secondConnection = connection;\r\n        if (this.firstConnection !== undefined) {\r\n            this.firstConnection.disableRegistrationsAndAutoReconnect();\r\n        }\r\n        if (useConnectParamsFromCache) {\r\n            this.getConnectionCache()\r\n                .then(function (connectionCache) {\r\n                connection.start(connectionCache);\r\n            })\r\n                .catch();\r\n        }\r\n        else {\r\n            connection.start();\r\n        }\r\n    };\r\n    TrouterManager.prototype.stopFirstConnection = function (dontUnregister) {\r\n        if (this.firstConnection !== undefined) {\r\n            // Store first connection to be able to compare in onDisconnected() handler\r\n            this.storedFirstConnection = this.firstConnection;\r\n            this.firstConnection.stop(dontUnregister);\r\n            this.firstConnection = undefined;\r\n        }\r\n    };\r\n    TrouterManager.prototype.stopSecondConnection = function (dontUnregister) {\r\n        if (this.secondConnection !== undefined) {\r\n            this.secondConnection.stop(dontUnregister);\r\n            this.secondConnection = undefined;\r\n        }\r\n    };\r\n    TrouterManager.prototype.stopSecondConnectionDelayed = function () {\r\n        if (this.secondConnection !== undefined) {\r\n            var connection_1 = this.secondConnection;\r\n            this.secondConnection = undefined;\r\n            this.logger.info(\"Closing an inactive connection in \" + Math.round(this.options.lingeringConnectionDelayMs / 1000) + \"s\");\r\n            setTimeout(function () {\r\n                connection_1.stop(true);\r\n            }, this.options.lingeringConnectionDelayMs);\r\n        }\r\n    };\r\n    TrouterManager.prototype.forceStopLingeringConnection = function () {\r\n        if (this.storedFirstConnection) {\r\n            this.storedFirstConnection.stop(false);\r\n            this.storedFirstConnection = undefined;\r\n        }\r\n    };\r\n    TrouterManager.prototype.switchConnections = function () {\r\n        var tmp = this.firstConnection;\r\n        this.firstConnection = this.secondConnection;\r\n        this.secondConnection = tmp;\r\n    };\r\n    TrouterManager.prototype.doesSecondConnectionExist = function () {\r\n        return this.secondConnection !== undefined;\r\n    };\r\n    TrouterManager.prototype.dispatchConnected = function () {\r\n        if (this.firstConnection !== undefined) {\r\n            var ss = this.firstConnection.getServerState();\r\n            var baseEndpointUrl = (ss.url.slice(-1) === '/') ? ss.url.slice(0, -1) : ss.url;\r\n            var connectionInfo = {\r\n                baseEndpointUrl: baseEndpointUrl,\r\n                newEndpointUrl: (baseEndpointUrl !== this.baseEndpointUrl),\r\n                c2cUrlBase: ss.c2cUrlBase,\r\n                clientId: ss.connectedClientId,\r\n                connectionId: ss.connectionId,\r\n                connectionTtlSec: ss.getRemainingTtlInSec()\r\n            };\r\n            this.baseEndpointUrl = baseEndpointUrl;\r\n            this.listener.onTrouterConnected(ss.url, connectionInfo);\r\n        }\r\n    };\r\n    TrouterManager.prototype.dispatchReconnecting = function () {\r\n        if (this.listener.onTrouterDisconnected) {\r\n            this.listener.onTrouterDisconnected();\r\n        }\r\n    };\r\n    TrouterManager.prototype.dispatchStopped = function () {\r\n        if (this.listener.onTrouterDisconnected) {\r\n            this.listener.onTrouterDisconnected();\r\n        }\r\n    };\r\n    TrouterManager.prototype.dispatchRegistrationState = function (isRegistered) {\r\n        if (this.options.registrationStateCallback) {\r\n            this.options.registrationStateCallback(isRegistered);\r\n        }\r\n    };\r\n    //////////// IManagerConsumer ////////////\r\n    TrouterManager.prototype.onDownstreamRequest = function (connection, request, response) {\r\n        var req = {\r\n            id: request.id,\r\n            method: request.method,\r\n            path: \"/\" + request.shortUrl,\r\n            body: request.body,\r\n            headers: request.headers\r\n        };\r\n        var rsp = {\r\n            id: request.id,\r\n            status: 0,\r\n            headers: {},\r\n            body: '',\r\n            send: function () {\r\n                if (rsp.status <= 100 || rsp.status >= 999) {\r\n                    return 3 /* Incomplete */;\r\n                }\r\n                response.writeHead(rsp.status, rsp.headers);\r\n                return response.end(rsp.body);\r\n            }\r\n        };\r\n        this.listener.onTrouterRequest(req, rsp);\r\n    };\r\n    TrouterManager.prototype.onConnected = function (connection) {\r\n        this.fsm.onConnected(connection === this.firstConnection);\r\n    };\r\n    TrouterManager.prototype.onRegistered = function (connection) {\r\n        this.fsm.onRegistered(connection === this.firstConnection);\r\n    };\r\n    TrouterManager.prototype.onUnregistered = function (connection) {\r\n        this.fsm.onUnregistered(connection === this.firstConnection || connection === this.storedFirstConnection);\r\n    };\r\n    TrouterManager.prototype.onReconnecting = function (connection) {\r\n        this.fsm.onReconnecting(connection === this.firstConnection);\r\n    };\r\n    TrouterManager.prototype.onReconnectIsRequired = function (connection, useConnectParamsFromCache, reason) {\r\n        this.fsm.onReconnectionRequired(connection === this.firstConnection, useConnectParamsFromCache, reason);\r\n    };\r\n    TrouterManager.prototype.onDisconnected = function (connection) {\r\n        this.fsm.onDisconnected(connection === this.storedFirstConnection);\r\n        this.storedFirstConnection = undefined;\r\n    };\r\n    TrouterManager.prototype.onUserActivityStateAccepted = function (cv) {\r\n        if (this.listener.onTrouterUserActivityStateAccepted) {\r\n            this.listener.onTrouterUserActivityStateAccepted(cv);\r\n        }\r\n    };\r\n    TrouterManager.prototype.onConnectionParametersUpdated = function (connectionParameters) {\r\n        this.setConnectionCache(connectionParameters);\r\n    };\r\n    TrouterManager.prototype.setUserActivityState = function (state, correlationVector) {\r\n        this.userActivityObject = new UserActivityObject(state, Common_1.CorrelationVector.extend(correlationVector));\r\n        if (this.secondConnection !== undefined) {\r\n            this.logger.info(\"Setting user activity \" + this.userActivityObject.toEventJSON() + \" on the second/new connection\");\r\n            this.secondConnection.setUserActivityState(this.userActivityObject);\r\n            return;\r\n        }\r\n        if (this.firstConnection !== undefined) {\r\n            this.logger.info(\"Setting user activity \" + this.userActivityObject.toEventJSON() + \" on the first/current connection\");\r\n            this.firstConnection.setUserActivityState(this.userActivityObject);\r\n            return;\r\n        }\r\n    };\r\n    TrouterManager.prototype.onTrouterMessageLost = function (indicators) {\r\n        var _this = this;\r\n        if (this.listener.onTrouterMessageLoss) {\r\n            if (indicators && indicators.length) {\r\n                // Filter out already seen dropped indicators and inform server that they are processed\r\n                var duplicates = indicators.filter(function (di) { return _this.processedMessageLoss[di.tag + \"-\" + di.etag] !== undefined; });\r\n                if (duplicates.length) {\r\n                    this.logger.warn('onTrouterMessageLoss - removing duplicates and sending event to server');\r\n                    this.sendProcessedDroppedIndicators(duplicates);\r\n                    indicators = indicators.filter(function (di) { return _this.processedMessageLoss[di.tag + \"-\" + di.etag] === undefined; });\r\n                    if (!indicators.length) {\r\n                        this.logger.warn('onTrouterMessageLoss - All the data are duplicated');\r\n                        return;\r\n                    }\r\n                }\r\n                // Send the data to the listeners\r\n                var messageLossProcessed = this.listener.onTrouterMessageLoss(indicators.map(function (di) { return di.tag; }));\r\n                if (!messageLossProcessed) {\r\n                    this.logger.warn('onTrouterMessageLoss - flow tags have not been processed by listeners');\r\n                    return;\r\n                }\r\n                // Update the cache\r\n                indicators.forEach(function (di) {\r\n                    _this.processedMessageLoss[di.tag + \"-\" + di.etag] = '';\r\n                });\r\n                this.sendProcessedDroppedIndicators(indicators);\r\n            }\r\n            else {\r\n                this.logger.warn('onTrouterMessageLoss - no flow tags have been provided');\r\n            }\r\n        }\r\n    };\r\n    TrouterManager.prototype.getConnectionCache = function () {\r\n        var _this = this;\r\n        if (!this.options.connectionCache) {\r\n            return Promise.resolve(this.connectionCache);\r\n        }\r\n        this.logger.debug('Querying host\\'s connection cache');\r\n        return this.options.connectionCache.onGetTrouterConnectionCache()\r\n            .then(function (serialized) {\r\n            return serialized ? JSON.parse(serialized) : undefined;\r\n        })\r\n            .catch(function (e) {\r\n            _this.logger.warn(\"Invalid connection cache content provided: \" + e);\r\n            return _this.connectionCache;\r\n        });\r\n    };\r\n    TrouterManager.prototype.setConnectionCache = function (content) {\r\n        this.connectionCache = content;\r\n        if (this.options.connectionCache) {\r\n            try {\r\n                this.options.connectionCache.onSetTrouterConnectionCache(JSON.stringify(content));\r\n            }\r\n            catch (e) {\r\n                this.logger.warn(\"Error setting external connection cache: \" + e);\r\n            }\r\n        }\r\n    };\r\n    TrouterManager.prototype.sendProcessedDroppedIndicators = function (messageLossIndicators) {\r\n        if (this.firstConnection !== undefined) {\r\n            this.firstConnection.sendProcessedDroppedIndicators(messageLossIndicators);\r\n            return;\r\n        }\r\n        if (this.secondConnection !== undefined) {\r\n            this.secondConnection.sendProcessedDroppedIndicators(messageLossIndicators);\r\n            return;\r\n        }\r\n    };\r\n    return TrouterManager;\r\n}());\r\nexports.TrouterManager = TrouterManager;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Util that encapsulates lifecycle of active trouter URL and manages waiter for the URL via promise\r\n */\r\nvar TrouterUrlPromise = /** @class */ (function () {\r\n    function TrouterUrlPromise(logger) {\r\n        this.logger = logger;\r\n    }\r\n    // tslint:disable-next-line:promise-function-async\r\n    TrouterUrlPromise.prototype.getPromise = function () {\r\n        var _this = this;\r\n        if (this.url !== undefined) {\r\n            this.logger.debug(\"[TrouterUrlPromise] returning previously resolved url: \" + this.url);\r\n            return Promise.resolve(this.url);\r\n        }\r\n        if (this.pendingPromise === undefined) {\r\n            this.logger.debug('[TrouterUrlPromise] creating and returning promise');\r\n            // tslint:disable-next-line:promise-must-complete\r\n            this.pendingPromise = new Promise(function (resolve, reject) {\r\n                _this.pendingPromiseResolveRef = resolve;\r\n                _this.pendingPromiseRejectRef = reject;\r\n            });\r\n        }\r\n        else {\r\n            this.logger.debug('[TrouterUrlPromise] returning existing promise');\r\n        }\r\n        return this.pendingPromise;\r\n    };\r\n    TrouterUrlPromise.prototype.resolveUrl = function (url) {\r\n        this.url = url;\r\n        this.logger.debug(\"[TrouterUrlPromise] got url: \" + this.url);\r\n        var resolveCallback = this.pendingPromiseResolveRef;\r\n        this.pendingPromise = undefined;\r\n        this.pendingPromiseResolveRef = undefined;\r\n        this.pendingPromiseRejectRef = undefined;\r\n        if (resolveCallback !== undefined) {\r\n            this.logger.debug('[TrouterUrlPromise] resolving promise');\r\n            resolveCallback(url);\r\n        }\r\n    };\r\n    TrouterUrlPromise.prototype.rejectUrl = function (error) {\r\n        this.logger.debug('[TrouterUrlPromise] aborting');\r\n        var rejectCallback = this.pendingPromiseRejectRef;\r\n        this.url = undefined;\r\n        this.pendingPromise = undefined;\r\n        this.pendingPromiseResolveRef = undefined;\r\n        this.pendingPromiseRejectRef = undefined;\r\n        if (rejectCallback !== undefined) {\r\n            this.logger.debug('[TrouterUrlPromise] rejecting promise');\r\n            rejectCallback(error);\r\n        }\r\n    };\r\n    TrouterUrlPromise.prototype.resetUrl = function () {\r\n        this.logger.debug('[TrouterUrlPromise] resetting url');\r\n        this.url = undefined;\r\n    };\r\n    return TrouterUrlPromise;\r\n}());\r\nexports.TrouterUrlPromise = TrouterUrlPromise;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {/** Socket.IO.js build:0.9.6, development. Copyright(c) 2011 LearnBoost <dev@learnboost.com> MIT Licensed */\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, global) {\r\n\r\n  /**\r\n   * IO namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  var io = exports;\r\n\r\n  /**\r\n   * Socket.IO version\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  io.version = '0.9.6';\r\n\r\n  /**\r\n   * Protocol implemented.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  io.protocol = 1;\r\n\r\n  /**\r\n   * Available transports, these will be populated with the available transports\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  io.transports = [];\r\n\r\n  /**\r\n   * Keep track of jsonp callbacks.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.j = [];\r\n\r\n  /**\r\n   * Keep track of our io.Sockets\r\n   *\r\n   * @api private\r\n   */\r\n  io.sockets = {};\r\n\r\n\r\n  /**\r\n   * Manages connections to hosts.\r\n   *\r\n   * @param {String} uri\r\n   * @Param {Boolean} force creation of new socket (defaults to false)\r\n   * @api public\r\n   */\r\n\r\n  io.connect = function (host, details) {\r\n    var uri = io.util.parseUri(host)\r\n      , uuri\r\n      , socket;\r\n\r\n    if (global && global.location) {\r\n      uri.protocol = uri.protocol || global.location.protocol.slice(0, -1);\r\n      uri.host = uri.host || (global.document\r\n        ? global.document.domain : global.location.hostname);\r\n      uri.port = uri.port || global.location.port;\r\n    }\r\n\r\n    uuri = io.util.uniqueUri(uri);\r\n\r\n    var options = {\r\n        host: uri.host\r\n      , secure: 'https' == uri.protocol\r\n      , port: uri.port || ('https' == uri.protocol ? 443 : 80)\r\n      , query: uri.query || ''\r\n    };\r\n\r\n    io.util.merge(options, details);\r\n\r\n    if (options['force new connection'] || !io.sockets[uuri]) {\r\n      socket = new io.Socket(options);\r\n    }\r\n\r\n    if (!options['force new connection'] && socket) {\r\n      io.sockets[uuri] = socket;\r\n    }\r\n\r\n    socket = socket || io.sockets[uuri];\r\n\r\n    // if path is different from '' or /\r\n    return socket.of(uri.path.length > 1 ? uri.path : '');\r\n  };\r\n\r\n})(\r\n     true ? module.exports : (this.io = {})\r\n  , 'undefined' === typeof global ? window : global);\r\n\r\n// Workaround inside webpack\r\nvar io = module.exports;\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, global) {\r\n\r\n  /**\r\n   * Utilities namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  var util = exports.util = {};\r\n\r\n  /**\r\n   * Parses an URI\r\n   *\r\n   * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n   * @api public\r\n   */\r\n\r\n  var re = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\n  var parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password',\r\n               'host', 'port', 'relative', 'path', 'directory', 'file', 'query',\r\n               'anchor'];\r\n\r\n  util.parseUri = function (str) {\r\n    var m = re.exec(str || '')\r\n      , uri = {}\r\n      , i = 14;\r\n\r\n    while (i--) {\r\n      uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    return uri;\r\n  };\r\n\r\n  /**\r\n   * Produces a unique url that identifies a Socket.IO connection.\r\n   *\r\n   * @param {Object} uri\r\n   * @api public\r\n   */\r\n\r\n  util.uniqueUri = function (uri) {\r\n    var protocol = uri.protocol\r\n      , host = uri.host\r\n      , port = uri.port;\r\n\r\n    if ('document' in global) {\r\n      host = host || document.domain;\r\n      port = port || (protocol == 'https'\r\n        && document.location.protocol !== 'https:' ? 443 : document.location.port);\r\n    } else {\r\n      host = host || 'localhost';\r\n\r\n      if (!port && protocol == 'https') {\r\n        port = 443;\r\n      }\r\n    }\r\n\r\n    return (protocol || 'http') + '://' + host + ':' + (port || 80);\r\n  };\r\n\r\n  /**\r\n   * Mergest 2 query strings in to once unique query string\r\n   *\r\n   * @param {String} base\r\n   * @param {String} addition\r\n   * @api public\r\n   */\r\n\r\n  util.query = function (base, addition) {\r\n    var query = util.chunkQuery(base || '')\r\n      , components = [];\r\n\r\n    util.merge(query, util.chunkQuery(addition || ''));\r\n    for (var part in query) {\r\n      if (query.hasOwnProperty(part)) {\r\n        components.push(part + '=' + query[part]);\r\n      }\r\n    }\r\n\r\n    return components.length ? '?' + components.join('&') : '';\r\n  };\r\n\r\n  /**\r\n   * Transforms a querystring in to an object\r\n   *\r\n   * @param {String} qs\r\n   * @api public\r\n   */\r\n\r\n  util.chunkQuery = function (qs) {\r\n    var query = {}\r\n      , params = qs.split('&')\r\n      , i = 0\r\n      , l = params.length\r\n      , kv;\r\n\r\n    for (; i < l; ++i) {\r\n      kv = params[i].split('=');\r\n      if (kv[0]) {\r\n        query[kv[0]] = kv[1];\r\n      }\r\n    }\r\n\r\n    return query;\r\n  };\r\n\r\n  /**\r\n   * Executes the given function when the page is loaded.\r\n   *\r\n   *     io.util.load(function () { console.log('page loaded'); });\r\n   *\r\n   * @param {Function} fn\r\n   * @api public\r\n   */\r\n\r\n  var pageLoaded = false;\r\n\r\n  util.load = function (fn) {\r\n    if ('document' in global && document.readyState === 'complete' || pageLoaded) {\r\n      return fn();\r\n    }\r\n\r\n    util.on(global, 'load', fn, false);\r\n  };\r\n\r\n  /**\r\n   * Adds an event.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  util.on = function (element, event, fn, capture) {\r\n    if (element.attachEvent) {\r\n      element.attachEvent('on' + event, fn);\r\n    } else if (element.addEventListener) {\r\n      element.addEventListener(event, fn, capture);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Generates the correct `XMLHttpRequest` for regular and cross domain requests.\r\n   *\r\n   * @param {Boolean} [xdomain] Create a request that can be used cross domain.\r\n   * @returns {XMLHttpRequest|false} If we can create a XMLHttpRequest.\r\n   * @api private\r\n   */\r\n\r\n  util.request = function (xdomain) {\r\n\r\n    if (xdomain && 'undefined' != typeof XDomainRequest) {\r\n      return new XDomainRequest();\r\n    }\r\n\r\n    if ('undefined' != typeof XMLHttpRequest && (!xdomain || util.ua.hasCORS)) {\r\n      return new XMLHttpRequest();\r\n    }\r\n\r\n    if (!xdomain) {\r\n      try {\r\n        return new window[(['Active'].concat('Object').join('X'))]('Microsoft.XMLHTTP');\r\n      } catch(e) { }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * XHR based transport constructor.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  /**\r\n   * Change the internal pageLoaded value.\r\n   */\r\n\r\n  if ('undefined' != typeof window) {\r\n    util.load(function () {\r\n      pageLoaded = true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Defers a function to ensure a spinner is not displayed by the browser\r\n   *\r\n   * @param {Function} fn\r\n   * @api public\r\n   */\r\n\r\n  util.defer = function (fn) {\r\n    if (!util.ua.webkit || 'undefined' != typeof importScripts) {\r\n      return fn();\r\n    }\r\n\r\n    util.load(function () {\r\n      setTimeout(fn, 100);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Merges two objects.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.merge = function merge (target, additional, deep, lastseen) {\r\n    var seen = lastseen || []\r\n      , depth = typeof deep == 'undefined' ? 2 : deep\r\n      , prop;\r\n\r\n    for (prop in additional) {\r\n      if (additional.hasOwnProperty(prop) && util.indexOf(seen, prop) < 0) {\r\n        if (typeof target[prop] !== 'object' || !depth) {\r\n          target[prop] = additional[prop];\r\n          seen.push(additional[prop]);\r\n        } else {\r\n          util.merge(target[prop], additional[prop], depth - 1, seen);\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  };\r\n\r\n  /**\r\n   * Merges prototypes from objects\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.mixin = function (ctor, ctor2) {\r\n    util.merge(ctor.prototype, ctor2.prototype);\r\n  };\r\n\r\n  /**\r\n   * Shortcut for prototypical and static inheritance.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  util.inherit = function (ctor, ctor2) {\r\n    function f() {};\r\n    f.prototype = ctor2.prototype;\r\n    ctor.prototype = new f;\r\n  };\r\n\r\n  /**\r\n   * Checks if the given object is an Array.\r\n   *\r\n   *     io.util.isArray([]); // true\r\n   *     io.util.isArray({}); // false\r\n   *\r\n   * @param Object obj\r\n   * @api public\r\n   */\r\n\r\n  util.isArray = Array.isArray || function (obj) {\r\n    return Object.prototype.toString.call(obj) === '[object Array]';\r\n  };\r\n\r\n  /**\r\n   * Intersects values of two arrays into a third\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.intersect = function (arr, arr2) {\r\n    var ret = []\r\n      , longest = arr.length > arr2.length ? arr : arr2\r\n      , shortest = arr.length > arr2.length ? arr2 : arr;\r\n\r\n    for (var i = 0, l = shortest.length; i < l; i++) {\r\n      if (~util.indexOf(longest, shortest[i]))\r\n        ret.push(shortest[i]);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * Array indexOf compatibility.\r\n   *\r\n   * @see bit.ly/a5Dxa2\r\n   * @api public\r\n   */\r\n\r\n  util.indexOf = function (arr, o, i) {\r\n\r\n    for (var j = arr.length, i = i < 0 ? i + j < 0 ? 0 : i + j : i || 0;\r\n         i < j && arr[i] !== o; i++) {}\r\n\r\n    return j <= i ? -1 : i;\r\n  };\r\n\r\n  /**\r\n   * Converts enumerables to array.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.toArray = function (enu) {\r\n    var arr = [];\r\n\r\n    for (var i = 0, l = enu.length; i < l; i++)\r\n      arr.push(enu[i]);\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * UA / engines detection namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  util.ua = {};\r\n\r\n  /**\r\n   * Whether the UA supports CORS for XHR.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.ua.hasCORS = 'undefined' != typeof XMLHttpRequest && (function () {\r\n    try {\r\n      var a = new XMLHttpRequest();\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n\r\n    return a.withCredentials != undefined;\r\n  })();\r\n\r\n  /**\r\n   * Detect webkit.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.ua.webkit = 'undefined' != typeof navigator\r\n    && /webkit/i.test(navigator.userAgent);\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' === typeof global ? window : global);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.EventEmitter = EventEmitter;\r\n\r\n  /**\r\n   * Event emitter constructor.\r\n   *\r\n   * @api public.\r\n   */\r\n\r\n  function EventEmitter () {};\r\n\r\n  /**\r\n   * Adds a listener\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.on = function (name, fn) {\r\n    if (!this.$events) {\r\n      this.$events = {};\r\n    }\r\n\r\n    if (!this.$events[name]) {\r\n      this.$events[name] = fn;\r\n    } else if (io.util.isArray(this.$events[name])) {\r\n      this.$events[name].push(fn);\r\n    } else {\r\n      this.$events[name] = [this.$events[name], fn];\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n  /**\r\n   * Adds a volatile listener.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.once = function (name, fn) {\r\n    var self = this;\r\n\r\n    function on () {\r\n      self.removeListener(name, on);\r\n      fn.apply(this, arguments);\r\n    };\r\n\r\n    on.listener = fn;\r\n    this.on(name, on);\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Removes a listener.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.removeListener = function (name, fn) {\r\n    if (this.$events && this.$events[name]) {\r\n      var list = this.$events[name];\r\n\r\n      if (io.util.isArray(list)) {\r\n        var pos = -1;\r\n\r\n        for (var i = 0, l = list.length; i < l; i++) {\r\n          if (list[i] === fn || (list[i].listener && list[i].listener === fn)) {\r\n            pos = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (pos < 0) {\r\n          return this;\r\n        }\r\n\r\n        list.splice(pos, 1);\r\n\r\n        if (!list.length) {\r\n          delete this.$events[name];\r\n        }\r\n      } else if (list === fn || (list.listener && list.listener === fn)) {\r\n        delete this.$events[name];\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Removes all listeners for an event.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.removeAllListeners = function (name) {\r\n    // TODO: enable this when node 0.5 is stable\r\n    //if (name === undefined) {\r\n      //this.$events = {};\r\n      //return this;\r\n    //}\r\n\r\n    if (this.$events && this.$events[name]) {\r\n      this.$events[name] = null;\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Gets all listeners for a certain event.\r\n   *\r\n   * @api publci\r\n   */\r\n\r\n  EventEmitter.prototype.listeners = function (name) {\r\n    if (!this.$events) {\r\n      this.$events = {};\r\n    }\r\n\r\n    if (!this.$events[name]) {\r\n      this.$events[name] = [];\r\n    }\r\n\r\n    if (!io.util.isArray(this.$events[name])) {\r\n      this.$events[name] = [this.$events[name]];\r\n    }\r\n\r\n    return this.$events[name];\r\n  };\r\n\r\n  /**\r\n   * Emits an event.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.emit = function (name) {\r\n    if (!this.$events) {\r\n      return false;\r\n    }\r\n\r\n    var handler = this.$events[name];\r\n\r\n    if (!handler) {\r\n      return false;\r\n    }\r\n\r\n    var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n    if ('function' == typeof handler) {\r\n      handler.apply(this, args);\r\n    } else if (io.util.isArray(handler)) {\r\n      var listeners = handler.slice();\r\n\r\n      for (var i = 0, l = listeners.length; i < l; i++) {\r\n        listeners[i].apply(this, args);\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n/**\r\n * Removed JSON polyfill - obsolete, and we are using native JSON.parse etc. throughout the rest of the codebase anyway\r\n */\r\n\r\n(function (exports, nativeJSON) {\r\n  \"use strict\";\r\n\r\n  // use native JSON if it's available\r\n  if (nativeJSON && nativeJSON.parse){\r\n    return exports.JSON = {\r\n      parse: nativeJSON.parse\r\n    , stringify: nativeJSON.stringify\r\n    }\r\n  }\r\n\r\n  throw new Error(\"JSON not available\");\r\n  \r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , typeof JSON !== 'undefined' ? JSON : undefined\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Parser namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  var parser = exports.parser = {};\r\n\r\n  /**\r\n   * Packet types.\r\n   */\r\n\r\n  var packets = parser.packets = [\r\n      'disconnect'\r\n    , 'connect'\r\n    , 'heartbeat'\r\n    , 'message'\r\n    , 'json'\r\n    , 'event'\r\n    , 'ack'\r\n    , 'error'\r\n    , 'noop'\r\n  ];\r\n\r\n  /**\r\n   * Errors reasons.\r\n   */\r\n\r\n  var reasons = parser.reasons = [\r\n      'transport not supported'\r\n    , 'client not handshaken'\r\n    , 'unauthorized'\r\n  ];\r\n\r\n  /**\r\n   * Errors advice.\r\n   */\r\n\r\n  var advice = parser.advice = [\r\n      'reconnect'\r\n  ];\r\n\r\n  /**\r\n   * Shortcuts.\r\n   */\r\n\r\n  var JSON = io.JSON\r\n    , indexOf = io.util.indexOf;\r\n\r\n  /**\r\n   * Encodes a packet.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  parser.encodePacket = function (packet) {\r\n    var type = indexOf(packets, packet.type)\r\n      , id = packet.id || ''\r\n      , endpoint = packet.endpoint || ''\r\n      , ack = packet.ack\r\n      , data = null;\r\n\r\n    switch (packet.type) {\r\n      case 'error':\r\n        var reason = packet.reason ? indexOf(reasons, packet.reason) : ''\r\n          , adv = packet.advice ? indexOf(advice, packet.advice) : '';\r\n\r\n        if (reason !== '' || adv !== '')\r\n          data = reason + (adv !== '' ? ('+' + adv) : '');\r\n\r\n        break;\r\n\r\n      case 'message':\r\n        if (packet.data !== '')\r\n          data = packet.data;\r\n        break;\r\n\r\n      case 'event':\r\n        var ev = { name: packet.name };\r\n\r\n        if (packet.args && packet.args.length) {\r\n          ev.args = packet.args;\r\n        }\r\n\r\n        data = JSON.stringify(ev);\r\n        break;\r\n\r\n      case 'json':\r\n        data = JSON.stringify(packet.data);\r\n        break;\r\n\r\n      case 'connect':\r\n        if (packet.qs)\r\n          data = packet.qs;\r\n        break;\r\n\r\n      case 'ack':\r\n        data = packet.ackId\r\n          + (packet.args && packet.args.length\r\n              ? '+' + JSON.stringify(packet.args) : '');\r\n        break;\r\n    }\r\n\r\n    // construct packet with required fragments\r\n    var encoded = [\r\n        type\r\n      , id + (ack == 'data' ? '+' : '')\r\n      , endpoint\r\n    ];\r\n\r\n    // data fragment is optional\r\n    if (data !== null && data !== undefined)\r\n      encoded.push(data);\r\n\r\n    return encoded.join(':');\r\n  };\r\n\r\n  /**\r\n   * Encodes multiple messages (payload).\r\n   *\r\n   * @param {Array} messages\r\n   * @api private\r\n   */\r\n\r\n  parser.encodePayload = function (packets) {\r\n    var decoded = '';\r\n\r\n    if (packets.length == 1)\r\n      return packets[0];\r\n\r\n    for (var i = 0, l = packets.length; i < l; i++) {\r\n      var packet = packets[i];\r\n      decoded += '\\ufffd' + packet.length + '\\ufffd' + packets[i];\r\n    }\r\n\r\n    return decoded;\r\n  };\r\n\r\n  /**\r\n   * Decodes a packet\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  var regexp = /([^:]+):([0-9]+)?(\\+)?:([^:]+)?:?([\\s\\S]*)?/;\r\n\r\n  parser.decodePacket = function (data) {\r\n    var pieces = data.match(regexp);\r\n\r\n    if (!pieces) return {};\r\n\r\n    var id = pieces[2] || ''\r\n      , data = pieces[5] || ''\r\n      , packet = {\r\n            type: packets[pieces[1]]\r\n          , endpoint: pieces[4] || ''\r\n        };\r\n\r\n    // whether we need to acknowledge the packet\r\n    if (id) {\r\n      packet.id = id;\r\n      if (pieces[3])\r\n        packet.ack = 'data';\r\n      else\r\n        packet.ack = true;\r\n    }\r\n\r\n    // handle different packet types\r\n    switch (packet.type) {\r\n      case 'error':\r\n        var pieces = data.split('+');\r\n        packet.reason = reasons[pieces[0]] || '';\r\n        packet.advice = advice[pieces[1]] || '';\r\n        break;\r\n\r\n      case 'message':\r\n        packet.data = data || '';\r\n        break;\r\n\r\n      case 'event':\r\n        try {\r\n          var opts = JSON.parse(data);\r\n          packet.name = opts.name;\r\n          packet.args = opts.args;\r\n        } catch (e) { }\r\n\r\n        packet.args = packet.args || [];\r\n        break;\r\n\r\n      case 'json':\r\n        try {\r\n          packet.data = JSON.parse(data);\r\n        } catch (e) { }\r\n        break;\r\n\r\n      case 'connect':\r\n        packet.qs = data || '';\r\n        break;\r\n\r\n      case 'ack':\r\n        var pieces = data.match(/^([0-9]+)(\\+)?(.*)/);\r\n        if (pieces) {\r\n          packet.ackId = pieces[1];\r\n          packet.args = [];\r\n\r\n          if (pieces[3]) {\r\n            try {\r\n              packet.args = pieces[3] ? JSON.parse(pieces[3]) : [];\r\n            } catch (e) { }\r\n          }\r\n        }\r\n        break;\r\n\r\n      case 'disconnect':\r\n        packet.reason = data;\r\n        break;\r\n\r\n      case 'heartbeat':\r\n        break;\r\n    };\r\n\r\n    return packet;\r\n  };\r\n\r\n  /**\r\n   * Decodes data payload. Detects multiple messages\r\n   *\r\n   * @return {Array} messages\r\n   * @api public\r\n   */\r\n\r\n  parser.decodePayload = function (data) {\r\n    // IE doesn't like data[i] for unicode chars, charAt works fine\r\n    if (data.charAt(0) == '\\ufffd') {\r\n      var ret = [];\r\n\r\n      for (var i = 1, length = ''; i < data.length; i++) {\r\n        if (data.charAt(i) == '\\ufffd') {\r\n          ret.push(parser.decodePacket(data.substr(i + 1).substr(0, length)));\r\n          i += Number(length) + 1;\r\n          length = '';\r\n        } else {\r\n          length += data.charAt(i);\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    } else {\r\n      return [parser.decodePacket(data)];\r\n    }\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.Transport = Transport;\r\n\r\n  /**\r\n   * This is the transport template for all supported transport methods.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  function Transport (socket, sessid) {\r\n    this.socket = socket;\r\n    this.sessid = sessid;\r\n    this.connectErrorCallback = undefined;\r\n    this.isOpened = false;\r\n  };\r\n\r\n  /**\r\n   * Apply EventEmitter mixin.\r\n   */\r\n\r\n  io.util.mixin(Transport, io.EventEmitter);\r\n\r\n  /**\r\n   * Handles the response from the server. When a new response is received\r\n   * it will automatically update the timeout, decode the message and\r\n   * forwards the response to the onMessage function for further processing.\r\n   *\r\n   * @param {String} data Response from the server.\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onData = function (data) {\r\n    this.clearCloseTimeout();\r\n\r\n    // If the connection in currently open (or in a reopening state) reset the close\r\n    // timeout since we have just received data. This check is necessary so\r\n    // that we don't reset the timeout on an explicitly disconnected connection.\r\n    if (this.socket.connected || this.socket.connecting || this.socket.reconnecting) {\r\n      this.setCloseTimeout();\r\n    }\r\n\r\n    if (data !== '') {\r\n      // todo: we should only do decodePayload for xhr transports\r\n      var msgs = io.parser.decodePayload(data);\r\n\r\n      if (msgs && msgs.length) {\r\n        for (var i = 0, l = msgs.length; i < l; i++) {\r\n          this.onPacket(msgs[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Handles packets.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onPacket = function (packet) {\r\n    this.socket.setHeartbeatTimeout();\r\n\r\n    if (packet.type == 'heartbeat') {\r\n      return this.onHeartbeat();\r\n    }\r\n\r\n    if (packet.type == 'connect' && packet.endpoint == '') {\r\n      this.onConnect();\r\n    }\r\n\r\n    if (packet.type == 'error' && packet.advice == 'reconnect') {\r\n      this.isOpened = false;\r\n    }\r\n\r\n    this.socket.onPacket(packet);\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sets close timeout\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.setCloseTimeout = function () {\r\n    if (!this.closeTimeout) {\r\n      var self = this;\r\n\r\n      this.closeTimeout = setTimeout(function () {\r\n        self.onDisconnect();\r\n      }, this.socket.closeTimeout);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called when transport disconnects.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onDisconnect = function () {\r\n    if (this.close && this.isOpened) this.close();\r\n    this.clearTimeouts();\r\n    this.socket.onDisconnect();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Called when transport connects\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onConnect = function () {\r\n    this.socket.onConnect();\r\n    this.connectErrorCallback = undefined;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clears close timeout\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.clearCloseTimeout = function () {\r\n    if (this.closeTimeout) {\r\n      clearTimeout(this.closeTimeout);\r\n      this.closeTimeout = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Clear timeouts\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.clearTimeouts = function () {\r\n    this.clearCloseTimeout();\r\n\r\n    if (this.reopenTimeout) {\r\n      clearTimeout(this.reopenTimeout);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Sends a packet\r\n   *\r\n   * @param {Object} packet object.\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.packet = function (packet) {\r\n    this.send(io.parser.encodePacket(packet));\r\n  };\r\n\r\n  /**\r\n   * Send the received heartbeat message back to server. So the server\r\n   * knows we are still connected.\r\n   *\r\n   * @param {String} heartbeat Heartbeat response from the server.\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onHeartbeat = function (heartbeat) {\r\n    this.packet({ type: 'heartbeat' });\r\n  };\r\n\r\n  /**\r\n   * Called when the transport opens.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onOpen = function () {\r\n    this.isOpened = true;\r\n    this.clearCloseTimeout();\r\n    this.socket.onOpen();\r\n  };\r\n\r\n  /**\r\n   * Notifies the base when the connection with the Socket.IO server\r\n   * has been disconnected.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onClose = function () {\r\n    var self = this;\r\n\r\n    /* FIXME: reopen delay causing a infinit loop\r\n    this.reopenTimeout = setTimeout(function () {\r\n      self.open();\r\n    }, this.socket.options['reopen delay']);*/\r\n\r\n    this.isOpened = false;\r\n    this.socket.onClose();\r\n    this.onDisconnect();\r\n  };\r\n\r\n  /**\r\n   * Generates a connection url based on the Socket.IO URL Protocol.\r\n   * See <https://github.com/learnboost/socket.io-node/> for more details.\r\n   *\r\n   * @returns {String} Connection url\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.prepareUrl = function () {\r\n    var options = this.socket.options;\r\n\r\n    return this.scheme() + '://'\r\n      + options.host + ':' + options.port + '/'\r\n      + options.resource + '/' + io.protocol\r\n      + '/' + this.name + '/' + this.sessid;\r\n  };\r\n\r\n  /**\r\n   * Checks if the transport is ready to start a connection.\r\n   *\r\n   * @param {Socket} socket The socket instance that needs a transport\r\n   * @param {Function} fn The callback\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.ready = function (socket, fn) {\r\n    fn.call(this);\r\n  };\r\n\r\n  /**\r\n   * Clears the event handlers attached on to by specific transport implementations.\r\n   *\r\n   * @api private\r\n   */\r\n  Transport.prototype.clearEventHandlers = function () {\r\n      return this;\r\n  };\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.Socket = Socket;\r\n\r\n  /**\r\n   * Create a new `Socket.IO client` which can establish a persistent\r\n   * connection with a Socket.IO enabled server.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  function Socket (options) {\r\n    this.options = {\r\n        port: 80\r\n      , secure: false\r\n      , document: 'document' in global ? document : false\r\n      , resource: 'socket.io'\r\n      , transports: io.transports.slice()\r\n      , 'connect timeout': 10000\r\n      , 'try multiple transports': true\r\n      , 'reconnect': true\r\n      , 'reconnection delay': 500\r\n      , 'reconnection limit': Infinity\r\n      , 'reopen delay': 3000\r\n      , 'max reconnection attempts': 10\r\n      , 'sync disconnect on unload': true\r\n      , 'auto connect': true\r\n      , 'flash policy port': 10843\r\n    };\r\n\r\n    io.util.merge(this.options, options);\r\n\r\n    this.connected = false;\r\n    this.open = false;\r\n    this.connecting = false;\r\n    this.reconnecting = false;\r\n    this.namespaces = {};\r\n    this.buffer = [];\r\n    this.doBuffer = false;\r\n    this.disconnected = false;\r\n\r\n    if (this.options['sync disconnect on unload'] &&\r\n        (!this.isXDomain() || io.util.ua.hasCORS)) {\r\n      var self = this;\r\n\r\n      io.util.on(global, 'unload', function () {\r\n        self.disconnectSync();\r\n      }, false);\r\n    }\r\n\r\n    if (this.options['auto connect']) {\r\n      this.connect();\r\n    }\r\n};\r\n\r\n  /**\r\n   * Apply EventEmitter mixin.\r\n   */\r\n\r\n  io.util.mixin(Socket, io.EventEmitter);\r\n\r\n  /**\r\n   * Returns a namespace listener/emitter for this socket\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.of = function (name) {\r\n    if (!this.namespaces[name]) {\r\n      this.namespaces[name] = new io.SocketNamespace(this, name);\r\n\r\n      if (name !== '') {\r\n        this.namespaces[name].packet({ type: 'connect' });\r\n      }\r\n    }\r\n\r\n    return this.namespaces[name];\r\n  };\r\n\r\n  /**\r\n   * Emits the given event to the Socket and all namespaces\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.publish = function () {\r\n    this.emit.apply(this, arguments);\r\n\r\n    var nsp;\r\n\r\n    for (var i in this.namespaces) {\r\n      if (this.namespaces.hasOwnProperty(i)) {\r\n        nsp = this.of(i);\r\n        nsp.$emit.apply(nsp, arguments);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Performs the handshake\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  function empty () { };\r\n\r\n  Socket.prototype.handshake = function (fn) {\r\n    var self = this\r\n      , options = this.options;\r\n      \r\n    if (self.disconnected) {\r\n      return;\r\n    }\r\n\r\n    function complete (data) {\r\n      if (data instanceof Error) {\r\n        self.onError(data.message);\r\n      } else {\r\n        fn.apply(null, data.split(':'));\r\n      }\r\n    };\r\n\r\n    var url = [\r\n          'http' + (options.secure ? 's' : '') + ':/'\r\n        , options.host + ':' + options.port\r\n        , options.resource\r\n        , io.protocol\r\n        , io.util.query(this.options.query, 't=' + +new Date)\r\n      ].join('/');\r\n\r\n    if (this.isXDomain() && !io.util.ua.hasCORS) {\r\n      var insertAt = document.getElementsByTagName('script')[0]\r\n        , script = document.createElement('script');\r\n\r\n      script.src = url + '&jsonp=' + io.j.length;\r\n      insertAt.parentNode.insertBefore(script, insertAt);\r\n\r\n      io.j.push(function (data) {\r\n        complete(data);\r\n        script.parentNode.removeChild(script);\r\n      });\r\n    } else {\r\n      var xhr = io.util.request();\r\n      \r\n      xhr.open('GET', url, true);\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n          xhr.onreadystatechange = empty;\r\n\r\n          if (xhr.status == 200) {\r\n            complete(xhr.responseText);\r\n          } else {\r\n            !self.reconnecting && self.onError(xhr.responseText);\r\n          }\r\n        }\r\n      };\r\n      xhr.send(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Find an available transport based on the options supplied in the constructor.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.getTransport = function (override) {\r\n    var transports = override || this.transports, match;\r\n\r\n    for (var i = 0, transport; transport = transports[i]; i++) {\r\n      if (io.Transport[transport]\r\n        && io.Transport[transport].check(this)\r\n        && (!this.isXDomain() || io.Transport[transport].xdomainCheck())) {\r\n        return new io.Transport[transport](this, this.sessionid);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Connects to the server.\r\n   *\r\n   * @param {Function} [fn] Callback.\r\n   * @returns {io.Socket}\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.connect = function (fn) {\r\n    if (this.connecting || this.disconnected) {\r\n      return this;\r\n    }\r\n\r\n    var self = this;\r\n\r\n    this.handshake(function (sid, heartbeat, close, transports) {\r\n      // Params come from response's body - it's splitted by ':'\r\n      // example: 1178beba4026e2c7-48e62d038b18f416:85:85:websocket,xhr-polling,jsonp-polling\r\n      self.sessionid = sid;\r\n      // Add two seconds, so connection is closed by server, not client - otherwise\r\n      // there will be a onSocketDisconnect event which will start health check, etc\r\n      // This can happen if server returns close/heartbeat timeout equal to 40 which is server's timeout to\r\n      // close long poll connection, in such case client can close connection before server response with empty\r\n      // response and client goes to health check. Server can return such timeout if client send too small ping timeout\r\n      // during handshake\r\n      self.closeTimeout = close * 1000 + 2000;\r\n      self.heartbeatTimeout = heartbeat * 1000 + 2000;\r\n      self.transports = transports ? io.util.intersect(\r\n          transports.split(',')\r\n        , self.options.transports\r\n      ) : self.options.transports;\r\n\r\n      self.setHeartbeatTimeout();\r\n      self.remainingTransports = self.transports.slice(0);\r\n\r\n      function tryNextTransport() {\r\n        if (!self.connected && !self.disconnected) {\r\n          self.connecting = false;\r\n          clearTimeout(self.connectTimeoutTimer);\r\n\r\n          if (self.options['try multiple transports']) {\r\n            while (self.remainingTransports.length > 0\r\n                   && self.remainingTransports.splice(0,1)[0] != self.transport.name) {}\r\n\r\n            if (self.remainingTransports.length){\r\n              connect(self.remainingTransports);\r\n            } else {\r\n              self.publish('connect_failed');\r\n            }\r\n          } else {\r\n            self.publish('connect_failed');\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      function connect (transports){\r\n        if (self.transport) {\r\n            self.transport.clearTimeouts();\r\n            self.transport.clearEventHandlers();\r\n        }\r\n\r\n        self.transport = self.getTransport(transports);\r\n        if (!self.transport || self.disconnected) return self.publish('connect_failed');\r\n\r\n        // once the transport is ready (i.e. page is fully loaded)\r\n        self.transport.ready(self, function () {\r\n          self.connecting = true;\r\n          self.publish('connecting', self.transport.name);\r\n          self.transport.open(tryNextTransport);\r\n\r\n          if (self.options['connect timeout']) {\r\n            self.connectTimeoutTimer = setTimeout(function () {\r\n              tryNextTransport();\r\n            }, self.options['connect timeout']);\r\n          }\r\n        });\r\n      }\r\n\r\n      connect(self.transports);\r\n\r\n      self.once('connect', function (){\r\n        clearTimeout(self.connectTimeoutTimer);\r\n\r\n        fn && typeof fn == 'function' && fn();\r\n      });\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Clears and sets a new heartbeat timeout using the value given by the\r\n   * server during the handshake.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.setHeartbeatTimeout = function () {\r\n    clearTimeout(this.heartbeatTimeoutTimer);\r\n\r\n    var self = this;\r\n    this.heartbeatTimeoutTimer = setTimeout(function () {\r\n      self.transport.onClose();\r\n    }, this.heartbeatTimeout);\r\n  };\r\n\r\n  /**\r\n   * Sends a message.\r\n   *\r\n   * @param {Object} data packet.\r\n   * @returns {io.Socket}\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.packet = function (data) {\r\n    if (this.connected && !this.doBuffer) {\r\n      this.transport.packet(data);\r\n    } else {\r\n      this.buffer.push(data);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sets buffer state\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.setBuffer = function (v) {\r\n    this.doBuffer = v;\r\n\r\n    if (!v && this.connected && this.buffer.length) {\r\n      this.transport.payload(this.buffer);\r\n      this.buffer = [];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Disconnect the established connect.\r\n   *\r\n   * @returns {io.Socket}\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.disconnect = function () {\r\n    if (this.connected || this.connecting) {\r\n      if (this.open) {\r\n        this.of('').packet({ type: 'disconnect' });\r\n      }\r\n\r\n      // handle disconnection immediately\r\n      this.onDisconnect('booted');\r\n    }\r\n    this.disconnected = true;\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Disconnects the socket with a sync XHR.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.disconnectSync = function () {\r\n    // ensure disconnection\r\n    var xhr = io.util.request()\r\n      , uri = this.resource + '/' + io.protocol + '/' + this.sessionid;\r\n\r\n    xhr.open('GET', uri, true);\r\n\r\n    // handle disconnection immediately\r\n    this.onDisconnect('booted');\r\n  };\r\n\r\n  /**\r\n   * Check if we need to use cross domain enabled transports. Cross domain would\r\n   * be a different port or different domain name.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.isXDomain = function () {\r\n\r\n    var port = global.location.port ||\r\n      ('https:' == global.location.protocol ? 443 : 80);\r\n\r\n    return this.options.host !== global.location.hostname\r\n      || this.options.port != port;\r\n  };\r\n\r\n  /**\r\n   * Called upon handshake.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onConnect = function () {\r\n    if (!this.connected) {\r\n      this.connected = true;\r\n      this.connecting = false;\r\n      if (!this.doBuffer) {\r\n        // make sure to flush the buffer\r\n        this.setBuffer(false);\r\n      }\r\n      this.emit('connect');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called when the transport opens\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onOpen = function () {\r\n    this.open = true;\r\n  };\r\n\r\n  /**\r\n   * Called when the transport closes.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onClose = function () {\r\n    this.open = false;\r\n    clearTimeout(this.heartbeatTimeoutTimer);\r\n  };\r\n\r\n  /**\r\n   * Called when the transport first opens a connection\r\n   *\r\n   * @param text\r\n   */\r\n\r\n  Socket.prototype.onPacket = function (packet) {\r\n    this.of(packet.endpoint).onPacket(packet);\r\n  };\r\n\r\n  /**\r\n   * Handles an error.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onError = function (err) {\r\n    if (err && err.advice) {\r\n      if (err.advice === 'reconnect' && (this.connected || this.connecting)) {\r\n        this.disconnect();\r\n        if (this.options.reconnect) {\r\n          this.reconnect();\r\n        }\r\n      }\r\n    }\r\n\r\n    this.publish('error', err && err.reason ? err.reason : err);\r\n  };\r\n\r\n  /**\r\n   * Called when the transport disconnects.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onDisconnect = function (reason) {\r\n    var wasConnected = this.connected\r\n      , wasConnecting = this.connecting;\r\n\r\n    this.connected = false;\r\n    this.connecting = false;\r\n    this.open = false;\r\n\r\n    if (wasConnected || wasConnecting) {\r\n      this.transport.close();\r\n      this.transport.clearTimeouts();\r\n      if (wasConnected) {\r\n        this.publish('disconnect', reason);\r\n\r\n        if ('booted' != reason && this.options.reconnect && !this.reconnecting) {\r\n          this.reconnect();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called upon reconnection.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.reconnect = function () {\r\n    this.reconnecting = true;\r\n    this.reconnectionAttempts = 0;\r\n    this.reconnectionDelay = this.options['reconnection delay'];\r\n\r\n    var self = this\r\n      , maxAttempts = this.options['max reconnection attempts']\r\n      , tryMultiple = this.options['try multiple transports']\r\n      , limit = this.options['reconnection limit'];\r\n\r\n    function reset () {\r\n      if (self.connected) {\r\n        for (var i in self.namespaces) {\r\n          if (self.namespaces.hasOwnProperty(i) && '' !== i) {\r\n              self.namespaces[i].packet({ type: 'connect' });\r\n          }\r\n        }\r\n        self.publish('reconnect', self.transport.name, self.reconnectionAttempts);\r\n      }\r\n\r\n      clearTimeout(self.reconnectionTimer);\r\n\r\n      self.removeListener('connect_failed', maybeReconnect);\r\n      self.removeListener('connect', maybeReconnect);\r\n\r\n      self.reconnecting = false;\r\n\r\n      delete self.reconnectionAttempts;\r\n      delete self.reconnectionDelay;\r\n      delete self.reconnectionTimer;\r\n      delete self.redoTransports;\r\n\r\n      self.options['try multiple transports'] = tryMultiple;\r\n    };\r\n\r\n    function maybeReconnect () {\r\n      if (!self.reconnecting) {\r\n        return;\r\n      }\r\n\r\n      if (self.connected) {\r\n        return reset();\r\n      };\r\n\r\n      if (self.connecting && self.reconnecting) {\r\n        return self.reconnectionTimer = setTimeout(maybeReconnect, 1000);\r\n      }\r\n\r\n      if (self.reconnectionAttempts++ >= maxAttempts) {\r\n        if (!self.redoTransports) {\r\n          self.on('connect_failed', maybeReconnect);\r\n          self.options['try multiple transports'] = true;\r\n          self.transport = self.getTransport();\r\n          self.redoTransports = true;\r\n          self.connect();\r\n        } else {\r\n          self.publish('reconnect_failed');\r\n          reset();\r\n        }\r\n      } else {\r\n        if (self.reconnectionDelay < limit) {\r\n          self.reconnectionDelay *= 2; // exponential back off\r\n        }\r\n\r\n        self.connect();\r\n        self.publish('reconnecting', self.reconnectionDelay, self.reconnectionAttempts);\r\n        self.reconnectionTimer = setTimeout(maybeReconnect, self.reconnectionDelay);\r\n      }\r\n    };\r\n\r\n    this.options['try multiple transports'] = false;\r\n    this.reconnectionTimer = setTimeout(maybeReconnect, this.reconnectionDelay);\r\n\r\n    this.on('connect', maybeReconnect);\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , 'undefined' === typeof global ? window : global\r\n);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.SocketNamespace = SocketNamespace;\r\n\r\n  /**\r\n   * Socket namespace constructor.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  function SocketNamespace (socket, name) {\r\n    this.socket = socket;\r\n    this.name = name || '';\r\n    this.flags = {};\r\n    this.json = new Flag(this, 'json');\r\n    this.ackPackets = 0;\r\n    this.acks = {};\r\n  };\r\n\r\n  /**\r\n   * Apply EventEmitter mixin.\r\n   */\r\n\r\n  io.util.mixin(SocketNamespace, io.EventEmitter);\r\n\r\n  /**\r\n   * Copies emit since we override it\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.$emit = io.EventEmitter.prototype.emit;\r\n\r\n  /**\r\n   * Creates a new namespace, by proxying the request to the socket. This\r\n   * allows us to use the synax as we do on the server.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  SocketNamespace.prototype.of = function () {\r\n    return this.socket.of.apply(this.socket, arguments);\r\n  };\r\n\r\n  /**\r\n   * Sends a packet.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.packet = function (packet) {\r\n    packet.endpoint = this.name;\r\n    this.socket.packet(packet);\r\n    this.flags = {};\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sends a message\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  SocketNamespace.prototype.send = function (data, fn) {\r\n    var packet = {\r\n        type: this.flags.json ? 'json' : 'message'\r\n      , data: data\r\n    };\r\n\r\n    if ('function' == typeof fn) {\r\n      packet.id = ++this.ackPackets;\r\n      packet.ack = true;\r\n      this.acks[packet.id] = fn;\r\n    }\r\n\r\n    return this.packet(packet);\r\n  };\r\n\r\n  /**\r\n   * Emits an event\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  SocketNamespace.prototype.emit = function (name) {\r\n    var args = Array.prototype.slice.call(arguments, 1)\r\n      , lastArg = args[args.length - 1]\r\n      , packet = {\r\n            type: 'event'\r\n          , name: name\r\n        };\r\n\r\n    if ('function' == typeof lastArg) {\r\n      packet.id = ++this.ackPackets;\r\n      packet.ack = 'data';\r\n      this.acks[packet.id] = lastArg;\r\n      args = args.slice(0, args.length - 1);\r\n    }\r\n\r\n    packet.args = args;\r\n\r\n    return this.packet(packet);\r\n  };\r\n\r\n  /**\r\n   * Disconnects the namespace\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.disconnect = function () {\r\n    if (this.name === '') {\r\n      this.socket.disconnect();\r\n    } else {\r\n      this.packet({ type: 'disconnect' });\r\n      this.$emit('disconnect');\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Handles a packet\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.onPacket = function (packet) {\r\n    var self = this;\r\n\r\n    function ack () {\r\n      self.packet({\r\n          type: 'ack'\r\n        , args: io.util.toArray(arguments)\r\n        , ackId: packet.id\r\n      });\r\n    };\r\n\r\n    switch (packet.type) {\r\n      case 'connect':\r\n        this.$emit('connect');\r\n        break;\r\n\r\n      case 'disconnect':\r\n        if (this.name === '') {\r\n          this.socket.onDisconnect(packet.reason || 'booted');\r\n        } else {\r\n          this.$emit('disconnect', packet.reason || '');\r\n        }\r\n        break;\r\n\r\n      case 'message':\r\n      case 'json':\r\n        var params = ['message', packet.data];\r\n\r\n        if (packet.ack == 'data') {\r\n          params.push(ack);\r\n        } else if (packet.ack) {\r\n          this.packet({ type: 'ack', ackId: packet.id });\r\n        }\r\n\r\n        this.$emit.apply(this, params);\r\n        break;\r\n\r\n      case 'event':\r\n        var params = [packet.name].concat(packet.args);\r\n\r\n        if (packet.ack == 'data')\r\n          params.push(ack);\r\n\r\n        this.$emit.apply(this, params);\r\n        break;\r\n\r\n      case 'ack':\r\n        if (this.acks[packet.ackId]) {\r\n          this.acks[packet.ackId].apply(this, packet.args);\r\n          delete this.acks[packet.ackId];\r\n        }\r\n        break;\r\n\r\n      case 'error':\r\n        if (packet.advice){\r\n          this.socket.onError(packet);\r\n        } else {\r\n          if (packet.reason == 'unauthorized') {\r\n            this.$emit('connect_failed', packet.reason);\r\n          } else {\r\n            this.$emit('error', packet.reason);\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Flag interface.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  function Flag (nsp, name) {\r\n    this.namespace = nsp;\r\n    this.name = name;\r\n  };\r\n\r\n  /**\r\n   * Send a message\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Flag.prototype.send = function () {\r\n    this.namespace.flags[this.name] = true;\r\n    this.namespace.send.apply(this.namespace, arguments);\r\n  };\r\n\r\n  /**\r\n   * Emit an event\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Flag.prototype.emit = function () {\r\n    this.namespace.flags[this.name] = true;\r\n    this.namespace.emit.apply(this.namespace, arguments);\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.websocket = WS;\r\n\r\n  /**\r\n   * The WebSocket transport uses the HTML5 WebSocket API to establish an\r\n   * persistent connection with the Socket.IO server. This transport will also\r\n   * be inherited by the FlashSocket fallback as it provides a API compatible\r\n   * polyfill for the WebSockets.\r\n   *\r\n   * @constructor\r\n   * @extends {io.Transport}\r\n   * @api public\r\n   */\r\n\r\n  function WS (socket) {\r\n    io.Transport.apply(this, arguments);\r\n  };\r\n\r\n  /**\r\n   * Inherits from Transport.\r\n   */\r\n\r\n  io.util.inherit(WS, io.Transport);\r\n\r\n  /**\r\n   * Transport name\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.name = 'websocket';\r\n\r\n  function empty() { };\r\n\r\n  /**\r\n   * Initializes a new `WebSocket` connection with the Socket.IO server. We attach\r\n   * all the appropriate listeners to handle the responses from the server.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.open = function (connectErrorCallback) {\r\n    var query = io.util.query(this.socket.options.query)\r\n      , self = this\r\n      , Socket\r\n\r\n    this.connectErrorCallback = connectErrorCallback;\r\n\r\n    if (!Socket) {\r\n      Socket = global.MozWebSocket || global.WebSocket;\r\n    }\r\n\r\n    this.websocket = new Socket(this.prepareUrl() + query);\r\n\r\n    this.websocket.onopen = function () {\r\n      self.onOpen();\r\n      self.socket.setBuffer(false);\r\n    };\r\n    this.websocket.onmessage = function (ev) {\r\n      self.onData(ev.data);\r\n    };\r\n    this.websocket.onclose = function () {\r\n      self.onClose();\r\n      self.socket.setBuffer(true);\r\n    };\r\n    this.websocket.onerror = function (e) {\r\n      self.onError(e);\r\n    };\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Send a message to the Socket.IO server. The message will automatically be\r\n   * encoded in the correct message format.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.send = function (data) {\r\n    this.websocket.send(data);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Payload\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  WS.prototype.payload = function (arr) {\r\n    for (var i = 0, l = arr.length; i < l; i++) {\r\n      this.packet(arr[i]);\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Disconnect the established `WebSocket` connection.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.close = function () {\r\n    this.websocket.close();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Handle the errors that `WebSocket` might be giving when we\r\n   * are attempting to connect or send messages.\r\n   *\r\n   * @param {Error} e The error.\r\n   * @api private\r\n   */\r\n\r\n  WS.prototype.onError = function (e) {\r\n      if (this.connectErrorCallback !== undefined) {\r\n        this.connectErrorCallback();\r\n        this.connectErrorCallback = undefined;\r\n      }\r\n      this.socket.onError(e);\r\n  };\r\n\r\n  /**\r\n   * Returns the appropriate scheme for the URI generation.\r\n   *\r\n   * @api private\r\n   */\r\n  WS.prototype.scheme = function () {\r\n    return this.socket.options.secure ? 'wss' : 'ws';\r\n  };\r\n\r\n  /**\r\n   * Checks if the browser has support for native `WebSockets` and that\r\n   * it's not the polyfill created for the FlashSocket transport.\r\n   *\r\n   * @return {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  WS.check = function () {\r\n    return ('WebSocket' in global && !('__addTask' in WebSocket))\r\n          || 'MozWebSocket' in global;\r\n  };\r\n\r\n  /**\r\n   * Check if the `WebSocket` transport support cross domain communications.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  WS.xdomainCheck = function () {\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Clears the event listeners attached to the `WebSocket` transport object.\r\n   *\r\n   * @api private\r\n   */\r\n  WS.prototype.clearEventHandlers = function() {\r\n      if (this.websocket) {\r\n          this.websocket.onopen = this.websocket.onmessage = this.websocket.onclose = this.websocket.onerror = empty;\r\n      }\r\n      return this;\r\n  };\r\n\r\n  /**\r\n   * Add the transport to your public io.transports array.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.transports.push('websocket');\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , 'undefined' === typeof global ? window : global\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  exports.XHR = XHR;\r\n\r\n  /**\r\n   * XHR constructor\r\n   *\r\n   * @costructor\r\n   * @api public\r\n   */\r\n\r\n  function XHR (socket) {\r\n    if (!socket) return;\r\n\r\n    io.Transport.apply(this, arguments);\r\n    this.sendBuffer = [];\r\n  };\r\n\r\n  /**\r\n   * Inherits from Transport.\r\n   */\r\n\r\n  io.util.inherit(XHR, io.Transport);\r\n\r\n  /**\r\n   * Establish a connection\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  XHR.prototype.open = function () {\r\n    this.socket.setBuffer(false);\r\n    this.onOpen();\r\n    this.get();\r\n\r\n    // we need to make sure the request succeeds since we have no indication\r\n    // whether the request opened or not until it succeeded.\r\n    this.setCloseTimeout();\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Check if we need to send data to the Socket.IO server, if we have data in our\r\n   * buffer we encode it and forward it to the `post` method.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHR.prototype.payload = function (payload) {\r\n    var msgs = [];\r\n\r\n    for (var i = 0, l = payload.length; i < l; i++) {\r\n      msgs.push(io.parser.encodePacket(payload[i]));\r\n    }\r\n\r\n    this.send(io.parser.encodePayload(msgs));\r\n  };\r\n\r\n  /**\r\n   * Send data to the Socket.IO server.\r\n   *\r\n   * @param data The message\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  XHR.prototype.send = function (data) {\r\n    this.post(data);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Posts a encoded message to the Socket.IO server.\r\n   *\r\n   * @param {String} data A encoded message.\r\n   * @api private\r\n   */\r\n\r\n  function empty () { };\r\n\r\n  XHR.prototype.post = function (data) {\r\n    var self = this;\r\n    this.socket.setBuffer(true);\r\n\r\n    this.sendXHR = this.request('POST');\r\n\r\n    function stateChange () {\r\n      if (this.readyState == 4) {\r\n        this.onreadystatechange = empty;\r\n        self.posting = false;\r\n\r\n        if (this.status == 200){\r\n          self.socket.setBuffer(false);\r\n          clearTimeout(self.sendXHR.ackTimeoutTimer);\r\n        } else {\r\n          self.onClose();\r\n        }\r\n      }\r\n    }\r\n\r\n    function onload () {\r\n      this.onload = empty;\r\n      self.socket.setBuffer(false);\r\n    };\r\n\r\n    if (global.XDomainRequest && this.sendXHR instanceof XDomainRequest) {\r\n      this.sendXHR.onload = this.sendXHR.onerror = onload;\r\n    } else {\r\n      this.sendXHR.onreadystatechange = stateChange;\r\n    }\r\n\r\n    this.sendXHR.send(data);\r\n    self.sendXHR.ackTimeoutTimer = setTimeout(function () {\r\n      self.onClose();\r\n    }, self.socket.options.ackTimeoutMs);\r\n  };\r\n\r\n  /**\r\n   * Disconnects the established `XHR` connection.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  XHR.prototype.close = function () {\r\n    this.onClose();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Generates a configured XHR request\r\n   *\r\n   * @param {String} url The url that needs to be requested.\r\n   * @param {String} method The method the request should use.\r\n   * @returns {XMLHttpRequest}\r\n   * @api private\r\n   */\r\n\r\n  XHR.prototype.request = function (method) {\r\n    var req = io.util.request(this.socket.isXDomain())\r\n      , query = io.util.query(this.socket.options.query, 't=' + +new Date);\r\n\r\n    req.open(method || 'GET', this.prepareUrl() + query, true);\r\n\r\n    if (method == 'POST') {\r\n      try {\r\n        if (req.setRequestHeader) {\r\n          req.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\r\n        } else {\r\n          // XDomainRequest\r\n          req.contentType = 'text/plain';\r\n        }\r\n      } catch (e) {}\r\n    }\r\n\r\n    return req;\r\n  };\r\n\r\n  /**\r\n   * Returns the scheme to use for the transport URLs.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHR.prototype.scheme = function () {\r\n    return this.socket.options.secure ? 'https' : 'http';\r\n  };\r\n\r\n  /**\r\n   * Check if the XHR transports are supported\r\n   *\r\n   * @param {Boolean} xdomain Check if we support cross domain requests.\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  XHR.check = function (socket, xdomain) {\r\n\r\n    try {\r\n      var request = io.util.request(xdomain),\r\n          usesXDomReq = (global.XDomainRequest && request instanceof XDomainRequest),\r\n          socketProtocol = (socket && socket.options && socket.options.secure ? 'https:' : 'http:'),\r\n          isXProtocol = (socketProtocol != global.location.protocol);\r\n      if (request && !(usesXDomReq && isXProtocol)) {\r\n        return true;\r\n      }\r\n    } catch(e) {}\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Check if the XHR transport supports cross domain requests.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  XHR.xdomainCheck = function () {\r\n    return XHR.check(null, true);\r\n  };\r\n\r\n  /**\r\n   * Clears the event listeners attached to the XHR transport object.\r\n   *\r\n   * @api private\r\n   */\r\n  XHR.prototype.clearEventHandlers = function () {\r\n      if (this.sendXHR) {\r\n          this.sendXHR.onreadystatechange = this.sendXHR.onload = empty;\r\n      }\r\n      return this;\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , 'undefined' === typeof global ? window : global\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports['xhr-polling'] = XHRPolling;\r\n\r\n  /**\r\n   * The XHR-polling transport uses long polling XHR requests to create a\r\n   * \"persistent\" connection with the server.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  function XHRPolling () {\r\n    io.Transport.XHR.apply(this, arguments);\r\n  };\r\n\r\n  /**\r\n   * Inherits from XHR transport.\r\n   */\r\n\r\n  io.util.inherit(XHRPolling, io.Transport.XHR);\r\n\r\n  /**\r\n   * Merge the properties from XHR transport\r\n   */\r\n\r\n  io.util.merge(XHRPolling, io.Transport.XHR);\r\n\r\n  /**\r\n   * Transport name\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  XHRPolling.prototype.name = 'xhr-polling';\r\n\r\n  /**\r\n   * Establish a connection, for iPhone and Android this will be done once the page\r\n   * is loaded.\r\n   *\r\n   * @returns {Transport} Chaining.\r\n   * @api public\r\n   */\r\n\r\n  XHRPolling.prototype.open = function (connectErrorCallback) {\r\n    var self = this;\r\n\r\n    self.connectErrorCallback = connectErrorCallback;\r\n\r\n    io.Transport.XHR.prototype.open.call(self);\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Starts a XHR request to wait for incoming messages.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  function empty () {};\r\n\r\n  XHRPolling.prototype.get = function () {\r\n    if (!this.isOpened) return;\r\n\r\n    var self = this;\r\n\r\n    function stateChange () {\r\n      if (this.readyState == 4) {\r\n        this.onreadystatechange = empty;\r\n\r\n        if (this.status == 200) {\r\n          self.connectErrorCallback = undefined;\r\n          self.onData(this.responseText);\r\n          self.get();\r\n        } else {\r\n          self.onClose();\r\n\r\n          if (self.connectErrorCallback !== undefined) {\r\n            self.connectErrorCallback();\r\n            self.connectErrorCallback = undefined;\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    function onload () {\r\n      self.connectErrorCallback = undefined;\r\n      this.onload = empty;\r\n      this.onerror = empty;\r\n      self.onData(this.responseText);\r\n      self.get();\r\n    };\r\n\r\n    function onerror () {\r\n      self.onClose();\r\n\r\n      if (self.connectErrorCallback !== undefined) {\r\n        self.connectErrorCallback();\r\n        self.connectErrorCallback = undefined;\r\n      }\r\n    };\r\n\r\n    this.xhr = this.request();\r\n\r\n    if (global.XDomainRequest && this.xhr instanceof XDomainRequest) {\r\n      this.xhr.onload = onload;\r\n      this.xhr.onerror = onerror;\r\n    } else {\r\n      this.xhr.onreadystatechange = stateChange;\r\n    }\r\n\r\n    this.xhr.send(null);\r\n  };\r\n\r\n  /**\r\n   * Handle the unclean close behavior.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHRPolling.prototype.onClose = function () {\r\n    io.Transport.XHR.prototype.onClose.call(this);\r\n\r\n    if (this.xhr) {\r\n      this.xhr.onreadystatechange = this.xhr.onload = this.xhr.onerror = empty;\r\n      try {\r\n        this.xhr.abort();\r\n      } catch(e){}\r\n      this.xhr = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Webkit based browsers show a infinit spinner when you start a XHR request\r\n   * before the browsers onload event is called so we need to defer opening of\r\n   * the transport until the onload event is called. Wrapping the cb in our\r\n   * defer method solve this.\r\n   *\r\n   * @param {Socket} socket The socket instance that needs a transport\r\n   * @param {Function} fn The callback\r\n   * @api private\r\n   */\r\n\r\n  XHRPolling.prototype.ready = function (socket, fn) {\r\n    var self = this;\r\n\r\n    io.util.defer(function () {\r\n      fn.call(self);\r\n    });\r\n  };\r\n\r\n   /**\r\n   * Clears the event listeners attached to the XHR transport object.\r\n   *\r\n   * @api private\r\n   */\r\n  XHRPolling.prototype.clearEventHandlers = function () {\r\n      io.Transport.XHR.prototype.clearEventHandlers.call(this);\r\n\r\n      if (this.xhr) {\r\n          this.xhr.onreadystatechange = this.xhr.onload = this.xhr.onerror = empty;\r\n      }\r\n      return this;\r\n  }\r\n\r\n  /**\r\n   * Add the transport to your public io.transports array.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.transports.push('xhr-polling');\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , 'undefined' === typeof global ? window : global\r\n);\r\n\r\nexports.io = io;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4), __webpack_require__(14)(module)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, global) {var require;/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.0.5\n */\n\n(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = __webpack_require__(21);\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && \"function\" === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        _resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      _reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      _reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    _reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return _resolve(promise, value);\n    }, function (reason) {\n      return _reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$ === GET_THEN_ERROR) {\n      _reject(promise, GET_THEN_ERROR.error);\n    } else if (then$$ === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$)) {\n      handleForeignThenable(promise, maybeThenable, then$$);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction _resolve(promise, value) {\n  if (promise === value) {\n    _reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction _reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      _reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      _resolve(promise, value);\n    }, function rejectPromise(reason) {\n      _reject(promise, reason);\n    });\n  } catch (e) {\n    _reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    _reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$ = c.resolve;\n\n  if (resolve$$ === resolve) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$) {\n        return resolve$$(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      _reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve;\nPromise.reject = reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\n\nreturn Promise;\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13), __webpack_require__(4)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable:no-any\r\n// tslint:disable:no-unsafe-any\r\n// tslint:disable:max-classes-per-file\r\n// tslint:disable:variable-name\r\nvar Common_1 = __webpack_require__(3);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar Logger_1 = __webpack_require__(0);\r\n/**\r\n * Data for trouter response\r\n */\r\nvar ResponseData = /** @class */ (function () {\r\n    function ResponseData(id) {\r\n        this.id = id;\r\n        this.status = 200;\r\n        this.headers = {};\r\n        this.body = '';\r\n    }\r\n    return ResponseData;\r\n}());\r\nexports.ResponseData = ResponseData;\r\n// Possible telemetry events\r\nvar ClientEventName;\r\n(function (ClientEventName) {\r\n    ClientEventName[\"Connected\"] = \"trouter_js_client_connected\";\r\n    ClientEventName[\"Disconnected\"] = \"trouter_js_client_disconnected\";\r\n    ClientEventName[\"Error\"] = \"trouter_js_client_error\";\r\n    ClientEventName[\"Progress\"] = \"trouter_js_client_progress\";\r\n    ClientEventName[\"Response\"] = \"trouter_js_client_response\";\r\n    ClientEventName[\"Request\"] = \"trouter_js_client_request\";\r\n    ClientEventName[\"CheckConnection\"] = \"trouter_js_client_check_connection\";\r\n    ClientEventName[\"Registration\"] = \"trouter_js_client_registration\";\r\n    ClientEventName[\"Unregistration\"] = \"trouter_js_client_unregistration\";\r\n})(ClientEventName = exports.ClientEventName || (exports.ClientEventName = {}));\r\n/**\r\n * Stores one step of connection process\r\n */\r\nvar TrackerStep = /** @class */ (function () {\r\n    function TrackerStep(stepName, operation, delta, ts, error) {\r\n        this.stepName = stepName;\r\n        this.operation = operation;\r\n        this.delta = delta;\r\n        this.ts = ts;\r\n        this.error = error;\r\n    }\r\n    return TrackerStep;\r\n}());\r\nexports.TrackerStep = TrackerStep;\r\n/**\r\n * Base class for something that can be used as a property bag\r\n */\r\nvar Properties = /** @class */ (function () {\r\n    function Properties() {\r\n    }\r\n    return Properties;\r\n}());\r\nexports.Properties = Properties;\r\n/**\r\n * Information about connection\r\n */\r\nvar ConnectedInfo = /** @class */ (function () {\r\n    function ConnectedInfo() {\r\n        this.numberOfPingReplies = 0;\r\n        this.connectedTimestamp = 0;\r\n        this.isNewUrl = false;\r\n        this.transportType = '';\r\n        this.connectionNumber = 0;\r\n    }\r\n    return ConnectedInfo;\r\n}());\r\n/**\r\n * Default values for IEventLogSettings\r\n */\r\nvar EventLogSettings = /** @class */ (function () {\r\n    function EventLogSettings() {\r\n        this.enabled = false;\r\n        this.numberOfStepsToMaintain = 40;\r\n        this.logHealthCheckError = false;\r\n        this.sendProgressTimeoutSecs = 55;\r\n        this.logSendPingError = false;\r\n        this.maxBackoffInMs = 120000;\r\n        this.trouter_js_client_connected = false;\r\n        this.trouter_js_client_disconnected = false;\r\n        this.trouter_js_client_error = false;\r\n        this.trouter_js_client_progress = false;\r\n        this.trouter_js_client_response = false;\r\n        this.trouter_js_client_request = false;\r\n        this.trouter_js_client_registration = false;\r\n        this.trouter_js_client_unregistration = false;\r\n        /** This event is ENABLED by default */\r\n        this.trouter_js_client_check_connection = true;\r\n    }\r\n    return EventLogSettings;\r\n}());\r\n/**\r\n * Telemetry sender\r\n */\r\nvar ConnectionTracker = /** @class */ (function () {\r\n    function ConnectionTracker(logfunc, clientId, clientInfo, getServerState, endpointId, clientCorrelationID, environment) {\r\n        this.clientId = clientId;\r\n        this.clientInfo = clientInfo;\r\n        this.getServerState = getServerState;\r\n        this.endpointId = endpointId;\r\n        this.clientCorrelationID = clientCorrelationID;\r\n        this.environment = environment;\r\n        this.logger = new Logger_1.Logger('ConnectionTracker', logfunc);\r\n        this.clientCorrelationID = clientCorrelationID !== undefined ? clientCorrelationID : '';\r\n        this.steps = [];\r\n        this.connectionAttempt = 0;\r\n        this.totalStepCount = 0;\r\n        this.beginTimestamp = new Common_1.Timespan();\r\n        this.eventLogSettings = new EventLogSettings();\r\n        this.connectedInfo = new ConnectedInfo();\r\n    }\r\n    ConnectionTracker.prototype.enable = function (telemetrySender) {\r\n        this.eventLogSettings.enabled = true;\r\n        this.eventLogger = telemetrySender;\r\n    };\r\n    ConnectionTracker.prototype.disable = function () {\r\n        this.eventLogSettings.enabled = false;\r\n    };\r\n    ConnectionTracker.prototype.sendProgress = function (context) {\r\n        // connect truncates steps array. this check ensures that a progress event is only sent out if the client is not connected\r\n        if (this.steps.length > 0) {\r\n            this.sendTelemetry(ClientEventName.Progress, context, this.steps);\r\n        }\r\n    };\r\n    ConnectionTracker.prototype.cancelProgressTimer = function () {\r\n        if (this.progressTimeout !== undefined) {\r\n            clearTimeout(this.progressTimeout);\r\n            this.progressTimeout = undefined;\r\n        }\r\n    };\r\n    ConnectionTracker.prototype.resetProgressSendTimer = function () {\r\n        var _this = this;\r\n        this.cancelProgressTimer();\r\n        // send connection steps after a timeout\r\n        // this timeout may fire if auth callback never comes or the client is stuck in a loop to get connected\r\n        if (this.eventLogSettings.sendProgressTimeoutSecs !== undefined && this.eventLogSettings.sendProgressTimeoutSecs > 0) {\r\n            this.progressTimeout = setTimeout(function () {\r\n                _this.sendProgress({\r\n                    reason: 'timeout',\r\n                    timeoutSecs: _this.eventLogSettings.sendProgressTimeoutSecs\r\n                });\r\n            }, 1000 * this.eventLogSettings.sendProgressTimeoutSecs);\r\n        }\r\n    };\r\n    ConnectionTracker.prototype.setConnectedInfo = function (isNewUrl, transportType) {\r\n        this.connectedInfo.numberOfPingReplies = 0;\r\n        this.connectedInfo.connectedTimestamp = Date.now();\r\n        this.connectedInfo.isNewUrl = isNewUrl;\r\n        this.connectedInfo.transportType = transportType;\r\n        ++this.connectedInfo.connectionNumber;\r\n    };\r\n    ConnectionTracker.prototype.clearConnectedInfo = function () {\r\n        this.connectedInfo.numberOfPingReplies = 0;\r\n        this.connectedInfo.connectedTimestamp = 0;\r\n        this.connectedInfo.isNewUrl = true;\r\n        this.connectedInfo.transportType = '';\r\n    };\r\n    // Copies from\r\n    // source {\r\n    //    propName: value\r\n    // }\r\n    // to\r\n    // dest {\r\n    //    propName: { value: actualValue }\r\n    // }\r\n    ConnectionTracker.prototype.copyProperties = function (dest, source) {\r\n        // copy properties from source and add in a format expected by logger\r\n        for (var _i = 0, _a = Object.keys(source); _i < _a.length; _i++) {\r\n            var prop = _a[_i];\r\n            if (source.hasOwnProperty(prop) && source[prop] !== undefined) {\r\n                // replace hyphen by _\r\n                dest[prop.replace(/-/g, '_')] = { value: source[prop] };\r\n            }\r\n        }\r\n    };\r\n    ConnectionTracker.prototype.increasePingResponseCount = function () {\r\n        ++this.connectedInfo.numberOfPingReplies;\r\n    };\r\n    /**\r\n     * @param eventName Telemetry event name\r\n     * @param eventProperties Event property bag\r\n     * @param progress\r\n     */\r\n    ConnectionTracker.prototype.sendTelemetry = function (eventName, eventProperties, progress) {\r\n        try {\r\n            if (this.eventLogSettings.enabled === true\r\n                && this.eventLogSettings[eventName] === true\r\n                && this.eventLogger !== undefined) {\r\n                var serverState = this.getServerState();\r\n                var clientEvent = {\r\n                    name: eventName,\r\n                    properties: {\r\n                        connectionAttempt: { value: this.connectionAttempt },\r\n                        epid: { value: this.endpointId },\r\n                        clientCorrelationID: { value: this.clientCorrelationID },\r\n                        steps: { value: Common_1.toJson(progress) },\r\n                        clientID: { value: this.clientId },\r\n                        eventVersion: { value: 3 },\r\n                        environment: { value: this.environment },\r\n                        cv: { value: Constants_1.CLIENT_VERSION },\r\n                        ua: { value: this.clientInfo.ua },\r\n                        // Copy ServerState\r\n                        connectionId: { value: serverState.connectionId },\r\n                        connectedClientId: { value: serverState.connectedClientId },\r\n                        domId: { value: serverState.domId },\r\n                        url: { value: serverState.unsecureUrl },\r\n                        surl: { value: serverState.url },\r\n                        ttlInSecs: { value: serverState.getRemainingTtlInSec() },\r\n                        // Copy this.connectedInfo\r\n                        numberOfPingReplies: { value: this.connectedInfo.numberOfPingReplies },\r\n                        connectedTimestamp: { value: this.connectedInfo.connectedTimestamp },\r\n                        isNewUrl: { value: this.connectedInfo.isNewUrl },\r\n                        transportType: { value: this.connectedInfo.transportType },\r\n                        connectionNumber: { value: this.connectedInfo.connectionNumber }\r\n                    }\r\n                };\r\n                this.copyProperties(clientEvent.properties, eventProperties);\r\n                this.eventLogger.logEvent(clientEvent);\r\n            }\r\n        }\r\n        catch (exc) {\r\n            this.logger.warn(\"error in sending event \" + eventName + \": \" + Common_1.toJson(exc));\r\n        }\r\n    };\r\n    ConnectionTracker.prototype.createStep = function (stepName, operation, error) {\r\n        return new TrackerStep(stepName, operation, this.beginTimestamp.duration, Date.now(), error);\r\n    };\r\n    ConnectionTracker.prototype.addStep = function (tag, progressHint, error) {\r\n        if (this.eventLogSettings.enabled === false) {\r\n            return;\r\n        }\r\n        if (this.steps.length === 0) {\r\n            this.beginTimestamp.reset();\r\n        }\r\n        this.steps.push(this.createStep(tag, progressHint, error));\r\n        ++this.totalStepCount;\r\n        // do not maintain an ever growing list of steps. send a progress event with what is collected so far and clear steps\r\n        // there should be enough context in any event for the server to group events created for the sameonnection\r\n        if (this.eventLogSettings.numberOfStepsToMaintain !== undefined\r\n            && this.steps.length > this.eventLogSettings.numberOfStepsToMaintain) {\r\n            var progress = this.steps.slice(0);\r\n            this.steps.length = 0;\r\n            this.sendTelemetry(ClientEventName.Progress, { reason: 'flush' }, progress);\r\n        }\r\n    };\r\n    ConnectionTracker.prototype.trackStart = function (tag) {\r\n        this.addStep(tag, 'start');\r\n    };\r\n    ConnectionTracker.prototype.trackEnd = function (tag) {\r\n        this.addStep(tag, 'end');\r\n    };\r\n    ConnectionTracker.prototype.trackError = function (tag, error, addStep, subOperation) {\r\n        if (addStep === void 0) { addStep = true; }\r\n        if (tag === 'health' && this.eventLogSettings.logHealthCheckError !== true) {\r\n            return;\r\n        }\r\n        if (tag === 'ping' && this.eventLogSettings.logSendPingError === false) {\r\n            return;\r\n        }\r\n        if (subOperation === undefined) {\r\n            subOperation = 'error';\r\n        }\r\n        if (addStep === true) {\r\n            this.addStep(tag, subOperation, error);\r\n        }\r\n        this.sendTelemetry(ClientEventName.Error, {}, [this.createStep(tag, subOperation, error)]);\r\n    };\r\n    ConnectionTracker.prototype.trackProgress = function (tag, subOperation) {\r\n        this.addStep(tag, subOperation);\r\n    };\r\n    ConnectionTracker.prototype.trackConnected = function (isNewUrl, transportType) {\r\n        this.setConnectedInfo(isNewUrl, transportType);\r\n        var progress = this.steps.slice(0);\r\n        var totalSteps = this.totalStepCount;\r\n        var connectionDuration = this.beginTimestamp.duration;\r\n        // clear steps collected\r\n        this.steps.length = 0;\r\n        this.totalStepCount = 0;\r\n        this.sendTelemetry(ClientEventName.Connected, {\r\n            stepCount: progress.length,\r\n            totalStepCount: totalSteps,\r\n            connectionEstablishmentMs_Total: connectionDuration\r\n        }, progress);\r\n        this.cancelProgressTimer();\r\n    };\r\n    ConnectionTracker.prototype.getSessionLength = function () {\r\n        return Date.now() - this.connectedInfo.connectedTimestamp;\r\n    };\r\n    ConnectionTracker.prototype.trackDisconnected = function (context) {\r\n        context.sessionLengthMS = this.getSessionLength();\r\n        this.sendTelemetry(ClientEventName.Disconnected, context, []);\r\n        this.resetProgressSendTimer();\r\n    };\r\n    ConnectionTracker.prototype.trackNewConnection = function () {\r\n        ++this.connectionAttempt;\r\n    };\r\n    ConnectionTracker.prototype.trackRequest = function (request, errorMsg) {\r\n        var context = {};\r\n        if (errorMsg !== undefined) {\r\n            context.hasError = true;\r\n            context.error = errorMsg;\r\n        }\r\n        try {\r\n            if (request) {\r\n                context.requestID = request.id;\r\n                context.httpMethod = request.method;\r\n                context.url = request.url;\r\n                context.bodyLength = request.body.length;\r\n                context.shortUrl = request.shortUrl;\r\n                context.requestTimeStamp = request.startTS;\r\n                context.correlationVector = request.correlationVector;\r\n                var headers = request.headers;\r\n                for (var _i = 0, _a = Object.keys(headers); _i < _a.length; _i++) {\r\n                    var header = _a[_i];\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        context[header] = headers[header];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (exc) {\r\n            context.hasError = true;\r\n            context.error = context.error + \" error creating request context \" + Common_1.toJson(exc);\r\n        }\r\n        this.sendTelemetry(ClientEventName.Request, context, []);\r\n    };\r\n    ConnectionTracker.prototype.trackResponse = function (request, latencyMS, responseData, errorMsg) {\r\n        var context = {};\r\n        if (errorMsg !== undefined) {\r\n            context.hasError = true;\r\n            context.error = errorMsg;\r\n        }\r\n        try {\r\n            context.responseTimestamp = responseData !== undefined ? responseData.sentTS : Date.now();\r\n            if (request) {\r\n                context.requestID = request.id;\r\n                context.httpMethod = request.method;\r\n                context.shortUrl = request.shortUrl;\r\n                context.correlationVector = request.correlationVector;\r\n                var headers = request.headers;\r\n                for (var _i = 0, _a = Object.keys(headers); _i < _a.length; _i++) {\r\n                    var header = _a[_i];\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        context[header] = headers[header];\r\n                    }\r\n                }\r\n            }\r\n            if (responseData) {\r\n                context.latencyMS = latencyMS;\r\n                context.responseCode = responseData.status;\r\n                context.responseLength = responseData.body.length;\r\n            }\r\n        }\r\n        catch (exc) {\r\n            context.hasError = true;\r\n            context.error = context.error + \" error creating response context \" + Common_1.toJson(exc);\r\n        }\r\n        this.sendTelemetry(ClientEventName.Response, context, []);\r\n    };\r\n    ConnectionTracker.prototype.sendResponseError = function (errorMsg, request, responseData) {\r\n        this.trackResponse(request, undefined, responseData, errorMsg);\r\n    };\r\n    ConnectionTracker.prototype.close = function () {\r\n        this.sendProgress({\r\n            reason: 'closed'\r\n        });\r\n        this.steps.length = 0;\r\n        this.cancelProgressTimer();\r\n    };\r\n    ConnectionTracker.prototype.mergeSettings = function (settings) {\r\n        if (!settings) {\r\n            return;\r\n        }\r\n        this.eventLogSettings.numberOfStepsToMaintain = Math.min(40, Math.max(10, (settings.numberOfStepsToMaintain !== undefined ? settings.numberOfStepsToMaintain : 0)));\r\n        // min of 55 secs and max allowed is 1 hr\r\n        var newProgressTimeout = Math.min(3600, Math.max(55, settings.sendProgressTimeoutSecs !== undefined ? settings.sendProgressTimeoutSecs : 0));\r\n        this.eventLogSettings.logHealthCheckError = settings.logHealthCheckError;\r\n        this.eventLogSettings.logSendPingError = settings.logSendPingError;\r\n        // Copy enable/disable flags for all telemetry events\r\n        for (var _i = 0, _a = Object.keys(ClientEventName).map(function (k) { return ClientEventName[k]; }); _i < _a.length; _i++) {\r\n            var iterator = _a[_i];\r\n            if (settings.hasOwnProperty(iterator) && settings[iterator] !== undefined) {\r\n                this.eventLogSettings[iterator] = settings[iterator];\r\n            }\r\n        }\r\n        if (this.eventLogSettings.sendProgressTimeoutSecs !== newProgressTimeout) {\r\n            this.eventLogSettings.sendProgressTimeoutSecs = newProgressTimeout;\r\n            this.resetProgressSendTimer();\r\n        }\r\n    };\r\n    return ConnectionTracker;\r\n}());\r\nexports.ConnectionTracker = ConnectionTracker;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Executes callbacks with exponential backoff\r\n */\r\nvar ExponentialBackoff = /** @class */ (function () {\r\n    function ExponentialBackoff(logger, maxBackoffInMs) {\r\n        this.logger = logger;\r\n        this.maxBackoffInMs = maxBackoffInMs;\r\n        this.backoffId = 0;\r\n        this.backoffCount = 0;\r\n    }\r\n    ExponentialBackoff.calculateNextBackoffMs = function (backoffCount, maxBackoffInMs) {\r\n        // tslint:disable-next-line:insecure-random\r\n        var fudge = 1 + (Math.random() - 0.5) * 0.4; // +/- 20%\r\n        var backoff = 1000 * Math.pow(2, backoffCount) * fudge; // 1s initial\r\n        backoff = Math.round(backoff);\r\n        return Math.min(maxBackoffInMs, backoff);\r\n    };\r\n    ExponentialBackoff.prototype.setMaxBackoffMs = function (ms) {\r\n        this.maxBackoffInMs = ms;\r\n    };\r\n    ExponentialBackoff.prototype.backoff = function (taskName, handler) {\r\n        var _this = this;\r\n        if (this.timerHandle !== undefined) {\r\n            this.logger.debug('Clearing current back off');\r\n            clearTimeout(this.timerHandle);\r\n            this.timerHandle = undefined;\r\n        }\r\n        var backoffMs = ExponentialBackoff.calculateNextBackoffMs(this.backoffCount, this.maxBackoffInMs);\r\n        this.backoffId++;\r\n        this.backoffCount++;\r\n        this.logger.info(\"Backing off \" + taskName + \" for \" + backoffMs + \" milliseconds with ID \" + this.backoffId);\r\n        this.callback = function () {\r\n            _this.logger.info(\"Back off for \" + taskName + \" with ID \" + _this.backoffId + \" complete, invoking handler\");\r\n            _this.timerHandle = undefined;\r\n            _this.callback = undefined;\r\n            handler();\r\n        };\r\n        this.timerHandle = setTimeout(this.callback, backoffMs);\r\n    };\r\n    /// Stop the backoff if active, do not call the handler and reset to the initial/shortest period again\r\n    ExponentialBackoff.prototype.reset = function () {\r\n        if (this.timerHandle !== undefined) {\r\n            this.logger.debug(\"Resetting back off with ID \" + this.backoffId);\r\n            clearTimeout(this.timerHandle);\r\n            this.timerHandle = undefined;\r\n            this.callback = undefined;\r\n        }\r\n        this.backoffCount = 0;\r\n    };\r\n    /// Call the handler right now if active and reset to the initial/shortest period again\r\n    ExponentialBackoff.prototype.expediteIfPending = function () {\r\n        this.backoffCount = 0;\r\n        if (this.timerHandle !== undefined) {\r\n            this.logger.debug(\"Expediting back off with ID \" + this.backoffId);\r\n            clearTimeout(this.timerHandle);\r\n            this.timerHandle = undefined;\r\n            var callback = this.callback;\r\n            this.callback = undefined;\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        }\r\n    };\r\n    return ExponentialBackoff;\r\n}());\r\nexports.ExponentialBackoff = ExponentialBackoff;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar InternalInterfaces_1 = __webpack_require__(5);\r\nvar Logger_1 = __webpack_require__(0);\r\n/**\r\n * After this count of 'soft' (5XX, no response) connection errors, FSM will start a new allocation.\r\n * Doesn't apply for 'hard' errors like 4XX, in this case FSM will start a new allocation immediately.\r\n */\r\nvar MAXIMUM_CONNECTION_ERRORS_COUNT = 2;\r\nvar State;\r\n(function (State) {\r\n    State[State[\"Initial\"] = 0] = \"Initial\";\r\n    /** waiting for token from User */\r\n    State[State[\"RetrievingToken\"] = 1] = \"RetrievingToken\";\r\n    /** waiting for allocation response from service */\r\n    State[State[\"Allocating\"] = 2] = \"Allocating\";\r\n    /**\r\n     * waiting for Socket.IO handshake to be finished. After that Socket.IO will\r\n     * start to try transports and send 'connecting' event\r\n     */\r\n    State[State[\"Handshaking\"] = 3] = \"Handshaking\";\r\n    /**\r\n     * waiting for 'connected' event - socket.io is trying different transports.\r\n     * onSocketError event should be ignored, as it's expected event. So, only ConnectFailed or\r\n     * connection timeout meas failed connection\r\n     */\r\n    State[State[\"Connecting\"] = 4] = \"Connecting\";\r\n    /** ready to work */\r\n    State[State[\"Connected\"] = 5] = \"Connected\";\r\n    /** waiting for token from User to send 'unregister' request */\r\n    State[State[\"UnregisteringRetrievingToken\"] = 6] = \"UnregisteringRetrievingToken\";\r\n    /** waiting for succesful 'unregister' response */\r\n    State[State[\"Unregistering\"] = 7] = \"Unregistering\";\r\n    /**\r\n     * Unrecoverable state\r\n     * Trouter cannot start once in this state\r\n     */\r\n    State[State[\"TerminalError\"] = 8] = \"TerminalError\";\r\n})(State = exports.State || (exports.State = {}));\r\nvar ConnectedSubstate;\r\n(function (ConnectedSubstate) {\r\n    ConnectedSubstate[ConnectedSubstate[\"Initial\"] = 0] = \"Initial\";\r\n    /** waiting for token from User */\r\n    ConnectedSubstate[ConnectedSubstate[\"RetrievingToken\"] = 1] = \"RetrievingToken\";\r\n    /** waiting for succesful 'register' response */\r\n    ConnectedSubstate[ConnectedSubstate[\"Registering\"] = 2] = \"Registering\";\r\n    /** Registration succeed */\r\n    ConnectedSubstate[ConnectedSubstate[\"Registered\"] = 3] = \"Registered\";\r\n    /** Registration is skipped */\r\n    ConnectedSubstate[ConnectedSubstate[\"NotRegistered\"] = 4] = \"NotRegistered\";\r\n})(ConnectedSubstate || (ConnectedSubstate = {}));\r\n/**\r\n * State machine for trouter\r\n */\r\nvar TrouterFsm = /** @class */ (function () {\r\n    function TrouterFsm(logfunc, worker, incallModeEnabled) {\r\n        this.worker = worker;\r\n        this.incallModeEnabled = incallModeEnabled;\r\n        this.state = State.Initial;\r\n        this.autoReconnect = true;\r\n        this.logger = new Logger_1.Logger('ConnectionFsm', logfunc);\r\n        this.connectedSubstate = ConnectedSubstate.Initial;\r\n    }\r\n    /** Returns current state */\r\n    TrouterFsm.prototype.getState = function () {\r\n        return this.state;\r\n    };\r\n    TrouterFsm.prototype.isActive = function () {\r\n        return this.state === State.Allocating\r\n            || this.state === State.Connected\r\n            || this.state === State.Handshaking\r\n            || this.state === State.Connecting\r\n            || this.state === State.RetrievingToken;\r\n    };\r\n    //////////// Events ////////////\r\n    /**\r\n     * Start trouter\r\n     */\r\n    TrouterFsm.prototype.start = function () {\r\n        if (this.state === State.Initial) {\r\n            this.setState(State.RetrievingToken);\r\n            this.worker.getToken(true, false);\r\n            return true;\r\n        }\r\n        else {\r\n            this.showIgnored('start');\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Stop trouter\r\n     * @param dontUnregister    if true, FSM will not unregister. It's needed in case of two simultaneous\r\n     *                          connections, to replace first connection with second - registrar just updates\r\n     *                          the existing record for the user, by registrationId (see their API docs),\r\n     *                          that id does not change during the lifetime of a TrouterService instance.\r\n     */\r\n    TrouterFsm.prototype.stop = function (dontUnregister) {\r\n        if (dontUnregister) {\r\n            this.connectedSubstate = ConnectedSubstate.Initial;\r\n        }\r\n        if (this.worker.isIncallMode()) {\r\n            this.worker.exitIncallMode();\r\n        }\r\n        this.worker.resetTokenBackoff();\r\n        this.worker.resetRegisterBackoff();\r\n        this.worker.stopConnectionTimer();\r\n        this.worker.stopPingTimer();\r\n        this.worker.clearTimers();\r\n        this.worker.stopRegisterTimer();\r\n        if (this.state === State.Connecting\r\n            || this.state === State.Handshaking\r\n            || this.state === State.Connected) {\r\n            this.worker.stopSocketIo();\r\n            if (this.state === State.Connected) {\r\n                this.worker.sendDisconnectTelemetryEvent('connection stopped');\r\n            }\r\n        }\r\n        // Stop can happen in any state - the only difference is if registration exists or not.\r\n        // It can be also called a second time, just to stop a stuck unregistration.\r\n        if (this.isRegistered() && this.state !== State.UnregisteringRetrievingToken && this.state !== State.Unregistering) {\r\n            this.setState(State.UnregisteringRetrievingToken);\r\n            this.worker.getToken(true, false);\r\n        }\r\n        else {\r\n            this.setState(State.Initial);\r\n            this.worker.dispatchDisconnected();\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onTokenReceived = function (token) {\r\n        if (this.state === State.RetrievingToken) {\r\n            this.setState(State.Allocating);\r\n            this.worker.startConnectionTimer();\r\n            this.worker.sendAllocateRequest(token);\r\n        }\r\n        else if (this.state === State.Connected && this.connectedSubstate === ConnectedSubstate.RetrievingToken) {\r\n            this.connectedSubstate = ConnectedSubstate.Registering;\r\n            this.worker.sendRegisterRequest();\r\n        }\r\n        else if (this.state === State.UnregisteringRetrievingToken) {\r\n            this.setState(State.Unregistering);\r\n            this.worker.sendUnregisterRequest();\r\n        }\r\n        else {\r\n            this.showIgnored('onTokenReceived');\r\n        }\r\n    };\r\n    /**\r\n     * if disconnectDetected - need to send ping to check if connection is really dead,\r\n     * otherwise - network is available\r\n     */\r\n    TrouterFsm.prototype.checkConnection = function (disconnectDetected) {\r\n        if (disconnectDetected) {\r\n            this.onPingInterval();\r\n        }\r\n    };\r\n    /** Allocation request succeed with 200 */\r\n    TrouterFsm.prototype.onAllocationSucceed = function () {\r\n        if (this.state === State.Allocating) {\r\n            this.setState(State.Handshaking);\r\n            if (this.connectedSubstate === ConnectedSubstate.Registered) {\r\n                this.worker.dispatchUnregistered();\r\n            }\r\n            this.connectedSubstate = ConnectedSubstate.Initial;\r\n            this.worker.startSocketIo();\r\n            return true;\r\n        }\r\n        else {\r\n            this.showIgnored('onAllocationSucceed');\r\n            return false;\r\n        }\r\n    };\r\n    /** Allocation request failed */\r\n    TrouterFsm.prototype.onAllocationFailed = function (unauthorized) {\r\n        if (this.state === State.Allocating) {\r\n            this.setState(State.RetrievingToken);\r\n            this.worker.stopConnectionTimer();\r\n            this.worker.getToken(!unauthorized, true);\r\n        }\r\n        else {\r\n            this.showIgnored('onAllocationFailed');\r\n        }\r\n    };\r\n    /** Connection didn't succeed in given timeout */\r\n    TrouterFsm.prototype.onConnectingTimeout = function () {\r\n        // implementation note: this also called from onConnectingFailed\r\n        if (this.state === State.Allocating\r\n            || this.state === State.Connecting\r\n            || this.state === State.Handshaking) {\r\n            this.setState(State.RetrievingToken);\r\n            this.worker.stopSocketIo();\r\n            this.worker.getToken(true, false);\r\n        }\r\n        else {\r\n            this.showIgnored('onConnectingTimeout');\r\n        }\r\n    };\r\n    /** socket.io handshake succeed and socket.io is trying next transport */\r\n    TrouterFsm.prototype.onConnecting = function () {\r\n        if (this.state === State.Handshaking) {\r\n            this.setState(State.Connecting);\r\n        }\r\n        else {\r\n            this.showIgnored('onConnecting');\r\n        }\r\n    };\r\n    /** Socket.io connection wasn't established */\r\n    TrouterFsm.prototype.onConnectingFailed = function () {\r\n        // This callback will be called when all transports failed to connect, i.e. socket.io can't proceed\r\n        if (this.state === State.Connecting) {\r\n            this.onConnectingTimeout();\r\n        }\r\n        else if (this.state === State.Handshaking) {\r\n            // It should never happen, because socket.io should try at least one transport\r\n            this.logger.error('Unexpected error in Socket.io - no valid transports');\r\n            this.onConnectingTimeout();\r\n        }\r\n        else {\r\n            this.showIgnored('onConnectingFailed');\r\n        }\r\n    };\r\n    /** Socket.io error (or disconnect) */\r\n    TrouterFsm.prototype.onSocketDisconnect = function (disconnectReason) {\r\n        if (this.state === State.Handshaking || this.state === State.Connected) {\r\n            this.worker.stopSocketIo();\r\n            this.worker.stopPingTimer();\r\n            this.worker.clearTimers();\r\n            this.worker.stopConnectionTimer();\r\n            if (this.state === State.Connected) {\r\n                this.worker.sendDisconnectTelemetryEvent(disconnectReason);\r\n            }\r\n            if (this.autoReconnect) {\r\n                this.setState(State.RetrievingToken);\r\n                this.worker.resetRegisterBackoff();\r\n                this.worker.dispatchReconnecting();\r\n                this.worker.getToken(true, false);\r\n            }\r\n            else {\r\n                this.logger.debug('Socket error/disconnect occurred and automatic reconnect is disabled. Connection will stop.');\r\n                this.stop(true);\r\n            }\r\n        }\r\n        else {\r\n            // Disconnect can be called because of an error.\r\n            // Such error can happen in Connecting state, which means that\r\n            // websocket transport failed to establish connection\r\n            this.showIgnored('onSocketDisconnect');\r\n        }\r\n    };\r\n    /** Received 'trouter.connected' event from service */\r\n    TrouterFsm.prototype.onTrouterConnected = function () {\r\n        if (this.state === State.Connecting) {\r\n            this.setState(State.Connected);\r\n            this.worker.resetTokenBackoff();\r\n            this.worker.stopConnectionTimer();\r\n            this.worker.sendUserActivityState(InternalInterfaces_1.UserActivityEventReason.Connected, true);\r\n            this.worker.startPingTimer();\r\n            this.worker.dispatchConnected();\r\n            if (this.worker.shouldSkipRegistration()) {\r\n                this.connectedSubstate = ConnectedSubstate.NotRegistered;\r\n                this.worker.dispatchRegistered();\r\n            }\r\n            else {\r\n                this.connectedSubstate = ConnectedSubstate.RetrievingToken;\r\n                this.worker.getToken(true, false);\r\n            }\r\n        }\r\n        else {\r\n            this.showIgnored('onTrouterConnected');\r\n        }\r\n    };\r\n    /**\r\n     * Received 'trouter.reconnect' event from service, or URL in configuration has changed,\r\n     * need to establish a new connection\r\n     */\r\n    TrouterFsm.prototype.onReconnectRequired = function (useConnectParamsFromCache, reason) {\r\n        this.worker.dispatchReconnectIsRequired(useConnectParamsFromCache, reason);\r\n    };\r\n    TrouterFsm.prototype.disableAutoReconnect = function () {\r\n        this.autoReconnect = false;\r\n    };\r\n    /** Request from downstream is received */\r\n    TrouterFsm.prototype.onDownstreamRequest = function (request) {\r\n        if (this.state === State.Connected) {\r\n            this.switchToIncallModeIfEnabled();\r\n            this.worker.dispatchDownstreamRequest(request);\r\n        }\r\n        else {\r\n            this.showIgnored('onDownstreamRequest');\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onTrouterMessageLost = function (messageLossIndicators) {\r\n        if (this.state === State.Connected) {\r\n            this.worker.dispatchTrouterMessageLost(messageLossIndicators);\r\n        }\r\n        else {\r\n            this.showIgnored('onTrouterMessageLost');\r\n        }\r\n    };\r\n    /** Timer for ping request fired */\r\n    TrouterFsm.prototype.onPingInterval = function () {\r\n        if (this.state === State.Connected) {\r\n            this.worker.sendPingRequest();\r\n        }\r\n        else {\r\n            this.showIgnored('onPingInterval');\r\n        }\r\n    };\r\n    /** No pong response from service within timeout */\r\n    TrouterFsm.prototype.onPingResponseTimeout = function () {\r\n        this.onMissedResponse('onPingResponseTimeout');\r\n    };\r\n    /** Pong response */\r\n    TrouterFsm.prototype.onPingResponse = function () {\r\n        if (this.state === State.Connected) {\r\n            // do nothing\r\n        }\r\n        else {\r\n            this.showIgnored('onPingResponse');\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onRegistrationFailed = function (unauthorized) {\r\n        if (this.state === State.Connected\r\n            && this.connectedSubstate === ConnectedSubstate.Registering) {\r\n            this.connectedSubstate = ConnectedSubstate.RetrievingToken;\r\n            this.worker.getToken(!unauthorized, true);\r\n        }\r\n        else {\r\n            this.showIgnored('onRegistrationFailed');\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onRegistrationSucceed = function (isRegistrationTtlLowerThanKnownAllocationTtl) {\r\n        if (this.state === State.Connected) {\r\n            if (this.connectedSubstate === ConnectedSubstate.Registering) {\r\n                this.connectedSubstate = ConnectedSubstate.Registered;\r\n                this.worker.dispatchRegistered();\r\n            }\r\n            // If registration ttl is lower than known allocation ttl we need to start re-registration.\r\n            // Otherwise, the allocation will expire with the registration, client will reconnect with a new\r\n            // allocation, a new connection id. which in turn will trigger a new registration started.\r\n            // i.e. no need to re-register the current expiring one.\r\n            if (isRegistrationTtlLowerThanKnownAllocationTtl) {\r\n                this.worker.startRegisterTimer();\r\n            }\r\n        }\r\n        else {\r\n            this.showIgnored('onRegistrationSucceed');\r\n        }\r\n    };\r\n    /** Registration TTL is about to expire */\r\n    TrouterFsm.prototype.onRegistrationTimeout = function () {\r\n        if (this.state === State.Connected\r\n            && this.connectedSubstate !== ConnectedSubstate.NotRegistered) {\r\n            this.connectedSubstate = ConnectedSubstate.RetrievingToken;\r\n            this.worker.getToken(true, false);\r\n        }\r\n        else {\r\n            this.showIgnored('onRegistrationTimeout');\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onUnregistrationFailed = function (unauthorized) {\r\n        if (this.state === State.Unregistering) {\r\n            this.setState(State.UnregisteringRetrievingToken);\r\n            this.worker.getToken(!unauthorized, !unauthorized);\r\n        }\r\n        else {\r\n            this.showIgnored('onUnregistrationFailed');\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onUnregistrationSucceed = function () {\r\n        if (this.state === State.Unregistering) {\r\n            this.setState(State.Initial);\r\n            this.worker.dispatchUnregistered();\r\n            this.worker.dispatchDisconnected();\r\n        }\r\n        else {\r\n            this.showIgnored('onUnregistrationSucceed');\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onIncallModeTimer = function () {\r\n        this.worker.exitIncallMode();\r\n        if (this.state === State.Connected) {\r\n            this.worker.stopPingTimer();\r\n            this.worker.startPingTimer();\r\n        }\r\n        else {\r\n            this.showIgnored('onIncallModeTimer');\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onSetUserActivityState = function (userActivityObject, changed) {\r\n        if (changed) {\r\n            this.logger.info(\"Changing user activity state to '\" + userActivityObject.toEventJSON() + \"'\");\r\n            this.worker.sendUserActivityState(InternalInterfaces_1.UserActivityEventReason.Modified, this.state === State.Connected);\r\n        }\r\n        else {\r\n            this.logger.debug(\"Not changing the same user activity state '\" + userActivityObject.toEventJSON() + \"'\");\r\n        }\r\n    };\r\n    TrouterFsm.prototype.onActivityStateResponseTimeout = function () {\r\n        this.onMissedResponse('onActivityStateResponseTimeout');\r\n    };\r\n    TrouterFsm.prototype.forceReconnect = function (reason) {\r\n        if (this.state === State.Connected) {\r\n            this.worker.sendDisconnectTelemetryEvent(reason);\r\n        }\r\n        this.setState(State.RetrievingToken);\r\n        this.worker.resetTokenBackoff();\r\n        this.worker.stopConnectionTimer();\r\n        this.worker.resetRegisterBackoff();\r\n        this.worker.stopPingTimer();\r\n        this.worker.clearTimers();\r\n        this.worker.stopSocketIo();\r\n        this.worker.dispatchReconnecting();\r\n        this.worker.getToken(true, false);\r\n    };\r\n    TrouterFsm.prototype.onTerminalError = function () {\r\n        this.logger.error(\"Cannot proceed, reached terminal state. Switching from state '\" + State[this.state] + \"' to \" + State[State.TerminalError]);\r\n        this.setState(State.TerminalError);\r\n    };\r\n    TrouterFsm.prototype.onMissedResponse = function (onResponseHandlerName) {\r\n        if (this.state === State.Connected) {\r\n            this.setState(State.RetrievingToken);\r\n            this.worker.resetRegisterBackoff();\r\n            this.worker.stopPingTimer();\r\n            this.worker.clearTimers();\r\n            this.worker.stopSocketIo();\r\n            this.worker.sendDisconnectTelemetryEvent(onResponseHandlerName);\r\n            this.worker.dispatchReconnecting();\r\n            this.worker.getToken(true, false);\r\n        }\r\n        else {\r\n            this.showIgnored(onResponseHandlerName);\r\n        }\r\n    };\r\n    TrouterFsm.prototype.showIgnored = function (event) {\r\n        this.logger.debug(\"Ignoring event '\" + event + \"' in state '\" + State[this.state] + \"'\");\r\n    };\r\n    TrouterFsm.prototype.setState = function (state) {\r\n        this.logger.info(\"Switching from state '\" + State[this.state] + \"' to state '\" + State[state] + \"'\");\r\n        if (this.state === state) {\r\n            this.logger.error(\"Attempt to switching into the current state '\" + State[state] + \"'\");\r\n            return;\r\n        }\r\n        this.state = state;\r\n    };\r\n    TrouterFsm.prototype.isRegistered = function () {\r\n        return this.connectedSubstate === ConnectedSubstate.Registered\r\n            || this.connectedSubstate === ConnectedSubstate.Registering;\r\n    };\r\n    TrouterFsm.prototype.switchToIncallModeIfEnabled = function () {\r\n        if (this.incallModeEnabled) {\r\n            if (!this.worker.isIncallMode()) {\r\n                this.worker.enterIncallMode();\r\n                this.worker.stopPingTimer();\r\n                this.worker.startPingTimer();\r\n            }\r\n            this.worker.restartIncallModeTimer();\r\n        }\r\n    };\r\n    return TrouterFsm;\r\n}());\r\nexports.TrouterFsm = TrouterFsm;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Interfaces_1 = __webpack_require__(2);\r\nvar Logger_1 = __webpack_require__(0);\r\nvar TrouterConnection_1 = __webpack_require__(6);\r\n/**\r\n * State machine for manager\r\n */\r\nvar TrouterManagerFsm = /** @class */ (function () {\r\n    function TrouterManagerFsm(logFunc, worker) {\r\n        this.worker = worker;\r\n        this.state = Interfaces_1.TrouterState.Unknown;\r\n        this.logger = new Logger_1.Logger('ManagerFsm', logFunc);\r\n    }\r\n    TrouterManagerFsm.prototype.start = function () {\r\n        if (this.state === Interfaces_1.TrouterState.Unknown) {\r\n            this.setState(Interfaces_1.TrouterState.Disconnected);\r\n            this.worker.forceStopLingeringConnection();\r\n            this.worker.startFirstConnection();\r\n        }\r\n        else {\r\n            this.showIgnored('start');\r\n        }\r\n    };\r\n    TrouterManagerFsm.prototype.stop = function (dontUnregister) {\r\n        if (this.state !== Interfaces_1.TrouterState.Unknown) {\r\n            this.setState(Interfaces_1.TrouterState.Unknown);\r\n            this.worker.stopFirstConnection(dontUnregister === true);\r\n            this.worker.stopSecondConnection(dontUnregister === true);\r\n        }\r\n        else {\r\n            this.showIgnored('stop');\r\n        }\r\n    };\r\n    /** Returns current state */\r\n    TrouterManagerFsm.prototype.getState = function () {\r\n        return this.state;\r\n    };\r\n    TrouterManagerFsm.prototype.onConnected = function (first) {\r\n        if (this.state === Interfaces_1.TrouterState.Disconnected && first) {\r\n            if (this.worker.doesSecondConnectionExist()) {\r\n                this.setState(Interfaces_1.TrouterState.Switching);\r\n            }\r\n            else {\r\n                this.setState(Interfaces_1.TrouterState.Connected);\r\n                this.worker.dispatchConnected();\r\n            }\r\n        }\r\n        else {\r\n            this.showIgnored(\"onConnected(\" + first + \")\");\r\n        }\r\n    };\r\n    TrouterManagerFsm.prototype.onRegistered = function (first) {\r\n        if (this.state === Interfaces_1.TrouterState.Disconnected && !first) {\r\n            this.setState(Interfaces_1.TrouterState.Connected);\r\n            this.worker.switchConnections();\r\n            this.worker.stopSecondConnection(true);\r\n            this.worker.dispatchConnected();\r\n        }\r\n        else if (this.state === Interfaces_1.TrouterState.Switching && !first) {\r\n            this.setState(Interfaces_1.TrouterState.Connected);\r\n            this.worker.switchConnections();\r\n            this.worker.stopSecondConnectionDelayed();\r\n            this.worker.dispatchConnected();\r\n        }\r\n        this.worker.dispatchRegistrationState(true);\r\n    };\r\n    TrouterManagerFsm.prototype.onUnregistered = function (first) {\r\n        if (first) {\r\n            this.worker.dispatchRegistrationState(false);\r\n        }\r\n    };\r\n    TrouterManagerFsm.prototype.onReconnecting = function (first) {\r\n        if (this.state === Interfaces_1.TrouterState.Connected && first) {\r\n            this.setState(Interfaces_1.TrouterState.Disconnected);\r\n            this.worker.dispatchReconnecting();\r\n        }\r\n        else if (this.state === Interfaces_1.TrouterState.Switching && first) {\r\n            this.setState(Interfaces_1.TrouterState.Disconnected);\r\n            this.worker.dispatchReconnecting();\r\n        }\r\n        else {\r\n            this.showIgnored(\"onReconnecting(\" + first + \")\");\r\n        }\r\n    };\r\n    TrouterManagerFsm.prototype.onReconnectionRequired = function (first, useConnectParamsFromCache, reason) {\r\n        if (this.state === Interfaces_1.TrouterState.Connected && first) {\r\n            this.setState(Interfaces_1.TrouterState.Switching);\r\n            this.worker.startSecondConnection(useConnectParamsFromCache);\r\n        }\r\n        else if (this.state === Interfaces_1.TrouterState.Disconnected && first) {\r\n            this.worker.startSecondConnection(useConnectParamsFromCache);\r\n        }\r\n        else if (this.state === Interfaces_1.TrouterState.Switching && first && reason === TrouterConnection_1.ReconnectReason.Configuration) {\r\n            // Intentionally ignoring `trouter.reconnect` events arriving during an in-progress switch (on either connection),\r\n            // only configuration change is handled. This matches the current behavior of the C++ client.\r\n            // Even in the ignored cases, the client should still end up being connected to the right environment eventually.\r\n            this.logger.debug('onReconnectionRequired: switch requested while already in Switching state');\r\n            this.worker.stopSecondConnection(true);\r\n            this.worker.startSecondConnection(useConnectParamsFromCache);\r\n        }\r\n        else {\r\n            this.showIgnored(\"onReconnectionRequired(\" + first + \")\");\r\n        }\r\n    };\r\n    TrouterManagerFsm.prototype.onDisconnected = function (first) {\r\n        if (this.state === Interfaces_1.TrouterState.Unknown && first) {\r\n            this.worker.dispatchStopped();\r\n        }\r\n        else {\r\n            this.showIgnored(\"onDisconnected(\" + first + \")\");\r\n        }\r\n    };\r\n    TrouterManagerFsm.prototype.showIgnored = function (event) {\r\n        this.logger.info(\"Ignoring event '\" + event + \"' in state '\" + Interfaces_1.TrouterState[this.state] + \"'\");\r\n    };\r\n    TrouterManagerFsm.prototype.setState = function (state) {\r\n        this.logger.info(\"Switching from state '\" + Interfaces_1.TrouterState[this.state] + \"' to state '\" + Interfaces_1.TrouterState[state] + \"'\");\r\n        if (this.state === state) {\r\n            this.logger.error(\"Attempt to switching into the current state '\" + Interfaces_1.TrouterState[state] + \"'\");\r\n            return;\r\n        }\r\n        this.state = state;\r\n    };\r\n    return TrouterManagerFsm;\r\n}());\r\nexports.TrouterManagerFsm = TrouterManagerFsm;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable:strict-boolean-expressions\r\nvar Constants_1 = __webpack_require__(1);\r\nvar Interfaces_1 = __webpack_require__(2);\r\nexports.TrouterState = Interfaces_1.TrouterState;\r\nexports.UserActivityState = Interfaces_1.UserActivityState;\r\nvar Logger_1 = __webpack_require__(0);\r\nvar MessageHandler_1 = __webpack_require__(7);\r\nvar SkypeTokenProviderWithCache_1 = __webpack_require__(8);\r\nvar TrouterManager_1 = __webpack_require__(9);\r\nvar TrouterUrlPromise_1 = __webpack_require__(10);\r\nfunction populateTelemetryOptions(startingCfg, ecsCfg) {\r\n    if (!ecsCfg) {\r\n        return startingCfg;\r\n    }\r\n    var res = __assign({}, startingCfg, {\r\n        enabled: ecsCfg.TelemetryEnabled\r\n    });\r\n    if (ecsCfg.ClientTelemetryEventEnabled !== undefined) {\r\n        res = __assign({}, res, ecsCfg.ClientTelemetryEventEnabled);\r\n    }\r\n    return res;\r\n}\r\nfunction populateTrouterOptions(cfg, ecsCfg) {\r\n    return {\r\n        clientInfo: {\r\n            ua: cfg.trouterSettings.productName,\r\n            v: cfg.trouterSettings.version\r\n        },\r\n        ioOptions: {\r\n            // uncomment for manual testing\r\n            // transports: ['xhr-polling'],\r\n            // 'connect timeout': XXX, 10000 by default in socket.io code\r\n            ackTimeoutMs: 5000\r\n        },\r\n        clientCorrelationID: cfg.trouterSettings.sessionId,\r\n        environment: cfg.trouterSettings.environment,\r\n        telemetrySettings: populateTelemetryOptions(cfg.telemetryConfig.settings, ecsCfg),\r\n        eventLogger: cfg.telemetryConfig.eventLogger,\r\n        endpointId: cfg.trouterSettings.registrationId,\r\n        trouterUrl: (ecsCfg && ecsCfg.TrouterConnectionUrl) || cfg.trouterSettings.trouterServiceUrl,\r\n        registration: cfg.trouterSettings.registrarServiceUrl\r\n            ? {\r\n                registrarUrl: cfg.trouterSettings.registrarServiceUrl,\r\n                registrationId: cfg.trouterSettings.registrationId || '',\r\n                pnhAppId: cfg.trouterSettings.pnhAppId || '',\r\n                platform: cfg.trouterSettings.platform || '',\r\n                pnhTemplateKey: cfg.trouterSettings.pnhTemplate || '',\r\n                platformUIVersion: cfg.trouterSettings.platformUIVersion || '',\r\n                productContext: cfg.trouterSettings.pnhProductContext || undefined,\r\n                context: cfg.trouterSettings.pnhContext || '',\r\n                registrarTtlSec: (cfg.trouterSettings.maxRegistrationTimeInMs || 0) / 1000\r\n            }\r\n            : undefined,\r\n        timeoutOptions: __assign({ connectionTimeoutMs: cfg.trouterSettings.trouterConnectTimeoutInMs || 30000, fetchTimeoutMs: 10000, pingTimeoutMs: 40000, pongTimeoutMs: 5000, \r\n            /** Followup WI to remove hardcoded value: https://domoreexp.visualstudio.com/MSTeams/_workitems/edit/2307271 */\r\n            maxBackoffMs: cfg.trouterSettings.productName === 'TeamsCDL' ? 300000 : 30000, requestTimeoutMs: 5000, userActivityResponseTimeoutMs: 10000 }, cfg.trouterSettings.timeoutOptions),\r\n        incallTimeoutOptions: __assign({ connectionTimeoutMs: 10000, fetchTimeoutMs: 5000, pingTimeoutMs: 5000, pongTimeoutMs: 2000, maxBackoffMs: cfg.trouterSettings.productName === 'TeamsCDL' ? 300000 : 10000, requestTimeoutMs: 5000, userActivityResponseTimeoutMs: 10000 }, cfg.trouterSettings.incallTimeoutOptions),\r\n        incallModeTimeoutMs: cfg.trouterSettings.incallModeTimeoutMs || 0,\r\n        lingeringConnectionDelayMs: 60000,\r\n        userActivitySecondResendDelayMs: cfg.trouterSettings.userActivitySecondResendDelayMs || 10000,\r\n        duplicateDisconnectThresholdMs: 10000,\r\n        connectionCache: cfg.connectionCache,\r\n        registrationStateCallback: cfg.registrationStateCallbackForAcsDoNotUse,\r\n        retryLimitOnTokenFetch: cfg.trouterSettings.productName === 'TeamsCDL' ? 15 : cfg.trouterSettings.retryLimitOnTokenFetch\r\n    };\r\n}\r\n/**\r\n * TrouterService implementation class\r\n */\r\nvar TrouterService = /** @class */ (function () {\r\n    function TrouterService(logProvider) {\r\n        this.logProvider = logProvider;\r\n        this.stateChangedListeners = [];\r\n        this.logger = new Logger_1.Logger('Trouter', logProvider);\r\n        this.trouterUrlPromise = new TrouterUrlPromise_1.TrouterUrlPromise(logProvider);\r\n        this.messageHandlers = new MessageHandler_1.MessageHandlerRegistry(logProvider);\r\n        this.listeners = {};\r\n        this.connectionInfo = null;\r\n        this.logger.info(\"Created TrouterService version \" + Constants_1.CLIENT_VERSION);\r\n    }\r\n    TrouterService.prototype.start = function (cfg) {\r\n        this.logger.info('Start');\r\n        if (!cfg.trouterSettings.disableInternalSkypeTokenCache) {\r\n            var provider = cfg.skypeTokenProvider;\r\n            cfg.skypeTokenProvider = SkypeTokenProviderWithCache_1.addCacheAsBackupTo(provider);\r\n        }\r\n        this.trouterCfg = cfg;\r\n        var options = populateTrouterOptions(cfg, this.ecsCfg);\r\n        if (this.trouterServer === undefined) {\r\n            this.trouterServer = new TrouterManager_1.TrouterManager(this.logProvider, options, cfg.skypeTokenProvider, this);\r\n        }\r\n        this.trouterServer.start();\r\n    };\r\n    TrouterService.prototype.stop = function (dontUnregister) {\r\n        this.logger.info('close connection');\r\n        this.trouterUrlPromise.rejectUrl(new Error('TrouterService is stopped'));\r\n        if (this.trouterServer !== undefined) {\r\n            this.trouterServer.stop(dontUnregister);\r\n        }\r\n    };\r\n    TrouterService.prototype.setEcsConfig = function (fullEcsData) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var ecsSection = 'TrouterJScriptClient';\r\n                        _this.ecsCfg = (fullEcsData[ecsSection]);\r\n                        _this.logger.info(\"Setting ECS configuration to \" + JSON.stringify(_this.ecsCfg));\r\n                        if (_this.trouterServer !== undefined && _this.trouterCfg !== undefined) {\r\n                            var options = populateTrouterOptions(_this.trouterCfg, _this.ecsCfg);\r\n                            _this.trouterServer.configure(options);\r\n                        }\r\n                        resolve();\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Notifies trouter that network is restored - trouter will try to restore connection immediately\r\n     */\r\n    TrouterService.prototype.checkConnection = function (disconnectDetected) {\r\n        if (this.trouterServer !== undefined) {\r\n            this.trouterServer.checkConnection(disconnectDetected || false);\r\n        }\r\n    };\r\n    TrouterService.prototype.resendRegistration = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.trouterServer) {\r\n                    throw new Error('resendRegistration called too early');\r\n                }\r\n                return [2 /*return*/, this.trouterServer.resendRegistration()];\r\n            });\r\n        });\r\n    };\r\n    // Listeners\r\n    TrouterService.prototype.registerListener = function (listener, path) {\r\n        if (path === '' || path[0] !== '/' || path.indexOf('?') >= 0 || path.indexOf('#') >= 0) {\r\n            this.logger.error(\"Listener path '\" + path + \"' is not valid\");\r\n            return false;\r\n        }\r\n        if (this.listeners[path]) {\r\n            this.logger.error(\"Another listener is already registered for path '\" + path + \"'\");\r\n            return false;\r\n        }\r\n        this.listeners[path] = listener;\r\n        this.logger.debug(\"Listener for path '\" + path + \"' registered\");\r\n        if (this.connectionInfo) {\r\n            listener.onTrouterConnected(this.connectionInfo.baseEndpointUrl + path, this.connectionInfo);\r\n        }\r\n        return true;\r\n    };\r\n    TrouterService.prototype.unregisterListener = function (listener) {\r\n        var paths = [];\r\n        for (var _i = 0, _a = Object.keys(this.listeners); _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            if (this.listeners[path] === listener) {\r\n                paths.push(path);\r\n            }\r\n        }\r\n        if (paths.length === 0) {\r\n            return false;\r\n        }\r\n        for (var _b = 0, paths_1 = paths; _b < paths_1.length; _b++) {\r\n            var path = paths_1[_b];\r\n            delete this.listeners[path];\r\n        }\r\n        this.logger.debug(\"Listener for path(s) '\" + paths.join('\\', \\'') + \"' unregistered\");\r\n        return true;\r\n    };\r\n    TrouterService.prototype.onTrouterConnected = function (endpointUrl, connectionInfo) {\r\n        this.logger.debug('Trouter is now connected');\r\n        for (var _i = 0, _a = Object.keys(this.listeners); _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            try {\r\n                this.listeners[path].onTrouterConnected(connectionInfo.baseEndpointUrl + path, connectionInfo);\r\n            }\r\n            catch (e) {\r\n                this.logger.error(\"Listener '\" + path + \"' threw an exception from onTrouterConnected(): \" + e);\r\n            }\r\n        }\r\n        this.connectionInfo = connectionInfo;\r\n        this.trouterUrlPromise.resolveUrl(endpointUrl);\r\n        this.notifyStateChanged(Interfaces_1.TrouterState.Connected, {\r\n            url: endpointUrl,\r\n            getRemainingTtlInSec: function () { return connectionInfo.connectionTtlSec; }\r\n        });\r\n    };\r\n    TrouterService.prototype.onTrouterDisconnected = function () {\r\n        this.logger.debug('Trouter is now disconnected');\r\n        this.connectionInfo = null;\r\n        for (var _i = 0, _a = Object.keys(this.listeners); _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var listener = this.listeners[path];\r\n            if (listener.onTrouterDisconnected) {\r\n                try {\r\n                    listener.onTrouterDisconnected();\r\n                }\r\n                catch (e) {\r\n                    this.logger.error(\"Listener '\" + path + \"' threw an exception from onTrouterDisconnected(): \" + e);\r\n                }\r\n            }\r\n        }\r\n        this.notifyStateChanged(Interfaces_1.TrouterState.Disconnected);\r\n    };\r\n    TrouterService.prototype.onTrouterRequest = function (request, response) {\r\n        var bestPath = '';\r\n        for (var _i = 0, _a = Object.keys(this.listeners); _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            if (request.path.substring(0, path.length) === path && path.length > bestPath.length) {\r\n                bestPath = path;\r\n            }\r\n        }\r\n        if (bestPath !== '') {\r\n            try {\r\n                this.listeners[bestPath].onTrouterRequest(request, response);\r\n            }\r\n            catch (e) {\r\n                this.logger.error(\"Listener '\" + bestPath + \"' threw an exception from onTrouterRequest(): \" + e);\r\n                response.status = 500;\r\n                response.headers = { 'Trouter-Responder': 'ClientLib' };\r\n                response.send();\r\n            }\r\n            return;\r\n        }\r\n        if (this.tryMessageHandlers(request, response)) {\r\n            return;\r\n        }\r\n        response.status = 404;\r\n        response.headers = { 'Trouter-Responder': 'ClientLib' };\r\n        response.send();\r\n    };\r\n    TrouterService.prototype.onTrouterMessageLoss = function (flowTags) {\r\n        this.logger.info(\"onTrouterMessageLoss called with value \" + flowTags);\r\n        var messageLossProcessed = true;\r\n        for (var _i = 0, _a = Object.keys(this.listeners); _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var listener = this.listeners[path];\r\n            if (listener.onTrouterMessageLoss) {\r\n                try {\r\n                    messageLossProcessed = listener.onTrouterMessageLoss(flowTags) && messageLossProcessed;\r\n                    if (messageLossProcessed === undefined) {\r\n                        this.logger.error(\"Listener '\" + path + \"' did not response with boolean value onTrouterMessageLoss()\");\r\n                        messageLossProcessed = false;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    this.logger.error(\"Listener '\" + path + \"' threw an exception from onTrouterMessageLoss(): \" + e);\r\n                    messageLossProcessed = false;\r\n                }\r\n            }\r\n        }\r\n        return messageLossProcessed;\r\n    };\r\n    TrouterService.prototype.onTrouterUserActivityStateAccepted = function (cv) {\r\n        this.logger.debug(\"onTrouterUserActivityStateAccepted cv: \" + cv);\r\n        for (var _i = 0, _a = Object.keys(this.listeners); _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var listener = this.listeners[path];\r\n            if (listener.onTrouterUserActivityStateAccepted) {\r\n                try {\r\n                    listener.onTrouterUserActivityStateAccepted(cv);\r\n                }\r\n                catch (e) {\r\n                    this.logger.error(\"Listener '\" + path + \"' threw an exception from onTrouterUserActivityStateAccepted(): \" + e);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    TrouterService.prototype.setUserActivityState = function (state, correlationVector) {\r\n        if (state !== Interfaces_1.UserActivityState.Active && state !== Interfaces_1.UserActivityState.Inactive) {\r\n            throw new Error(\"setUserActivityState called with unsupported value \" + state);\r\n        }\r\n        this.logger.info(\"setUserActivityState called with value \" + Interfaces_1.UserActivityState[state]);\r\n        if (this.trouterServer && this.state() !== Interfaces_1.TrouterState.Unknown) {\r\n            this.trouterServer.setUserActivityState(state, correlationVector);\r\n        }\r\n        else {\r\n            throw new Error('setUserActivityState called too early');\r\n        }\r\n    };\r\n    // Legacy API\r\n    TrouterService.prototype.state = function () {\r\n        if (this.trouterServer !== undefined) {\r\n            return this.trouterServer.getState();\r\n        }\r\n        return Interfaces_1.TrouterState.Unknown;\r\n    };\r\n    TrouterService.prototype.getServerState = function () {\r\n        if (this.trouterServer !== undefined) {\r\n            return this.trouterServer.getServerState();\r\n        }\r\n        return undefined;\r\n    };\r\n    // tslint:disable-next-line:promise-function-async\r\n    TrouterService.prototype.getTrouterUrlAsync = function () {\r\n        if (this.trouterServer !== undefined) {\r\n            return this.trouterUrlPromise.getPromise();\r\n        }\r\n        else {\r\n            return Promise.reject(new Error('TrouterService has not been started'));\r\n        }\r\n    };\r\n    TrouterService.prototype.onStateChanged = function (callback) {\r\n        this.logger.info('onStateChanged called');\r\n        if (callback === undefined) {\r\n            this.stateChangedListeners = this.stateChangedListeners.filter(function (listener) { return (listener.wrappedCallback === undefined); });\r\n        }\r\n        else {\r\n            this.offStateChanged(callback);\r\n            var wrapper = function (state, info) {\r\n                callback(state, info ? info.url : '');\r\n            };\r\n            wrapper.wrappedCallback = callback;\r\n            this.stateChangedListeners.push(wrapper);\r\n        }\r\n    };\r\n    TrouterService.prototype.offStateChanged = function (callback) {\r\n        this.logger.info('offStateChanged called');\r\n        var sizeBeforeRemoval = this.stateChangedListeners.length;\r\n        this.stateChangedListeners = this.stateChangedListeners.filter(function (listener) { return (listener.wrappedCallback !== callback); });\r\n        return (sizeBeforeRemoval > this.stateChangedListeners.length);\r\n    };\r\n    TrouterService.prototype.addCallback = function (callback) {\r\n        this.logger.info('addListener called');\r\n        var index = this.stateChangedListeners.indexOf(callback, 0);\r\n        if (index === -1 && callback !== undefined) {\r\n            this.stateChangedListeners.push(callback);\r\n        }\r\n    };\r\n    TrouterService.prototype.removeCallback = function (callback) {\r\n        this.logger.info('removeListener called');\r\n        var index = this.stateChangedListeners.indexOf(callback, 0);\r\n        if (index > -1) {\r\n            this.stateChangedListeners.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    TrouterService.prototype.registerMessageHandler = function (handler) {\r\n        this.logger.info('registerMessageHandler is called');\r\n        this.messageHandlers.register(handler);\r\n    };\r\n    TrouterService.prototype.clearMessageHandlers = function () {\r\n        this.logger.info('clearMessageHandlers is called');\r\n        this.messageHandlers.clear();\r\n    };\r\n    TrouterService.prototype.notifyStateChanged = function (state, info) {\r\n        var _this = this;\r\n        this.logger.info(\"notifyStateChanged called, will forward to \" + this.stateChangedListeners.length + \" listeners\");\r\n        this.stateChangedListeners.forEach(function (callback) {\r\n            try {\r\n                callback(state, info);\r\n            }\r\n            catch (error) {\r\n                _this.logger.error(\"Error in callback \" + error);\r\n            }\r\n        });\r\n    };\r\n    TrouterService.prototype.tryMessageHandlers = function (request, response) {\r\n        if (!this.messageHandlers.active()) {\r\n            return false;\r\n        }\r\n        var body;\r\n        var eventId = null;\r\n        try {\r\n            body = JSON.parse(request.body);\r\n            eventId = (body && (body.evt || body.eventId)) || null;\r\n        }\r\n        catch (e) { }\r\n        var message = {\r\n            eventId: eventId,\r\n            url: (this.connectionInfo ? this.connectionInfo.baseEndpointUrl : '') + request.path,\r\n            body: body,\r\n            rawBody: request.body,\r\n            headers: request.headers\r\n        };\r\n        var result = this.messageHandlers.handleMessage(message);\r\n        if (!result.isHandled) {\r\n            return false;\r\n        }\r\n        response.status = result.resultCode;\r\n        if (result.responseHeaders) {\r\n            response.headers = result.responseHeaders;\r\n        }\r\n        if (result.responseBody) {\r\n            response.body = result.responseBody;\r\n        }\r\n        response.send();\r\n        return true;\r\n    };\r\n    return TrouterService;\r\n}());\r\nexports.TrouterService = TrouterService;\r\nfunction createTrouterService(logger) {\r\n    return new TrouterService(logger);\r\n}\r\nexports.createTrouterService = createTrouterService;\r\nfunction getTrouterServiceVersion() {\r\n    return Constants_1.CLIENT_VERSION;\r\n}\r\nexports.getTrouterServiceVersion = getTrouterServiceVersion;\r\nfunction replaceTrouterUrlBase(existingUrl, newBase) {\r\n    var schemaSepPos = existingUrl.indexOf('://');\r\n    if (schemaSepPos >= 0) {\r\n        var pathSepPos = existingUrl.indexOf('/', schemaSepPos + 3);\r\n        if (pathSepPos >= 0) {\r\n            return newBase + existingUrl.substr(pathSepPos);\r\n        }\r\n    }\r\n    return '';\r\n}\r\nexports.replaceTrouterUrlBase = replaceTrouterUrlBase;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_20__;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// tstrouter.js","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\nimport { LogProvider } from './Interfaces';\r\n\r\n/**\r\n * Logging function\r\n */\r\nexport type LogFunc = (msg: string) => void;\r\n\r\n/**\r\n * Simple logger\r\n */\r\nexport class Logger {\r\n    public constructor(private name, private logger: LogProvider) {}\r\n\r\n    public debug(message: string) {\r\n        this.logger.debug(`[${this.name}] ${message}`);\r\n    }\r\n    public info(message: string) {\r\n        this.logger.info(`[${this.name}] ${message}`);\r\n    }\r\n    public warn(message: string) {\r\n        this.logger.warn(`[${this.name}] ${message}`);\r\n    }\r\n    public error(message: string) {\r\n        this.logger.error(`[${this.name}] ${message}`);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/Logger.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\nexport const constants = {\r\n    TROUTER_INIT: 'trouterinit',\r\n    TROUTER_READY_EVENT: 'trouterReadyEvent',\r\n    TROUTER_READY_TIMEOUT: 'trouterReadyTimeout',\r\n    TROUTER_TOKEN_REQUEST: 'trouterTokenRequest',\r\n    TROUTER_TOKEN_GET_SUCCEEDED: 'trouterTokenGetSucceeded',\r\n    TROUTER_TOKEN_GET_FAILED: 'trouterTokenGetFailed',\r\n    TROUTER_RECONNECTING: 'trouterReconnecting',\r\n    RENEWAL: 'renewal',\r\n    NEW_CONNECTION: 'newConnection',\r\n    ENDPOINT_REGISTRATION_FAILED: 'endpointRegistrationFailed'\r\n};\r\n\r\nexport const CLIENT_VERSION: string = '2022.35.01.29';\r\nexport const HANDLED_MESSAGE_ACK = 200;\r\nexport const UNHANDLED_MESSAGE_ACK = 404;\r\nexport const FAILED_MESSAGE_ACK = 500;\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/Constants.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Type definitions for Trouter JavaScript Client 2022.35.01.29\r\n */\r\n\r\n// tslint:disable:interface-name\r\n\r\n\r\n/**\r\n * Trouter HTTP-like headers\r\n */\r\nexport type Headers = {\r\n    [name: string]: string;\r\n};\r\n\r\n/**\r\n * Trouter HTTP-like request (service -> Trouter -> app)\r\n *\r\n * Represents one incoming request received by Trouter Client. Its content is\r\n * mostly a verbatim copy of what was sent by the originating service to\r\n * Trouter Service.\r\n */\r\nexport interface Request {\r\n    readonly id: number;        /// Request/response ID, useful for\r\n                                /// logging/debugging/tracing purposes\r\n    readonly method: string;    /// HTTP method (GET, POST, ...)\r\n    readonly path: string;      /// HTTP path, including listener's prefix and\r\n                                /// any provided query parameters\r\n    readonly headers: Headers;  /// HTTP headers\r\n    readonly body: string;      /// HTTP body/content\r\n}\r\n\r\n/**\r\n * Possible return values of Response.send()\r\n */\r\nexport const enum SendResponseResult {\r\n    OK           = 0,  /// Response accepted, will be sent back to the service\r\n    Timeout      = 1,  /// Too late, 504 (Timeout) has been already sent back\r\n    Duplicate    = 2,  /// send() was called multiple times on one Response\r\n    Incomplete   = 3,  /// Mandatory parameters (status code) are not set\r\n    Disconnected = 4   /// Trouter connection dropped, cannot reply now\r\n}\r\n\r\n/**\r\n * Trouter HTTP-like response (app -> Trouter -> service)\r\n *\r\n * Represents one outgoing response to be sent by Trouter Client. Always set\r\n * the status code, add any extra headers or body, then call `send()`.\r\n */\r\nexport interface Response {\r\n    readonly id: number;  /// Request/response ID, useful for\r\n                          /// logging/debugging/tracing purposes\r\n    status: number;       /// HTTP status code (200, 404, ...), mandatory\r\n    headers: Headers;     /// HTTP headers, optional\r\n    body: string;         /// HTTP body/content, optional\r\n\r\n    /**\r\n     * Send the response\r\n     *\r\n     * Trouter will add just a few of its own headers and otherwise forward the\r\n     * response to the originating service that had sent the request.\r\n     *\r\n     * A successful return value `OK` means only that the response message has\r\n     * been accepted and prepared for sending back. The actual transmission will\r\n     * happen asynchronously later and might still fail for various reasons.\r\n     *\r\n     * @return SendResponseResult.OK if successful, other code if not\r\n     */\r\n    send(): SendResponseResult;\r\n}\r\n\r\n/**\r\n * Information about the current Trouter connection\r\n *\r\n * Received in `Listener.onTrouterConnected()` every time the connection\r\n * parameters change.\r\n */\r\nexport interface ConnectionInfo {\r\n    readonly baseEndpointUrl: string;   /// Base URL used for routing messages\r\n                                        /// from services to this client\r\n                                        /// instance, i.e. not specific to\r\n                                        /// a particular listener\r\n    readonly newEndpointUrl: boolean;   /// Tells if this `baseEndpointUrl` is\r\n                                        /// different from the previous one and\r\n                                        /// therefore if any dependent service\r\n                                        /// registrations need to be updated to\r\n                                        /// know where to send data\r\n    readonly c2cUrlBase: string;        /// Base URL prefix used for routing\r\n                                        /// messages from clients to this client\r\n                                        /// - replace the URL base (protocol +\r\n                                        /// hostname) of `baseEndpointUrl` (or\r\n                                        /// another per-listener endpoint URL)\r\n                                        /// with this value to obtain the full\r\n                                        /// client-to-client URL\r\n    readonly clientId: string;          /// ID of this Trouter client, should\r\n                                        /// stay the same between reconnects\r\n    readonly connectionId: string;      /// ID of the current Trouter\r\n                                        /// connection, can change between\r\n                                        /// reconnects\r\n    readonly connectionTtlSec: number;  /// Expected lifetime of the current\r\n                                        /// connection (ID) in seconds, as\r\n                                        /// determined by Trouter Service\r\n}\r\n\r\n/**\r\n * Trouter listener\r\n *\r\n * Interface implemented by application to receive Trouter callbacks\r\n */\r\nexport interface Listener {\r\n    /**\r\n     * Called when Trouter connection is (re-)established\r\n     *\r\n     * This is important mostly because of the `endpointUrl` as the URL where\r\n     * messages are sent to by the originating service(s). Only after receiving\r\n     * this callback and learning the Endpoint URL can the application register\r\n     * the established channel for receiving messages.\r\n     *\r\n     * The Endpoint URL is intended for service-to-service communication, only\r\n     * whitelisted authenticated services can access it and initiate Trouter\r\n     * requests. Use `c2cUrlBase` from `connectionInfo` to obtain a similar URL\r\n     * for client-to-client communication - see also `replaceTrouterUrlBase()`.\r\n     *\r\n     * @param endpointUrl    A URL used for routing messages from services to\r\n     *                       this listener\r\n     * @param connectionInfo Additional Trouter connection information\r\n     */\r\n    onTrouterConnected(endpointUrl: string, connectionInfo: ConnectionInfo): void;\r\n\r\n    /**\r\n     * Called when Trouter connection drops\r\n     *\r\n     * No incoming requests can be received for now, no outgoing responses can\r\n     * be sent either. Trouter client will reconnect as soon as possible.\r\n     *\r\n     * This state is most commonly caused by some temporary network issues\r\n     * (switching from Wi-Fi to a wired network, bad signal etc.) or things\r\n     * like a sleep/resume transition on the device.\r\n     *\r\n     * @note This method does not need to be implemented.\r\n     */\r\n    onTrouterDisconnected?(): void;\r\n\r\n    /**\r\n     * Called when Trouter receives a request intended for this listener\r\n     *\r\n     * Application can inspect the contents of the incoming message by looking\r\n     * at `request`, then fill in the outgoing `reponse` and send it back by\r\n     * invoking its method `send()`.\r\n     *\r\n     * This can be done both synchronously when this method is called, or at a\r\n     * later time asynchronously from any other context, if the application\r\n     * stores the `response` object aside.\r\n     *\r\n     * In any case, a response ought to be sent to every received request. If\r\n     * it is not, Trouter client will send a 504 (Timeout) message itself after\r\n     * a configured time, but that will needlessly show up as an error on the\r\n     * service side, even if you have processed the message successfully.\r\n     *\r\n     * For most simple applications, just sending a response with 200 (OK) right\r\n     * away should be good enough.\r\n     *\r\n     * @param request  Incoming request object (read-only)\r\n     * @param response Outgoing response object (to be filled in and sent)\r\n     */\r\n    onTrouterRequest(request: Request, response: Response): void;\r\n\r\n    /**\r\n     * Called when some messages have been dropped on Trouter\r\n     *\r\n     * This can be called at any time by Trouter server\r\n     *\r\n     * Some of the examples of the message loss:\r\n     * The message loss might occur when client queues got full and messages are rejected\r\n     * The message to be delivered are already expired.\r\n     *\r\n     * @param flowTags String array of flows representing the type of messages being lost\r\n     *\r\n     * returns true in case that the flow tags has been processed and the information can be dropped\r\n     */\r\n    onTrouterMessageLoss?(flowTags: string[]): boolean;\r\n\r\n    /**\r\n     * Called when the user activity state has been delivered and accepted by the service\r\n     * The value of correlation vector will be extended,\r\n     * and so only the prefix passed in should be compared, if necessary.\r\n     *\r\n     * @param cv Correlation vector of user activity state update.\r\n     */\r\n    onTrouterUserActivityStateAccepted?(cv: string): void;\r\n}\r\n\r\n/**\r\n * States that a user can reach\r\n *\r\n * Use with the `setUserActivityState()` method.\r\n */\r\nexport enum UserActivityState {\r\n    Unknown  = 0,  /// Initial state\r\n    Active   = 1,  /// User is active according to the application\r\n    Inactive = 2   /// User is not active according to the application\r\n}\r\n\r\n/**\r\n * Trouter client\r\n *\r\n * Use to register and unregister your listeners. Calls are forwarded to the\r\n * underlying implementation, whatever that is on the current platform.\r\n */\r\nexport interface Client {\r\n    /**\r\n     * Register a listener\r\n     *\r\n     * The specified listener will now be notified about any Trouter events. An\r\n     * initial `onTrouterConnected()` callback will be received automatically\r\n     * right away if Trouter is already connected, so that the listener can\r\n     * learn the Endpoint URL etc.\r\n     *\r\n     * There can be only one listener registered for each `path`, but the path\r\n     * can naturally comprise of multiple levels separated with a slash. The\r\n     * listener with the longest, most specific matching path prefix for an\r\n     * incoming message will be invoked to handle it.\r\n     *\r\n     * If a matching listener is found, the incoming message is not passed\r\n     * further to any registered legacy MessageHandler callbacks.\r\n     *\r\n     * This method is very light-weight and can be called at any time.\r\n     *\r\n     * @param listener Listener object to register\r\n     * @param path     HTTP-like relative path to register (e.g. '/foo')\r\n     * @return `true` if successfully registered,\r\n     *         `false` if there already is a registered listener for this exact\r\n     *         path or if the given path is invalid\r\n     */\r\n    registerListener(listener: Listener, path: string): boolean;\r\n\r\n    /**\r\n     * Unregister a listener\r\n     *\r\n     * The specified listener will not be notified about any Trouter events\r\n     * anymore. `onTrouterDisconnected()` will not be called automatically\r\n     * during unregistration.\r\n     *\r\n     * All registrations of this `Listener` object (i.e. possibly more than one,\r\n     * registered with different paths) will be unregistered.\r\n     *\r\n     * This method is very light-weight and can be called at any time.\r\n     *\r\n     * @param listener Listener object to unregister\r\n     * @return `true` if successfully unregistered,\r\n     *         `false` if not registered in the first place\r\n     */\r\n    unregisterListener(listener: Listener): boolean;\r\n\r\n    /**\r\n     * Set user activity state\r\n     *\r\n     * Sets the state of the user activity that is then sent to trouter if it\r\n     * is different from the previous state (including Unknown), or upon\r\n     * reconnect, or under other circumstances fully in the discretion of the\r\n     * client. Can throw an instance of Error if that's not possible.\r\n     *\r\n     * @param state The new state of user activity\r\n     * @param correlationVector Correlation vector for end to end tracking\r\n     */\r\n    setUserActivityState(state: UserActivityState, correlationVector?: string): void;\r\n}\r\n\r\n\r\n// tslint:disable:no-any\r\n\r\nexport type LogProvider = {\r\n    log(...message: any[]): void;\r\n    warn(...message: any[]): void;\r\n    error(...message: any[]): void;\r\n    debug(...message: any[]): void;\r\n    info(...message: any[]): void;\r\n};\r\n\r\n/** Headers for HTTP request */\r\nexport class HttpHeaders {\r\n    [name: string]: string;\r\n}\r\n\r\nexport type TrouterMessage = {\r\n    eventId: number | null;\r\n    url?: string;\r\n    headers?: HttpHeaders;\r\n    body?: TrouterRequestBody;\r\n    rawBody?: string;\r\n};\r\n\r\nexport type TrouterRequestBody = {\r\n    evt?: number;\r\n    eventId?: number;\r\n    gp?: string;\r\n    nsp?: string;\r\n};\r\n\r\n\r\nexport interface MessageHandler {\r\n    handleMessage(message: TrouterMessage): HandleMessageResult | undefined;\r\n}\r\n\r\nexport interface HandleMessageResult {\r\n    /**\r\n     * @deprecated, return 'undefined' from MessageHandler.handleMessage\r\n     * if you want to indicate the message was not handled\r\n     */\r\n    isHandled?: boolean;\r\n\r\n    resultCode: number;\r\n    responseBody?: string;\r\n    responseHeaders?: HttpHeaders;\r\n}\r\n\r\nexport enum TrouterState {\r\n    /** Initial state */\r\n    Unknown = 0,\r\n\r\n    /** ready to work */\r\n    Connected = 2,\r\n\r\n    /** waiting for 'connected' event */\r\n    Disconnected = 3,\r\n\r\n    /** waiting for 'register' from second connection */\r\n    Switching = 9\r\n}\r\n\r\nexport interface TelemetryEvent {\r\n    name: string;\r\n    properties: {\r\n        [name: string]: {\r\n            value: string | number | boolean | undefined;\r\n        }\r\n    };\r\n}\r\n\r\nexport interface ITelemetrySender {\r\n    logEvent(clientEvent: TelemetryEvent): void;\r\n}\r\n\r\n/**\r\n * Called once token is required.\r\n * Trouter can cache token - it's defined by config option in TrouterSettings\r\n */\r\nexport type SkypeTokenProvider = (forceRefresh: boolean) => Promise<string>;\r\n\r\n/**\r\n * Stores timeout values to simplify switch between in-call and normal modes\r\n */\r\nexport interface TimeoutOptions {\r\n    /** Timeout for connection to trouter service, i.e. for whole allocation + socket.io connection (all transports together) */\r\n    connectionTimeoutMs: number;\r\n\r\n    /** Timeout for fetch requests, i.e. for allocation, health, registration, unregistration */\r\n    fetchTimeoutMs: number;\r\n\r\n    /** Interval between ping requests */\r\n    pingTimeoutMs: number;\r\n\r\n    /** Timeout for waiting for pong response (websockets) */\r\n    pongTimeoutMs: number;\r\n\r\n    /** Maximal value for backoff timeout */\r\n    maxBackoffMs: number;\r\n\r\n    /** Timeout for handling of an incoming request before a 504 response is sent back automatically */\r\n    requestTimeoutMs: number;\r\n\r\n    /** For how long to wait for response to activity update event. */\r\n    userActivityResponseTimeoutMs?: number;\r\n}\r\n\r\nexport interface TrouterSettings {\r\n    /**\r\n     * GO allocation url of trouter for V4 - like https://go.trouter.teams.microsoft.com/v4/a\r\n     */\r\n    trouterServiceUrl: string;\r\n    version: string;\r\n    productName: string;\r\n    /**\r\n     * aka Client Correlation ID - for correlation between Trouter and other components. It makes sense to persist it if possible\r\n     */\r\n    sessionId: string;\r\n    /**\r\n     * Environment for telemetry, e.g. \"latest\", \"liveint\", \"dogfood\", \"prod\"\r\n     */\r\n    environment: string;\r\n\r\n    /**\r\n     * full URL of EDF registrar service (like https://prod.registrar.skype.com/v2/registrations), if left undefined then Trouter does not\r\n     * register its connection and other registration params can be left undefined as well\r\n     */\r\n    registrarServiceUrl?: string;\r\n    /** mandatory parameter if registration is required */\r\n    registrationId?: string;\r\n    /**\r\n     * @deprecated and will be removed in next versions. Use maxRegistrationTimeInMs instead\r\n     */\r\n    registrarRefreshTimeoutInMs?: number;\r\n    /** mandatory parameter if registration is required */\r\n    pnhAppId?: string;\r\n    /** mandatory parameter if registration is required */\r\n    pnhTemplate?: string;\r\n    /** optional product context to set with the registration */\r\n    pnhProductContext?: string;\r\n    /** optional context to set with the Trouter transport registration */\r\n    pnhContext?: string;\r\n    /** mandatory parameter if registration is required */\r\n    platform?: string;\r\n    /** mandatory parameter if registration is required */\r\n    platformUIVersion?: string;\r\n    /**\r\n     * @deprecated and will be removed in next versions. Use maxRegistrationTimeInMs instead\r\n     */\r\n    registrarTtlInSeconds?: number;\r\n    /** optional, if set - limits registration TTL in EDF. If not - value from Trouter server is used */\r\n    maxRegistrationTimeInMs?: number;\r\n\r\n    /** Timeouts for normal mode */\r\n    timeoutOptions?: TimeoutOptions;\r\n    /**\r\n     * For historical reasons it exists here and in 'timeoutOptions', but if 'timeoutOptions' is\r\n     * specified - this value will be ignored\r\n     */\r\n    trouterConnectTimeoutInMs?: number;\r\n\r\n    /** Timeout for being in 'in-call' mode, i.e. with aggressive ping/retry policy. If it's zero/undefined - in-call mode is disabled */\r\n    incallModeTimeoutMs?: number;\r\n    /** Timeouts for in-call mode, i.e. with more aggressive timeouts/reconnect policy */\r\n    incallTimeoutOptions?: TimeoutOptions;\r\n\r\n    /** Flag to disable internal token cache and always call provided SkypeTokenProvider */\r\n    disableInternalSkypeTokenCache?: boolean;\r\n\r\n    /** After how long to send the user activity second time after reconnect. */\r\n    userActivitySecondResendDelayMs?: number;\r\n\r\n    retryLimitOnTokenFetch?: number;\r\n}\r\n\r\nexport interface TrouterTelemetrySettings {\r\n    enabled: boolean;\r\n\r\n    trouter_js_client_connected?: boolean;\r\n    trouter_js_client_disconnected?: boolean;\r\n    trouter_js_client_error?: boolean;\r\n    trouter_js_client_progress?: boolean;\r\n    trouter_js_client_response?: boolean;\r\n    trouter_js_client_request?: boolean;\r\n    trouter_js_client_registration?: boolean;\r\n    trouter_js_client_unregistration?: boolean;\r\n    trouter_js_client_check_connection?: boolean;\r\n\r\n    /** Send trouter_js_client_progress once this number of steps is accumulated */\r\n    numberOfStepsToMaintain?: number;\r\n    /** Send trouter_js_client_progress with current steps after a given timeout */\r\n    sendProgressTimeoutSecs?: number;\r\n\r\n    /**\r\n     * true if health requests should be sent in telemetry events\r\n     */\r\n    logHealthCheckError?: boolean;\r\n    /**\r\n     * True if ping errors should be sent in telemetry events\r\n     */\r\n    logSendPingError?: boolean;\r\n    /**\r\n     * @deprecated and will be removed in next versions\r\n     */\r\n    maxBackoffInMs?: number;\r\n}\r\n\r\nexport interface TrouterTelemetryConfig {\r\n    eventLogger: ITelemetrySender;\r\n    settings: TrouterTelemetrySettings;\r\n}\r\n\r\n/**\r\n * Connection parameters cache\r\n *\r\n * Implement to allow saving connection parameters across sessions (e.g. in\r\n * window.localStorage) and thus retaining the same Trouter URL longer.\r\n */\r\nexport interface IConnectionCache {\r\n    /** Called when the library is asking the host app for any cached connection data */\r\n    onGetTrouterConnectionCache(): Promise<string | undefined>;\r\n    /** Called when the library has updated data to be externally cached */\r\n    onSetTrouterConnectionCache(content: string): void;\r\n}\r\n\r\nexport interface ITrouterServiceConfig {\r\n    trouterSettings: TrouterSettings;\r\n    skypeTokenProvider: SkypeTokenProvider;\r\n    telemetryConfig: TrouterTelemetryConfig;\r\n    connectionCache?: IConnectionCache;\r\n    registrationStateCallbackForAcsDoNotUse?(isRegistered: boolean): void;\r\n}\r\n\r\n/**\r\n * Information about trouter connection\r\n */\r\nexport interface IConnectionInfo {\r\n    /** Secure Trouter url at which client can be reached */\r\n    url: string;\r\n\r\n    /** Return connection TTL, i.e. number of seconds till expiration */\r\n    getRemainingTtlInSec(): number;\r\n}\r\nexport type StateChangedListener = (state: TrouterState, url: string) => void;\r\n\r\nexport type TrouterConnectionListener = (state: TrouterState, info?: IConnectionInfo) => void;\r\n\r\nexport interface ITrouterServiceBase extends Client {\r\n    start(options: ITrouterServiceConfig): void;\r\n    stop(dontUnregister?: boolean): void;\r\n\r\n    setEcsConfig(fullEcsData: {}): Promise<void>;\r\n\r\n    /**\r\n     * Can be called in two cases:\r\n     * - either network is down (disconnectDetected === true) - trouter will verify that\r\n     *      connection is really down and will start to restoring it;\r\n     * - network is restored (disconnectDetected === false) - trouter will try to restore connection immediately;\r\n     */\r\n    checkConnection(disconnectDetected?: boolean): void;\r\n\r\n    /**\r\n     * Resends endpoint registration to Registrar if registration is being\r\n     * handled by the Trouter Client internally.\r\n     * Can throw an instance of Error if that's not possible.\r\n     */\r\n    resendRegistration(): Promise<void>;\r\n\r\n    // Everything below is legacy API, deprecated, do not use\r\n    registerMessageHandler(handler: MessageHandler): void;\r\n    clearMessageHandlers(): void;\r\n    state(): TrouterState;\r\n    getTrouterUrlAsync(): Promise<string>;\r\n    onStateChanged(callback: StateChangedListener | undefined): void;\r\n    offStateChanged(callback: StateChangedListener): boolean;\r\n    addCallback(callback: TrouterConnectionListener): void;\r\n    removeCallback(callback: TrouterConnectionListener): boolean;\r\n}\r\n\r\n/**\r\n * Creates instance of trouter implementation\r\n */\r\nexport declare function createTrouterService(logger: LogProvider): ITrouterServiceBase;\r\n\r\n/**\r\n * Creates instance of trouter implementation\r\n */\r\nexport declare function getTrouterServiceVersion(): string;\r\n\r\n/**\r\n * Helper function to replace URL base (protocol + hostname)\r\n *\r\n * Useful when converting Trouter Endpoint URL to its client-to-client variant\r\n * with `ConnectionInfo.c2cUrlBase`.\r\n */\r\nexport declare function replaceTrouterUrlBase(existingUrl: string, newBase: string): string;\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/Interfaces.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\n// tslint:disable:no-any\r\n// tslint:disable:export-name\r\n// tslint:disable:function-name\r\n\r\nexport function toJson(obj: any): string {\r\n    try {\r\n        return JSON.stringify(obj);\r\n    } catch (error) {\r\n        return `Unable to serialize object of type ${typeof obj}`;\r\n    }\r\n}\r\n\r\nexport function calculateTtlInSec(expirationTsInSec: number | undefined): number {\r\n    const now = Math.round(new Date().getTime() / 1000);\r\n\r\n    return expirationTsInSec !== undefined && expirationTsInSec > now\r\n        ? expirationTsInSec - now\r\n        : 0;\r\n}\r\n\r\nexport function calculateExpireTsInSec(ttlInSec: number): number {\r\n    return Math.round(new Date().getTime() / 1000) + ttlInSec;\r\n}\r\n\r\n/** Wrapper to send request with specified timeout */\r\nexport async function fetchWithTimeout(request: Request, timeoutMs: number): Promise<Response> {\r\n    let timeoutId: number | undefined;\r\n    const fetchPromise = new Promise<Response>((resolve, reject) => {\r\n        fetch(request).then((response) => {\r\n            clearTimeout(timeoutId);\r\n            resolve(response);\r\n        }).catch((error) => {\r\n            clearTimeout(timeoutId);\r\n            reject(error);\r\n        });\r\n    });\r\n    if (timeoutMs !== 0) {\r\n        const timeoutPromise = new Promise<Response>((resolve, reject) => {\r\n            // We make a compromise on how much information to show in the error message.\r\n            // Having the URL there is useful, but including any query parameters is both\r\n            // cumbersome (millions of different errors in telemetry) and unsafe (secret\r\n            // fields that would need to be redacted). \"Origin\" and \"pathname\" achieve that.\r\n            const url = new URL(request.url);\r\n            const error = new Error(`${request.method} ${url.origin}${url.pathname} timed out`);\r\n            // tslint:disable-next-line:no-string-based-set-timeout - false positive on 'reject'\r\n            timeoutId = setTimeout(reject, timeoutMs, error);\r\n            });\r\n\r\n        return Promise.race([fetchPromise, timeoutPromise]);\r\n    }\r\n\r\n    return fetchPromise;\r\n}\r\n\r\n/***\r\n * Correlation vector\r\n */\r\nexport class CorrelationVector {\r\n    private base: string;\r\n    private extension: number;\r\n\r\n    private constructor(correlationVector?: string) {\r\n        this.base = (correlationVector !== undefined) ? correlationVector : this.createCorrelationVectorBase();\r\n        this.extension = 0;\r\n    }\r\n\r\n    public static extend(correlationVector?: string): CorrelationVector {\r\n        return new CorrelationVector(correlationVector);\r\n    }\r\n\r\n    public increase() {\r\n        this.extension++;\r\n    }\r\n\r\n    public value(): string {\r\n        return `${this.base}.${this.extension}`;\r\n    }\r\n\r\n    private createCorrelationVectorBase(): string {\r\n        const length = 21;\r\n        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0987654321/+';\r\n        const endChars = 'AQgw';\r\n        let result = '';\r\n        for (let i = 0; i < length; i++) {\r\n            // tslint:disable-next-line:insecure-random\r\n            result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n        // tslint:disable-next-line:insecure-random\r\n        result += endChars.charAt(Math.floor(Math.random() * endChars.length));\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * Simplify calculation of time intervals\r\n */\r\nexport class Timespan {\r\n    private start: number;\r\n\r\n    constructor() {\r\n        this.start = Date.now();\r\n    }\r\n\r\n    /**\r\n     * Returns number of milliseconds from start\r\n     */\r\n    public get duration(): number {\r\n        return Date.now() - this.start;\r\n    }\r\n\r\n    /**\r\n     * Returns start time\r\n     */\r\n    public get startTime() {\r\n        return this.start;\r\n    }\r\n\r\n    /**\r\n     * Reset start of interval to current timestamp\r\n     */\r\n    public reset() {\r\n        this.start = Date.now();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/Common.ts","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 4\n// module chunks = 0","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n * Internal type definitions for Trouter JavaScript Client\r\n */\r\n\r\nimport { calculateTtlInSec } from './Common';\r\nimport {\r\n    HttpHeaders, IConnectionCache, IConnectionInfo, ITelemetrySender, SendResponseResult,\r\n    TimeoutOptions, TrouterTelemetrySettings\r\n} from './Interfaces';\r\n\r\n// tslint:disable:no-any\r\n// tslint:disable:interface-name\r\n\r\nexport interface ITrouterRequest {\r\n    startTS: number;\r\n    url: string;\r\n    shortUrl: string;\r\n    body: string;\r\n    headers: HttpHeaders;\r\n    id: number;\r\n    method: string;\r\n    correlationVector: string;\r\n}\r\n\r\nexport interface IMessageLossIndicator {\r\n    /** flow tag representing the type of lost messages */\r\n    tag: string;\r\n\r\n    /**\r\n     * etag of the particular flow tag, the etag is used to identify the\r\n     * flow tag on the server when sending trouter.processed_message_loss event\r\n     * to be able to determine if new message loss happened after this one or not\r\n     */\r\n    etag: string;\r\n}\r\n\r\n/**\r\n * Response to downstream service\r\n */\r\nexport interface ITrouterResponse {\r\n    writeHead(status: number, headers?: HttpHeaders);\r\n    write(chunk: string);\r\n    end(chunk?: string): SendResponseResult;\r\n}\r\n\r\n/**\r\n * Data to generate TC query param and for telemetry\r\n */\r\nexport interface IClientInfo {\r\n    /** User-Agent string, for telemetry tracking */\r\n    ua: string;\r\n    /** Application client version, for telemetry tracking */\r\n    v: string;\r\n    /** Trouter client version */\r\n    cv?: string;\r\n}\r\n\r\n/**\r\n * Socket.IO (aka \"transport\") options\r\n */\r\nexport interface ISocketIoOptions {\r\n    'force new connection'?: boolean;\r\n    'reconnect'?: boolean;\r\n    'query'?: string;\r\n    /** timeout for each transport */\r\n    'connect timeout'?: number;\r\n    transports?: string[];\r\n    /**\r\n     * Timeout for waiting for ACK from server for trouter response (i.e. POST HTTP request) in XHR mode\r\n     */\r\n    ackTimeoutMs: number;\r\n}\r\n\r\n/**\r\n * EDF registrar options\r\n */\r\nexport interface IRegistrarOptions {\r\n    registrarUrl: string;\r\n    registrationId: string;\r\n\r\n    pnhAppId: string;\r\n    platform: string;\r\n    pnhTemplateKey: string;\r\n    platformUIVersion: string;\r\n    productContext?: string;\r\n    context: string;\r\n\r\n    /** If set - limits registration TTL in EDF. If not - value from Trouter is used */\r\n    registrarTtlSec?: number;\r\n}\r\n\r\n/**\r\n * Options passed from outside\r\n */\r\nexport interface IConfiguration {\r\n    clientInfo: IClientInfo;\r\n\r\n    eventLogger: ITelemetrySender;\r\n    telemetrySettings: TrouterTelemetrySettings;  // Client telemetry configuration settings\r\n\r\n    clientCorrelationID: string;  // Client telemetry correlation ID, for correlation between Trouter and other components\r\n    environment: string;  // Environment for telemetry, e.g. \"latest\", \"liveint\", \"dogfood\", \"prod\"\r\n\r\n    ioOptions?: ISocketIoOptions;  // Socket.IO options\r\n    io?: any;  // Socket.IO override; for tests only\r\n}\r\n\r\n/**\r\n * Options passed from outside\r\n */\r\nexport interface ITrouterOptions extends IConfiguration {\r\n    endpointId?: string;\r\n    trouterUrl: string;\r\n    registration?: IRegistrarOptions;\r\n\r\n    /**\r\n     * timeouts for normal mode\r\n     */\r\n    timeoutOptions: TimeoutOptions;\r\n\r\n    /**\r\n     * timeouts for in-call mode, i.e. with more aggressive timeouts/reconnect policy\r\n     */\r\n    incallTimeoutOptions: TimeoutOptions;\r\n\r\n    /**\r\n     * Timeout for being in 'in-call' mode, i.e. with aggressive ping/retry policy. If it's zero - in-call mode is disabled\r\n     */\r\n    incallModeTimeoutMs: number;\r\n\r\n    /**\r\n     * Delay for keeping a previous connection open after connection switching.\r\n     */\r\n    lingeringConnectionDelayMs: number;\r\n\r\n    /**\r\n     * After how long to send the user activity second time after reconnect.\r\n     */\r\n    userActivitySecondResendDelayMs: number;\r\n\r\n    /**\r\n     * How soon after a connection is established must a disconnect packet with\r\n     * the \"dup\" reason come to be recognized as a \"duplicate loop/storm\" with\r\n     * another client sharing the same connection cache and trigger recovery.\r\n     */\r\n    duplicateDisconnectThresholdMs: number;\r\n\r\n    connectionCache?: IConnectionCache;\r\n\r\n    /**\r\n     * Optional setting to put a limit on maximum number of token fetch retries\r\n     */\r\n    retryLimitOnTokenFetch?: number;\r\n\r\n    registrationStateCallback?(isRegistered: boolean): void;\r\n}\r\n\r\n/**\r\n * Information about server connection\r\n */\r\nexport class ServerState implements IConnectionInfo {\r\n    public constructor(\r\n        /** Trouter client connection ID */\r\n        public connectionId: string,\r\n        /** Trouter client connected client ID */\r\n        public connectedClientId: string,\r\n        /** window.location.hostname */\r\n        public domId: string,\r\n        /** Unsecure Trouter url at which client can be reached */\r\n        public unsecureUrl: string,\r\n        /** Secure Trouter url at which client can be reached */\r\n        public url: string,\r\n        /** URL base to use for client-to-client requests */\r\n        public c2cUrlBase: string,\r\n        /** expiration timestamp for connection in seconds */\r\n        public expirationTsSec?: number\r\n    ) {\r\n    }\r\n\r\n    /** Return connection TTL, i.e. number of seconds till expiration */\r\n    public getRemainingTtlInSec(): number {\r\n        return calculateTtlInSec(this.expirationTsSec);\r\n    }\r\n}\r\n\r\n/**\r\n * Interface for trouter URL promise resolver\r\n */\r\nexport interface ITrouterUrlPromise {\r\n    resolveUrl(url: string): void;\r\n    resetUrl(): void;\r\n}\r\n\r\nexport enum UserActivityEventReason {\r\n    Unknown = 0,\r\n    Modified = 1,\r\n    Snapshot = 2,\r\n    Connected = 3\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/InternalInterfaces.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\n// tslint:disable:no-any\r\n// tslint:disable:no-unsafe-any\r\n// tslint:disable:strict-boolean-expressions\r\n// tslint:disable:max-classes-per-file\r\n// tslint:disable:promise-function-async\r\n\r\nimport { createRegistrarClient, IRegistrarClient, IRegistrarClientOptions } from '@skype/tsregistrar';\r\nimport { Promise } from 'es6-promise';\r\nimport { calculateExpireTsInSec, calculateTtlInSec, fetchWithTimeout, Timespan, toJson } from './Common';\r\nimport { ClientEventName, ConnectionTracker, Properties, ResponseData } from './ConnectionTracker';\r\nimport { CLIENT_VERSION } from './Constants';\r\nimport { ExponentialBackoff } from './ExponentialBackoff';\r\nimport {\r\n    HttpHeaders, LogProvider, SendResponseResult, SkypeTokenProvider, TimeoutOptions,\r\n    UserActivityState\r\n} from './Interfaces';\r\nimport {\r\n    IClientInfo, IMessageLossIndicator, ISocketIoOptions, ITrouterOptions, ITrouterRequest, ITrouterResponse,\r\n    ServerState, UserActivityEventReason\r\n} from './InternalInterfaces';\r\nimport { Logger } from './Logger';\r\nimport { IWorker, TrouterFsm } from './TrouterFsm';\r\nimport { UserActivityObject } from './TrouterManager';\r\n\r\n// This is the current API version\r\nconst VERSION: string = 'v4';\r\n\r\n// Default value for registration timeout\r\nconst DEFAULT_REGISTRATION_TIMEOUT_SEC = 3600;\r\n\r\n// tslint:disable:no-var-requires\r\n// tslint:disable:no-require-imports\r\n// tslint:disable-next-line:no-reserved-keywords\r\ndeclare function require(arg: string): any;\r\nconst io: any = require('./socket.io');\r\n\r\n/**\r\n * Stub for IClientInfo\r\n */\r\nclass ClientInfo implements IClientInfo {\r\n    public cv: string = CLIENT_VERSION;\r\n    public ua: string = '';\r\n    public hr: string = '';\r\n    public v: string = '';\r\n}\r\n\r\n/**\r\n * Stub for ISocketIoOptions\r\n */\r\nclass SocketIoOptions implements ISocketIoOptions {\r\n    public 'force new connection'?: boolean = true;\r\n    public 'reconnect'?: boolean = false;\r\n    public 'query'?: string = '';\r\n    public ackTimeoutMs = 5000;\r\n}\r\n\r\n/**\r\n * Interface to work with SocketIO library\r\n */\r\ninterface ISocketIo {\r\n    socketNumber: number;\r\n    socket: any;\r\n\r\n    emit(event: string, handler: any): void;\r\n    emit(event: string, args: object, handler: any): void;\r\n    on(event: string, handler: any): void;\r\n    disconnect(): void;\r\n    send(msg: string);\r\n    removeAllListeners(event: string);\r\n}\r\n\r\n/**\r\n * Params received during handshake\r\n */\r\ninterface ITrouterConnectedEventArgs {\r\n    // Time it took Trouter to perform the handshake request internally, in milliseconds. Number in quotes, e.g. \"123\"\r\n    dur: string;\r\n    // Connection valid TTL in seconds as returned by service.\r\n    ttl: number;\r\n}\r\n\r\n/**\r\n * Params received during trouter.reconnect event\r\n */\r\ninterface ITrouterReconnectEventArgs {\r\n    // Reconnect target: self, host or global\r\n    target: string;\r\n    // Url of the deployment to reconnect to\r\n    url?: string;\r\n}\r\n\r\n/**\r\n * Params received on message lost event\r\n */\r\ninterface ITrouterMessageLossEventArgs {\r\n    droppedIndicators: IMessageLossIndicator[];\r\n}\r\n\r\ntype TrouterRequestCallbackType = (val: string) => void;\r\n\r\nconst cvHeader: string = 'MS-CV';\r\n\r\n/**\r\n * Request from downstream service\r\n */\r\nclass TrouterRequest implements ITrouterRequest {\r\n    public startTS: number;\r\n    public url: string;\r\n    public shortUrl: string;\r\n    public body: string;\r\n    public headers: HttpHeaders;\r\n    public id: number;\r\n    public method: string;\r\n    public replied: boolean;\r\n    public timedout: boolean;\r\n    public timeoutTimerId: number;\r\n\r\n    private dataCallback: TrouterRequestCallbackType | undefined;\r\n    private cvCounter: number = 0;\r\n    private receivedCv: string;\r\n\r\n    public constructor(requestJson: string) {\r\n        const json = JSON.parse(requestJson);\r\n\r\n        this.startTS = json.hasOwnProperty('startTS') ? json.startTS : 0;\r\n        this.url = json.hasOwnProperty('url') ? json.url : '';\r\n        this.shortUrl = json.hasOwnProperty('shortUrl') ? json.shortUrl : '';\r\n        this.body = json.hasOwnProperty('body') ? json.body : '';\r\n        this.headers = json.hasOwnProperty('headers') ? json.headers : {};\r\n        this.id = (json.hasOwnProperty('id') && typeof json.id === 'number') ? json.id : -1;\r\n        this.method = json.hasOwnProperty('method') ? json.method : '';\r\n\r\n        this.replied = false;\r\n        this.timedout = false;\r\n        this.timeoutTimerId = 0;\r\n\r\n        this.receivedCv = this.headers[cvHeader];\r\n        this.updateCvHeader();\r\n    }\r\n\r\n    public get correlationVector(): string {\r\n        return this.receivedCv ? `${this.receivedCv}.${this.cvCounter}` : '';\r\n    }\r\n\r\n    public on(target: string, targetCallback: (val?: string) => void) {\r\n        if (target === 'data') {\r\n            this.dataCallback = targetCallback;\r\n        } else if (target === 'end') {\r\n            if (typeof this.dataCallback === 'function') {\r\n                this.dataCallback(this.body);\r\n            }\r\n            targetCallback();\r\n        }\r\n    }\r\n\r\n    public incrementCorrelationVector() {\r\n        ++this.cvCounter;\r\n        this.updateCvHeader();\r\n    }\r\n\r\n    private updateCvHeader(): void {\r\n        const cv: string = this.correlationVector;\r\n        if (cv) {\r\n            this.headers[cvHeader] = cv;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Response to downstream service\r\n */\r\nclass TrouterResponse implements ITrouterResponse {\r\n    public constructor(\r\n        private request: TrouterRequest,\r\n        private responseData: ResponseData,\r\n        private sendResponse: (request: TrouterRequest, responseData: ResponseData) => SendResponseResult) {\r\n    }\r\n\r\n    public writeHead(status: number, headers?: HttpHeaders) {\r\n        this.responseData.status = status;\r\n        this.responseData.headers = headers;\r\n    }\r\n\r\n    public write(chunk: string) {\r\n        this.responseData.body += chunk;\r\n    }\r\n\r\n    public end(chunk?: string): SendResponseResult {\r\n        if (chunk) {\r\n            this.responseData.body += chunk;\r\n        }\r\n\r\n        return this.sendResponse(this.request, this.responseData);\r\n    }\r\n}\r\n\r\n/**\r\n * An client-initiated event that is to be sent to trouter.\r\n */\r\nclass DownstreamEvent {\r\n    public name: string;\r\n    public args: object;\r\n    public timeoutTimerId: number;\r\n\r\n    public constructor(name: string) {\r\n        this.name = name;\r\n        this.args = {};\r\n        this.timeoutTimerId = 0;\r\n    }\r\n}\r\n\r\n/**\r\n * Reason why a connection switch is happening.\r\n */\r\nexport enum ReconnectReason {\r\n    /** Configuration change coming from ECS, containing different URL */\r\n    Configuration,\r\n\r\n    /** In response to a `trouter.reconnect` socket.io event */\r\n    ServerInitiated\r\n}\r\n\r\n/**\r\n * Interface to be implemented by Trouter consumer\r\n */\r\nexport interface IManagerConsumer {\r\n    /** Called on received request */\r\n    onDownstreamRequest(connection: TrouterConnection, request: ITrouterRequest, response: ITrouterResponse);\r\n    /** Called once connection is established */\r\n    onConnected(connection: TrouterConnection);\r\n    /** Called once registration in EDF is succeed */\r\n    onRegistered(connection: TrouterConnection);\r\n    /** Called if registration in EDF fails or expires */\r\n    onUnregistered(connection: TrouterConnection);\r\n    /** Called once connection failed */\r\n    onReconnecting(connection: TrouterConnection);\r\n    /** Called when server asked to reconnect */\r\n    onReconnectIsRequired(connection: TrouterConnection, useConnectParamsFromCache: boolean, reason: ReconnectReason);\r\n    /** Called once connection is unregistered and closed */\r\n    onDisconnected(connection: TrouterConnection);\r\n    /** Called when connection parameters are updated */\r\n    onConnectionParametersUpdated(connectParams: {});\r\n    /** Called when message loss indicator received */\r\n    onTrouterMessageLost(flowTags: IMessageLossIndicator[]);\r\n    /** Called once user activity state is accepted */\r\n    onUserActivityStateAccepted?(cv: string);\r\n}\r\n\r\n/**\r\n * Allocation result from Trouter server\r\n */\r\nexport interface IAllocateResult {\r\n    url: string;\r\n    surl: string;\r\n    curlb: string;\r\n    connectparams: any;\r\n    socketio: string;\r\n    id: string;\r\n    ccid: string;\r\n    ttl: string;\r\n}\r\n\r\n/**\r\n * Locally cached reconnection parameters\r\n *\r\n * Allows reconnecting to the same deployment and retaining the\r\n * allocated Connection ID, Trouter Endpoint URL, etc.\r\n * Consists of IAllocateResult.connectparams (opaque to the client)\r\n * extended with a bit more info about the deployment it came from.\r\n */\r\nexport interface IReconnectParameters {\r\n    serviceUrl?: string;\r\n    reconnectUrl?: string;\r\n    [param: string]: any;\r\n}\r\n\r\n/**\r\n * Trouter + registration flow implementation\r\n */\r\nexport class TrouterConnection implements IWorker {\r\n    private logger: Logger;\r\n    private tokenBackoff: ExponentialBackoff;\r\n    private fsm: TrouterFsm;\r\n    private connectionTracker: ConnectionTracker;\r\n    private registrarClient?: IRegistrarClient;\r\n\r\n    private connectionId = '';\r\n\r\n    private inIncallMode = false;\r\n    private timeoutOptions: TimeoutOptions;\r\n    private connectionTimeoutId?: number;\r\n    private pingTimerId?: number;\r\n    private pingResponseTimerId?: number;\r\n    private registrationTimerId?: number;\r\n    private incallModeTimerId?: number;\r\n\r\n    private socket?: ISocketIo;\r\n    private allocateResult?: IAllocateResult;\r\n    /** expiration's timestamp of allocated connectionID */\r\n    private connectionExpireTimestampInSecs?: number;\r\n    /** Seeded by externally cached connection parameters at startup, updated by each successful allocation result.\r\n     *  The contents might be mangled in various ways (especially if coming from the external connection cache),\r\n     *  so all code working with it must make no assumptions about which fields are actually present etc.\r\n     */\r\n    private reconnectParams?: IReconnectParameters;\r\n\r\n    /** Allocated URL where library was able to successfully connect */\r\n    private connectedUrl?: string;\r\n\r\n    /** Name of currently used transport */\r\n    private transportTypeName: string | undefined;\r\n\r\n    private clientID: number;\r\n    private connectionAttempt = 0;\r\n    private connectedClientId = '';\r\n    private domId: string | undefined;\r\n    private isNavigatorOnline: boolean = true;\r\n    private onNavigatorOnlineStatusUpdateBound = this.onNavigatorOnlineStatusUpdate.bind(this);  // Bound to allow removing the listener\r\n    private c2cUrlBase: string = '';\r\n    private allocationErrorsInRow = 0;\r\n    /** Keeps track of 401s */\r\n    private unauthorizedErrorCount = 0;\r\n\r\n    private clientInfo: IClientInfo;\r\n    /** Used to calculate short URL in requests */\r\n    private urlPath: string | undefined;\r\n    private userActivityState: UserActivityObject;\r\n    private pendingTimers: { [id: number]: string; } = { };\r\n\r\n    private lastDisconnectReason: string = '';\r\n\r\n    private readonly UNKNOWN_TRANSPORT = 'unknown_transport';\r\n\r\n    constructor(\r\n        logProvider: LogProvider,\r\n        private options: ITrouterOptions,\r\n        private manager: IManagerConsumer,\r\n        private tokenProvider: SkypeTokenProvider,\r\n        initialUserActivityState: UserActivityObject\r\n    ) {\r\n        this.logger = new Logger('Connection', logProvider);\r\n        this.timeoutOptions = this.options.timeoutOptions;\r\n        this.tokenBackoff = new ExponentialBackoff(this.logger, this.timeoutOptions.maxBackoffMs);\r\n        this.clientID = Date.now();\r\n\r\n        // tslint:disable-next-line:no-typeof-undefined - window exists only in browser\r\n        if ((typeof window !== 'undefined') && window.location) {\r\n            this.domId = window.location.hostname;\r\n        }\r\n\r\n        this.clientInfo = new ClientInfo();\r\n        this.clientInfo.cv = CLIENT_VERSION;\r\n        this.clientInfo.ua = '';\r\n\r\n        if (this.options && this.options.clientInfo) {\r\n            this.clientInfo.ua = this.safeString(this.options.clientInfo.ua);\r\n            this.clientInfo.v = this.safeString(this.options.clientInfo.v);\r\n        }\r\n\r\n        this.connectionTracker = new ConnectionTracker(\r\n            logProvider,\r\n            this.clientID,\r\n            this.clientInfo,\r\n            () => { return this.getServerState(); },\r\n            this.options.endpointId,\r\n            this.options.clientCorrelationID,\r\n            this.options.environment\r\n        );\r\n        this.applyConnectionTrackerOptions(options);\r\n\r\n        const useIncallMode = this.options.incallModeTimeoutMs > 0;\r\n        this.fsm = new TrouterFsm(logProvider, this, useIncallMode);\r\n\r\n        if (options.registration) {\r\n            const registrarOptions: IRegistrarClientOptions = {\r\n                registrarUrl: options.registration.registrarUrl,\r\n                registrationId: options.registration.registrationId,\r\n                requestTimeoutMs: options.timeoutOptions.fetchTimeoutMs,\r\n                initialRetryDelayMs: 1000,\r\n                maxRetryDelayMs: options.timeoutOptions.maxBackoffMs\r\n            };\r\n            this.registrarClient = createRegistrarClient(logProvider, this.tokenProvider, registrarOptions);\r\n        }\r\n\r\n        this.userActivityState = initialUserActivityState;\r\n    }\r\n\r\n    public start(externalConnectParams?: any) {\r\n        this.logger.info('Starting');\r\n\r\n        this.reconnectParams = <IReconnectParameters>externalConnectParams;\r\n\r\n        // tslint:disable-next-line:no-typeof-undefined - window exists only in browser\r\n        if (typeof window !== 'undefined' && window.navigator) {\r\n            this.isNavigatorOnline = window.navigator.onLine;\r\n            window.addEventListener('online',  this.onNavigatorOnlineStatusUpdateBound);\r\n            window.addEventListener('offline', this.onNavigatorOnlineStatusUpdateBound);\r\n            this.logger.debug(`Registered for browser online notifications - current state: ${this.isNavigatorOnline}`);\r\n        } else {\r\n            this.isNavigatorOnline = true;  // Assume always online if the API is not available\r\n        }\r\n\r\n        this.fsm.start();\r\n    }\r\n\r\n    public stop(dontUnregister: boolean) {\r\n        this.logger.info('Stopping');\r\n\r\n        // tslint:disable-next-line:no-typeof-undefined - window exists only in browser\r\n        if (typeof window !== 'undefined' && window.navigator) {\r\n            window.removeEventListener('online', this.onNavigatorOnlineStatusUpdateBound);\r\n            window.removeEventListener('offline', this.onNavigatorOnlineStatusUpdateBound);\r\n        }\r\n\r\n        this.fsm.stop(dontUnregister);\r\n        this.connectionTracker.close();\r\n    }\r\n\r\n    public configure(options: ITrouterOptions) {\r\n        // Currently only baseUrl and telemetrySettings options are supported for reconfiguration\r\n        const urlChanged = this.options.trouterUrl !== options.trouterUrl;\r\n        this.options = options;\r\n\r\n        this.applyConnectionTrackerOptions(options);\r\n\r\n        if (urlChanged) {\r\n            this.logger.info('Configuration changed. Reconnection required.');\r\n            this.fsm.onReconnectRequired(false, ReconnectReason.Configuration);\r\n        }\r\n    }\r\n\r\n    public checkConnection(disconnectDetected: boolean) {\r\n        this.logger.info(`checkConnection called with ${disconnectDetected}`);\r\n\r\n        this.fsm.checkConnection(disconnectDetected);\r\n\r\n        // Don't send on disconnectDetected === false, because Teams client calls it on timer\r\n        if (disconnectDetected) {\r\n            this.connectionTracker.sendTelemetry(ClientEventName.CheckConnection, {\r\n                disconnectDetected: disconnectDetected\r\n            }, []);\r\n        }\r\n    }\r\n\r\n    public disableRegistrationsAndAutoReconnect() {\r\n        this.stopRegisterTimer();\r\n        this.resetRegisterBackoff();\r\n        this.fsm.disableAutoReconnect();\r\n    }\r\n\r\n    /** Returns info about connection */\r\n    public getServerState(): ServerState {\r\n        return new ServerState(\r\n            this.connectionId,\r\n            this.connectedClientId,\r\n            this.domId ? this.domId : '',\r\n            this.allocateResult ? this.allocateResult.url : '',\r\n            this.allocateResult ? this.allocateResult.surl : '',\r\n            this.c2cUrlBase,\r\n            this.connectionExpireTimestampInSecs);\r\n    }\r\n\r\n    //////// Implement IWorker ////////\r\n\r\n    public getToken(useCache: boolean, backoff: boolean, retryCounter: number = 0) {\r\n        this.logger.info(`Getting token ${backoff ? 'with backoff' : 'without backoff'}`);\r\n\r\n        const requestFunction = () => {\r\n            this.connectionTracker.trackStart('token');\r\n\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.tokenProvider(!useCache).then((token) => {\r\n                this.logger.debug('token is received');\r\n                this.connectionTracker.trackEnd('token');\r\n                this.fsm.onTokenReceived(token);\r\n            }).catch((error: Error) => {\r\n                const msg = toJson(error.stack);\r\n                this.logger.error(`Getting token failed, will retry after timeout. Error: ${msg}`);\r\n                this.connectionTracker.trackError('token', msg);\r\n\r\n                // Can't retry getToken request, which means client would not receive any notifications from trouter.\r\n                // Unrecoverable error unless client tries to reconnect with Trouter\r\n                //     - retryCounter tracks internal loop\r\n                //     - unauthorizedErrorCount tracks external loop (consecutive number of sendAllocationFailures as a result of 401s)\r\n                if (!this.canRetryTokenFetchRequest(retryCounter + this.unauthorizedErrorCount)) {\r\n                    const errorMessage = 'getToken retry limit hit, reached terminal error state';\r\n                    this.connectionTracker.trackError('token', errorMessage);\r\n                    this.resetTokenBackoff();\r\n                    this.fsm.onTerminalError();\r\n\r\n                    return;\r\n                }\r\n                this.getToken(useCache, true, retryCounter + 1);\r\n            });\r\n        };\r\n\r\n        if (backoff) {\r\n            this.tokenBackoff.backoff('getting token', requestFunction);\r\n        } else {\r\n            this.resetTokenBackoff();\r\n            requestFunction();\r\n        }\r\n    }\r\n\r\n    public startConnectionTimer() {\r\n        this.stopConnectionTimer();\r\n        this.logger.debug(`Starting connection timeout for ${this.timeoutOptions.connectionTimeoutMs} ms`);\r\n        this.connectionTimeoutId = setTimeout(() => {\r\n            this.logger.info('Connection timeout is fired');\r\n            this.fsm.onConnectingTimeout();\r\n        }, this.timeoutOptions.connectionTimeoutMs);\r\n    }\r\n\r\n    public stopConnectionTimer() {\r\n        if (this.connectionTimeoutId) {\r\n            this.logger.debug('Stopping connection timeout');\r\n            clearTimeout(this.connectionTimeoutId);\r\n            this.connectionTimeoutId = undefined;\r\n        }\r\n    }\r\n\r\n    public startPingTimer() {\r\n        if (this.transportTypeName === 'websocket') {\r\n            this.logger.debug(`Starting ping timeout for ${this.timeoutOptions.pingTimeoutMs} ms`);\r\n            this.pingTimerId = setInterval(() => {\r\n                this.logger.info('Ping interval fired');\r\n                this.fsm.onPingInterval();\r\n            }, this.timeoutOptions.pingTimeoutMs);\r\n        } else {\r\n            this.logger.debug(`Not starting ping for transport ${this.transportTypeName}`);\r\n        }\r\n    }\r\n\r\n    public stopPingTimer() {\r\n        if (this.pingTimerId) {\r\n            this.logger.debug('Stopping ping timeout');\r\n            this.clearPingResponseTimer();\r\n            clearInterval(this.pingTimerId);\r\n            this.pingTimerId = undefined;\r\n        }\r\n    }\r\n\r\n    public shouldSkipRegistration() {\r\n        return this.options.registration === undefined;\r\n    }\r\n\r\n    public hasCustomRegisterTtl() {\r\n        return this.options.registration && this.options.registration.registrarTtlSec;\r\n    }\r\n\r\n    public startRegisterTimer() {\r\n        if (this.registrationTimerId !== undefined) {\r\n            this.stopRegisterTimer();\r\n        }\r\n        const timeForReregistrationSec = 30;\r\n        const [ttl, _] = this.getRegistrationTtl();\r\n        const delay = ttl - timeForReregistrationSec;\r\n\r\n        // Check bug(#2676421) for more info\r\n        if (delay <= 0) {\r\n            this.logger.debug(`Not starting registration timer, ttl too low(${ttl} sec)`);\r\n\r\n            return;\r\n        }\r\n        this.logger.debug(`Starting registration timeout for ${delay} sec`);\r\n        this.registrationTimerId = setTimeout(() => {\r\n            this.logger.info('Registration timeout is fired');\r\n            this.registrationTimerId = setTimeout(() => {\r\n                this.registrationTimerId = undefined;\r\n                this.logger.debug('Re-registration did not happen in time');\r\n                this.dispatchUnregistered();\r\n            }, timeForReregistrationSec * 1000);\r\n            this.fsm.onRegistrationTimeout();\r\n        }, delay * 1000);\r\n    }\r\n\r\n    public stopRegisterTimer() {\r\n        if (this.registrationTimerId) {\r\n            this.logger.debug('Stopping registration timeout');\r\n            clearTimeout(this.registrationTimerId);\r\n            this.registrationTimerId = undefined;\r\n        }\r\n    }\r\n\r\n    public resendRegistration(): Promise<void> {\r\n        if (!this.registrarClient) {\r\n            throw new Error('Trouter Client not configured to handle registrations');\r\n        }\r\n\r\n        return this.registrarClient.resendRegistration();\r\n    }\r\n\r\n    public buildSocketIoUrlParams(): string {\r\n        if (!this.allocateResult) {\r\n            throw new Error('Allocate result is undefined in buildSocketIoUrlParams()');\r\n        }\r\n\r\n        const urlParams: any = {};\r\n\r\n        // Copy connection parameters (i.e. signature) from allocation response\r\n        const signatureData = this.allocateResult.connectparams;\r\n        for (const i of Object.keys(signatureData)) {\r\n            if (signatureData.hasOwnProperty(i) && signatureData[i] !== undefined) {\r\n                urlParams[i] = signatureData[i];\r\n            }\r\n        }\r\n\r\n        // And add some more fields\r\n        urlParams.v = VERSION;\r\n        urlParams.tc = encodeURI(toJson(this.clientInfo));\r\n        urlParams.timeout = this.timeoutOptions.pingTimeoutMs / 1000;\r\n        urlParams.auth = 'true';\r\n\r\n        if (this.options.endpointId) {\r\n            urlParams.epid = this.options.endpointId;\r\n        }\r\n\r\n        if (this.userActivityState.state !== UserActivityState.Unknown) {\r\n            urlParams.userActivity = encodeURI(toJson(this.userActivityState.toEventObject()));\r\n        }\r\n\r\n        return this.appendConnectedClientIds(this.buildQuery(urlParams), true);\r\n    }\r\n\r\n    public startSocketIo() {\r\n        this.logger.info('Starting socket io');\r\n        this.connectionTracker.trackStart('connectSocket');\r\n        //this.connectionAttempt++;\r\n        if (!this.allocateResult) {\r\n            throw new Error('Allocate result is undefined in startSocketIo()');\r\n        }\r\n\r\n        const options: ISocketIoOptions = this.options.ioOptions || new SocketIoOptions();\r\n\r\n        // Regardless of any passed in socket.io options, force the following settings.\r\n        options['force new connection'] = true;\r\n        options.reconnect = false;\r\n\r\n        // Query params to each socket.io request\r\n        options.query = this.buildSocketIoUrlParams();\r\n        this.logger.info(`connecting to ${this.allocateResult.socketio}?${options.query}`);\r\n\r\n        // msg868 - clear all events and disconnect\r\n        this.stopSocketIo();\r\n\r\n        this.socket = (this.options.io || io).connect(this.allocateResult.socketio, options);\r\n        if (this.socket === undefined) {\r\n            throw new Error('Can\\'t create Socket.io object');\r\n        }\r\n\r\n        this.socket.on('connecting', (transportTypeName: string) => { this.onSocketConnecting(transportTypeName); });\r\n        this.socket.on('connect', () => { this.onSocketConnect(); });\r\n        this.socket.on('connect_failed', (reason: string) => { this.onSocketConnectFailed(reason); });\r\n        this.socket.on('disconnect', (reason: string) => { this.onSocketDisconnect(reason); });\r\n        this.socket.on('reconnect', () => { this.onSocketReconnect(); });\r\n        this.socket.on('reconnect_failed', (reason: any) => { this.onSocketReconnectFailed(reason); });\r\n        this.socket.on('reconnecting', () => { this.onSocketReconnecting(); });\r\n        this.socket.on('error', (error: any) => { this.onSocketError(error); });\r\n        this.socket.on('message', (request: string) => { this.onSocketMessage(request); });\r\n        this.socket.on('trouter.connected',\r\n            (eventArgs: ITrouterConnectedEventArgs) => { this.onTrouterConnected(eventArgs); });\r\n        this.socket.on('trouter.reconnect',\r\n            (eventArgs: ITrouterReconnectEventArgs) => { this.onTrouterReconnect(eventArgs); });\r\n        this.socket.on('trouter.message_loss',\r\n            (eventArgs: ITrouterMessageLossEventArgs) => { this.onTrouterMessageLoss(eventArgs); });\r\n    }\r\n\r\n    public stopSocketIo() {\r\n        if (this.socket) {\r\n            this.logger.info('clearing socket.io');\r\n            try {\r\n                for (const event of [\r\n                    'connecting', 'connect', 'connect_failed', 'disconnect', 'reconnect', 'reconnect_failed',\r\n                    'reconnecting', 'error', 'message', 'trouter.connected', 'trouter.reconnect', 'trouter.message_loss'\r\n                ]) {\r\n                    this.socket.removeAllListeners(event);\r\n                }\r\n\r\n                this.socket.disconnect();\r\n                this.logger.debug('cleared socket');\r\n                this.socket = undefined;\r\n            } catch (error) {\r\n                this.logger.error(`exception in disconnecting previous socket. Error: ${toJson(error.stack)}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    public dispatchConnected() {\r\n        this.logger.info('dispatching connected');\r\n        this.manager.onConnected(this);\r\n    }\r\n\r\n    public dispatchRegistered() {\r\n        this.logger.info('dispatching registered');\r\n        this.manager.onRegistered(this);\r\n    }\r\n\r\n    public dispatchUnregistered() {\r\n        this.logger.info('dispatching unregistered');\r\n        this.manager.onUnregistered(this);\r\n    }\r\n\r\n    public dispatchDownstreamRequest(request: ITrouterRequest) {\r\n        this.logger.info('dispatching downstream request');\r\n\r\n        try {\r\n            const response = new TrouterResponse(<TrouterRequest>request, new ResponseData(request.id),\r\n                (req: TrouterRequest, responseData: ResponseData) => {\r\n                    this.logger.info('sending response to downstream');\r\n\r\n                    return this.sendResponse(req, responseData);\r\n                });\r\n            this.manager.onDownstreamRequest(this, request, response);\r\n        } catch (error) {\r\n            this.logger.error(`exception in socket.on message. Error : ${toJson(error.stack)}`);\r\n        }\r\n    }\r\n\r\n    public dispatchReconnecting() {\r\n        this.logger.info('dispatching reconnecting');\r\n        this.manager.onReconnecting(this);\r\n    }\r\n\r\n    public dispatchReconnectIsRequired(useConnectParamsFromCache: boolean, reason: ReconnectReason) {\r\n        this.logger.info('dispatching reconnect is required by server');\r\n        this.manager.onReconnectIsRequired(this, useConnectParamsFromCache, reason);\r\n    }\r\n\r\n    public dispatchDisconnected() {\r\n        this.logger.info('dispatching disconnected');\r\n        this.manager.onDisconnected(this);\r\n    }\r\n\r\n    public dispatchTrouterMessageLost(messageLossIndicators: IMessageLossIndicator[]) {\r\n        this.logger.info('dispatching trouter lost message');\r\n        this.manager.onTrouterMessageLost(messageLossIndicators);\r\n    }\r\n\r\n    public sendProcessedDroppedIndicators(messageLossIndicators: IMessageLossIndicator[]) {\r\n        try {\r\n            this.logger.info('emitting processed flow tags to the server');\r\n            const processedMessageLossEvent = new DownstreamEvent('trouter.processed_message_loss');\r\n            processedMessageLossEvent.args = {droppedIndicators: messageLossIndicators};\r\n            this.sendDownstreamEvent(processedMessageLossEvent, () => {\r\n                this.logger.info('emitted processed flow tags to the server');\r\n            });\r\n        } catch (error) {\r\n            const msg = toJson(error.stack);\r\n            this.logger.error(`unable to send processed message loss event. Error: ${msg}`);\r\n            this.connectionTracker.trackError('trouter.processed_message_loss', msg, false);\r\n        }\r\n    }\r\n\r\n    // tslint:disable-next-line:max-func-body-length\r\n    public sendAllocateRequest(token: string) {\r\n        this.connectionAttempt++;\r\n        this.connectionTracker.trackNewConnection();\r\n\r\n        const serviceUrl = this.options.trouterUrl;\r\n        let url = serviceUrl;\r\n        let connectParams;\r\n\r\n        let rp = this.reconnectParams;\r\n        if (rp && rp.se && parseInt(rp.se, 10) <= Date.now() + 3600000) {  // 1 hour\r\n            this.logger.warn(`Dropping expired cached connection parameters: ${new Date(parseInt(rp.se, 10))}`);\r\n            this.reconnectParams = rp = undefined;\r\n        }\r\n        if (rp && rp.serviceUrl !== url) {\r\n            this.logger.warn(`Dropping cached connection parameters for a different environment (${rp.serviceUrl}, now ${url})`);\r\n            this.reconnectParams = rp = undefined;\r\n        }\r\n        if (rp && rp.reconnectUrl) {\r\n            url = rp.reconnectUrl;\r\n        }\r\n        if (rp) {\r\n            // Do not append serviceUrl and reconnectUrl as query parameters\r\n            connectParams = { ...rp, serviceUrl: undefined, reconnectUrl: undefined };\r\n        } else {\r\n            connectParams = null;\r\n        }\r\n\r\n        url = this.appendCorrelationIds(url, false);\r\n        url = this.appendEndpointId(url, false);\r\n        if (connectParams) {\r\n            url += `&${this.buildQuery(connectParams)}`;\r\n            // Currently server doesn't return \"v\" in allocate result, but it\r\n            // can be changed, so implement it this way just in case\r\n            if (!connectParams.v) {\r\n                url += `&v=${VERSION}`;\r\n            }\r\n        }\r\n\r\n        const allocateRequest = new Request(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: new Headers({\r\n                'X-Skypetoken': token,\r\n                'Content-Type': 'text/plain'\r\n            })\r\n        });\r\n\r\n        this.logger.info(`sendAllocateRequest: POST ${url}`);\r\n        this.connectionTracker.trackStart('allocation');\r\n        const startTimestamp = Date.now();\r\n        let responseStatusCode = -1;\r\n        fetchWithTimeout(allocateRequest, this.timeoutOptions.fetchTimeoutMs).then((response: Response) => {\r\n            responseStatusCode = response.status;\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText);\r\n            }\r\n\r\n            // tslint:disable-next-line:no-backbone-get-set-outside-model\r\n            const contentType = response.headers.get('content-type');\r\n            if (!contentType || (contentType !== 'application/json' && contentType.substring(0, 17) !== 'application/json;')) {\r\n                throw new Error(`Content-type '${contentType}' is unexpected`);\r\n            }\r\n            this.connectionTracker.trackEnd('allocation');\r\n\r\n            return response.json();\r\n        }).then((responseObj) => {\r\n            this.allocationErrorsInRow = 0;\r\n            this.unauthorizedErrorCount = 0;\r\n            this.onAllocationResponse(responseObj, serviceUrl);\r\n        }).catch((error: Error) => {\r\n            this.allocationErrorsInRow++;\r\n            const msg = `${error}, status code ${responseStatusCode}`;\r\n            this.logger.error(`${this.allocationErrorsInRow} failed allocation attempt(s) in a row. Error: ${msg}`);\r\n            this.connectionTracker.trackError('allocation', msg);\r\n\r\n            if (responseStatusCode === 401) {\r\n                this.unauthorizedErrorCount++;\r\n            }\r\n            if (!this.canRetryTokenFetchRequest(this.unauthorizedErrorCount)) {\r\n                const errorMessage = 'getToken retry limit hit, reached terminal error state';\r\n                this.connectionTracker.trackError('allocation', errorMessage);\r\n                this.fsm.onTerminalError();\r\n\r\n                return;\r\n            }\r\n\r\n            if (responseStatusCode === -1 && !this.isNavigatorOnline) {\r\n                this.logger.info('Expected failure, the browser says it is not online at the moment');\r\n            } else if (this.reconnectParams && this.allocationErrorsInRow >= 3) {\r\n                if (responseStatusCode >= 400 && responseStatusCode <= 599) {\r\n                    this.logger.warn(`${this.allocationErrorsInRow} connection attempts, server-side failure: erasing cached connection parameters`);\r\n                    this.reconnectParams = undefined;\r\n                } else if (this.reconnectParams.reconnectUrl && this.allocationErrorsInRow % 3 === 0) {\r\n                    this.logger.warn(`${this.allocationErrorsInRow} connection attempts, testing nominal service URL`);\r\n                    // Make sure to finish the check before connection timeout passes to avoid unexpected FSM calls\r\n                    const timeoutMs = Math.min(\r\n                        this.timeoutOptions.connectionTimeoutMs - (Date.now() - startTimestamp) - 500,\r\n                        this.timeoutOptions.fetchTimeoutMs);\r\n                    this.testNominalUrlConnectivity(timeoutMs)\r\n                        .then(result => {\r\n                            this.connectionTracker.trackProgress('nomcheck', result ? 'ok' : 'failed');\r\n                            if (result) {\r\n                                this.logger.warn('Nominal service URL is reachable, erasing cached reconnect URL');\r\n                                if (this.reconnectParams) {\r\n                                    delete this.reconnectParams.reconnectUrl;\r\n                                }\r\n                            } else {\r\n                                this.logger.warn('Nominal service URL is not reachable either, keeping cached reconnect URL');\r\n                            }\r\n\r\n                            this.fsm.onAllocationFailed(false);\r\n                        }, _ => {\r\n                            // Should not happen, but removes no-floating-promises warning\r\n                            this.fsm.onAllocationFailed(false);\r\n                        });\r\n\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.fsm.onAllocationFailed(responseStatusCode === 401);\r\n        });\r\n    }\r\n\r\n    public testNominalUrlConnectivity(timeoutMs: number): Promise<boolean> {\r\n        if (timeoutMs < 1000) {\r\n            this.logger.warn(`There is no time left to reasonably perform the nominal service URL connectivity check (${timeoutMs} ms), falling back to assuming that the connectivity is fine`);\r\n\r\n            return Promise.resolve(true);\r\n        }\r\n\r\n        let testRequest: Request;\r\n        try {\r\n            const url = new URL(this.options.trouterUrl);\r\n            // Modify the URL to reach the root page (which returns a plain text string \"Trouter\")\r\n            url.pathname = '/';\r\n            // Add a few query parameters for possible classification and troubleshooting\r\n            // tslint:disable-next-line:prefer-template readability\r\n            url.search = '?' + this.buildQuery({\r\n                check: Date.now(),\r\n                cor_id: encodeURIComponent(this.options.clientCorrelationID),\r\n                epid: encodeURIComponent(this.options.endpointId ? this.options.endpointId : ''),\r\n                tc: encodeURIComponent(toJson(this.clientInfo))\r\n            });\r\n            testRequest = new Request(url.toString(), {\r\n                method: 'GET',\r\n                headers: { Accept: 'text/plain' }\r\n            });\r\n        } catch (error) {\r\n            this.logger.warn(`Nominal service URL connectivity test request could not be created (${error}), falling back to assuming that the connectivity is fine`);\r\n\r\n            return Promise.resolve(true);\r\n        }\r\n\r\n        return fetchWithTimeout(testRequest, timeoutMs)\r\n            .then((response: Response) => {\r\n                if (response.status !== 200) {\r\n                    throw new Error(`Not 200 OK: ${response.status} ${response.statusText}`);\r\n                }\r\n\r\n                return response.text();\r\n            })\r\n            .then((body: string) => {\r\n                if (body !== 'Trouter') {\r\n                    throw new Error(`Not \"Trouter\": ${body.substring(0, 16)}${body.length > 16 ? '...' : ''}`);\r\n                }\r\n\r\n                return true;\r\n            })\r\n            .catch((error) => {\r\n                this.logger.error(`Nominal service URL connectivity test failed: ${error}`);\r\n\r\n                return false;\r\n            });\r\n    }\r\n\r\n    public sendPingRequest() {\r\n        if (this.socket && this.pingResponseTimerId === undefined) {\r\n            try {\r\n                this.logger.info('emitting ping event');\r\n                let timeoutReached = false;\r\n                this.socket.emit('ping', () => {\r\n                    if (timeoutReached === true) {\r\n                        return;\r\n                    }\r\n                    this.onPingResponse();\r\n                });\r\n                this.pingResponseTimerId = setTimeout(() => {\r\n                    this.logger.error('Ping response timeout is fired');\r\n                    timeoutReached = true;\r\n                    this.clearPingResponseTimer();\r\n                    this.fsm.onPingResponseTimeout();\r\n                }, this.timeoutOptions.pongTimeoutMs);\r\n            } catch (error) {\r\n                const msg = toJson(error.stack);\r\n                this.logger.error(`unable to send ping. Error: ${msg}`);\r\n                this.connectionTracker.trackError('ping', msg, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    public setUserActivityState(userActivityObject: UserActivityObject) {\r\n        const changed: boolean = (userActivityObject.state !== this.userActivityState.state);\r\n        this.userActivityState = userActivityObject;\r\n        this.fsm.onSetUserActivityState(userActivityObject, changed);\r\n    }\r\n\r\n    public sendUserActivityState(reason: UserActivityEventReason, connected: boolean) {\r\n        if (this.userActivityState.state === UserActivityState.Unknown) {\r\n            return;\r\n        }\r\n        if (this.transportTypeName === 'websocket' && connected) {\r\n            if (reason === UserActivityEventReason.Connected) {\r\n                this.sendUserActivityStateMultiple(2);\r\n            } else {\r\n                this.sendUserActivityStateMultiple(1);\r\n            }\r\n        } else if (this.transportTypeName === 'xhr-polling') { // ignoring the connected flag\r\n            if (reason === UserActivityEventReason.Modified) {\r\n                this.fsm.forceReconnect('user activity/force reconnect');\r\n            }\r\n        }\r\n    }\r\n\r\n    public sendRegisterRequest() {\r\n        if (!this.options.registration || !this.registrarClient) {\r\n            throw new Error('Internal error - options.registration is undefined');\r\n        }\r\n        if (!this.allocateResult) {\r\n            throw new Error('Allocate result is undefined in sendRegisterRequest()');\r\n        }\r\n\r\n        this.logger.info('sending register request');\r\n        const span = new Timespan();\r\n        this.connectionTracker.trackStart('registration');\r\n        const [registrationTtl, isRegistrationTtlLowerThanKnownAllocationTtl] = this.getRegistrationTtl();\r\n        this.registrarClient.register({\r\n                appId: this.options.registration.pnhAppId,\r\n                aesKey: '',\r\n                languageId: 'en-US',\r\n                platform: this.options.registration.platform,\r\n                templateKey: this.options.registration.pnhTemplateKey,\r\n                platformUIVersion: this.options.registration.platformUIVersion,\r\n                productContext: this.options.registration.productContext\r\n            }, {\r\n                TROUTER: [{\r\n                    context: this.options.registration.context,\r\n                    path: this.allocateResult.surl,\r\n                    ttl: registrationTtl\r\n                }]\r\n            }).then(() => {\r\n                this.logger.info('Register request successful');\r\n                this.connectionTracker.trackEnd('registration');\r\n                this.fsm.onRegistrationSucceed(isRegistrationTtlLowerThanKnownAllocationTtl);\r\n                this.connectionTracker.sendTelemetry(ClientEventName.Registration, {\r\n                    duration: span.duration\r\n                }, []);\r\n            }).catch((error: Error) => {\r\n                this.logger.error(`Register request failed. Error: ${error}`);\r\n                this.connectionTracker.trackError('registration', error.message);\r\n                this.fsm.onRegistrationFailed(false);  // Auth challenges are handled within tsregistrar\r\n                this.connectionTracker.sendTelemetry(ClientEventName.Registration, {\r\n                    duration: span.duration\r\n                }, []);\r\n            });\r\n    }\r\n\r\n    public sendUnregisterRequest() {\r\n        this.logger.info('sending unregister request');\r\n        const span = new Timespan();\r\n        if (!this.options.registration || !this.registrarClient) {\r\n            throw new Error('Internal error - options.registration is undefined');\r\n        }\r\n\r\n        this.connectionTracker.trackStart('unregistration');\r\n        this.registrarClient.unregister().then(() => {\r\n            this.logger.info('Unregister request successful');\r\n            this.connectionTracker.trackEnd('unregistration');\r\n            this.fsm.onUnregistrationSucceed();\r\n            this.connectionTracker.sendTelemetry(ClientEventName.Unregistration, {\r\n                duration: span.duration\r\n            }, []);\r\n        }).catch((error: Error) => {\r\n            this.logger.error(`Unregister request failed. Error: ${error}`);\r\n            this.connectionTracker.trackError('unregistration', error.message);\r\n            this.fsm.onUnregistrationFailed(false);\r\n\r\n            this.connectionTracker.sendTelemetry(ClientEventName.Unregistration, {\r\n                duration: span.duration\r\n            }, []);\r\n        });\r\n    }\r\n\r\n    public resetTokenBackoff() {\r\n        this.tokenBackoff.reset();\r\n    }\r\n\r\n    public resetRegisterBackoff() {\r\n        if (this.registrarClient) {\r\n            this.registrarClient.cancelPendingRequests();\r\n        }\r\n    }\r\n\r\n    public clearTimers() {\r\n        this.logger.debug('Clearing all pending downstream events related timers');\r\n        for (const key of Object.keys(this.pendingTimers)) {\r\n            this.clearTimer(Number(key));\r\n        }\r\n    }\r\n\r\n    public restartIncallModeTimer() {\r\n        this.clearIncallModeTimerId();\r\n        this.logger.debug('Restarting incall mode timer');\r\n        this.incallModeTimerId = setTimeout(() => {\r\n            this.logger.info('Call mode timer fired');\r\n            this.fsm.onIncallModeTimer();\r\n        }, this.options.incallModeTimeoutMs);\r\n    }\r\n\r\n    public enterIncallMode() {\r\n        this.logger.info('Entering incall mode');\r\n        this.timeoutOptions = this.options.incallTimeoutOptions;\r\n        this.tokenBackoff.setMaxBackoffMs(this.timeoutOptions.maxBackoffMs);\r\n        // Uncomment to enable change of timeout in XHR mode - do it once server start to support it\r\n        // if (this.socket) {\r\n        //     this.socket.socket.options.query = this.buildSocketIoUrlParams();\r\n        // }\r\n        this.inIncallMode = true;\r\n    }\r\n\r\n    public exitIncallMode() {\r\n        this.logger.info('Exiting incall mode');\r\n        this.clearIncallModeTimerId();\r\n        this.timeoutOptions = this.options.timeoutOptions;\r\n        this.tokenBackoff.setMaxBackoffMs(this.timeoutOptions.maxBackoffMs);\r\n        // Uncomment to enable change of timeout in XHR mode - do it once server start to support it\r\n        // if (this.socket) {\r\n        //     this.socket.socket.options.query = this.buildSocketIoUrlParams();\r\n        // }\r\n        this.inIncallMode = false;\r\n    }\r\n\r\n    public isIncallMode() {\r\n        return this.inIncallMode;\r\n    }\r\n\r\n    public sendDisconnectTelemetryEvent(reason?: string) {\r\n        const props = <Properties>{ reason: reason, serverClosed: !this.fsm.isActive() };\r\n        this.connectionTracker.trackDisconnected(props);\r\n        this.connectionTracker.clearConnectedInfo();\r\n    }\r\n\r\n    ////////// SocketIO callbacks //////////\r\n    private onSocketConnecting(transportTypeName: string) {\r\n        this.logger.info(`onSocketConnecting(${transportTypeName})`);\r\n        this.transportTypeName = transportTypeName;\r\n        this.connectionTracker.trackProgress('connecting', this.transportTypeName);\r\n        this.fsm.onConnecting();\r\n    }\r\n    private onSocketConnect() {\r\n        this.logger.info('onSocketConnect');\r\n    }\r\n    private onSocketConnectFailed(reason: string): void {\r\n        this.logger.error('onSocketConnectFailed');\r\n        this.connectionTracker.trackError(\r\n            'connect_failed', reason, true, this.transportTypeName ? this.transportTypeName : this.UNKNOWN_TRANSPORT);\r\n        this.fsm.onConnectingFailed();\r\n    }\r\n    private onSocketDisconnect(reason: string): void {\r\n        this.logger.error(`onSocketDisconnect, reason: ${reason}`);\r\n        const sessionLengthMs = this.connectionTracker.getSessionLength() || 0;\r\n\r\n        if (reason === 'dup' && this.lastDisconnectReason === 'dup' &&\r\n            sessionLengthMs < this.options.duplicateDisconnectThresholdMs) {\r\n          this.logger.warn(\r\n            'Socket was closed by server as Duplicate for the second time in a row ' +\r\n            `after ${sessionLengthMs} ms which is below the threshold of ` +\r\n            `${this.options.duplicateDisconnectThresholdMs} ms. Resetting cached ` +\r\n            'connection parameters and making a new allocation.');\r\n          this.reconnectParams = undefined;\r\n        }\r\n        this.lastDisconnectReason = reason;\r\n\r\n        this.fsm.onSocketDisconnect(reason);\r\n        this.connectionExpireTimestampInSecs = undefined;\r\n    }\r\n    private onSocketReconnect(): void {\r\n        // this callback should not be called, because reconnect on socket.io is disabled, but\r\n        // leave it here in case error in socket.io\r\n        this.logger.error('onSocketReconnect');\r\n        this.fsm.onTrouterConnected();\r\n    }\r\n    private onSocketReconnectFailed(reason: any): void {\r\n        // this callback should not be called, because reconnect on socket.io is disabled, but\r\n        // leave it here in case error in socket.io\r\n        this.logger.error(`onSocketReconnectFailed with '${reason}'`);\r\n        this.fsm.onSocketDisconnect(typeof reason === 'string' ? reason : undefined);\r\n    }\r\n    private onSocketReconnecting(): void {\r\n        // this callback should not be called, because reconnect on socket.io is disabled, but\r\n        // leave it here in case error in socket.io\r\n        this.logger.error('onSocketReconnecting');\r\n    }\r\n    private onSocketError(errorObject: any): void {\r\n        this.logger.error(`onSocketError with '${toJson(errorObject)}'`);\r\n        this.connectionTracker.trackError('connectSocket', errorObject);\r\n        this.fsm.onSocketDisconnect(typeof errorObject === 'string' ? errorObject : undefined);\r\n    }\r\n    private onSocketMessage(requestJson: string): void {\r\n        this.logger.info('onSocketMessage');\r\n\r\n        let request: TrouterRequest;\r\n        try {\r\n            request = new TrouterRequest(requestJson);\r\n            const chainId = request.headers && request.headers['X-Microsoft-Skype-Chain-ID'];\r\n            const chainIdLogText = chainId ? ` Chain-Id ${chainId}` : '';\r\n            this.logger.info(`Received request N ${request.id}${chainIdLogText} CV ${request.correlationVector} to '${request.url}'`);\r\n            request.startTS = Date.now();\r\n\r\n            if (request.url && this.urlPath && request.url.indexOf(this.urlPath) === 0) {\r\n                request.shortUrl = request.url.substring(this.urlPath.length);\r\n            }\r\n        } catch (error) {\r\n            const msg = toJson(error.stack);\r\n            this.logger.error(`unable to parse request. Error: ${msg}`);\r\n            this.connectionTracker.trackRequest(undefined, msg);\r\n            this.connectionTracker.sendResponseError(`unable to parse request, error: ${error}`);\r\n\r\n            return;\r\n        }\r\n\r\n        request.timeoutTimerId = setTimeout(() => {\r\n            if (request.replied) {\r\n                return;\r\n            }\r\n            this.logger.error(`Request ${request.id} timed out`);\r\n            const responseData = new ResponseData(request.id);\r\n            responseData.status = 504;\r\n            responseData.headers = { 'Trouter-Responder': 'ClientLib' };\r\n            this.sendResponse(request, responseData);\r\n            request.timedout = true;\r\n        }, this.timeoutOptions.requestTimeoutMs);\r\n\r\n        try {\r\n            this.connectionTracker.trackRequest(request);\r\n            this.fsm.onDownstreamRequest(request);\r\n        } catch (error) {\r\n            this.logger.error(`exception in socket.on message. Error: ${toJson(error.stack)}`);\r\n            this.connectionTracker.sendResponseError(error.message, request, undefined);\r\n        }\r\n    }\r\n    private onTrouterConnected(eventArgs: ITrouterConnectedEventArgs): void {\r\n        if (!this.allocateResult) {\r\n            this.logger.error('Invalid internal state - received onTrouterConnected while allocateResult is not set');\r\n\r\n            return;\r\n        }\r\n        this.logger.info(`onTrouterConnected: ${this.allocateResult.url}`);\r\n\r\n        // Prevent next 'trouter.connected' responses from other trouter nodes\r\n        // hackish way, since socket.io doesn't have API for that\r\n        if (this.socket && this.socket.socket && this.socket.socket.options && this.socket.socket.options.query) {\r\n            this.socket.socket.options.query += '&connected=true';\r\n        }\r\n\r\n        // Strip off the first part of the URL, up to the path\r\n        this.urlPath = this.allocateResult.url.replace(/https?:\\/\\/([A-z0-9\\:\\$\\-\\_\\.\\+\\!\\*\\\"\\(\\)\\,]*)\\//, '/');\r\n\r\n        const isNewUrl = (this.connectedUrl !== this.allocateResult.url);\r\n        this.connectedUrl = this.allocateResult.url;\r\n        this.connectionExpireTimestampInSecs = calculateExpireTsInSec(eventArgs.ttl);\r\n\r\n        this.connectionTracker.trackEnd('connectSocket');\r\n        this.connectionTracker.trackConnected(isNewUrl, this.transportTypeName ? this.transportTypeName : this.UNKNOWN_TRANSPORT);\r\n\r\n        this.fsm.onTrouterConnected();\r\n    }\r\n\r\n    private onTrouterReconnect(eventArgs: ITrouterReconnectEventArgs): void {\r\n        const target = eventArgs.target;\r\n\r\n        this.logger.info(`onTrouterReconnect target: ${target}`);\r\n\r\n        if (target === 'self') {\r\n            this.fsm.onReconnectRequired(true, ReconnectReason.ServerInitiated);\r\n        } else {\r\n            this.fsm.onReconnectRequired(false, ReconnectReason.ServerInitiated);\r\n        }\r\n    }\r\n\r\n    private onTrouterMessageLoss(eventArgs: ITrouterMessageLossEventArgs): void {\r\n        this.logger.info('onTrouterMessageLoss');\r\n\r\n        // Send only array of tags for further processing\r\n        this.fsm.onTrouterMessageLost(eventArgs.droppedIndicators);\r\n    }\r\n\r\n    ////////// Other functions //////////\r\n\r\n    private onNavigatorOnlineStatusUpdate(e) {\r\n        const state = window.navigator.onLine;\r\n        this.logger.debug(`Browser online status update - new state: ${state}, previously: ${this.isNavigatorOnline}`);\r\n        if (state && !this.isNavigatorOnline) {\r\n            this.isNavigatorOnline = true;\r\n            this.tokenBackoff.expediteIfPending();\r\n            this.connectionTracker.trackProgress('browserNet', 'online');\r\n        } else if (!state && this.isNavigatorOnline) {\r\n            this.isNavigatorOnline = false;\r\n            this.connectionTracker.trackProgress('browserNet', 'offline');\r\n        }\r\n    }\r\n\r\n    private onAllocationResponse(allocateResult: IAllocateResult, serviceUrl: string) {\r\n        this.logger.info(`Received allocation response ${JSON.stringify(allocateResult)}`);\r\n        this.allocateResult = allocateResult;\r\n        this.reconnectParams = {\r\n            serviceUrl: serviceUrl,\r\n\r\n            // The service does not send reconnectUrl (yet), make it up based\r\n            // on other fields - 'socketio' is simply the root\r\n            reconnectUrl: `${this.allocateResult.socketio}v4/a`,\r\n\r\n            // The spread operator is in this order to allow potentially\r\n            // overwriting 'reconnectUrl' from the service\r\n            ...allocateResult.connectparams\r\n        };\r\n        // in V4 ttl is a string in IAllocateResult - converting it to number with \"+\"\r\n        const ttl: number = +allocateResult.ttl;\r\n        // Don't use allocateResult.connectparams.se here since system clock can be\r\n        // incorrect on client's machine, so using TTL is safer\r\n        this.connectionExpireTimestampInSecs = calculateExpireTsInSec(ttl);\r\n        this.connectionId = this.allocateResult.id || '';\r\n\r\n        this.connectedClientId = this.allocateResult.ccid;\r\n        this.logger.info(`connected client id set {connectedClientId:${this.connectedClientId}}`);\r\n\r\n        this.c2cUrlBase = allocateResult.curlb || '';\r\n        if (this.c2cUrlBase === '') {\r\n            // Try to just remove the port as a fallback if the service didn't provide anything\r\n            let pos = allocateResult.surl.indexOf('://');\r\n            if (pos >= 0) {\r\n                pos = allocateResult.surl.indexOf('/', pos + 3);\r\n                if (pos >= 5 && allocateResult.surl.substr(pos - 5, 5) === ':3443') {\r\n                    this.c2cUrlBase = allocateResult.surl.substr(0, pos - 5);\r\n                }\r\n            }\r\n        }\r\n\r\n        // tslint:disable-next-line:no-non-null-assertion cannot be null, was set earlier\r\n        this.manager.onConnectionParametersUpdated(this.reconnectParams!);\r\n        this.fsm.onAllocationSucceed();\r\n    }\r\n\r\n    private onPingResponse() {\r\n        this.logger.info('onPingResponse');\r\n        this.connectionTracker.increasePingResponseCount();\r\n        this.clearPingResponseTimer();\r\n        this.fsm.onPingResponse();\r\n    }\r\n\r\n    private clearPingResponseTimer() {\r\n        if (this.pingResponseTimerId !== undefined) {\r\n            clearTimeout(this.pingResponseTimerId);\r\n            this.pingResponseTimerId = undefined;\r\n        }\r\n    }\r\n\r\n    private buildQuery(map: any): string {\r\n        // TO-DO: Replace this and all other similar functions around with URLSearchParams\r\n        const components: any[] = [];\r\n        for (const i of Object.keys(map)) {\r\n            if (map.hasOwnProperty(i) && map[i] !== undefined) {\r\n                components.push(`${i}=${map[i]}`);\r\n            }\r\n        }\r\n\r\n        return components.join('&');\r\n    }\r\n\r\n    private appendConnectedClientIds(url: string, isParamsOnly: boolean) {\r\n        let params = '';\r\n        if (url.indexOf('ccid=') < 0) {\r\n            params = `ccid=${this.connectedClientId}&`;\r\n        }\r\n        if (this.domId) {\r\n            params += `dom=${this.domId}&`;\r\n        }\r\n        if (params.length > 0) {\r\n            params = params.slice(0, -1);\r\n        }\r\n        const sep = (isParamsOnly || url.indexOf('?') !== -1) ? ('&') : ('?');\r\n\r\n        return this.appendCorrelationIds(url + sep + params, isParamsOnly);\r\n    }\r\n\r\n    private appendEndpointId(url: string, isParamsOnly: boolean): string {\r\n        const sep = (isParamsOnly || url.indexOf('?') !== -1) ? ('&') : ('?');\r\n\r\n        return (url.indexOf('epid') < 0 && this.options.endpointId)\r\n            ? `${url}${sep}epid=${this.options.endpointId}`\r\n            : url;\r\n    }\r\n\r\n    private appendCorrelationIds(url: string, isParamsOnly: boolean): string {\r\n        const sep = (isParamsOnly || url.indexOf('?') !== -1) ? ('&') : ('?');\r\n\r\n        return (url.indexOf('cor_id') < 0)\r\n            ? `${url}${sep}cor_id=${this.options.clientCorrelationID}`\r\n            + `&con_num=${this.clientID}_${this.connectionAttempt}`\r\n            : url;\r\n    }\r\n\r\n    private safeString(str: any): string {\r\n        return (typeof (str) === 'string') ? str : '';\r\n    }\r\n\r\n    private sendResponse(request: TrouterRequest, responseData: ResponseData): SendResponseResult {\r\n        if (request.timedout) {\r\n            this.logger.error(`Request ${request.id} already timed out`);\r\n\r\n            return SendResponseResult.Timeout;\r\n        }\r\n        if (request.replied) {\r\n            this.logger.error(`Response for request ${request.id} already sent`);\r\n\r\n            return SendResponseResult.Duplicate;\r\n        }\r\n        clearTimeout(request.timeoutTimerId);\r\n        request.timeoutTimerId = 0;\r\n        request.replied = true;\r\n\r\n        responseData.headers = responseData.headers || {};\r\n\r\n        const cv = request.correlationVector;\r\n        this.logger.info(`Sending response for request N ${request.id} CV ${cv} with status ${responseData.status}`);\r\n        if (cv) {\r\n            responseData.headers[cvHeader] = cv;\r\n        }\r\n\r\n        // Echo back the incoming \"trouter-request\" header\r\n        if (request.headers && request.headers['trouter-request'] && !responseData.headers['trouter-request']) {\r\n            responseData.headers['trouter-request'] = request.headers['trouter-request'];\r\n        }\r\n        // Fill in \"trouter-client\" header\r\n        const latencyMS = Date.now() - request.startTS;\r\n        responseData.headers['trouter-client'] = toJson({\r\n            cd: latencyMS\r\n        });\r\n\r\n        this.logger.debug(`response: ${toJson(responseData)}`);\r\n\r\n        if (this.socket) {\r\n            try {\r\n                this.socket.send(toJson(responseData));\r\n                responseData.sentTS = Date.now();\r\n                request.incrementCorrelationVector();\r\n                this.connectionTracker.trackResponse(request, latencyMS, responseData);\r\n                if (this.transportTypeName === 'websocket') {\r\n                    // Send ping request immediately to emulate 'ack' from server, so\r\n                    // client can faster react on network issues\r\n                    this.sendPingRequest();\r\n                }\r\n\r\n                return SendResponseResult.OK;\r\n            } catch (error) {\r\n                const errorMsg = `unable to send data on response.end. Error: ${toJson(error.stack)}`;\r\n                this.logger.error(errorMsg);\r\n                this.connectionTracker.sendResponseError(errorMsg, request, responseData);\r\n\r\n                return SendResponseResult.Disconnected;\r\n            }\r\n        } else {\r\n            this.connectionTracker.sendResponseError('no socket', request, responseData);\r\n\r\n            return SendResponseResult.Disconnected;\r\n        }\r\n    }\r\n\r\n    /*\r\n        Sends the activity state event to Trouter.\r\n        Has implemented support for sending the current state twice (or multiple times)\r\n        after reconnect, first immediately, and theen the second after configured delay.\r\n\r\n        If after the first sent state event the client app changes the state,\r\n        the new state is sent in the second event after the delay.\r\n        Meanwhile the new state is also sent immediately upon\r\n        the change, but the planned second sending (after delay) is triggered anyway,\r\n        to fulfill it's purpose, which is to prevent server-side race condition.\r\n     */\r\n    private sendUserActivityStateMultiple(remaining: number): void {\r\n        const activityEvent = new DownstreamEvent('user.activity');\r\n        const activityEventObject = this.userActivityState.toEventObject();\r\n        activityEvent.args = activityEventObject;\r\n        this.userActivityState.correlationVector.increase();\r\n\r\n        this.logger.debug(`Sending user activity '${this.userActivityState.toEventJSON()}', remaining ${remaining - 1}`);\r\n        let timeoutReached = false;\r\n        this.sendDownstreamEvent(activityEvent, () => {\r\n            if (timeoutReached === true) {\r\n                return;\r\n            }\r\n            this.logger.info(`User activity state: ${activityEventObject.state}, cv: ${activityEventObject.cv} accepted`);\r\n            if (this.manager.onUserActivityStateAccepted) {\r\n                this.manager.onUserActivityStateAccepted(activityEventObject.cv);\r\n            }\r\n            this.clearTimer(activityEvent.timeoutTimerId);\r\n            if (remaining > 1) {\r\n                const timerId = setTimeout(() => {\r\n                    this.clearTimer(timerId);\r\n                    this.sendUserActivityStateMultiple(remaining - 1);\r\n                }, this.options.userActivitySecondResendDelayMs);\r\n                this.registerTimer(timerId, 'user.activity/resend');\r\n            }\r\n        });\r\n\r\n        activityEvent.timeoutTimerId = setTimeout(() => {\r\n            this.logger.error('Activity state response timeout is fired');\r\n            timeoutReached = true;\r\n            this.fsm.onActivityStateResponseTimeout();\r\n            this.clearTimer(activityEvent.timeoutTimerId);\r\n        }, this.timeoutOptions.userActivityResponseTimeoutMs);\r\n        this.registerTimer(activityEvent.timeoutTimerId, 'user.activity/response');\r\n    }\r\n\r\n    private sendDownstreamEvent(event: DownstreamEvent, responseCallback: () => void) {\r\n        this.logger.info(`Sending downstream event ${event.name}`);\r\n\r\n        if (this.socket) {\r\n            this.socket.emit(event.name, event.args, responseCallback);\r\n        }\r\n    }\r\n\r\n    private registerTimer(timerId: number, timerDescription: string): void {\r\n        this.logger.debug(`registering timer ${timerId} -> ${timerDescription}`);\r\n        this.pendingTimers[timerId] = timerDescription;\r\n    }\r\n\r\n    private clearTimer(id: number): void {\r\n        const timerDescription: string = this.pendingTimers[id];\r\n        this.logger.debug(`clearing timer ${id} -> ${timerDescription}`);\r\n        delete this.pendingTimers[id];\r\n        clearTimeout(id);\r\n    }\r\n\r\n    /**\r\n     * Calculate registration interval. Result is based on configuration parameters\r\n     * and allocation ttl value from trouter server.\r\n     * Returns true only if the registration ttl is present and is smaller than known `allocationTtl`.\r\n     * This means we'll need to re-register to keep the registration alive for the duration of the allocation.\r\n     */\r\n    private getRegistrationTtl(): [number, boolean] {\r\n        const allocationTtl = calculateTtlInSec(this.connectionExpireTimestampInSecs);\r\n        this.logger.debug(`Current connectionID will expire in ${allocationTtl} seconds`);\r\n\r\n        if (this.options.registration && this.options.registration.registrarTtlSec && allocationTtl > 0) {\r\n            const isLower: boolean = this.options.registration.registrarTtlSec < allocationTtl;\r\n\r\n            return [Math.min(this.options.registration.registrarTtlSec, allocationTtl), isLower];\r\n        } else if (this.options.registration && this.options.registration.registrarTtlSec) {\r\n            return [this.options.registration.registrarTtlSec, false];\r\n        } else if (allocationTtl > 0) {\r\n            return [allocationTtl, false];\r\n        }\r\n\r\n        return [DEFAULT_REGISTRATION_TIMEOUT_SEC, false];\r\n    }\r\n\r\n    private clearIncallModeTimerId() {\r\n        if (this.incallModeTimerId !== undefined) {\r\n            this.logger.debug('Clearing in-call mode timer');\r\n            clearTimeout(this.incallModeTimerId);\r\n            this.incallModeTimerId = undefined;\r\n        }\r\n    }\r\n\r\n    private applyConnectionTrackerOptions(options: ITrouterOptions) {\r\n        try {\r\n            const eventLoggerSent = (options.eventLogger && typeof options.eventLogger.logEvent === 'function');\r\n            if (!eventLoggerSent) {\r\n                this.logger.warn('Trouter client event logging disabled due to invalid configuration.');\r\n            } else {\r\n                this.connectionTracker.mergeSettings(options.telemetrySettings);\r\n                this.connectionTracker.enable(options.eventLogger);\r\n            }\r\n        } catch (error) {\r\n            this.logger.warn(`Trouter client event logging disabled. Error: ${toJson(error.stack)}`);\r\n            this.connectionTracker.disable();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns boolean indicating if we can retry token fetch\r\n     * based on value of optional configuration 'retryLimitOnTokenFetch'\r\n     * @returns boolean\r\n     */\r\n     private canRetryTokenFetchRequest(currentCounter: number) {\r\n        const retryLimit = this.options.retryLimitOnTokenFetch;\r\n\r\n        if (retryLimit === null || retryLimit === undefined) {\r\n\r\n            return true;\r\n        }\r\n\r\n        if (currentCounter < retryLimit) {\r\n\r\n            return true;\r\n        }\r\n\r\n        this.logger.warn(\r\n            `Reached limit on maximum number of token fetch request. Current count: ${currentCounter}, retry limit: ${retryLimit}`\r\n        );\r\n\r\n        return false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/TrouterConnection.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\n // tslint:disable:export-name\r\n\r\nimport { HANDLED_MESSAGE_ACK, UNHANDLED_MESSAGE_ACK } from './Constants';\r\nimport { HandleMessageResult, LogProvider, MessageHandler, TrouterMessage } from './Interfaces';\r\n\r\n/**\r\n * Registry of message handlers.\r\n * Safely executes individual handlers and aggregates results\r\n */\r\nexport class MessageHandlerRegistry {\r\n    private messageHandlers: MessageHandler[] = [];\r\n\r\n    public constructor(private logger: LogProvider) {\r\n    }\r\n\r\n    public register(handler: MessageHandler) {\r\n        if (this.messageHandlers.some(item => item === handler)) {\r\n            throw new Error('Registering the same handler twice is not allowed');\r\n        }\r\n        this.messageHandlers.push(handler);\r\n    }\r\n\r\n    public clear() {\r\n        this.logger.debug('Clearing message handlers');\r\n        this.messageHandlers = [];\r\n    }\r\n\r\n    public active(): boolean {\r\n        return (this.messageHandlers.length > 0);\r\n    }\r\n\r\n    public handleMessage(message: TrouterMessage): HandleMessageResult {\r\n        const unhandledMessageResult = {\r\n            resultCode: UNHANDLED_MESSAGE_ACK,\r\n            isHandled: false\r\n        };\r\n\r\n        for (const messageHandler of this.messageHandlers) {\r\n            const result = this.safeExecuteHandle(messageHandler, message);\r\n            if (result !== undefined && (result.isHandled === undefined || result.isHandled)) {\r\n                if (result.resultCode === undefined) {\r\n                    result.resultCode = HANDLED_MESSAGE_ACK;\r\n                }\r\n\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return unhandledMessageResult;\r\n    }\r\n\r\n    private safeExecuteHandle(handler: MessageHandler, message: TrouterMessage): HandleMessageResult | undefined {\r\n        try {\r\n            return handler.handleMessage(message);\r\n        } catch (exception) {\r\n            this.logger.warn(`A trouter message handler is throwing exceptions. exception: ${exception}`);\r\n\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/MessageHandler.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\nimport { SkypeTokenProvider } from './Interfaces';\r\n\r\n// tslint:disable-next-line:export-name\r\nexport function addCacheAsBackupTo(provider: SkypeTokenProvider): SkypeTokenProvider {\r\n    let cachedToken: string | undefined;\r\n\r\n    return async (forceRefresh: boolean): Promise<string> => {\r\n        if (forceRefresh) {\r\n            cachedToken = undefined;\r\n        }\r\n\r\n        return new Promise<string>((resolve, reject) => {\r\n            provider(forceRefresh).then((token: string) => {\r\n                cachedToken = token;\r\n                resolve(token);\r\n            }).catch((error) => {\r\n                if (cachedToken !== undefined && cachedToken.length > 0) {\r\n                    resolve(cachedToken);\r\n                }\r\n                reject(error);\r\n            });\r\n        });\r\n    };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/SkypeTokenProviderWithCache.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\n// tslint:disable:strict-boolean-expressions\r\n// tslint:disable:promise-function-async\r\n\r\nimport { CorrelationVector, toJson } from './Common';\r\nimport {\r\n    ConnectionInfo, Listener, LogProvider, Request, Response, SendResponseResult, SkypeTokenProvider, TrouterState,\r\n    UserActivityState\r\n} from './Interfaces';\r\nimport { IMessageLossIndicator, ITrouterOptions, ITrouterRequest, ITrouterResponse, ServerState } from './InternalInterfaces';\r\nimport { Logger } from './Logger';\r\nimport { IManagerConsumer, ReconnectReason, TrouterConnection } from './TrouterConnection';\r\nimport { IManagerWorker, TrouterManagerFsm } from './TrouterManagerFsm';\r\n\r\n\r\n/**\r\n * UserActivity object\r\n */\r\nexport class UserActivityObject {\r\n    public readonly correlationVector: CorrelationVector;\r\n\r\n    constructor(readonly state: UserActivityState, correlationVector?: CorrelationVector) {\r\n        this.correlationVector = correlationVector !== undefined ? correlationVector : CorrelationVector.extend();\r\n    }\r\n\r\n    public getStateString() {\r\n        switch (this.state) {\r\n            case UserActivityState.Active:   return 'active';\r\n            case UserActivityState.Inactive: return 'inactive';\r\n            case UserActivityState.Unknown:  return 'unknown';\r\n            default:                         return 'undefined';\r\n        }\r\n    }\r\n\r\n    public toEventObject() {\r\n        return { state: this.getStateString(), cv: this.correlationVector.value() };\r\n    }\r\n\r\n    public toEventJSON() {\r\n        return toJson(this.toEventObject());\r\n    }\r\n}\r\n\r\n/**\r\n * Trouter implementation\r\n */\r\nexport class TrouterManager implements IManagerWorker, IManagerConsumer {\r\n    private logger: Logger;\r\n    private fsm: TrouterManagerFsm;\r\n    private firstConnection?: TrouterConnection;\r\n    private secondConnection?: TrouterConnection;\r\n    /** Value of first connection before stop() - to dispatch onDisconnected() of first connection */\r\n    private storedFirstConnection?: TrouterConnection;\r\n    private baseEndpointUrl: string;\r\n    private connectionCache?: {};\r\n\r\n    /** Cache for processed message loss to catch duplicates and to not pass them to the listeners */\r\n    private processedMessageLoss: object;\r\n    private userActivityObject: UserActivityObject;\r\n\r\n    public constructor(\r\n        private logFunc: LogProvider,\r\n        private options: ITrouterOptions,\r\n        private tokenProvider: SkypeTokenProvider,\r\n        private listener: Listener\r\n    ) {\r\n        this.logger = new Logger('Manager', logFunc);\r\n        this.logger.info(`Created TrouterManager with options ${toJson(this.options)}`);\r\n        this.fsm = new TrouterManagerFsm(logFunc, this);\r\n        this.baseEndpointUrl = '';\r\n        this.processedMessageLoss = {};\r\n        this.userActivityObject = new UserActivityObject(UserActivityState.Unknown);\r\n    }\r\n\r\n    public start() {\r\n        this.fsm.start();\r\n    }\r\n\r\n    public stop(dontUnregister?: boolean) {\r\n        this.fsm.stop(dontUnregister);\r\n    }\r\n\r\n    public configure(options: ITrouterOptions) {\r\n        this.options = options;\r\n        if (this.firstConnection !== undefined) {\r\n            this.firstConnection.configure(options);\r\n        }\r\n\r\n        if (this.secondConnection !== undefined) {\r\n            this.secondConnection.configure(options);\r\n        }\r\n        this.logger.info(`Reconfigured TrouterManager with options ${toJson(this.options)}`);\r\n    }\r\n\r\n    public checkConnection(disconnectDetected: boolean) {\r\n        if (this.firstConnection !== undefined) {\r\n            this.firstConnection.checkConnection(disconnectDetected);\r\n        }\r\n\r\n        if (this.secondConnection !== undefined) {\r\n            this.secondConnection.checkConnection(disconnectDetected);\r\n        }\r\n    }\r\n\r\n    public async resendRegistration(): Promise<void> {\r\n        if (this.secondConnection !== undefined) {\r\n            this.logger.info('Resending registration on the second/new connection');\r\n\r\n            return this.secondConnection.resendRegistration();\r\n        }\r\n\r\n        if (this.firstConnection !== undefined) {\r\n            this.logger.info('Resending registration on the first/current connection');\r\n\r\n            return this.firstConnection.resendRegistration();\r\n        }\r\n\r\n        this.logger.info('No connection to resend registration on, will be done upon (re)connect');\r\n    }\r\n\r\n    public getServerState(): ServerState | undefined {\r\n        if (this.firstConnection !== undefined) {\r\n            return this.firstConnection.getServerState();\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    /** Returns current state */\r\n    public getState(): TrouterState {\r\n        return this.fsm.getState();\r\n    }\r\n\r\n    //////////// IManagerWorker ////////////\r\n    public startFirstConnection() {\r\n        const connection = new TrouterConnection(this.logFunc, this.options, this, this.tokenProvider, this.userActivityObject);\r\n        this.firstConnection = connection;\r\n\r\n        this.getConnectionCache()\r\n            .then(connectionCache => {\r\n                connection.start(connectionCache);\r\n            })\r\n            .catch();\r\n    }\r\n\r\n    public startSecondConnection(useConnectParamsFromCache: boolean) {\r\n        const connection = new TrouterConnection(this.logFunc, this.options, this, this.tokenProvider, this.userActivityObject);\r\n        this.secondConnection = connection;\r\n        if (this.firstConnection !== undefined) {\r\n            this.firstConnection.disableRegistrationsAndAutoReconnect();\r\n        }\r\n\r\n        if (useConnectParamsFromCache) {\r\n            this.getConnectionCache()\r\n                .then(connectionCache => {\r\n                    connection.start(connectionCache);\r\n                })\r\n                .catch();\r\n        } else {\r\n            connection.start();\r\n        }\r\n    }\r\n\r\n    public stopFirstConnection(dontUnregister: boolean) {\r\n        if (this.firstConnection !== undefined) {\r\n            // Store first connection to be able to compare in onDisconnected() handler\r\n            this.storedFirstConnection = this.firstConnection;\r\n            this.firstConnection.stop(dontUnregister);\r\n            this.firstConnection = undefined;\r\n        }\r\n    }\r\n\r\n    public stopSecondConnection(dontUnregister: boolean) {\r\n        if (this.secondConnection !== undefined) {\r\n            this.secondConnection.stop(dontUnregister);\r\n            this.secondConnection = undefined;\r\n        }\r\n    }\r\n\r\n    public stopSecondConnectionDelayed() {\r\n        if (this.secondConnection !== undefined) {\r\n            const connection = this.secondConnection;\r\n            this.secondConnection = undefined;\r\n            this.logger.info(`Closing an inactive connection in ${Math.round(this.options.lingeringConnectionDelayMs / 1000)}s`);\r\n            setTimeout(() => {\r\n                connection.stop(true);\r\n            }, this.options.lingeringConnectionDelayMs);\r\n        }\r\n    }\r\n\r\n    public forceStopLingeringConnection() {\r\n        if (this.storedFirstConnection) {\r\n            this.storedFirstConnection.stop(false);\r\n            this.storedFirstConnection = undefined;\r\n        }\r\n    }\r\n\r\n    public switchConnections() {\r\n        const tmp = this.firstConnection;\r\n        this.firstConnection = this.secondConnection;\r\n        this.secondConnection = tmp;\r\n    }\r\n\r\n    public doesSecondConnectionExist(): boolean {\r\n        return this.secondConnection !== undefined;\r\n    }\r\n\r\n    public dispatchConnected() {\r\n        if (this.firstConnection !== undefined) {\r\n            const ss = this.firstConnection.getServerState();\r\n            const baseEndpointUrl = (ss.url.slice(-1) === '/') ? ss.url.slice(0, -1) : ss.url;\r\n            const connectionInfo: ConnectionInfo = {\r\n                baseEndpointUrl: baseEndpointUrl,\r\n                newEndpointUrl: (baseEndpointUrl !== this.baseEndpointUrl),\r\n                c2cUrlBase: ss.c2cUrlBase,\r\n                clientId: ss.connectedClientId,\r\n                connectionId: ss.connectionId,\r\n                connectionTtlSec: ss.getRemainingTtlInSec()\r\n            };\r\n            this.baseEndpointUrl = baseEndpointUrl;\r\n            this.listener.onTrouterConnected(ss.url, connectionInfo);\r\n        }\r\n    }\r\n\r\n    public dispatchReconnecting() {\r\n        if (this.listener.onTrouterDisconnected) {\r\n            this.listener.onTrouterDisconnected();\r\n        }\r\n    }\r\n\r\n    public dispatchStopped() {\r\n        if (this.listener.onTrouterDisconnected) {\r\n            this.listener.onTrouterDisconnected();\r\n        }\r\n    }\r\n\r\n    public dispatchRegistrationState(isRegistered: boolean) {\r\n        if (this.options.registrationStateCallback) {\r\n            this.options.registrationStateCallback(isRegistered);\r\n        }\r\n    }\r\n\r\n    //////////// IManagerConsumer ////////////\r\n    public onDownstreamRequest(connection: TrouterConnection, request: ITrouterRequest, response: ITrouterResponse) {\r\n        const req: Request = {\r\n            id: request.id,\r\n            method: request.method,\r\n            path: `/${request.shortUrl}`,\r\n            body: request.body,\r\n            headers: request.headers\r\n        };\r\n        const rsp: Response = {\r\n            id: request.id,\r\n            status: 0,\r\n            headers: {},\r\n            body: '',\r\n            send: () => {\r\n                if (rsp.status <= 100 || rsp.status >= 999) {\r\n\r\n                    return SendResponseResult.Incomplete;\r\n                }\r\n                response.writeHead(rsp.status, rsp.headers);\r\n\r\n                return response.end(rsp.body);\r\n            }\r\n        };\r\n        this.listener.onTrouterRequest(req, rsp);\r\n    }\r\n\r\n    public onConnected(connection: TrouterConnection) {\r\n        this.fsm.onConnected(connection === this.firstConnection);\r\n    }\r\n\r\n    public onRegistered(connection: TrouterConnection) {\r\n        this.fsm.onRegistered(connection === this.firstConnection);\r\n    }\r\n\r\n    public onUnregistered(connection: TrouterConnection) {\r\n        this.fsm.onUnregistered(connection === this.firstConnection || connection === this.storedFirstConnection);\r\n    }\r\n\r\n    public onReconnecting(connection: TrouterConnection) {\r\n        this.fsm.onReconnecting(connection === this.firstConnection);\r\n    }\r\n\r\n    public onReconnectIsRequired(connection: TrouterConnection, useConnectParamsFromCache: boolean, reason: ReconnectReason) {\r\n        this.fsm.onReconnectionRequired(connection === this.firstConnection, useConnectParamsFromCache, reason);\r\n    }\r\n\r\n    public onDisconnected(connection: TrouterConnection) {\r\n        this.fsm.onDisconnected(connection === this.storedFirstConnection);\r\n        this.storedFirstConnection = undefined;\r\n    }\r\n\r\n    public onUserActivityStateAccepted(cv: string) {\r\n        if (this.listener.onTrouterUserActivityStateAccepted) {\r\n            this.listener.onTrouterUserActivityStateAccepted(cv);\r\n        }\r\n    }\r\n\r\n    public onConnectionParametersUpdated(connectionParameters: {}) {\r\n        this.setConnectionCache(connectionParameters);\r\n    }\r\n\r\n    public setUserActivityState(state: UserActivityState, correlationVector?: string): void {\r\n        this.userActivityObject = new UserActivityObject(state, CorrelationVector.extend(correlationVector));\r\n        if (this.secondConnection !== undefined) {\r\n            this.logger.info(`Setting user activity ${this.userActivityObject.toEventJSON()} on the second/new connection`);\r\n            this.secondConnection.setUserActivityState(this.userActivityObject);\r\n\r\n            return;\r\n        }\r\n\r\n        if (this.firstConnection !== undefined) {\r\n            this.logger.info(`Setting user activity ${this.userActivityObject.toEventJSON()} on the first/current connection`);\r\n            this.firstConnection.setUserActivityState(this.userActivityObject);\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    public onTrouterMessageLost(indicators: IMessageLossIndicator[]) {\r\n        if (this.listener.onTrouterMessageLoss) {\r\n            if (indicators && indicators.length) {\r\n                // Filter out already seen dropped indicators and inform server that they are processed\r\n                const duplicates = indicators.filter(di => this.processedMessageLoss[`${di.tag}-${di.etag}`] !== undefined);\r\n                if (duplicates.length) {\r\n                    this.logger.warn('onTrouterMessageLoss - removing duplicates and sending event to server');\r\n                    this.sendProcessedDroppedIndicators(duplicates);\r\n                    indicators = indicators.filter(di => this.processedMessageLoss[`${di.tag}-${di.etag}`] === undefined);\r\n\r\n                    if (!indicators.length) {\r\n                        this.logger.warn('onTrouterMessageLoss - All the data are duplicated');\r\n\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                // Send the data to the listeners\r\n                const messageLossProcessed = this.listener.onTrouterMessageLoss(indicators.map(di => di.tag));\r\n                if (!messageLossProcessed) {\r\n                    this.logger.warn('onTrouterMessageLoss - flow tags have not been processed by listeners');\r\n\r\n                    return;\r\n                }\r\n\r\n                // Update the cache\r\n                indicators.forEach(di => {\r\n                    this.processedMessageLoss[`${di.tag}-${di.etag}`] = '';\r\n                });\r\n                this.sendProcessedDroppedIndicators(indicators);\r\n            } else {\r\n                this.logger.warn('onTrouterMessageLoss - no flow tags have been provided');\r\n            }\r\n        }\r\n    }\r\n\r\n    private getConnectionCache(): Promise<{} | undefined> {\r\n        if (!this.options.connectionCache) {\r\n\r\n            return Promise.resolve(this.connectionCache);\r\n        }\r\n\r\n        this.logger.debug('Querying host\\'s connection cache');\r\n\r\n        return this.options.connectionCache.onGetTrouterConnectionCache()\r\n            .then((serialized) => {\r\n\r\n                return serialized ? JSON.parse(serialized) : undefined;\r\n            })\r\n            .catch((e) => {\r\n                this.logger.warn(`Invalid connection cache content provided: ${e}`);\r\n\r\n                return this.connectionCache;\r\n            });\r\n    }\r\n\r\n    private setConnectionCache(content: {}) {\r\n        this.connectionCache = content;\r\n        if (this.options.connectionCache) {\r\n            try {\r\n                this.options.connectionCache.onSetTrouterConnectionCache(JSON.stringify(content));\r\n            } catch (e) {\r\n                this.logger.warn(`Error setting external connection cache: ${e}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private sendProcessedDroppedIndicators(messageLossIndicators: IMessageLossIndicator[]) {\r\n        if (this.firstConnection !== undefined) {\r\n            this.firstConnection.sendProcessedDroppedIndicators(messageLossIndicators);\r\n\r\n            return;\r\n        }\r\n\r\n        if (this.secondConnection !== undefined) {\r\n            this.secondConnection.sendProcessedDroppedIndicators(messageLossIndicators);\r\n\r\n            return;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/TrouterManager.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\n import { LogProvider } from './Interfaces';\r\n\r\n /**\r\n  * Util that encapsulates lifecycle of active trouter URL and manages waiter for the URL via promise\r\n  */\r\n export class TrouterUrlPromise {\r\n    private url?: string;\r\n    private pendingPromise?: Promise<string>;\r\n    private pendingPromiseResolveRef?: Function;\r\n    private pendingPromiseRejectRef?: Function;\r\n\r\n    public constructor(private logger: LogProvider) {\r\n    }\r\n\r\n    // tslint:disable-next-line:promise-function-async\r\n    public getPromise(): Promise<string> {\r\n        if (this.url !== undefined) {\r\n            this.logger.debug(`[TrouterUrlPromise] returning previously resolved url: ${this.url}`);\r\n\r\n            return Promise.resolve(this.url);\r\n        }\r\n\r\n        if (this.pendingPromise === undefined) {\r\n            this.logger.debug('[TrouterUrlPromise] creating and returning promise');\r\n            // tslint:disable-next-line:promise-must-complete\r\n            this.pendingPromise = new Promise<string>((resolve, reject) => {\r\n                this.pendingPromiseResolveRef = resolve;\r\n                this.pendingPromiseRejectRef = reject;\r\n            });\r\n        } else {\r\n            this.logger.debug('[TrouterUrlPromise] returning existing promise');\r\n        }\r\n\r\n        return this.pendingPromise;\r\n    }\r\n\r\n    public resolveUrl(url: string) {\r\n        this.url = url;\r\n        this.logger.debug(`[TrouterUrlPromise] got url: ${this.url}`);\r\n\r\n        const resolveCallback = this.pendingPromiseResolveRef;\r\n        this.pendingPromise = undefined;\r\n        this.pendingPromiseResolveRef = undefined;\r\n        this.pendingPromiseRejectRef = undefined;\r\n\r\n        if (resolveCallback !== undefined) {\r\n            this.logger.debug('[TrouterUrlPromise] resolving promise');\r\n            resolveCallback(url);\r\n        }\r\n    }\r\n\r\n    public rejectUrl(error: Error) {\r\n        this.logger.debug('[TrouterUrlPromise] aborting');\r\n        const rejectCallback = this.pendingPromiseRejectRef;\r\n        this.url = undefined;\r\n        this.pendingPromise = undefined;\r\n        this.pendingPromiseResolveRef = undefined;\r\n        this.pendingPromiseRejectRef = undefined;\r\n\r\n        if (rejectCallback !== undefined) {\r\n            this.logger.debug('[TrouterUrlPromise] rejecting promise');\r\n            rejectCallback(error);\r\n        }\r\n    }\r\n\r\n    public resetUrl() {\r\n        this.logger.debug('[TrouterUrlPromise] resetting url');\r\n        this.url = undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/TrouterUrlPromise.ts","/** Socket.IO.js build:0.9.6, development. Copyright(c) 2011 LearnBoost <dev@learnboost.com> MIT Licensed */\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, global) {\r\n\r\n  /**\r\n   * IO namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  var io = exports;\r\n\r\n  /**\r\n   * Socket.IO version\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  io.version = '0.9.6';\r\n\r\n  /**\r\n   * Protocol implemented.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  io.protocol = 1;\r\n\r\n  /**\r\n   * Available transports, these will be populated with the available transports\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  io.transports = [];\r\n\r\n  /**\r\n   * Keep track of jsonp callbacks.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.j = [];\r\n\r\n  /**\r\n   * Keep track of our io.Sockets\r\n   *\r\n   * @api private\r\n   */\r\n  io.sockets = {};\r\n\r\n\r\n  /**\r\n   * Manages connections to hosts.\r\n   *\r\n   * @param {String} uri\r\n   * @Param {Boolean} force creation of new socket (defaults to false)\r\n   * @api public\r\n   */\r\n\r\n  io.connect = function (host, details) {\r\n    var uri = io.util.parseUri(host)\r\n      , uuri\r\n      , socket;\r\n\r\n    if (global && global.location) {\r\n      uri.protocol = uri.protocol || global.location.protocol.slice(0, -1);\r\n      uri.host = uri.host || (global.document\r\n        ? global.document.domain : global.location.hostname);\r\n      uri.port = uri.port || global.location.port;\r\n    }\r\n\r\n    uuri = io.util.uniqueUri(uri);\r\n\r\n    var options = {\r\n        host: uri.host\r\n      , secure: 'https' == uri.protocol\r\n      , port: uri.port || ('https' == uri.protocol ? 443 : 80)\r\n      , query: uri.query || ''\r\n    };\r\n\r\n    io.util.merge(options, details);\r\n\r\n    if (options['force new connection'] || !io.sockets[uuri]) {\r\n      socket = new io.Socket(options);\r\n    }\r\n\r\n    if (!options['force new connection'] && socket) {\r\n      io.sockets[uuri] = socket;\r\n    }\r\n\r\n    socket = socket || io.sockets[uuri];\r\n\r\n    // if path is different from '' or /\r\n    return socket.of(uri.path.length > 1 ? uri.path : '');\r\n  };\r\n\r\n})(\r\n    'object' === typeof module ? module.exports : (this.io = {})\r\n  , 'undefined' === typeof global ? window : global);\r\n\r\n// Workaround inside webpack\r\nvar io = module.exports;\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, global) {\r\n\r\n  /**\r\n   * Utilities namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  var util = exports.util = {};\r\n\r\n  /**\r\n   * Parses an URI\r\n   *\r\n   * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n   * @api public\r\n   */\r\n\r\n  var re = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\n  var parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password',\r\n               'host', 'port', 'relative', 'path', 'directory', 'file', 'query',\r\n               'anchor'];\r\n\r\n  util.parseUri = function (str) {\r\n    var m = re.exec(str || '')\r\n      , uri = {}\r\n      , i = 14;\r\n\r\n    while (i--) {\r\n      uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    return uri;\r\n  };\r\n\r\n  /**\r\n   * Produces a unique url that identifies a Socket.IO connection.\r\n   *\r\n   * @param {Object} uri\r\n   * @api public\r\n   */\r\n\r\n  util.uniqueUri = function (uri) {\r\n    var protocol = uri.protocol\r\n      , host = uri.host\r\n      , port = uri.port;\r\n\r\n    if ('document' in global) {\r\n      host = host || document.domain;\r\n      port = port || (protocol == 'https'\r\n        && document.location.protocol !== 'https:' ? 443 : document.location.port);\r\n    } else {\r\n      host = host || 'localhost';\r\n\r\n      if (!port && protocol == 'https') {\r\n        port = 443;\r\n      }\r\n    }\r\n\r\n    return (protocol || 'http') + '://' + host + ':' + (port || 80);\r\n  };\r\n\r\n  /**\r\n   * Mergest 2 query strings in to once unique query string\r\n   *\r\n   * @param {String} base\r\n   * @param {String} addition\r\n   * @api public\r\n   */\r\n\r\n  util.query = function (base, addition) {\r\n    var query = util.chunkQuery(base || '')\r\n      , components = [];\r\n\r\n    util.merge(query, util.chunkQuery(addition || ''));\r\n    for (var part in query) {\r\n      if (query.hasOwnProperty(part)) {\r\n        components.push(part + '=' + query[part]);\r\n      }\r\n    }\r\n\r\n    return components.length ? '?' + components.join('&') : '';\r\n  };\r\n\r\n  /**\r\n   * Transforms a querystring in to an object\r\n   *\r\n   * @param {String} qs\r\n   * @api public\r\n   */\r\n\r\n  util.chunkQuery = function (qs) {\r\n    var query = {}\r\n      , params = qs.split('&')\r\n      , i = 0\r\n      , l = params.length\r\n      , kv;\r\n\r\n    for (; i < l; ++i) {\r\n      kv = params[i].split('=');\r\n      if (kv[0]) {\r\n        query[kv[0]] = kv[1];\r\n      }\r\n    }\r\n\r\n    return query;\r\n  };\r\n\r\n  /**\r\n   * Executes the given function when the page is loaded.\r\n   *\r\n   *     io.util.load(function () { console.log('page loaded'); });\r\n   *\r\n   * @param {Function} fn\r\n   * @api public\r\n   */\r\n\r\n  var pageLoaded = false;\r\n\r\n  util.load = function (fn) {\r\n    if ('document' in global && document.readyState === 'complete' || pageLoaded) {\r\n      return fn();\r\n    }\r\n\r\n    util.on(global, 'load', fn, false);\r\n  };\r\n\r\n  /**\r\n   * Adds an event.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  util.on = function (element, event, fn, capture) {\r\n    if (element.attachEvent) {\r\n      element.attachEvent('on' + event, fn);\r\n    } else if (element.addEventListener) {\r\n      element.addEventListener(event, fn, capture);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Generates the correct `XMLHttpRequest` for regular and cross domain requests.\r\n   *\r\n   * @param {Boolean} [xdomain] Create a request that can be used cross domain.\r\n   * @returns {XMLHttpRequest|false} If we can create a XMLHttpRequest.\r\n   * @api private\r\n   */\r\n\r\n  util.request = function (xdomain) {\r\n\r\n    if (xdomain && 'undefined' != typeof XDomainRequest) {\r\n      return new XDomainRequest();\r\n    }\r\n\r\n    if ('undefined' != typeof XMLHttpRequest && (!xdomain || util.ua.hasCORS)) {\r\n      return new XMLHttpRequest();\r\n    }\r\n\r\n    if (!xdomain) {\r\n      try {\r\n        return new window[(['Active'].concat('Object').join('X'))]('Microsoft.XMLHTTP');\r\n      } catch(e) { }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * XHR based transport constructor.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  /**\r\n   * Change the internal pageLoaded value.\r\n   */\r\n\r\n  if ('undefined' != typeof window) {\r\n    util.load(function () {\r\n      pageLoaded = true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Defers a function to ensure a spinner is not displayed by the browser\r\n   *\r\n   * @param {Function} fn\r\n   * @api public\r\n   */\r\n\r\n  util.defer = function (fn) {\r\n    if (!util.ua.webkit || 'undefined' != typeof importScripts) {\r\n      return fn();\r\n    }\r\n\r\n    util.load(function () {\r\n      setTimeout(fn, 100);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Merges two objects.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.merge = function merge (target, additional, deep, lastseen) {\r\n    var seen = lastseen || []\r\n      , depth = typeof deep == 'undefined' ? 2 : deep\r\n      , prop;\r\n\r\n    for (prop in additional) {\r\n      if (additional.hasOwnProperty(prop) && util.indexOf(seen, prop) < 0) {\r\n        if (typeof target[prop] !== 'object' || !depth) {\r\n          target[prop] = additional[prop];\r\n          seen.push(additional[prop]);\r\n        } else {\r\n          util.merge(target[prop], additional[prop], depth - 1, seen);\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  };\r\n\r\n  /**\r\n   * Merges prototypes from objects\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.mixin = function (ctor, ctor2) {\r\n    util.merge(ctor.prototype, ctor2.prototype);\r\n  };\r\n\r\n  /**\r\n   * Shortcut for prototypical and static inheritance.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  util.inherit = function (ctor, ctor2) {\r\n    function f() {};\r\n    f.prototype = ctor2.prototype;\r\n    ctor.prototype = new f;\r\n  };\r\n\r\n  /**\r\n   * Checks if the given object is an Array.\r\n   *\r\n   *     io.util.isArray([]); // true\r\n   *     io.util.isArray({}); // false\r\n   *\r\n   * @param Object obj\r\n   * @api public\r\n   */\r\n\r\n  util.isArray = Array.isArray || function (obj) {\r\n    return Object.prototype.toString.call(obj) === '[object Array]';\r\n  };\r\n\r\n  /**\r\n   * Intersects values of two arrays into a third\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.intersect = function (arr, arr2) {\r\n    var ret = []\r\n      , longest = arr.length > arr2.length ? arr : arr2\r\n      , shortest = arr.length > arr2.length ? arr2 : arr;\r\n\r\n    for (var i = 0, l = shortest.length; i < l; i++) {\r\n      if (~util.indexOf(longest, shortest[i]))\r\n        ret.push(shortest[i]);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * Array indexOf compatibility.\r\n   *\r\n   * @see bit.ly/a5Dxa2\r\n   * @api public\r\n   */\r\n\r\n  util.indexOf = function (arr, o, i) {\r\n\r\n    for (var j = arr.length, i = i < 0 ? i + j < 0 ? 0 : i + j : i || 0;\r\n         i < j && arr[i] !== o; i++) {}\r\n\r\n    return j <= i ? -1 : i;\r\n  };\r\n\r\n  /**\r\n   * Converts enumerables to array.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.toArray = function (enu) {\r\n    var arr = [];\r\n\r\n    for (var i = 0, l = enu.length; i < l; i++)\r\n      arr.push(enu[i]);\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * UA / engines detection namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  util.ua = {};\r\n\r\n  /**\r\n   * Whether the UA supports CORS for XHR.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.ua.hasCORS = 'undefined' != typeof XMLHttpRequest && (function () {\r\n    try {\r\n      var a = new XMLHttpRequest();\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n\r\n    return a.withCredentials != undefined;\r\n  })();\r\n\r\n  /**\r\n   * Detect webkit.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.ua.webkit = 'undefined' != typeof navigator\r\n    && /webkit/i.test(navigator.userAgent);\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' === typeof global ? window : global);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.EventEmitter = EventEmitter;\r\n\r\n  /**\r\n   * Event emitter constructor.\r\n   *\r\n   * @api public.\r\n   */\r\n\r\n  function EventEmitter () {};\r\n\r\n  /**\r\n   * Adds a listener\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.on = function (name, fn) {\r\n    if (!this.$events) {\r\n      this.$events = {};\r\n    }\r\n\r\n    if (!this.$events[name]) {\r\n      this.$events[name] = fn;\r\n    } else if (io.util.isArray(this.$events[name])) {\r\n      this.$events[name].push(fn);\r\n    } else {\r\n      this.$events[name] = [this.$events[name], fn];\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n  /**\r\n   * Adds a volatile listener.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.once = function (name, fn) {\r\n    var self = this;\r\n\r\n    function on () {\r\n      self.removeListener(name, on);\r\n      fn.apply(this, arguments);\r\n    };\r\n\r\n    on.listener = fn;\r\n    this.on(name, on);\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Removes a listener.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.removeListener = function (name, fn) {\r\n    if (this.$events && this.$events[name]) {\r\n      var list = this.$events[name];\r\n\r\n      if (io.util.isArray(list)) {\r\n        var pos = -1;\r\n\r\n        for (var i = 0, l = list.length; i < l; i++) {\r\n          if (list[i] === fn || (list[i].listener && list[i].listener === fn)) {\r\n            pos = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (pos < 0) {\r\n          return this;\r\n        }\r\n\r\n        list.splice(pos, 1);\r\n\r\n        if (!list.length) {\r\n          delete this.$events[name];\r\n        }\r\n      } else if (list === fn || (list.listener && list.listener === fn)) {\r\n        delete this.$events[name];\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Removes all listeners for an event.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.removeAllListeners = function (name) {\r\n    // TODO: enable this when node 0.5 is stable\r\n    //if (name === undefined) {\r\n      //this.$events = {};\r\n      //return this;\r\n    //}\r\n\r\n    if (this.$events && this.$events[name]) {\r\n      this.$events[name] = null;\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Gets all listeners for a certain event.\r\n   *\r\n   * @api publci\r\n   */\r\n\r\n  EventEmitter.prototype.listeners = function (name) {\r\n    if (!this.$events) {\r\n      this.$events = {};\r\n    }\r\n\r\n    if (!this.$events[name]) {\r\n      this.$events[name] = [];\r\n    }\r\n\r\n    if (!io.util.isArray(this.$events[name])) {\r\n      this.$events[name] = [this.$events[name]];\r\n    }\r\n\r\n    return this.$events[name];\r\n  };\r\n\r\n  /**\r\n   * Emits an event.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.emit = function (name) {\r\n    if (!this.$events) {\r\n      return false;\r\n    }\r\n\r\n    var handler = this.$events[name];\r\n\r\n    if (!handler) {\r\n      return false;\r\n    }\r\n\r\n    var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n    if ('function' == typeof handler) {\r\n      handler.apply(this, args);\r\n    } else if (io.util.isArray(handler)) {\r\n      var listeners = handler.slice();\r\n\r\n      for (var i = 0, l = listeners.length; i < l; i++) {\r\n        listeners[i].apply(this, args);\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n/**\r\n * Removed JSON polyfill - obsolete, and we are using native JSON.parse etc. throughout the rest of the codebase anyway\r\n */\r\n\r\n(function (exports, nativeJSON) {\r\n  \"use strict\";\r\n\r\n  // use native JSON if it's available\r\n  if (nativeJSON && nativeJSON.parse){\r\n    return exports.JSON = {\r\n      parse: nativeJSON.parse\r\n    , stringify: nativeJSON.stringify\r\n    }\r\n  }\r\n\r\n  throw new Error(\"JSON not available\");\r\n  \r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , typeof JSON !== 'undefined' ? JSON : undefined\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Parser namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  var parser = exports.parser = {};\r\n\r\n  /**\r\n   * Packet types.\r\n   */\r\n\r\n  var packets = parser.packets = [\r\n      'disconnect'\r\n    , 'connect'\r\n    , 'heartbeat'\r\n    , 'message'\r\n    , 'json'\r\n    , 'event'\r\n    , 'ack'\r\n    , 'error'\r\n    , 'noop'\r\n  ];\r\n\r\n  /**\r\n   * Errors reasons.\r\n   */\r\n\r\n  var reasons = parser.reasons = [\r\n      'transport not supported'\r\n    , 'client not handshaken'\r\n    , 'unauthorized'\r\n  ];\r\n\r\n  /**\r\n   * Errors advice.\r\n   */\r\n\r\n  var advice = parser.advice = [\r\n      'reconnect'\r\n  ];\r\n\r\n  /**\r\n   * Shortcuts.\r\n   */\r\n\r\n  var JSON = io.JSON\r\n    , indexOf = io.util.indexOf;\r\n\r\n  /**\r\n   * Encodes a packet.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  parser.encodePacket = function (packet) {\r\n    var type = indexOf(packets, packet.type)\r\n      , id = packet.id || ''\r\n      , endpoint = packet.endpoint || ''\r\n      , ack = packet.ack\r\n      , data = null;\r\n\r\n    switch (packet.type) {\r\n      case 'error':\r\n        var reason = packet.reason ? indexOf(reasons, packet.reason) : ''\r\n          , adv = packet.advice ? indexOf(advice, packet.advice) : '';\r\n\r\n        if (reason !== '' || adv !== '')\r\n          data = reason + (adv !== '' ? ('+' + adv) : '');\r\n\r\n        break;\r\n\r\n      case 'message':\r\n        if (packet.data !== '')\r\n          data = packet.data;\r\n        break;\r\n\r\n      case 'event':\r\n        var ev = { name: packet.name };\r\n\r\n        if (packet.args && packet.args.length) {\r\n          ev.args = packet.args;\r\n        }\r\n\r\n        data = JSON.stringify(ev);\r\n        break;\r\n\r\n      case 'json':\r\n        data = JSON.stringify(packet.data);\r\n        break;\r\n\r\n      case 'connect':\r\n        if (packet.qs)\r\n          data = packet.qs;\r\n        break;\r\n\r\n      case 'ack':\r\n        data = packet.ackId\r\n          + (packet.args && packet.args.length\r\n              ? '+' + JSON.stringify(packet.args) : '');\r\n        break;\r\n    }\r\n\r\n    // construct packet with required fragments\r\n    var encoded = [\r\n        type\r\n      , id + (ack == 'data' ? '+' : '')\r\n      , endpoint\r\n    ];\r\n\r\n    // data fragment is optional\r\n    if (data !== null && data !== undefined)\r\n      encoded.push(data);\r\n\r\n    return encoded.join(':');\r\n  };\r\n\r\n  /**\r\n   * Encodes multiple messages (payload).\r\n   *\r\n   * @param {Array} messages\r\n   * @api private\r\n   */\r\n\r\n  parser.encodePayload = function (packets) {\r\n    var decoded = '';\r\n\r\n    if (packets.length == 1)\r\n      return packets[0];\r\n\r\n    for (var i = 0, l = packets.length; i < l; i++) {\r\n      var packet = packets[i];\r\n      decoded += '\\ufffd' + packet.length + '\\ufffd' + packets[i];\r\n    }\r\n\r\n    return decoded;\r\n  };\r\n\r\n  /**\r\n   * Decodes a packet\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  var regexp = /([^:]+):([0-9]+)?(\\+)?:([^:]+)?:?([\\s\\S]*)?/;\r\n\r\n  parser.decodePacket = function (data) {\r\n    var pieces = data.match(regexp);\r\n\r\n    if (!pieces) return {};\r\n\r\n    var id = pieces[2] || ''\r\n      , data = pieces[5] || ''\r\n      , packet = {\r\n            type: packets[pieces[1]]\r\n          , endpoint: pieces[4] || ''\r\n        };\r\n\r\n    // whether we need to acknowledge the packet\r\n    if (id) {\r\n      packet.id = id;\r\n      if (pieces[3])\r\n        packet.ack = 'data';\r\n      else\r\n        packet.ack = true;\r\n    }\r\n\r\n    // handle different packet types\r\n    switch (packet.type) {\r\n      case 'error':\r\n        var pieces = data.split('+');\r\n        packet.reason = reasons[pieces[0]] || '';\r\n        packet.advice = advice[pieces[1]] || '';\r\n        break;\r\n\r\n      case 'message':\r\n        packet.data = data || '';\r\n        break;\r\n\r\n      case 'event':\r\n        try {\r\n          var opts = JSON.parse(data);\r\n          packet.name = opts.name;\r\n          packet.args = opts.args;\r\n        } catch (e) { }\r\n\r\n        packet.args = packet.args || [];\r\n        break;\r\n\r\n      case 'json':\r\n        try {\r\n          packet.data = JSON.parse(data);\r\n        } catch (e) { }\r\n        break;\r\n\r\n      case 'connect':\r\n        packet.qs = data || '';\r\n        break;\r\n\r\n      case 'ack':\r\n        var pieces = data.match(/^([0-9]+)(\\+)?(.*)/);\r\n        if (pieces) {\r\n          packet.ackId = pieces[1];\r\n          packet.args = [];\r\n\r\n          if (pieces[3]) {\r\n            try {\r\n              packet.args = pieces[3] ? JSON.parse(pieces[3]) : [];\r\n            } catch (e) { }\r\n          }\r\n        }\r\n        break;\r\n\r\n      case 'disconnect':\r\n        packet.reason = data;\r\n        break;\r\n\r\n      case 'heartbeat':\r\n        break;\r\n    };\r\n\r\n    return packet;\r\n  };\r\n\r\n  /**\r\n   * Decodes data payload. Detects multiple messages\r\n   *\r\n   * @return {Array} messages\r\n   * @api public\r\n   */\r\n\r\n  parser.decodePayload = function (data) {\r\n    // IE doesn't like data[i] for unicode chars, charAt works fine\r\n    if (data.charAt(0) == '\\ufffd') {\r\n      var ret = [];\r\n\r\n      for (var i = 1, length = ''; i < data.length; i++) {\r\n        if (data.charAt(i) == '\\ufffd') {\r\n          ret.push(parser.decodePacket(data.substr(i + 1).substr(0, length)));\r\n          i += Number(length) + 1;\r\n          length = '';\r\n        } else {\r\n          length += data.charAt(i);\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    } else {\r\n      return [parser.decodePacket(data)];\r\n    }\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.Transport = Transport;\r\n\r\n  /**\r\n   * This is the transport template for all supported transport methods.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  function Transport (socket, sessid) {\r\n    this.socket = socket;\r\n    this.sessid = sessid;\r\n    this.connectErrorCallback = undefined;\r\n    this.isOpened = false;\r\n  };\r\n\r\n  /**\r\n   * Apply EventEmitter mixin.\r\n   */\r\n\r\n  io.util.mixin(Transport, io.EventEmitter);\r\n\r\n  /**\r\n   * Handles the response from the server. When a new response is received\r\n   * it will automatically update the timeout, decode the message and\r\n   * forwards the response to the onMessage function for further processing.\r\n   *\r\n   * @param {String} data Response from the server.\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onData = function (data) {\r\n    this.clearCloseTimeout();\r\n\r\n    // If the connection in currently open (or in a reopening state) reset the close\r\n    // timeout since we have just received data. This check is necessary so\r\n    // that we don't reset the timeout on an explicitly disconnected connection.\r\n    if (this.socket.connected || this.socket.connecting || this.socket.reconnecting) {\r\n      this.setCloseTimeout();\r\n    }\r\n\r\n    if (data !== '') {\r\n      // todo: we should only do decodePayload for xhr transports\r\n      var msgs = io.parser.decodePayload(data);\r\n\r\n      if (msgs && msgs.length) {\r\n        for (var i = 0, l = msgs.length; i < l; i++) {\r\n          this.onPacket(msgs[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Handles packets.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onPacket = function (packet) {\r\n    this.socket.setHeartbeatTimeout();\r\n\r\n    if (packet.type == 'heartbeat') {\r\n      return this.onHeartbeat();\r\n    }\r\n\r\n    if (packet.type == 'connect' && packet.endpoint == '') {\r\n      this.onConnect();\r\n    }\r\n\r\n    if (packet.type == 'error' && packet.advice == 'reconnect') {\r\n      this.isOpened = false;\r\n    }\r\n\r\n    this.socket.onPacket(packet);\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sets close timeout\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.setCloseTimeout = function () {\r\n    if (!this.closeTimeout) {\r\n      var self = this;\r\n\r\n      this.closeTimeout = setTimeout(function () {\r\n        self.onDisconnect();\r\n      }, this.socket.closeTimeout);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called when transport disconnects.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onDisconnect = function () {\r\n    if (this.close && this.isOpened) this.close();\r\n    this.clearTimeouts();\r\n    this.socket.onDisconnect();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Called when transport connects\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onConnect = function () {\r\n    this.socket.onConnect();\r\n    this.connectErrorCallback = undefined;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clears close timeout\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.clearCloseTimeout = function () {\r\n    if (this.closeTimeout) {\r\n      clearTimeout(this.closeTimeout);\r\n      this.closeTimeout = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Clear timeouts\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.clearTimeouts = function () {\r\n    this.clearCloseTimeout();\r\n\r\n    if (this.reopenTimeout) {\r\n      clearTimeout(this.reopenTimeout);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Sends a packet\r\n   *\r\n   * @param {Object} packet object.\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.packet = function (packet) {\r\n    this.send(io.parser.encodePacket(packet));\r\n  };\r\n\r\n  /**\r\n   * Send the received heartbeat message back to server. So the server\r\n   * knows we are still connected.\r\n   *\r\n   * @param {String} heartbeat Heartbeat response from the server.\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onHeartbeat = function (heartbeat) {\r\n    this.packet({ type: 'heartbeat' });\r\n  };\r\n\r\n  /**\r\n   * Called when the transport opens.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onOpen = function () {\r\n    this.isOpened = true;\r\n    this.clearCloseTimeout();\r\n    this.socket.onOpen();\r\n  };\r\n\r\n  /**\r\n   * Notifies the base when the connection with the Socket.IO server\r\n   * has been disconnected.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onClose = function () {\r\n    var self = this;\r\n\r\n    /* FIXME: reopen delay causing a infinit loop\r\n    this.reopenTimeout = setTimeout(function () {\r\n      self.open();\r\n    }, this.socket.options['reopen delay']);*/\r\n\r\n    this.isOpened = false;\r\n    this.socket.onClose();\r\n    this.onDisconnect();\r\n  };\r\n\r\n  /**\r\n   * Generates a connection url based on the Socket.IO URL Protocol.\r\n   * See <https://github.com/learnboost/socket.io-node/> for more details.\r\n   *\r\n   * @returns {String} Connection url\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.prepareUrl = function () {\r\n    var options = this.socket.options;\r\n\r\n    return this.scheme() + '://'\r\n      + options.host + ':' + options.port + '/'\r\n      + options.resource + '/' + io.protocol\r\n      + '/' + this.name + '/' + this.sessid;\r\n  };\r\n\r\n  /**\r\n   * Checks if the transport is ready to start a connection.\r\n   *\r\n   * @param {Socket} socket The socket instance that needs a transport\r\n   * @param {Function} fn The callback\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.ready = function (socket, fn) {\r\n    fn.call(this);\r\n  };\r\n\r\n  /**\r\n   * Clears the event handlers attached on to by specific transport implementations.\r\n   *\r\n   * @api private\r\n   */\r\n  Transport.prototype.clearEventHandlers = function () {\r\n      return this;\r\n  };\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.Socket = Socket;\r\n\r\n  /**\r\n   * Create a new `Socket.IO client` which can establish a persistent\r\n   * connection with a Socket.IO enabled server.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  function Socket (options) {\r\n    this.options = {\r\n        port: 80\r\n      , secure: false\r\n      , document: 'document' in global ? document : false\r\n      , resource: 'socket.io'\r\n      , transports: io.transports.slice()\r\n      , 'connect timeout': 10000\r\n      , 'try multiple transports': true\r\n      , 'reconnect': true\r\n      , 'reconnection delay': 500\r\n      , 'reconnection limit': Infinity\r\n      , 'reopen delay': 3000\r\n      , 'max reconnection attempts': 10\r\n      , 'sync disconnect on unload': true\r\n      , 'auto connect': true\r\n      , 'flash policy port': 10843\r\n    };\r\n\r\n    io.util.merge(this.options, options);\r\n\r\n    this.connected = false;\r\n    this.open = false;\r\n    this.connecting = false;\r\n    this.reconnecting = false;\r\n    this.namespaces = {};\r\n    this.buffer = [];\r\n    this.doBuffer = false;\r\n    this.disconnected = false;\r\n\r\n    if (this.options['sync disconnect on unload'] &&\r\n        (!this.isXDomain() || io.util.ua.hasCORS)) {\r\n      var self = this;\r\n\r\n      io.util.on(global, 'unload', function () {\r\n        self.disconnectSync();\r\n      }, false);\r\n    }\r\n\r\n    if (this.options['auto connect']) {\r\n      this.connect();\r\n    }\r\n};\r\n\r\n  /**\r\n   * Apply EventEmitter mixin.\r\n   */\r\n\r\n  io.util.mixin(Socket, io.EventEmitter);\r\n\r\n  /**\r\n   * Returns a namespace listener/emitter for this socket\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.of = function (name) {\r\n    if (!this.namespaces[name]) {\r\n      this.namespaces[name] = new io.SocketNamespace(this, name);\r\n\r\n      if (name !== '') {\r\n        this.namespaces[name].packet({ type: 'connect' });\r\n      }\r\n    }\r\n\r\n    return this.namespaces[name];\r\n  };\r\n\r\n  /**\r\n   * Emits the given event to the Socket and all namespaces\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.publish = function () {\r\n    this.emit.apply(this, arguments);\r\n\r\n    var nsp;\r\n\r\n    for (var i in this.namespaces) {\r\n      if (this.namespaces.hasOwnProperty(i)) {\r\n        nsp = this.of(i);\r\n        nsp.$emit.apply(nsp, arguments);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Performs the handshake\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  function empty () { };\r\n\r\n  Socket.prototype.handshake = function (fn) {\r\n    var self = this\r\n      , options = this.options;\r\n      \r\n    if (self.disconnected) {\r\n      return;\r\n    }\r\n\r\n    function complete (data) {\r\n      if (data instanceof Error) {\r\n        self.onError(data.message);\r\n      } else {\r\n        fn.apply(null, data.split(':'));\r\n      }\r\n    };\r\n\r\n    var url = [\r\n          'http' + (options.secure ? 's' : '') + ':/'\r\n        , options.host + ':' + options.port\r\n        , options.resource\r\n        , io.protocol\r\n        , io.util.query(this.options.query, 't=' + +new Date)\r\n      ].join('/');\r\n\r\n    if (this.isXDomain() && !io.util.ua.hasCORS) {\r\n      var insertAt = document.getElementsByTagName('script')[0]\r\n        , script = document.createElement('script');\r\n\r\n      script.src = url + '&jsonp=' + io.j.length;\r\n      insertAt.parentNode.insertBefore(script, insertAt);\r\n\r\n      io.j.push(function (data) {\r\n        complete(data);\r\n        script.parentNode.removeChild(script);\r\n      });\r\n    } else {\r\n      var xhr = io.util.request();\r\n      \r\n      xhr.open('GET', url, true);\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n          xhr.onreadystatechange = empty;\r\n\r\n          if (xhr.status == 200) {\r\n            complete(xhr.responseText);\r\n          } else {\r\n            !self.reconnecting && self.onError(xhr.responseText);\r\n          }\r\n        }\r\n      };\r\n      xhr.send(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Find an available transport based on the options supplied in the constructor.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.getTransport = function (override) {\r\n    var transports = override || this.transports, match;\r\n\r\n    for (var i = 0, transport; transport = transports[i]; i++) {\r\n      if (io.Transport[transport]\r\n        && io.Transport[transport].check(this)\r\n        && (!this.isXDomain() || io.Transport[transport].xdomainCheck())) {\r\n        return new io.Transport[transport](this, this.sessionid);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Connects to the server.\r\n   *\r\n   * @param {Function} [fn] Callback.\r\n   * @returns {io.Socket}\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.connect = function (fn) {\r\n    if (this.connecting || this.disconnected) {\r\n      return this;\r\n    }\r\n\r\n    var self = this;\r\n\r\n    this.handshake(function (sid, heartbeat, close, transports) {\r\n      // Params come from response's body - it's splitted by ':'\r\n      // example: 1178beba4026e2c7-48e62d038b18f416:85:85:websocket,xhr-polling,jsonp-polling\r\n      self.sessionid = sid;\r\n      // Add two seconds, so connection is closed by server, not client - otherwise\r\n      // there will be a onSocketDisconnect event which will start health check, etc\r\n      // This can happen if server returns close/heartbeat timeout equal to 40 which is server's timeout to\r\n      // close long poll connection, in such case client can close connection before server response with empty\r\n      // response and client goes to health check. Server can return such timeout if client send too small ping timeout\r\n      // during handshake\r\n      self.closeTimeout = close * 1000 + 2000;\r\n      self.heartbeatTimeout = heartbeat * 1000 + 2000;\r\n      self.transports = transports ? io.util.intersect(\r\n          transports.split(',')\r\n        , self.options.transports\r\n      ) : self.options.transports;\r\n\r\n      self.setHeartbeatTimeout();\r\n      self.remainingTransports = self.transports.slice(0);\r\n\r\n      function tryNextTransport() {\r\n        if (!self.connected && !self.disconnected) {\r\n          self.connecting = false;\r\n          clearTimeout(self.connectTimeoutTimer);\r\n\r\n          if (self.options['try multiple transports']) {\r\n            while (self.remainingTransports.length > 0\r\n                   && self.remainingTransports.splice(0,1)[0] != self.transport.name) {}\r\n\r\n            if (self.remainingTransports.length){\r\n              connect(self.remainingTransports);\r\n            } else {\r\n              self.publish('connect_failed');\r\n            }\r\n          } else {\r\n            self.publish('connect_failed');\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      function connect (transports){\r\n        if (self.transport) {\r\n            self.transport.clearTimeouts();\r\n            self.transport.clearEventHandlers();\r\n        }\r\n\r\n        self.transport = self.getTransport(transports);\r\n        if (!self.transport || self.disconnected) return self.publish('connect_failed');\r\n\r\n        // once the transport is ready (i.e. page is fully loaded)\r\n        self.transport.ready(self, function () {\r\n          self.connecting = true;\r\n          self.publish('connecting', self.transport.name);\r\n          self.transport.open(tryNextTransport);\r\n\r\n          if (self.options['connect timeout']) {\r\n            self.connectTimeoutTimer = setTimeout(function () {\r\n              tryNextTransport();\r\n            }, self.options['connect timeout']);\r\n          }\r\n        });\r\n      }\r\n\r\n      connect(self.transports);\r\n\r\n      self.once('connect', function (){\r\n        clearTimeout(self.connectTimeoutTimer);\r\n\r\n        fn && typeof fn == 'function' && fn();\r\n      });\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Clears and sets a new heartbeat timeout using the value given by the\r\n   * server during the handshake.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.setHeartbeatTimeout = function () {\r\n    clearTimeout(this.heartbeatTimeoutTimer);\r\n\r\n    var self = this;\r\n    this.heartbeatTimeoutTimer = setTimeout(function () {\r\n      self.transport.onClose();\r\n    }, this.heartbeatTimeout);\r\n  };\r\n\r\n  /**\r\n   * Sends a message.\r\n   *\r\n   * @param {Object} data packet.\r\n   * @returns {io.Socket}\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.packet = function (data) {\r\n    if (this.connected && !this.doBuffer) {\r\n      this.transport.packet(data);\r\n    } else {\r\n      this.buffer.push(data);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sets buffer state\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.setBuffer = function (v) {\r\n    this.doBuffer = v;\r\n\r\n    if (!v && this.connected && this.buffer.length) {\r\n      this.transport.payload(this.buffer);\r\n      this.buffer = [];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Disconnect the established connect.\r\n   *\r\n   * @returns {io.Socket}\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.disconnect = function () {\r\n    if (this.connected || this.connecting) {\r\n      if (this.open) {\r\n        this.of('').packet({ type: 'disconnect' });\r\n      }\r\n\r\n      // handle disconnection immediately\r\n      this.onDisconnect('booted');\r\n    }\r\n    this.disconnected = true;\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Disconnects the socket with a sync XHR.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.disconnectSync = function () {\r\n    // ensure disconnection\r\n    var xhr = io.util.request()\r\n      , uri = this.resource + '/' + io.protocol + '/' + this.sessionid;\r\n\r\n    xhr.open('GET', uri, true);\r\n\r\n    // handle disconnection immediately\r\n    this.onDisconnect('booted');\r\n  };\r\n\r\n  /**\r\n   * Check if we need to use cross domain enabled transports. Cross domain would\r\n   * be a different port or different domain name.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.isXDomain = function () {\r\n\r\n    var port = global.location.port ||\r\n      ('https:' == global.location.protocol ? 443 : 80);\r\n\r\n    return this.options.host !== global.location.hostname\r\n      || this.options.port != port;\r\n  };\r\n\r\n  /**\r\n   * Called upon handshake.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onConnect = function () {\r\n    if (!this.connected) {\r\n      this.connected = true;\r\n      this.connecting = false;\r\n      if (!this.doBuffer) {\r\n        // make sure to flush the buffer\r\n        this.setBuffer(false);\r\n      }\r\n      this.emit('connect');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called when the transport opens\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onOpen = function () {\r\n    this.open = true;\r\n  };\r\n\r\n  /**\r\n   * Called when the transport closes.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onClose = function () {\r\n    this.open = false;\r\n    clearTimeout(this.heartbeatTimeoutTimer);\r\n  };\r\n\r\n  /**\r\n   * Called when the transport first opens a connection\r\n   *\r\n   * @param text\r\n   */\r\n\r\n  Socket.prototype.onPacket = function (packet) {\r\n    this.of(packet.endpoint).onPacket(packet);\r\n  };\r\n\r\n  /**\r\n   * Handles an error.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onError = function (err) {\r\n    if (err && err.advice) {\r\n      if (err.advice === 'reconnect' && (this.connected || this.connecting)) {\r\n        this.disconnect();\r\n        if (this.options.reconnect) {\r\n          this.reconnect();\r\n        }\r\n      }\r\n    }\r\n\r\n    this.publish('error', err && err.reason ? err.reason : err);\r\n  };\r\n\r\n  /**\r\n   * Called when the transport disconnects.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onDisconnect = function (reason) {\r\n    var wasConnected = this.connected\r\n      , wasConnecting = this.connecting;\r\n\r\n    this.connected = false;\r\n    this.connecting = false;\r\n    this.open = false;\r\n\r\n    if (wasConnected || wasConnecting) {\r\n      this.transport.close();\r\n      this.transport.clearTimeouts();\r\n      if (wasConnected) {\r\n        this.publish('disconnect', reason);\r\n\r\n        if ('booted' != reason && this.options.reconnect && !this.reconnecting) {\r\n          this.reconnect();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called upon reconnection.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.reconnect = function () {\r\n    this.reconnecting = true;\r\n    this.reconnectionAttempts = 0;\r\n    this.reconnectionDelay = this.options['reconnection delay'];\r\n\r\n    var self = this\r\n      , maxAttempts = this.options['max reconnection attempts']\r\n      , tryMultiple = this.options['try multiple transports']\r\n      , limit = this.options['reconnection limit'];\r\n\r\n    function reset () {\r\n      if (self.connected) {\r\n        for (var i in self.namespaces) {\r\n          if (self.namespaces.hasOwnProperty(i) && '' !== i) {\r\n              self.namespaces[i].packet({ type: 'connect' });\r\n          }\r\n        }\r\n        self.publish('reconnect', self.transport.name, self.reconnectionAttempts);\r\n      }\r\n\r\n      clearTimeout(self.reconnectionTimer);\r\n\r\n      self.removeListener('connect_failed', maybeReconnect);\r\n      self.removeListener('connect', maybeReconnect);\r\n\r\n      self.reconnecting = false;\r\n\r\n      delete self.reconnectionAttempts;\r\n      delete self.reconnectionDelay;\r\n      delete self.reconnectionTimer;\r\n      delete self.redoTransports;\r\n\r\n      self.options['try multiple transports'] = tryMultiple;\r\n    };\r\n\r\n    function maybeReconnect () {\r\n      if (!self.reconnecting) {\r\n        return;\r\n      }\r\n\r\n      if (self.connected) {\r\n        return reset();\r\n      };\r\n\r\n      if (self.connecting && self.reconnecting) {\r\n        return self.reconnectionTimer = setTimeout(maybeReconnect, 1000);\r\n      }\r\n\r\n      if (self.reconnectionAttempts++ >= maxAttempts) {\r\n        if (!self.redoTransports) {\r\n          self.on('connect_failed', maybeReconnect);\r\n          self.options['try multiple transports'] = true;\r\n          self.transport = self.getTransport();\r\n          self.redoTransports = true;\r\n          self.connect();\r\n        } else {\r\n          self.publish('reconnect_failed');\r\n          reset();\r\n        }\r\n      } else {\r\n        if (self.reconnectionDelay < limit) {\r\n          self.reconnectionDelay *= 2; // exponential back off\r\n        }\r\n\r\n        self.connect();\r\n        self.publish('reconnecting', self.reconnectionDelay, self.reconnectionAttempts);\r\n        self.reconnectionTimer = setTimeout(maybeReconnect, self.reconnectionDelay);\r\n      }\r\n    };\r\n\r\n    this.options['try multiple transports'] = false;\r\n    this.reconnectionTimer = setTimeout(maybeReconnect, this.reconnectionDelay);\r\n\r\n    this.on('connect', maybeReconnect);\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , 'undefined' === typeof global ? window : global\r\n);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.SocketNamespace = SocketNamespace;\r\n\r\n  /**\r\n   * Socket namespace constructor.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  function SocketNamespace (socket, name) {\r\n    this.socket = socket;\r\n    this.name = name || '';\r\n    this.flags = {};\r\n    this.json = new Flag(this, 'json');\r\n    this.ackPackets = 0;\r\n    this.acks = {};\r\n  };\r\n\r\n  /**\r\n   * Apply EventEmitter mixin.\r\n   */\r\n\r\n  io.util.mixin(SocketNamespace, io.EventEmitter);\r\n\r\n  /**\r\n   * Copies emit since we override it\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.$emit = io.EventEmitter.prototype.emit;\r\n\r\n  /**\r\n   * Creates a new namespace, by proxying the request to the socket. This\r\n   * allows us to use the synax as we do on the server.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  SocketNamespace.prototype.of = function () {\r\n    return this.socket.of.apply(this.socket, arguments);\r\n  };\r\n\r\n  /**\r\n   * Sends a packet.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.packet = function (packet) {\r\n    packet.endpoint = this.name;\r\n    this.socket.packet(packet);\r\n    this.flags = {};\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sends a message\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  SocketNamespace.prototype.send = function (data, fn) {\r\n    var packet = {\r\n        type: this.flags.json ? 'json' : 'message'\r\n      , data: data\r\n    };\r\n\r\n    if ('function' == typeof fn) {\r\n      packet.id = ++this.ackPackets;\r\n      packet.ack = true;\r\n      this.acks[packet.id] = fn;\r\n    }\r\n\r\n    return this.packet(packet);\r\n  };\r\n\r\n  /**\r\n   * Emits an event\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  SocketNamespace.prototype.emit = function (name) {\r\n    var args = Array.prototype.slice.call(arguments, 1)\r\n      , lastArg = args[args.length - 1]\r\n      , packet = {\r\n            type: 'event'\r\n          , name: name\r\n        };\r\n\r\n    if ('function' == typeof lastArg) {\r\n      packet.id = ++this.ackPackets;\r\n      packet.ack = 'data';\r\n      this.acks[packet.id] = lastArg;\r\n      args = args.slice(0, args.length - 1);\r\n    }\r\n\r\n    packet.args = args;\r\n\r\n    return this.packet(packet);\r\n  };\r\n\r\n  /**\r\n   * Disconnects the namespace\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.disconnect = function () {\r\n    if (this.name === '') {\r\n      this.socket.disconnect();\r\n    } else {\r\n      this.packet({ type: 'disconnect' });\r\n      this.$emit('disconnect');\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Handles a packet\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.onPacket = function (packet) {\r\n    var self = this;\r\n\r\n    function ack () {\r\n      self.packet({\r\n          type: 'ack'\r\n        , args: io.util.toArray(arguments)\r\n        , ackId: packet.id\r\n      });\r\n    };\r\n\r\n    switch (packet.type) {\r\n      case 'connect':\r\n        this.$emit('connect');\r\n        break;\r\n\r\n      case 'disconnect':\r\n        if (this.name === '') {\r\n          this.socket.onDisconnect(packet.reason || 'booted');\r\n        } else {\r\n          this.$emit('disconnect', packet.reason || '');\r\n        }\r\n        break;\r\n\r\n      case 'message':\r\n      case 'json':\r\n        var params = ['message', packet.data];\r\n\r\n        if (packet.ack == 'data') {\r\n          params.push(ack);\r\n        } else if (packet.ack) {\r\n          this.packet({ type: 'ack', ackId: packet.id });\r\n        }\r\n\r\n        this.$emit.apply(this, params);\r\n        break;\r\n\r\n      case 'event':\r\n        var params = [packet.name].concat(packet.args);\r\n\r\n        if (packet.ack == 'data')\r\n          params.push(ack);\r\n\r\n        this.$emit.apply(this, params);\r\n        break;\r\n\r\n      case 'ack':\r\n        if (this.acks[packet.ackId]) {\r\n          this.acks[packet.ackId].apply(this, packet.args);\r\n          delete this.acks[packet.ackId];\r\n        }\r\n        break;\r\n\r\n      case 'error':\r\n        if (packet.advice){\r\n          this.socket.onError(packet);\r\n        } else {\r\n          if (packet.reason == 'unauthorized') {\r\n            this.$emit('connect_failed', packet.reason);\r\n          } else {\r\n            this.$emit('error', packet.reason);\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Flag interface.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  function Flag (nsp, name) {\r\n    this.namespace = nsp;\r\n    this.name = name;\r\n  };\r\n\r\n  /**\r\n   * Send a message\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Flag.prototype.send = function () {\r\n    this.namespace.flags[this.name] = true;\r\n    this.namespace.send.apply(this.namespace, arguments);\r\n  };\r\n\r\n  /**\r\n   * Emit an event\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Flag.prototype.emit = function () {\r\n    this.namespace.flags[this.name] = true;\r\n    this.namespace.emit.apply(this.namespace, arguments);\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.websocket = WS;\r\n\r\n  /**\r\n   * The WebSocket transport uses the HTML5 WebSocket API to establish an\r\n   * persistent connection with the Socket.IO server. This transport will also\r\n   * be inherited by the FlashSocket fallback as it provides a API compatible\r\n   * polyfill for the WebSockets.\r\n   *\r\n   * @constructor\r\n   * @extends {io.Transport}\r\n   * @api public\r\n   */\r\n\r\n  function WS (socket) {\r\n    io.Transport.apply(this, arguments);\r\n  };\r\n\r\n  /**\r\n   * Inherits from Transport.\r\n   */\r\n\r\n  io.util.inherit(WS, io.Transport);\r\n\r\n  /**\r\n   * Transport name\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.name = 'websocket';\r\n\r\n  function empty() { };\r\n\r\n  /**\r\n   * Initializes a new `WebSocket` connection with the Socket.IO server. We attach\r\n   * all the appropriate listeners to handle the responses from the server.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.open = function (connectErrorCallback) {\r\n    var query = io.util.query(this.socket.options.query)\r\n      , self = this\r\n      , Socket\r\n\r\n    this.connectErrorCallback = connectErrorCallback;\r\n\r\n    if (!Socket) {\r\n      Socket = global.MozWebSocket || global.WebSocket;\r\n    }\r\n\r\n    this.websocket = new Socket(this.prepareUrl() + query);\r\n\r\n    this.websocket.onopen = function () {\r\n      self.onOpen();\r\n      self.socket.setBuffer(false);\r\n    };\r\n    this.websocket.onmessage = function (ev) {\r\n      self.onData(ev.data);\r\n    };\r\n    this.websocket.onclose = function () {\r\n      self.onClose();\r\n      self.socket.setBuffer(true);\r\n    };\r\n    this.websocket.onerror = function (e) {\r\n      self.onError(e);\r\n    };\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Send a message to the Socket.IO server. The message will automatically be\r\n   * encoded in the correct message format.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.send = function (data) {\r\n    this.websocket.send(data);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Payload\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  WS.prototype.payload = function (arr) {\r\n    for (var i = 0, l = arr.length; i < l; i++) {\r\n      this.packet(arr[i]);\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Disconnect the established `WebSocket` connection.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.close = function () {\r\n    this.websocket.close();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Handle the errors that `WebSocket` might be giving when we\r\n   * are attempting to connect or send messages.\r\n   *\r\n   * @param {Error} e The error.\r\n   * @api private\r\n   */\r\n\r\n  WS.prototype.onError = function (e) {\r\n      if (this.connectErrorCallback !== undefined) {\r\n        this.connectErrorCallback();\r\n        this.connectErrorCallback = undefined;\r\n      }\r\n      this.socket.onError(e);\r\n  };\r\n\r\n  /**\r\n   * Returns the appropriate scheme for the URI generation.\r\n   *\r\n   * @api private\r\n   */\r\n  WS.prototype.scheme = function () {\r\n    return this.socket.options.secure ? 'wss' : 'ws';\r\n  };\r\n\r\n  /**\r\n   * Checks if the browser has support for native `WebSockets` and that\r\n   * it's not the polyfill created for the FlashSocket transport.\r\n   *\r\n   * @return {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  WS.check = function () {\r\n    return ('WebSocket' in global && !('__addTask' in WebSocket))\r\n          || 'MozWebSocket' in global;\r\n  };\r\n\r\n  /**\r\n   * Check if the `WebSocket` transport support cross domain communications.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  WS.xdomainCheck = function () {\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Clears the event listeners attached to the `WebSocket` transport object.\r\n   *\r\n   * @api private\r\n   */\r\n  WS.prototype.clearEventHandlers = function() {\r\n      if (this.websocket) {\r\n          this.websocket.onopen = this.websocket.onmessage = this.websocket.onclose = this.websocket.onerror = empty;\r\n      }\r\n      return this;\r\n  };\r\n\r\n  /**\r\n   * Add the transport to your public io.transports array.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.transports.push('websocket');\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , 'undefined' === typeof global ? window : global\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  exports.XHR = XHR;\r\n\r\n  /**\r\n   * XHR constructor\r\n   *\r\n   * @costructor\r\n   * @api public\r\n   */\r\n\r\n  function XHR (socket) {\r\n    if (!socket) return;\r\n\r\n    io.Transport.apply(this, arguments);\r\n    this.sendBuffer = [];\r\n  };\r\n\r\n  /**\r\n   * Inherits from Transport.\r\n   */\r\n\r\n  io.util.inherit(XHR, io.Transport);\r\n\r\n  /**\r\n   * Establish a connection\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  XHR.prototype.open = function () {\r\n    this.socket.setBuffer(false);\r\n    this.onOpen();\r\n    this.get();\r\n\r\n    // we need to make sure the request succeeds since we have no indication\r\n    // whether the request opened or not until it succeeded.\r\n    this.setCloseTimeout();\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Check if we need to send data to the Socket.IO server, if we have data in our\r\n   * buffer we encode it and forward it to the `post` method.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHR.prototype.payload = function (payload) {\r\n    var msgs = [];\r\n\r\n    for (var i = 0, l = payload.length; i < l; i++) {\r\n      msgs.push(io.parser.encodePacket(payload[i]));\r\n    }\r\n\r\n    this.send(io.parser.encodePayload(msgs));\r\n  };\r\n\r\n  /**\r\n   * Send data to the Socket.IO server.\r\n   *\r\n   * @param data The message\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  XHR.prototype.send = function (data) {\r\n    this.post(data);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Posts a encoded message to the Socket.IO server.\r\n   *\r\n   * @param {String} data A encoded message.\r\n   * @api private\r\n   */\r\n\r\n  function empty () { };\r\n\r\n  XHR.prototype.post = function (data) {\r\n    var self = this;\r\n    this.socket.setBuffer(true);\r\n\r\n    this.sendXHR = this.request('POST');\r\n\r\n    function stateChange () {\r\n      if (this.readyState == 4) {\r\n        this.onreadystatechange = empty;\r\n        self.posting = false;\r\n\r\n        if (this.status == 200){\r\n          self.socket.setBuffer(false);\r\n          clearTimeout(self.sendXHR.ackTimeoutTimer);\r\n        } else {\r\n          self.onClose();\r\n        }\r\n      }\r\n    }\r\n\r\n    function onload () {\r\n      this.onload = empty;\r\n      self.socket.setBuffer(false);\r\n    };\r\n\r\n    if (global.XDomainRequest && this.sendXHR instanceof XDomainRequest) {\r\n      this.sendXHR.onload = this.sendXHR.onerror = onload;\r\n    } else {\r\n      this.sendXHR.onreadystatechange = stateChange;\r\n    }\r\n\r\n    this.sendXHR.send(data);\r\n    self.sendXHR.ackTimeoutTimer = setTimeout(function () {\r\n      self.onClose();\r\n    }, self.socket.options.ackTimeoutMs);\r\n  };\r\n\r\n  /**\r\n   * Disconnects the established `XHR` connection.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  XHR.prototype.close = function () {\r\n    this.onClose();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Generates a configured XHR request\r\n   *\r\n   * @param {String} url The url that needs to be requested.\r\n   * @param {String} method The method the request should use.\r\n   * @returns {XMLHttpRequest}\r\n   * @api private\r\n   */\r\n\r\n  XHR.prototype.request = function (method) {\r\n    var req = io.util.request(this.socket.isXDomain())\r\n      , query = io.util.query(this.socket.options.query, 't=' + +new Date);\r\n\r\n    req.open(method || 'GET', this.prepareUrl() + query, true);\r\n\r\n    if (method == 'POST') {\r\n      try {\r\n        if (req.setRequestHeader) {\r\n          req.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\r\n        } else {\r\n          // XDomainRequest\r\n          req.contentType = 'text/plain';\r\n        }\r\n      } catch (e) {}\r\n    }\r\n\r\n    return req;\r\n  };\r\n\r\n  /**\r\n   * Returns the scheme to use for the transport URLs.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHR.prototype.scheme = function () {\r\n    return this.socket.options.secure ? 'https' : 'http';\r\n  };\r\n\r\n  /**\r\n   * Check if the XHR transports are supported\r\n   *\r\n   * @param {Boolean} xdomain Check if we support cross domain requests.\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  XHR.check = function (socket, xdomain) {\r\n\r\n    try {\r\n      var request = io.util.request(xdomain),\r\n          usesXDomReq = (global.XDomainRequest && request instanceof XDomainRequest),\r\n          socketProtocol = (socket && socket.options && socket.options.secure ? 'https:' : 'http:'),\r\n          isXProtocol = (socketProtocol != global.location.protocol);\r\n      if (request && !(usesXDomReq && isXProtocol)) {\r\n        return true;\r\n      }\r\n    } catch(e) {}\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Check if the XHR transport supports cross domain requests.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  XHR.xdomainCheck = function () {\r\n    return XHR.check(null, true);\r\n  };\r\n\r\n  /**\r\n   * Clears the event listeners attached to the XHR transport object.\r\n   *\r\n   * @api private\r\n   */\r\n  XHR.prototype.clearEventHandlers = function () {\r\n      if (this.sendXHR) {\r\n          this.sendXHR.onreadystatechange = this.sendXHR.onload = empty;\r\n      }\r\n      return this;\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , 'undefined' === typeof global ? window : global\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports['xhr-polling'] = XHRPolling;\r\n\r\n  /**\r\n   * The XHR-polling transport uses long polling XHR requests to create a\r\n   * \"persistent\" connection with the server.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  function XHRPolling () {\r\n    io.Transport.XHR.apply(this, arguments);\r\n  };\r\n\r\n  /**\r\n   * Inherits from XHR transport.\r\n   */\r\n\r\n  io.util.inherit(XHRPolling, io.Transport.XHR);\r\n\r\n  /**\r\n   * Merge the properties from XHR transport\r\n   */\r\n\r\n  io.util.merge(XHRPolling, io.Transport.XHR);\r\n\r\n  /**\r\n   * Transport name\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  XHRPolling.prototype.name = 'xhr-polling';\r\n\r\n  /**\r\n   * Establish a connection, for iPhone and Android this will be done once the page\r\n   * is loaded.\r\n   *\r\n   * @returns {Transport} Chaining.\r\n   * @api public\r\n   */\r\n\r\n  XHRPolling.prototype.open = function (connectErrorCallback) {\r\n    var self = this;\r\n\r\n    self.connectErrorCallback = connectErrorCallback;\r\n\r\n    io.Transport.XHR.prototype.open.call(self);\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Starts a XHR request to wait for incoming messages.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  function empty () {};\r\n\r\n  XHRPolling.prototype.get = function () {\r\n    if (!this.isOpened) return;\r\n\r\n    var self = this;\r\n\r\n    function stateChange () {\r\n      if (this.readyState == 4) {\r\n        this.onreadystatechange = empty;\r\n\r\n        if (this.status == 200) {\r\n          self.connectErrorCallback = undefined;\r\n          self.onData(this.responseText);\r\n          self.get();\r\n        } else {\r\n          self.onClose();\r\n\r\n          if (self.connectErrorCallback !== undefined) {\r\n            self.connectErrorCallback();\r\n            self.connectErrorCallback = undefined;\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    function onload () {\r\n      self.connectErrorCallback = undefined;\r\n      this.onload = empty;\r\n      this.onerror = empty;\r\n      self.onData(this.responseText);\r\n      self.get();\r\n    };\r\n\r\n    function onerror () {\r\n      self.onClose();\r\n\r\n      if (self.connectErrorCallback !== undefined) {\r\n        self.connectErrorCallback();\r\n        self.connectErrorCallback = undefined;\r\n      }\r\n    };\r\n\r\n    this.xhr = this.request();\r\n\r\n    if (global.XDomainRequest && this.xhr instanceof XDomainRequest) {\r\n      this.xhr.onload = onload;\r\n      this.xhr.onerror = onerror;\r\n    } else {\r\n      this.xhr.onreadystatechange = stateChange;\r\n    }\r\n\r\n    this.xhr.send(null);\r\n  };\r\n\r\n  /**\r\n   * Handle the unclean close behavior.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHRPolling.prototype.onClose = function () {\r\n    io.Transport.XHR.prototype.onClose.call(this);\r\n\r\n    if (this.xhr) {\r\n      this.xhr.onreadystatechange = this.xhr.onload = this.xhr.onerror = empty;\r\n      try {\r\n        this.xhr.abort();\r\n      } catch(e){}\r\n      this.xhr = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Webkit based browsers show a infinit spinner when you start a XHR request\r\n   * before the browsers onload event is called so we need to defer opening of\r\n   * the transport until the onload event is called. Wrapping the cb in our\r\n   * defer method solve this.\r\n   *\r\n   * @param {Socket} socket The socket instance that needs a transport\r\n   * @param {Function} fn The callback\r\n   * @api private\r\n   */\r\n\r\n  XHRPolling.prototype.ready = function (socket, fn) {\r\n    var self = this;\r\n\r\n    io.util.defer(function () {\r\n      fn.call(self);\r\n    });\r\n  };\r\n\r\n   /**\r\n   * Clears the event listeners attached to the XHR transport object.\r\n   *\r\n   * @api private\r\n   */\r\n  XHRPolling.prototype.clearEventHandlers = function () {\r\n      io.Transport.XHR.prototype.clearEventHandlers.call(this);\r\n\r\n      if (this.xhr) {\r\n          this.xhr.onreadystatechange = this.xhr.onload = this.xhr.onerror = empty;\r\n      }\r\n      return this;\r\n  }\r\n\r\n  /**\r\n   * Add the transport to your public io.transports array.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.transports.push('xhr-polling');\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , 'undefined' === typeof global ? window : global\r\n);\r\n\r\nexports.io = io;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib_temp/socket.io.js\n// module id = 11\n// module chunks = 0","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.0.5\n */\n\n\n\n// WEBPACK FOOTER //\n// config/versionTemplate.txt","'use strict';\n\nexport { objectOrFunction };\nexport { isFunction };\nexport { isMaybeThenable };\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nfunction isMaybeThenable(x) {\n  return typeof x === 'object' && x !== null;\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\nexport { isArray };\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/utils.js","'use strict';\n\nexport { setScheduler };\nexport { setAsap };\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nexport { asap };\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/asap.js","'use strict';\n\nexport default then;\nimport { invokeCallback, subscribe, FULFILLED, REJECTED, noop, makePromise, PROMISE_ID } from './-internal';\n\nimport { asap } from './asap';\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/then.js","'use strict';\n\nexport default resolve;\nimport { noop, resolve as _resolve } from '../-internal';\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/promise/resolve.js","'use strict';\n\nimport { objectOrFunction, isFunction } from './utils';\n\nimport { asap } from './asap';\n\nimport originalThen from './then';\nimport originalResolve from './promise/resolve';\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nexport { PROMISE_ID };\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then) {\n  if (maybeThenable.constructor === promise.constructor && then === originalThen && maybeThenable.constructor.resolve === originalResolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then === GET_THEN_ERROR) {\n      reject(promise, GET_THEN_ERROR.error);\n    } else if (then === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then)) {\n      handleForeignThenable(promise, maybeThenable, then);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      resolve(promise, value);\n    } else if (failed) {\n      reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nexport { nextId, makePromise, getThen, noop, resolve, reject, fulfill, subscribe, publish, publishRejection, initializePromise, invokeCallback, FULFILLED, REJECTED, PENDING, handleMaybeThenable };\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/-internal.js","'use strict';\n\nimport { isArray, isMaybeThenable } from './utils';\n\nimport { noop, reject, fulfill, subscribe, FULFILLED, REJECTED, PENDING, getThen, handleMaybeThenable } from './-internal';\n\nimport then from './then';\nimport Promise from './promise';\nimport originalResolve from './promise/resolve';\nimport originalThen from './then';\nimport { makePromise, PROMISE_ID } from './-internal';\n\nexport default Enumerator;\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve = c.resolve;\n\n  if (resolve === originalResolve) {\n    var _then = getThen(entry);\n\n    if (_then === originalThen && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve) {\n        return resolve(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/enumerator.js","'use strict';\n\nexport default all;\nimport Enumerator from '../enumerator';\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/promise/all.js","\"use strict\";\n\nexport default race;\nimport { isArray } from \"../utils\";\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/promise/race.js","'use strict';\n\nexport default reject;\nimport { noop, reject as _reject } from '../-internal';\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/promise/reject.js","'use strict';\n\nexport default Promise;\n\nimport { isFunction } from './utils';\n\nimport { noop, nextId, PROMISE_ID, initializePromise } from './-internal';\n\nimport { asap, setAsap, setScheduler } from './asap';\n\nimport all from './promise/all';\nimport race from './promise/race';\nimport Resolve from './promise/resolve';\nimport Reject from './promise/reject';\nimport then from './then';\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = Resolve;\nPromise.reject = Reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/promise.js","/*global self*/\n'use strict';\n\nexport default polyfill;\nimport Promise from './promise';\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/polyfill.js","'use strict';\n\nimport Promise from './es6-promise/promise';\nimport polyfill from './es6-promise/polyfill';\n\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\nexport default Promise;\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 13\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 14\n// module chunks = 0","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\n// tslint:disable:no-any\r\n// tslint:disable:no-unsafe-any\r\n// tslint:disable:max-classes-per-file\r\n// tslint:disable:variable-name\r\n\r\nimport { Timespan, toJson } from './Common';\r\nimport { CLIENT_VERSION } from './Constants';\r\nimport { HttpHeaders, ITelemetrySender, LogProvider, TrouterTelemetrySettings } from './Interfaces';\r\nimport { IClientInfo, ITrouterRequest, ServerState } from './InternalInterfaces';\r\nimport { Logger } from './Logger';\r\n\r\n/**\r\n * Data for trouter response\r\n */\r\nexport class ResponseData {\r\n    public status: number = 200;\r\n    public headers?: HttpHeaders = {};\r\n    public body: string = '';\r\n    public sentTS: number | undefined;\r\n\r\n    public constructor(public id: number) { }\r\n}\r\n\r\n// Possible telemetry events\r\nexport enum ClientEventName {\r\n    Connected = 'trouter_js_client_connected',\r\n    Disconnected = 'trouter_js_client_disconnected',\r\n    Error = 'trouter_js_client_error',\r\n    Progress = 'trouter_js_client_progress',\r\n    Response = 'trouter_js_client_response',\r\n    Request = 'trouter_js_client_request',\r\n    CheckConnection = 'trouter_js_client_check_connection',\r\n    Registration = 'trouter_js_client_registration',\r\n    Unregistration = 'trouter_js_client_unregistration'\r\n}\r\nexport type EnabledEvents = {[key in ClientEventName]: boolean};\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface IAllTelemetryEventsSettings extends EnabledEvents {\r\n}\r\n\r\n/**\r\n * Stores one step of connection process\r\n */\r\nexport class TrackerStep {\r\n    public constructor(\r\n        public stepName: string,\r\n        public operation: string,\r\n        public delta: number,\r\n        public ts: number,\r\n        public error?: string\r\n    ) { }\r\n}\r\n\r\n/**\r\n * Base class for something that can be used as a property bag\r\n */\r\nexport class Properties {\r\n    [index: string]: number | string | boolean | { [key: number]: boolean } | undefined;\r\n}\r\n\r\n/**\r\n * Information about connection\r\n */\r\nclass ConnectedInfo {\r\n    public numberOfPingReplies: number = 0;\r\n    public connectedTimestamp: number = 0;\r\n    public isNewUrl: boolean = false;\r\n    public transportType: string = '';\r\n    public connectionNumber: number = 0;\r\n}\r\n\r\n/**\r\n * Default values for IEventLogSettings\r\n */\r\nclass EventLogSettings implements TrouterTelemetrySettings, IAllTelemetryEventsSettings {\r\n    public enabled = false;\r\n    public numberOfStepsToMaintain = 40;\r\n    public logHealthCheckError = false;\r\n    public sendProgressTimeoutSecs = 55;\r\n    public logSendPingError = false;\r\n    public maxBackoffInMs = 120000;\r\n\r\n    public trouter_js_client_connected = false;\r\n    public trouter_js_client_disconnected = false;\r\n    public trouter_js_client_error = false;\r\n    public trouter_js_client_progress = false;\r\n    public trouter_js_client_response = false;\r\n    public trouter_js_client_request = false;\r\n    public trouter_js_client_registration = false;\r\n    public trouter_js_client_unregistration = false;\r\n\r\n    /** This event is ENABLED by default */\r\n    public trouter_js_client_check_connection = true;\r\n}\r\n\r\n/**\r\n * Telemetry sender\r\n */\r\nexport class ConnectionTracker {\r\n    private logger: Logger;\r\n    private steps: TrackerStep[];\r\n    private connectionAttempt: number;\r\n    private totalStepCount: number;\r\n    private beginTimestamp: Timespan;\r\n    private eventLogSettings: TrouterTelemetrySettings;\r\n    private connectedInfo: ConnectedInfo;\r\n    private progressTimeout?: number;\r\n    private eventLogger?: ITelemetrySender;\r\n\r\n    public constructor(\r\n        logfunc: LogProvider,\r\n        private clientId: number,\r\n        private clientInfo: IClientInfo,\r\n        private getServerState: () => ServerState,\r\n        private endpointId?: string,\r\n        public clientCorrelationID?: string,\r\n        private environment?: string\r\n    ) {\r\n        this.logger = new Logger('ConnectionTracker', logfunc);\r\n        this.clientCorrelationID = clientCorrelationID !== undefined ? clientCorrelationID : '';\r\n        this.steps = [];\r\n        this.connectionAttempt = 0;\r\n        this.totalStepCount = 0;\r\n        this.beginTimestamp = new Timespan();\r\n        this.eventLogSettings = new EventLogSettings();\r\n        this.connectedInfo = new ConnectedInfo();\r\n    }\r\n\r\n    public enable(telemetrySender: ITelemetrySender) {\r\n        this.eventLogSettings.enabled = true;\r\n        this.eventLogger = telemetrySender;\r\n    }\r\n\r\n    public disable() {\r\n        this.eventLogSettings.enabled = false;\r\n    }\r\n\r\n    public sendProgress(context: Properties): void {\r\n        // connect truncates steps array. this check ensures that a progress event is only sent out if the client is not connected\r\n        if (this.steps.length > 0) {\r\n            this.sendTelemetry(ClientEventName.Progress, context, this.steps);\r\n        }\r\n    }\r\n\r\n    public cancelProgressTimer(): void {\r\n        if (this.progressTimeout !== undefined) {\r\n            clearTimeout(this.progressTimeout);\r\n            this.progressTimeout = undefined;\r\n        }\r\n    }\r\n\r\n    public resetProgressSendTimer() {\r\n        this.cancelProgressTimer();\r\n\r\n        // send connection steps after a timeout\r\n        // this timeout may fire if auth callback never comes or the client is stuck in a loop to get connected\r\n        if (this.eventLogSettings.sendProgressTimeoutSecs !== undefined && this.eventLogSettings.sendProgressTimeoutSecs > 0) {\r\n            this.progressTimeout = setTimeout(() => {\r\n                this.sendProgress({\r\n                    reason: 'timeout',\r\n                    timeoutSecs: this.eventLogSettings.sendProgressTimeoutSecs\r\n                });\r\n            }, 1000 * this.eventLogSettings.sendProgressTimeoutSecs);\r\n        }\r\n    }\r\n\r\n    public setConnectedInfo(isNewUrl: boolean, transportType: string): void {\r\n        this.connectedInfo.numberOfPingReplies = 0;\r\n        this.connectedInfo.connectedTimestamp = Date.now();\r\n        this.connectedInfo.isNewUrl = isNewUrl;\r\n        this.connectedInfo.transportType = transportType;\r\n        ++this.connectedInfo.connectionNumber;\r\n    }\r\n\r\n    public clearConnectedInfo(): void {\r\n        this.connectedInfo.numberOfPingReplies = 0;\r\n        this.connectedInfo.connectedTimestamp = 0;\r\n        this.connectedInfo.isNewUrl = true;\r\n        this.connectedInfo.transportType = '';\r\n    }\r\n\r\n    // Copies from\r\n    // source {\r\n    //    propName: value\r\n    // }\r\n    // to\r\n    // dest {\r\n    //    propName: { value: actualValue }\r\n    // }\r\n    public copyProperties(dest: any, source: Properties): void {\r\n        // copy properties from source and add in a format expected by logger\r\n        for (const prop of Object.keys(source)) {\r\n            if (source.hasOwnProperty(prop) && source[prop] !== undefined) {\r\n                // replace hyphen by _\r\n                dest[prop.replace(/-/g, '_')] = { value: source[prop] };\r\n            }\r\n        }\r\n    }\r\n\r\n    public increasePingResponseCount() {\r\n        ++this.connectedInfo.numberOfPingReplies;\r\n    }\r\n\r\n    /**\r\n     * @param eventName Telemetry event name\r\n     * @param eventProperties Event property bag\r\n     * @param progress\r\n     */\r\n    public sendTelemetry(\r\n        eventName: ClientEventName,\r\n        eventProperties: Properties,\r\n        progress: any[]\r\n    ) {\r\n        try {\r\n            if (this.eventLogSettings.enabled === true\r\n                && this.eventLogSettings[eventName] === true\r\n                && this.eventLogger !== undefined\r\n            ) {\r\n                const serverState = this.getServerState();\r\n                const clientEvent = {\r\n                    name: eventName,\r\n                    properties: {\r\n                        connectionAttempt: { value: this.connectionAttempt },\r\n                        epid: { value: this.endpointId },\r\n                        clientCorrelationID: { value: this.clientCorrelationID },\r\n                        steps: { value: toJson(progress) },\r\n                        clientID: { value: this.clientId },\r\n                        eventVersion: { value: 3 }, // version of telemetry events,\r\n                        environment: { value: this.environment },\r\n                        cv: { value: CLIENT_VERSION },\r\n                        ua: { value: this.clientInfo.ua },\r\n\r\n                        // Copy ServerState\r\n                        connectionId: { value: serverState.connectionId },\r\n                        connectedClientId: { value: serverState.connectedClientId },\r\n                        domId: { value: serverState.domId },\r\n                        url: { value: serverState.unsecureUrl },\r\n                        surl: { value: serverState.url },\r\n                        ttlInSecs: { value: serverState.getRemainingTtlInSec() },\r\n\r\n                        // Copy this.connectedInfo\r\n                        numberOfPingReplies: { value: this.connectedInfo.numberOfPingReplies },\r\n                        connectedTimestamp: { value: this.connectedInfo.connectedTimestamp },\r\n                        isNewUrl: { value: this.connectedInfo.isNewUrl },\r\n                        transportType: { value: this.connectedInfo.transportType },\r\n                        connectionNumber: { value: this.connectedInfo.connectionNumber }\r\n                    }\r\n                };\r\n\r\n                this.copyProperties(clientEvent.properties, eventProperties);\r\n\r\n                this.eventLogger.logEvent(clientEvent);\r\n            }\r\n        } catch (exc) {\r\n            this.logger.warn(`error in sending event ${eventName}: ${toJson(exc)}`);\r\n        }\r\n    }\r\n\r\n    public createStep(stepName: string, operation: string, error?: string): TrackerStep {\r\n        return new TrackerStep(\r\n            stepName,\r\n            operation,\r\n            this.beginTimestamp.duration,\r\n            Date.now(),\r\n            error);\r\n    }\r\n\r\n    public addStep(tag: string, progressHint: string, error?: string): void {\r\n        if (this.eventLogSettings.enabled === false) {\r\n            return;\r\n        }\r\n\r\n        if (this.steps.length === 0) {\r\n            this.beginTimestamp.reset();\r\n        }\r\n        this.steps.push(this.createStep(tag, progressHint, error));\r\n        ++this.totalStepCount;\r\n        // do not maintain an ever growing list of steps. send a progress event with what is collected so far and clear steps\r\n        // there should be enough context in any event for the server to group events created for the sameonnection\r\n        if (this.eventLogSettings.numberOfStepsToMaintain !== undefined\r\n            && this.steps.length > this.eventLogSettings.numberOfStepsToMaintain\r\n        ) {\r\n            const progress = this.steps.slice(0);\r\n            this.steps.length = 0;\r\n            this.sendTelemetry(ClientEventName.Progress, { reason: 'flush' }, progress);\r\n        }\r\n    }\r\n\r\n    public trackStart(tag: string): void {\r\n        this.addStep(tag, 'start');\r\n    }\r\n\r\n    public trackEnd(tag: string): void {\r\n        this.addStep(tag, 'end');\r\n    }\r\n\r\n    public trackError(tag: string, error: string, addStep: boolean = true, subOperation?: string) {\r\n        if (tag === 'health' && this.eventLogSettings.logHealthCheckError !== true) {\r\n            return;\r\n        }\r\n        if (tag === 'ping' && this.eventLogSettings.logSendPingError === false) {\r\n            return;\r\n        }\r\n\r\n        if (subOperation === undefined) {\r\n            subOperation = 'error';\r\n        }\r\n\r\n        if (addStep === true) {\r\n            this.addStep(tag, subOperation, error);\r\n        }\r\n        this.sendTelemetry(ClientEventName.Error, {}, [this.createStep(tag, subOperation, error)]);\r\n    }\r\n\r\n    public trackProgress(tag: string, subOperation: string): void {\r\n        this.addStep(tag, subOperation);\r\n    }\r\n\r\n    public trackConnected(isNewUrl: boolean, transportType: string): void {\r\n        this.setConnectedInfo(isNewUrl, transportType);\r\n        const progress = this.steps.slice(0);\r\n        const totalSteps = this.totalStepCount;\r\n        const connectionDuration = this.beginTimestamp.duration;\r\n\r\n        // clear steps collected\r\n        this.steps.length = 0;\r\n        this.totalStepCount = 0;\r\n\r\n        this.sendTelemetry(ClientEventName.Connected, {\r\n            stepCount: progress.length,\r\n            totalStepCount: totalSteps,\r\n            connectionEstablishmentMs_Total: connectionDuration\r\n        }, progress);\r\n\r\n        this.cancelProgressTimer();\r\n    }\r\n\r\n    public getSessionLength(): number {\r\n        return Date.now() - this.connectedInfo.connectedTimestamp;\r\n    }\r\n\r\n    public trackDisconnected(context: Properties): void {\r\n        context.sessionLengthMS = this.getSessionLength();\r\n        this.sendTelemetry(ClientEventName.Disconnected, context, []);\r\n        this.resetProgressSendTimer();\r\n    }\r\n\r\n    public trackNewConnection(): void {\r\n        ++this.connectionAttempt;\r\n    }\r\n\r\n    public trackRequest(request?: ITrouterRequest, errorMsg?: string): void {\r\n        const context: Properties = {};\r\n        if (errorMsg !== undefined) {\r\n            context.hasError = true;\r\n            context.error = errorMsg;\r\n        }\r\n        try {\r\n            if (request) {\r\n                context.requestID = request.id;\r\n                context.httpMethod = request.method;\r\n                context.url = request.url;\r\n                context.bodyLength = request.body.length;\r\n                context.shortUrl = request.shortUrl;\r\n                context.requestTimeStamp = request.startTS;\r\n                context.correlationVector = request.correlationVector;\r\n                const headers = request.headers;\r\n                for (const header of Object.keys(headers)) {\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        context[header] = headers[header];\r\n                    }\r\n                }\r\n            }\r\n        } catch (exc) {\r\n            context.hasError = true;\r\n            context.error = `${context.error} error creating request context ${toJson(exc)}`;\r\n        }\r\n\r\n        this.sendTelemetry(ClientEventName.Request, context, []);\r\n    }\r\n\r\n    public trackResponse(request?: ITrouterRequest, latencyMS?: number, responseData?: ResponseData, errorMsg?: string): void {\r\n        const context: Properties = {};\r\n        if (errorMsg !== undefined) {\r\n            context.hasError = true;\r\n            context.error = errorMsg;\r\n        }\r\n\r\n        try {\r\n            context.responseTimestamp = responseData !== undefined ? responseData.sentTS : Date.now();\r\n            if (request) {\r\n                context.requestID = request.id;\r\n                context.httpMethod = request.method;\r\n                context.shortUrl = request.shortUrl;\r\n                context.correlationVector = request.correlationVector;\r\n                const headers = request.headers;\r\n                for (const header of Object.keys(headers)) {\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        context[header] = headers[header];\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (responseData) {\r\n                context.latencyMS = latencyMS;\r\n                context.responseCode = responseData.status;\r\n                context.responseLength = responseData.body.length;\r\n            }\r\n        } catch (exc) {\r\n            context.hasError = true;\r\n            context.error = `${context.error} error creating response context ${toJson(exc)}`;\r\n        }\r\n\r\n        this.sendTelemetry(ClientEventName.Response, context, []);\r\n    }\r\n\r\n    public sendResponseError(errorMsg: string, request?: ITrouterRequest, responseData?: ResponseData): void {\r\n        this.trackResponse(request, undefined, responseData, errorMsg);\r\n    }\r\n\r\n    public close(): void {\r\n        this.sendProgress({\r\n            reason: 'closed'\r\n        });\r\n        this.steps.length = 0;\r\n        this.cancelProgressTimer();\r\n    }\r\n\r\n    public mergeSettings(settings?: TrouterTelemetrySettings) {\r\n        if (!settings) {\r\n            return;\r\n        }\r\n\r\n        this.eventLogSettings.numberOfStepsToMaintain = Math.min(40,\r\n            Math.max(10, (settings.numberOfStepsToMaintain !== undefined ? settings.numberOfStepsToMaintain : 0)));\r\n\r\n        // min of 55 secs and max allowed is 1 hr\r\n        const newProgressTimeout = Math.min(3600,\r\n            Math.max(55, settings.sendProgressTimeoutSecs !== undefined ? settings.sendProgressTimeoutSecs : 0));\r\n\r\n        this.eventLogSettings.logHealthCheckError = settings.logHealthCheckError;\r\n        this.eventLogSettings.logSendPingError = settings.logSendPingError;\r\n\r\n        // Copy enable/disable flags for all telemetry events\r\n        for (const iterator of Object.keys(ClientEventName).map(k => ClientEventName[k])) {\r\n            if (settings.hasOwnProperty(iterator) && settings[iterator] !== undefined) {\r\n                this.eventLogSettings[iterator] = settings[iterator];\r\n            }\r\n        }\r\n\r\n        if (this.eventLogSettings.sendProgressTimeoutSecs !== newProgressTimeout) {\r\n            this.eventLogSettings.sendProgressTimeoutSecs = newProgressTimeout;\r\n            this.resetProgressSendTimer();\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/ConnectionTracker.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\nimport { Logger } from './Logger';\r\n\r\n/**\r\n * Executes callbacks with exponential backoff\r\n */\r\nexport class ExponentialBackoff {\r\n    private backoffId = 0;\r\n    private backoffCount = 0;\r\n    private timerHandle?: number;\r\n    private callback?: () => void;\r\n\r\n    public constructor(private logger: Logger, private maxBackoffInMs: number) {}\r\n\r\n    private static calculateNextBackoffMs(backoffCount: number, maxBackoffInMs: number): number {\r\n        // tslint:disable-next-line:insecure-random\r\n        const fudge = 1 + (Math.random() - 0.5) * 0.4; // +/- 20%\r\n        let backoff = 1000 * Math.pow(2, backoffCount) * fudge; // 1s initial\r\n        backoff = Math.round(backoff);\r\n\r\n        return Math.min(maxBackoffInMs, backoff);\r\n    }\r\n\r\n    public setMaxBackoffMs(ms: number) {\r\n        this.maxBackoffInMs = ms;\r\n    }\r\n\r\n    public backoff(taskName: string, handler: () => void): void {\r\n        if (this.timerHandle !== undefined) {\r\n            this.logger.debug('Clearing current back off');\r\n            clearTimeout(this.timerHandle);\r\n            this.timerHandle = undefined;\r\n        }\r\n\r\n        const backoffMs = ExponentialBackoff.calculateNextBackoffMs(this.backoffCount, this.maxBackoffInMs);\r\n        this.backoffId++;\r\n        this.backoffCount++;\r\n        this.logger.info(`Backing off ${taskName} for ${backoffMs} milliseconds with ID ${this.backoffId}`);\r\n        this.callback = () => {\r\n            this.logger.info(`Back off for ${taskName} with ID ${this.backoffId} complete, invoking handler`);\r\n            this.timerHandle = undefined;\r\n            this.callback = undefined;\r\n            handler();\r\n        };\r\n        this.timerHandle = setTimeout(this.callback, backoffMs);\r\n    }\r\n\r\n    /// Stop the backoff if active, do not call the handler and reset to the initial/shortest period again\r\n    public reset(): void {\r\n        if (this.timerHandle !== undefined) {\r\n            this.logger.debug(`Resetting back off with ID ${this.backoffId}`);\r\n            clearTimeout(this.timerHandle);\r\n            this.timerHandle = undefined;\r\n            this.callback = undefined;\r\n        }\r\n        this.backoffCount = 0;\r\n    }\r\n\r\n    /// Call the handler right now if active and reset to the initial/shortest period again\r\n    public expediteIfPending(): void {\r\n        this.backoffCount = 0;\r\n        if (this.timerHandle !== undefined) {\r\n            this.logger.debug(`Expediting back off with ID ${this.backoffId}`);\r\n            clearTimeout(this.timerHandle);\r\n            this.timerHandle = undefined;\r\n            const callback = this.callback;\r\n            this.callback = undefined;\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/ExponentialBackoff.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\nimport { LogProvider } from './Interfaces';\r\nimport { IMessageLossIndicator, ITrouterRequest, UserActivityEventReason } from './InternalInterfaces';\r\nimport { Logger } from './Logger';\r\nimport { ReconnectReason } from './TrouterConnection';\r\nimport { UserActivityObject } from './TrouterManager';\r\n\r\n/**\r\n * After this count of 'soft' (5XX, no response) connection errors, FSM will start a new allocation.\r\n * Doesn't apply for 'hard' errors like 4XX, in this case FSM will start a new allocation immediately.\r\n */\r\nconst MAXIMUM_CONNECTION_ERRORS_COUNT = 2;\r\n\r\nexport interface IWorker {\r\n    getToken(useCache: boolean, backoff: boolean);\r\n\r\n    startConnectionTimer();\r\n    stopConnectionTimer();\r\n    startPingTimer();\r\n    stopPingTimer();\r\n\r\n    /** Returns true if config mandates to not register connection URL with EDF Registrar */\r\n    shouldSkipRegistration();\r\n    /** Returns true if user specified a custom TTL for registration */\r\n    hasCustomRegisterTtl();\r\n    startRegisterTimer();\r\n    stopRegisterTimer();\r\n\r\n    startSocketIo();\r\n    stopSocketIo();\r\n    isIncallMode();\r\n    restartIncallModeTimer();\r\n    enterIncallMode();\r\n    exitIncallMode();\r\n\r\n    dispatchConnected();\r\n    dispatchRegistered();\r\n    dispatchUnregistered();\r\n    dispatchDownstreamRequest(request: ITrouterRequest);\r\n    /** Start reconnecting due to socket error */\r\n    dispatchReconnecting();\r\n    /** Reconnection is requested by server (current connection is still valid) */\r\n    dispatchReconnectIsRequired(useConnectParamsFromCache: boolean, reason: ReconnectReason);\r\n    dispatchDisconnected();\r\n    dispatchTrouterMessageLost(flowTags: IMessageLossIndicator[]);\r\n\r\n    sendAllocateRequest(token: string);\r\n    sendPingRequest();\r\n\r\n    sendUserActivityState(reason: UserActivityEventReason, connected: boolean, correlationVector?: string);\r\n\r\n    sendRegisterRequest();\r\n    sendUnregisterRequest();\r\n\r\n    /** Reset planned token request (if any) and backoff interval */\r\n    resetTokenBackoff();\r\n    /** Reset planned registration requests (if any) */\r\n    resetRegisterBackoff();\r\n    /** Cancel all pending downstream events related timers. */\r\n    clearTimers();\r\n    sendDisconnectTelemetryEvent(error?: string);\r\n}\r\n\r\nexport enum State {\r\n    Initial,\r\n    /** waiting for token from User */\r\n    RetrievingToken,\r\n    /** waiting for allocation response from service */\r\n    Allocating,\r\n    /**\r\n     * waiting for Socket.IO handshake to be finished. After that Socket.IO will\r\n     * start to try transports and send 'connecting' event\r\n     */\r\n    Handshaking,\r\n    /**\r\n     * waiting for 'connected' event - socket.io is trying different transports.\r\n     * onSocketError event should be ignored, as it's expected event. So, only ConnectFailed or\r\n     * connection timeout meas failed connection\r\n     */\r\n    Connecting,\r\n    /** ready to work */\r\n    Connected,\r\n    /** waiting for token from User to send 'unregister' request */\r\n    UnregisteringRetrievingToken,\r\n    /** waiting for succesful 'unregister' response */\r\n    Unregistering,\r\n    /**\r\n     * Unrecoverable state\r\n     * Trouter cannot start once in this state\r\n     */\r\n    TerminalError\r\n}\r\n\r\nenum ConnectedSubstate {\r\n    Initial,\r\n    /** waiting for token from User */\r\n    RetrievingToken,\r\n    /** waiting for succesful 'register' response */\r\n    Registering,\r\n    /** Registration succeed */\r\n    Registered,\r\n    /** Registration is skipped */\r\n    NotRegistered\r\n}\r\n\r\n/**\r\n * State machine for trouter\r\n */\r\nexport class TrouterFsm {\r\n    private logger: Logger;\r\n    private state: State = State.Initial;\r\n    private connectedSubstate: ConnectedSubstate;\r\n    private autoReconnect = true;\r\n\r\n    constructor(logfunc: LogProvider, private worker: IWorker, private incallModeEnabled: boolean) {\r\n        this.logger = new Logger('ConnectionFsm', logfunc);\r\n        this.connectedSubstate = ConnectedSubstate.Initial;\r\n    }\r\n\r\n    /** Returns current state */\r\n    public getState(): State {\r\n        return this.state;\r\n    }\r\n\r\n    public isActive(): boolean {\r\n        return this.state === State.Allocating\r\n            || this.state === State.Connected\r\n            || this.state === State.Handshaking\r\n            || this.state === State.Connecting\r\n            || this.state === State.RetrievingToken;\r\n    }\r\n\r\n    //////////// Events ////////////\r\n    /**\r\n     * Start trouter\r\n     */\r\n    public start(): boolean {\r\n        if (this.state === State.Initial) {\r\n            this.setState(State.RetrievingToken);\r\n            this.worker.getToken(true, false);\r\n\r\n            return true;\r\n        } else {\r\n            this.showIgnored('start');\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stop trouter\r\n     * @param dontUnregister    if true, FSM will not unregister. It's needed in case of two simultaneous\r\n     *                          connections, to replace first connection with second - registrar just updates\r\n     *                          the existing record for the user, by registrationId (see their API docs),\r\n     *                          that id does not change during the lifetime of a TrouterService instance.\r\n     */\r\n    public stop(dontUnregister: boolean) {\r\n        if (dontUnregister) {\r\n            this.connectedSubstate = ConnectedSubstate.Initial;\r\n        }\r\n\r\n        if (this.worker.isIncallMode()) {\r\n            this.worker.exitIncallMode();\r\n        }\r\n\r\n        this.worker.resetTokenBackoff();\r\n        this.worker.resetRegisterBackoff();\r\n        this.worker.stopConnectionTimer();\r\n        this.worker.stopPingTimer();\r\n        this.worker.clearTimers();\r\n        this.worker.stopRegisterTimer();\r\n\r\n        if (this.state === State.Connecting\r\n            || this.state === State.Handshaking\r\n            || this.state === State.Connected\r\n        ) {\r\n            this.worker.stopSocketIo();\r\n            if (this.state === State.Connected) {\r\n                this.worker.sendDisconnectTelemetryEvent('connection stopped');\r\n            }\r\n        }\r\n\r\n        // Stop can happen in any state - the only difference is if registration exists or not.\r\n        // It can be also called a second time, just to stop a stuck unregistration.\r\n        if (this.isRegistered() && this.state !== State.UnregisteringRetrievingToken && this.state !== State.Unregistering) {\r\n            this.setState(State.UnregisteringRetrievingToken);\r\n            this.worker.getToken(true, false);\r\n        } else {\r\n            this.setState(State.Initial);\r\n            this.worker.dispatchDisconnected();\r\n        }\r\n    }\r\n\r\n    public onTokenReceived(token: string) {\r\n        if (this.state === State.RetrievingToken) {\r\n            this.setState(State.Allocating);\r\n            this.worker.startConnectionTimer();\r\n            this.worker.sendAllocateRequest(token);\r\n        } else if (this.state === State.Connected && this.connectedSubstate === ConnectedSubstate.RetrievingToken) {\r\n            this.connectedSubstate = ConnectedSubstate.Registering;\r\n            this.worker.sendRegisterRequest();\r\n        } else if (this.state === State.UnregisteringRetrievingToken) {\r\n            this.setState(State.Unregistering);\r\n            this.worker.sendUnregisterRequest();\r\n        } else {\r\n            this.showIgnored('onTokenReceived');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * if disconnectDetected - need to send ping to check if connection is really dead,\r\n     * otherwise - network is available\r\n     */\r\n    public checkConnection(disconnectDetected: boolean) {\r\n        if (disconnectDetected) {\r\n            this.onPingInterval();\r\n        }\r\n    }\r\n\r\n    /** Allocation request succeed with 200 */\r\n    public onAllocationSucceed(): boolean {\r\n        if (this.state === State.Allocating) {\r\n            this.setState(State.Handshaking);\r\n            if (this.connectedSubstate === ConnectedSubstate.Registered) {\r\n                this.worker.dispatchUnregistered();\r\n            }\r\n            this.connectedSubstate = ConnectedSubstate.Initial;\r\n            this.worker.startSocketIo();\r\n\r\n            return true;\r\n        } else {\r\n            this.showIgnored('onAllocationSucceed');\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /** Allocation request failed */\r\n    public onAllocationFailed(unauthorized: boolean) {\r\n        if (this.state === State.Allocating) {\r\n            this.setState(State.RetrievingToken);\r\n            this.worker.stopConnectionTimer();\r\n            this.worker.getToken(!unauthorized, true);\r\n        } else {\r\n            this.showIgnored('onAllocationFailed');\r\n        }\r\n    }\r\n\r\n    /** Connection didn't succeed in given timeout */\r\n    public onConnectingTimeout() {\r\n        // implementation note: this also called from onConnectingFailed\r\n        if (this.state === State.Allocating\r\n            || this.state === State.Connecting\r\n            || this.state === State.Handshaking\r\n        ) {\r\n            this.setState(State.RetrievingToken);\r\n            this.worker.stopSocketIo();\r\n            this.worker.getToken(true, false);\r\n        } else {\r\n            this.showIgnored('onConnectingTimeout');\r\n        }\r\n    }\r\n\r\n    /** socket.io handshake succeed and socket.io is trying next transport */\r\n    public onConnecting() {\r\n        if (this.state === State.Handshaking) {\r\n            this.setState(State.Connecting);\r\n        } else {\r\n            this.showIgnored('onConnecting');\r\n        }\r\n    }\r\n\r\n    /** Socket.io connection wasn't established */\r\n    public onConnectingFailed() {\r\n        // This callback will be called when all transports failed to connect, i.e. socket.io can't proceed\r\n        if (this.state === State.Connecting) {\r\n            this.onConnectingTimeout();\r\n        } else if (this.state === State.Handshaking) {\r\n            // It should never happen, because socket.io should try at least one transport\r\n            this.logger.error('Unexpected error in Socket.io - no valid transports');\r\n            this.onConnectingTimeout();\r\n        } else {\r\n            this.showIgnored('onConnectingFailed');\r\n        }\r\n    }\r\n\r\n    /** Socket.io error (or disconnect) */\r\n    public onSocketDisconnect(disconnectReason?: string) {\r\n        if (this.state === State.Handshaking || this.state === State.Connected) {\r\n            this.worker.stopSocketIo();\r\n            this.worker.stopPingTimer();\r\n            this.worker.clearTimers();\r\n            this.worker.stopConnectionTimer();\r\n            if (this.state === State.Connected) {\r\n                this.worker.sendDisconnectTelemetryEvent(disconnectReason);\r\n            }\r\n            if (this.autoReconnect) {\r\n                this.setState(State.RetrievingToken);\r\n                this.worker.resetRegisterBackoff();\r\n                this.worker.dispatchReconnecting();\r\n                this.worker.getToken(true, false);\r\n            } else {\r\n                this.logger.debug('Socket error/disconnect occurred and automatic reconnect is disabled. Connection will stop.');\r\n                this.stop(true);\r\n            }\r\n        } else {\r\n            // Disconnect can be called because of an error.\r\n            // Such error can happen in Connecting state, which means that\r\n            // websocket transport failed to establish connection\r\n            this.showIgnored('onSocketDisconnect');\r\n        }\r\n    }\r\n\r\n    /** Received 'trouter.connected' event from service */\r\n    public onTrouterConnected() {\r\n        if (this.state === State.Connecting) {\r\n            this.setState(State.Connected);\r\n            this.worker.resetTokenBackoff();\r\n            this.worker.stopConnectionTimer();\r\n            this.worker.sendUserActivityState(UserActivityEventReason.Connected, true);\r\n            this.worker.startPingTimer();\r\n            this.worker.dispatchConnected();\r\n            if (this.worker.shouldSkipRegistration()) {\r\n                this.connectedSubstate = ConnectedSubstate.NotRegistered;\r\n                this.worker.dispatchRegistered();\r\n            } else {\r\n                this.connectedSubstate = ConnectedSubstate.RetrievingToken;\r\n                this.worker.getToken(true, false);\r\n            }\r\n        } else {\r\n            this.showIgnored('onTrouterConnected');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Received 'trouter.reconnect' event from service, or URL in configuration has changed,\r\n     * need to establish a new connection\r\n     */\r\n    public onReconnectRequired(useConnectParamsFromCache: boolean, reason: ReconnectReason) {\r\n        this.worker.dispatchReconnectIsRequired(useConnectParamsFromCache, reason);\r\n    }\r\n\r\n    public disableAutoReconnect() {\r\n        this.autoReconnect = false;\r\n    }\r\n\r\n    /** Request from downstream is received */\r\n    public onDownstreamRequest(request: ITrouterRequest) {\r\n        if (this.state === State.Connected) {\r\n            this.switchToIncallModeIfEnabled();\r\n            this.worker.dispatchDownstreamRequest(request);\r\n        } else {\r\n            this.showIgnored('onDownstreamRequest');\r\n        }\r\n    }\r\n\r\n    public onTrouterMessageLost(messageLossIndicators: IMessageLossIndicator[]) {\r\n        if (this.state === State.Connected) {\r\n            this.worker.dispatchTrouterMessageLost(messageLossIndicators);\r\n        } else {\r\n            this.showIgnored('onTrouterMessageLost');\r\n        }\r\n    }\r\n\r\n    /** Timer for ping request fired */\r\n    public onPingInterval() {\r\n        if (this.state === State.Connected) {\r\n            this.worker.sendPingRequest();\r\n        } else {\r\n            this.showIgnored('onPingInterval');\r\n        }\r\n    }\r\n\r\n    /** No pong response from service within timeout */\r\n    public onPingResponseTimeout() {\r\n        this.onMissedResponse('onPingResponseTimeout');\r\n    }\r\n\r\n    /** Pong response */\r\n    public onPingResponse() {\r\n        if (this.state === State.Connected) {\r\n            // do nothing\r\n        } else {\r\n            this.showIgnored('onPingResponse');\r\n        }\r\n    }\r\n\r\n    public onRegistrationFailed(unauthorized: boolean) {\r\n        if (this.state === State.Connected\r\n            && this.connectedSubstate === ConnectedSubstate.Registering\r\n        ) {\r\n            this.connectedSubstate = ConnectedSubstate.RetrievingToken;\r\n            this.worker.getToken(!unauthorized, true);\r\n        } else {\r\n            this.showIgnored('onRegistrationFailed');\r\n        }\r\n    }\r\n\r\n    public onRegistrationSucceed(isRegistrationTtlLowerThanKnownAllocationTtl: boolean) {\r\n        if (this.state === State.Connected) {\r\n            if (this.connectedSubstate === ConnectedSubstate.Registering) {\r\n                this.connectedSubstate = ConnectedSubstate.Registered;\r\n                this.worker.dispatchRegistered();\r\n            }\r\n            // If registration ttl is lower than known allocation ttl we need to start re-registration.\r\n            // Otherwise, the allocation will expire with the registration, client will reconnect with a new\r\n            // allocation, a new connection id. which in turn will trigger a new registration started.\r\n            // i.e. no need to re-register the current expiring one.\r\n            if (isRegistrationTtlLowerThanKnownAllocationTtl) {\r\n                this.worker.startRegisterTimer();\r\n            }\r\n        } else {\r\n            this.showIgnored('onRegistrationSucceed');\r\n        }\r\n    }\r\n\r\n    /** Registration TTL is about to expire */\r\n    public onRegistrationTimeout() {\r\n        if (this.state === State.Connected\r\n            && this.connectedSubstate !== ConnectedSubstate.NotRegistered\r\n        ) {\r\n            this.connectedSubstate = ConnectedSubstate.RetrievingToken;\r\n            this.worker.getToken(true, false);\r\n        } else {\r\n            this.showIgnored('onRegistrationTimeout');\r\n        }\r\n    }\r\n\r\n    public onUnregistrationFailed(unauthorized: boolean) {\r\n        if (this.state === State.Unregistering) {\r\n            this.setState(State.UnregisteringRetrievingToken);\r\n            this.worker.getToken(!unauthorized, !unauthorized);\r\n        } else {\r\n            this.showIgnored('onUnregistrationFailed');\r\n        }\r\n    }\r\n\r\n    public onUnregistrationSucceed() {\r\n        if (this.state === State.Unregistering) {\r\n            this.setState(State.Initial);\r\n            this.worker.dispatchUnregistered();\r\n            this.worker.dispatchDisconnected();\r\n        } else {\r\n            this.showIgnored('onUnregistrationSucceed');\r\n        }\r\n    }\r\n\r\n    public onIncallModeTimer() {\r\n        this.worker.exitIncallMode();\r\n\r\n        if (this.state === State.Connected) {\r\n            this.worker.stopPingTimer();\r\n            this.worker.startPingTimer();\r\n        } else {\r\n            this.showIgnored('onIncallModeTimer');\r\n        }\r\n    }\r\n\r\n    public onSetUserActivityState(userActivityObject: UserActivityObject, changed: boolean) {\r\n        if (changed) {\r\n            this.logger.info(`Changing user activity state to '${userActivityObject.toEventJSON()}'`);\r\n            this.worker.sendUserActivityState(UserActivityEventReason.Modified, this.state === State.Connected);\r\n        } else {\r\n            this.logger.debug(`Not changing the same user activity state '${userActivityObject.toEventJSON()}'`);\r\n        }\r\n    }\r\n\r\n    public onActivityStateResponseTimeout() {\r\n        this.onMissedResponse('onActivityStateResponseTimeout');\r\n    }\r\n\r\n\r\n    public forceReconnect(reason: string) {\r\n        if (this.state === State.Connected) {\r\n            this.worker.sendDisconnectTelemetryEvent(reason);\r\n        }\r\n        this.setState(State.RetrievingToken);\r\n        this.worker.resetTokenBackoff();\r\n        this.worker.stopConnectionTimer();\r\n        this.worker.resetRegisterBackoff();\r\n        this.worker.stopPingTimer();\r\n        this.worker.clearTimers();\r\n        this.worker.stopSocketIo();\r\n        this.worker.dispatchReconnecting();\r\n        this.worker.getToken(true, false);\r\n    }\r\n\r\n    public onTerminalError() {\r\n        this.logger.error(`Cannot proceed, reached terminal state. Switching from state '${State[this.state]}' to ${State[State.TerminalError]}`);\r\n        this.setState(State.TerminalError);\r\n    }\r\n\r\n    private onMissedResponse(onResponseHandlerName: string) {\r\n        if (this.state === State.Connected) {\r\n            this.setState(State.RetrievingToken);\r\n            this.worker.resetRegisterBackoff();\r\n            this.worker.stopPingTimer();\r\n            this.worker.clearTimers();\r\n            this.worker.stopSocketIo();\r\n            this.worker.sendDisconnectTelemetryEvent(onResponseHandlerName);\r\n            this.worker.dispatchReconnecting();\r\n            this.worker.getToken(true, false);\r\n        } else {\r\n            this.showIgnored(onResponseHandlerName);\r\n        }\r\n    }\r\n\r\n    private showIgnored(event: string) {\r\n        this.logger.debug(`Ignoring event '${event}' in state '${State[this.state]}'`);\r\n    }\r\n\r\n    private setState(state: State) {\r\n        this.logger.info(`Switching from state '${State[this.state]}' to state '${State[state]}'`);\r\n        if (this.state === state) {\r\n            this.logger.error(`Attempt to switching into the current state '${State[state]}'`);\r\n\r\n            return;\r\n        }\r\n        this.state = state;\r\n    }\r\n\r\n    private isRegistered() {\r\n        return this.connectedSubstate === ConnectedSubstate.Registered\r\n            || this.connectedSubstate === ConnectedSubstate.Registering;\r\n    }\r\n\r\n    private switchToIncallModeIfEnabled() {\r\n        if (this.incallModeEnabled) {\r\n            if (!this.worker.isIncallMode()) {\r\n                this.worker.enterIncallMode();\r\n                this.worker.stopPingTimer();\r\n                this.worker.startPingTimer();\r\n            }\r\n            this.worker.restartIncallModeTimer();\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/TrouterFsm.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\nimport { LogProvider, TrouterState } from './Interfaces';\r\nimport { Logger } from './Logger';\r\nimport { ReconnectReason } from './TrouterConnection';\r\n\r\nexport interface IManagerWorker {\r\n    startFirstConnection();\r\n    stopFirstConnection(dontUnregister: boolean);\r\n\r\n    startSecondConnection(useConnectParamsFromCache: boolean);\r\n    stopSecondConnection(dontUnregister: boolean);\r\n    stopSecondConnectionDelayed();\r\n\r\n    forceStopLingeringConnection();\r\n\r\n    switchConnections();\r\n    doesSecondConnectionExist(): boolean;\r\n\r\n    dispatchConnected();\r\n    dispatchReconnecting();\r\n    dispatchStopped();\r\n    dispatchRegistrationState(isRegistered: boolean);\r\n}\r\n\r\n/**\r\n * State machine for manager\r\n */\r\nexport class TrouterManagerFsm {\r\n    private logger: Logger;\r\n    private state: TrouterState = TrouterState.Unknown;\r\n\r\n    constructor(logFunc: LogProvider, private worker: IManagerWorker) {\r\n        this.logger = new Logger('ManagerFsm', logFunc);\r\n    }\r\n\r\n    public start() {\r\n        if (this.state === TrouterState.Unknown) {\r\n            this.setState(TrouterState.Disconnected);\r\n            this.worker.forceStopLingeringConnection();\r\n            this.worker.startFirstConnection();\r\n        } else {\r\n            this.showIgnored('start');\r\n        }\r\n    }\r\n\r\n    public stop(dontUnregister?: boolean) {\r\n        if (this.state !== TrouterState.Unknown) {\r\n            this.setState(TrouterState.Unknown);\r\n            this.worker.stopFirstConnection(dontUnregister === true);\r\n            this.worker.stopSecondConnection(dontUnregister === true);\r\n        } else {\r\n            this.showIgnored('stop');\r\n        }\r\n    }\r\n\r\n    /** Returns current state */\r\n    public getState(): TrouterState {\r\n        return this.state;\r\n    }\r\n\r\n    public onConnected(first: boolean) {\r\n        if (this.state === TrouterState.Disconnected && first) {\r\n            if (this.worker.doesSecondConnectionExist()) {\r\n                this.setState(TrouterState.Switching);\r\n            } else {\r\n                this.setState(TrouterState.Connected);\r\n                this.worker.dispatchConnected();\r\n            }\r\n        } else {\r\n            this.showIgnored(`onConnected(${first})`);\r\n        }\r\n    }\r\n\r\n    public onRegistered(first: boolean) {\r\n        if (this.state === TrouterState.Disconnected && !first) {\r\n            this.setState(TrouterState.Connected);\r\n            this.worker.switchConnections();\r\n            this.worker.stopSecondConnection(true);\r\n            this.worker.dispatchConnected();\r\n        } else if (this.state === TrouterState.Switching && !first) {\r\n            this.setState(TrouterState.Connected);\r\n            this.worker.switchConnections();\r\n            this.worker.stopSecondConnectionDelayed();\r\n            this.worker.dispatchConnected();\r\n        }\r\n        this.worker.dispatchRegistrationState(true);\r\n    }\r\n\r\n    public onUnregistered(first: boolean) {\r\n        if (first) {\r\n            this.worker.dispatchRegistrationState(false);\r\n        }\r\n    }\r\n\r\n    public onReconnecting(first: boolean) {\r\n        if (this.state === TrouterState.Connected && first) {\r\n            this.setState(TrouterState.Disconnected);\r\n            this.worker.dispatchReconnecting();\r\n        } else if (this.state === TrouterState.Switching && first) {\r\n            this.setState(TrouterState.Disconnected);\r\n            this.worker.dispatchReconnecting();\r\n        } else {\r\n            this.showIgnored(`onReconnecting(${first})`);\r\n        }\r\n    }\r\n\r\n    public onReconnectionRequired(first: boolean, useConnectParamsFromCache: boolean, reason: ReconnectReason) {\r\n        if (this.state === TrouterState.Connected && first) {\r\n            this.setState(TrouterState.Switching);\r\n            this.worker.startSecondConnection(useConnectParamsFromCache);\r\n        } else if (this.state === TrouterState.Disconnected && first) {\r\n            this.worker.startSecondConnection(useConnectParamsFromCache);\r\n        } else if (this.state === TrouterState.Switching && first && reason === ReconnectReason.Configuration) {\r\n            // Intentionally ignoring `trouter.reconnect` events arriving during an in-progress switch (on either connection),\r\n            // only configuration change is handled. This matches the current behavior of the C++ client.\r\n            // Even in the ignored cases, the client should still end up being connected to the right environment eventually.\r\n            this.logger.debug('onReconnectionRequired: switch requested while already in Switching state');\r\n            this.worker.stopSecondConnection(true);\r\n            this.worker.startSecondConnection(useConnectParamsFromCache);\r\n        } else {\r\n            this.showIgnored(`onReconnectionRequired(${first})`);\r\n        }\r\n    }\r\n\r\n    public onDisconnected(first: boolean) {\r\n        if (this.state === TrouterState.Unknown && first) {\r\n            this.worker.dispatchStopped();\r\n        } else {\r\n            this.showIgnored(`onDisconnected(${first})`);\r\n        }\r\n    }\r\n\r\n    private showIgnored(event: string) {\r\n        this.logger.info(`Ignoring event '${event}' in state '${TrouterState[this.state]}'`);\r\n    }\r\n\r\n    private setState(state: TrouterState) {\r\n        this.logger.info(`Switching from state '${TrouterState[this.state]}' to state '${TrouterState[state]}'`);\r\n        if (this.state === state) {\r\n            this.logger.error(`Attempt to switching into the current state '${TrouterState[state]}'`);\r\n\r\n            return;\r\n        }\r\n        this.state = state;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/TrouterManagerFsm.ts","/**\r\n * Copyright (c) Microsoft. All rights reserved.\r\n */\r\n\r\n// tslint:disable:strict-boolean-expressions\r\n\r\nimport { CLIENT_VERSION } from './Constants';\r\nimport {\r\n    Client, ConnectionInfo, IConnectionInfo,\r\n    ITrouterServiceBase, ITrouterServiceConfig, Listener, LogProvider, MessageHandler,\r\n    Request, Response, StateChangedListener,\r\n    TrouterConnectionListener, TrouterRequestBody, TrouterState, TrouterTelemetrySettings,\r\n    UserActivityState\r\n} from './Interfaces';\r\nimport { ITrouterOptions, ServerState } from './InternalInterfaces';\r\nimport { Logger } from './Logger';\r\nimport { MessageHandlerRegistry } from './MessageHandler';\r\nimport { addCacheAsBackupTo } from './SkypeTokenProviderWithCache';\r\nimport { TrouterManager } from './TrouterManager';\r\nimport { TrouterUrlPromise } from './TrouterUrlPromise';\r\n\r\nexport { MessageHandler, TrouterState, UserActivityState };\r\n\r\ninterface IEcsConfig {\r\n    TrouterConnectionUrl?: string;\r\n    TelemetryEnabled?: boolean;\r\n    ClientTelemetryEventEnabled: {\r\n        trouter_js_client_connected?: boolean;\r\n        trouter_js_client_disconnected?: boolean;\r\n        trouter_js_client_error?: boolean;\r\n        trouter_js_client_progress?: boolean;\r\n        trouter_js_client_response?: boolean;\r\n        logHealthCheckError?: boolean;\r\n        logSendPingError?: boolean;\r\n        numberOfStepsToMaintain?: number;\r\n        sendProgressTimeoutSecs?: number;\r\n    };\r\n}\r\n\r\nfunction populateTelemetryOptions(startingCfg: TrouterTelemetrySettings, ecsCfg?: IEcsConfig): TrouterTelemetrySettings {\r\n    if (!ecsCfg) {\r\n        return startingCfg;\r\n    }\r\n\r\n    let res = {\r\n        ...startingCfg,\r\n        ...{\r\n            enabled: ecsCfg.TelemetryEnabled\r\n        }\r\n    };\r\n\r\n    if (ecsCfg.ClientTelemetryEventEnabled !== undefined) {\r\n        res = {\r\n            ...res,\r\n            ...ecsCfg.ClientTelemetryEventEnabled\r\n        };\r\n    }\r\n\r\n    return <TrouterTelemetrySettings>res;\r\n}\r\n\r\nfunction populateTrouterOptions(cfg: ITrouterServiceConfig, ecsCfg?: IEcsConfig): ITrouterOptions {\r\n    return {\r\n        clientInfo: {\r\n            ua: cfg.trouterSettings.productName,\r\n            v: cfg.trouterSettings.version\r\n        },\r\n        ioOptions: {\r\n            // uncomment for manual testing\r\n            // transports: ['xhr-polling'],\r\n            // 'connect timeout': XXX, 10000 by default in socket.io code\r\n            ackTimeoutMs: 5000\r\n        },\r\n        clientCorrelationID: cfg.trouterSettings.sessionId,\r\n        environment: cfg.trouterSettings.environment,\r\n        telemetrySettings: populateTelemetryOptions(cfg.telemetryConfig.settings, ecsCfg),\r\n        eventLogger: cfg.telemetryConfig.eventLogger,\r\n\r\n        endpointId: cfg.trouterSettings.registrationId,\r\n        trouterUrl: (ecsCfg && ecsCfg.TrouterConnectionUrl) || cfg.trouterSettings.trouterServiceUrl,\r\n        registration: cfg.trouterSettings.registrarServiceUrl\r\n            ? {\r\n                registrarUrl: cfg.trouterSettings.registrarServiceUrl,\r\n                registrationId: cfg.trouterSettings.registrationId || '',\r\n\r\n                pnhAppId: cfg.trouterSettings.pnhAppId || '',\r\n                platform: cfg.trouterSettings.platform || '',\r\n                pnhTemplateKey: cfg.trouterSettings.pnhTemplate || '',\r\n                platformUIVersion: cfg.trouterSettings.platformUIVersion || '',\r\n                productContext: cfg.trouterSettings.pnhProductContext || undefined,\r\n                context: cfg.trouterSettings.pnhContext || '',\r\n\r\n                registrarTtlSec: (cfg.trouterSettings.maxRegistrationTimeInMs || 0) / 1000\r\n            }\r\n            : undefined,\r\n\r\n        timeoutOptions: {\r\n            connectionTimeoutMs: cfg.trouterSettings.trouterConnectTimeoutInMs || 30000,\r\n            fetchTimeoutMs: 10000,\r\n            pingTimeoutMs: 40000,\r\n            pongTimeoutMs: 5000,\r\n            /** Followup WI to remove hardcoded value: https://domoreexp.visualstudio.com/MSTeams/_workitems/edit/2307271 */\r\n            maxBackoffMs: cfg.trouterSettings.productName === 'TeamsCDL' ? 300000 : 30000,\r\n            requestTimeoutMs: 5000,\r\n            userActivityResponseTimeoutMs: 10000,\r\n            ...cfg.trouterSettings.timeoutOptions\r\n        },\r\n        incallTimeoutOptions: {\r\n            connectionTimeoutMs: 10000,\r\n            fetchTimeoutMs: 5000,\r\n            pingTimeoutMs: 5000,\r\n            pongTimeoutMs: 2000,\r\n            maxBackoffMs: cfg.trouterSettings.productName === 'TeamsCDL' ? 300000 : 10000,\r\n            requestTimeoutMs: 5000,\r\n            userActivityResponseTimeoutMs: 10000,\r\n            ...cfg.trouterSettings.incallTimeoutOptions\r\n        },\r\n        incallModeTimeoutMs: cfg.trouterSettings.incallModeTimeoutMs || 0,\r\n        lingeringConnectionDelayMs: 60000,\r\n        userActivitySecondResendDelayMs: cfg.trouterSettings.userActivitySecondResendDelayMs || 10000,\r\n        duplicateDisconnectThresholdMs: 10000,\r\n        connectionCache: cfg.connectionCache,\r\n        registrationStateCallback: cfg.registrationStateCallbackForAcsDoNotUse,\r\n        retryLimitOnTokenFetch: cfg.trouterSettings.productName === 'TeamsCDL' ? 15 : cfg.trouterSettings.retryLimitOnTokenFetch\r\n    };\r\n}\r\n\r\nexport type TelemetryEvent = {\r\n    // tslint:disable-next-line:no-reserved-keywords\r\n    type: string;\r\n    registrationId: string;\r\n    connectionId?: string;\r\n    connectedClientId?: string;\r\n};\r\n\r\ninterface IWrappedStateChangedListener extends TrouterConnectionListener {\r\n    (state: TrouterState, info?: IConnectionInfo): void;\r\n    wrappedCallback: StateChangedListener;\r\n}\r\n\r\n/**\r\n * TrouterService implementation class\r\n */\r\nexport class TrouterService implements ITrouterServiceBase, Client, Listener {\r\n    private logger: Logger;\r\n    private trouterServer?: TrouterManager;\r\n    private listeners: { [path: string]: Listener };\r\n    private connectionInfo: ConnectionInfo | null;\r\n    private trouterCfg?: ITrouterServiceConfig;\r\n    private ecsCfg?: IEcsConfig;\r\n\r\n\r\n    // Legacy fields\r\n    private trouterUrlPromise: TrouterUrlPromise;\r\n    private stateChangedListeners: (TrouterConnectionListener | IWrappedStateChangedListener)[] = [];\r\n    private messageHandlers: MessageHandlerRegistry;\r\n\r\n    public constructor(private logProvider: LogProvider) {\r\n        this.logger = new Logger('Trouter', logProvider);\r\n        this.trouterUrlPromise = new TrouterUrlPromise(logProvider);\r\n        this.messageHandlers = new MessageHandlerRegistry(logProvider);\r\n        this.listeners = {};\r\n        this.connectionInfo = null;\r\n        this.logger.info(`Created TrouterService version ${CLIENT_VERSION}`);\r\n    }\r\n\r\n    public start(cfg: ITrouterServiceConfig): void {\r\n        this.logger.info('Start');\r\n\r\n        if (!cfg.trouterSettings.disableInternalSkypeTokenCache) {\r\n            const provider = cfg.skypeTokenProvider;\r\n            cfg.skypeTokenProvider = addCacheAsBackupTo(provider);\r\n        }\r\n\r\n        this.trouterCfg = cfg;\r\n        const options = populateTrouterOptions(cfg, this.ecsCfg);\r\n        if (this.trouterServer === undefined) {\r\n            this.trouterServer = new TrouterManager(\r\n                this.logProvider,\r\n                options,\r\n                cfg.skypeTokenProvider,\r\n                this);\r\n        }\r\n        this.trouterServer.start();\r\n    }\r\n\r\n    public stop(dontUnregister?: boolean): void {\r\n        this.logger.info('close connection');\r\n        this.trouterUrlPromise.rejectUrl(new Error('TrouterService is stopped'));\r\n\r\n        if (this.trouterServer !== undefined) {\r\n            this.trouterServer.stop(dontUnregister);\r\n        }\r\n    }\r\n\r\n    public async setEcsConfig(fullEcsData: {}): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const ecsSection = 'TrouterJScriptClient';\r\n            this.ecsCfg = <IEcsConfig>(fullEcsData[ecsSection]);\r\n            this.logger.info(`Setting ECS configuration to ${JSON.stringify(this.ecsCfg)}`);\r\n            if (this.trouterServer !== undefined && this.trouterCfg !== undefined) {\r\n                const options = populateTrouterOptions(this.trouterCfg, this.ecsCfg);\r\n                this.trouterServer.configure(options);\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notifies trouter that network is restored - trouter will try to restore connection immediately\r\n     */\r\n    public checkConnection(disconnectDetected?: boolean): void {\r\n        if (this.trouterServer !== undefined) {\r\n            this.trouterServer.checkConnection(disconnectDetected || false);\r\n        }\r\n    }\r\n\r\n    public async resendRegistration(): Promise<void> {\r\n        if (!this.trouterServer) {\r\n            throw new Error('resendRegistration called too early');\r\n        }\r\n\r\n        return this.trouterServer.resendRegistration();\r\n    }\r\n\r\n\r\n    // Listeners\r\n\r\n    public registerListener(listener: Listener, path: string): boolean {\r\n        if (path === '' || path[0] !== '/' || path.indexOf('?') >= 0 || path.indexOf('#') >= 0) {\r\n            this.logger.error(`Listener path '${path}' is not valid`);\r\n\r\n            return false;\r\n        }\r\n        if (this.listeners[path]) {\r\n            this.logger.error(`Another listener is already registered for path '${path}'`);\r\n\r\n            return false;\r\n        }\r\n        this.listeners[path] = listener;\r\n        this.logger.debug(`Listener for path '${path}' registered`);\r\n        if (this.connectionInfo) {\r\n            listener.onTrouterConnected(this.connectionInfo.baseEndpointUrl + path, this.connectionInfo);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public unregisterListener(listener: Listener): boolean {\r\n        const paths: string[] = [];\r\n        for (const path of Object.keys(this.listeners)) {\r\n            if (this.listeners[path] === listener) {\r\n                paths.push(path);\r\n            }\r\n        }\r\n        if (paths.length === 0) {\r\n            return false;\r\n        }\r\n        for (const path of paths) {\r\n            delete this.listeners[path];\r\n        }\r\n        this.logger.debug(`Listener for path(s) '${paths.join('\\', \\'')}' unregistered`);\r\n\r\n        return true;\r\n    }\r\n\r\n    public onTrouterConnected(endpointUrl: string, connectionInfo: ConnectionInfo): void {\r\n        this.logger.debug('Trouter is now connected');\r\n        for (const path of Object.keys(this.listeners)) {\r\n            try {\r\n                this.listeners[path].onTrouterConnected(connectionInfo.baseEndpointUrl + path, connectionInfo);\r\n            } catch (e) {\r\n                this.logger.error(`Listener '${path}' threw an exception from onTrouterConnected(): ${e}`);\r\n            }\r\n        }\r\n        this.connectionInfo = connectionInfo;\r\n\r\n        this.trouterUrlPromise.resolveUrl(endpointUrl);\r\n        this.notifyStateChanged(TrouterState.Connected, {\r\n            url: endpointUrl,\r\n            getRemainingTtlInSec: () => connectionInfo.connectionTtlSec\r\n        });\r\n    }\r\n\r\n    public onTrouterDisconnected(): void {\r\n        this.logger.debug('Trouter is now disconnected');\r\n        this.connectionInfo = null;\r\n        for (const path of Object.keys(this.listeners)) {\r\n            const listener = this.listeners[path];\r\n            if (listener.onTrouterDisconnected) {\r\n                try {\r\n                    listener.onTrouterDisconnected();\r\n                } catch (e) {\r\n                    this.logger.error(`Listener '${path}' threw an exception from onTrouterDisconnected(): ${e}`);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.notifyStateChanged(TrouterState.Disconnected);\r\n    }\r\n\r\n    public onTrouterRequest(request: Request, response: Response): void {\r\n        let bestPath = '';\r\n        for (const path of Object.keys(this.listeners)) {\r\n            if (request.path.substring(0, path.length) === path && path.length > bestPath.length) {\r\n                bestPath = path;\r\n            }\r\n        }\r\n        if (bestPath !== '') {\r\n            try {\r\n                this.listeners[bestPath].onTrouterRequest(request, response);\r\n            } catch (e) {\r\n                this.logger.error(`Listener '${bestPath}' threw an exception from onTrouterRequest(): ${e}`);\r\n                response.status = 500;\r\n                response.headers = { 'Trouter-Responder': 'ClientLib' };\r\n                response.send();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (this.tryMessageHandlers(request, response)) {\r\n            return;\r\n        }\r\n\r\n        response.status = 404;\r\n        response.headers = { 'Trouter-Responder': 'ClientLib' };\r\n        response.send();\r\n    }\r\n\r\n    public onTrouterMessageLoss(flowTags: string[]): boolean {\r\n        this.logger.info(`onTrouterMessageLoss called with value ${flowTags}`);\r\n\r\n        let messageLossProcessed = true;\r\n        for (const path of Object.keys(this.listeners)) {\r\n            const listener = this.listeners[path];\r\n            if (listener.onTrouterMessageLoss) {\r\n                try {\r\n                    messageLossProcessed = listener.onTrouterMessageLoss(flowTags) && messageLossProcessed;\r\n\r\n                    if (messageLossProcessed === undefined) {\r\n                        this.logger.error(`Listener '${path}' did not response with boolean value onTrouterMessageLoss()`);\r\n                        messageLossProcessed = false;\r\n                    }\r\n                } catch (e) {\r\n                    this.logger.error(`Listener '${path}' threw an exception from onTrouterMessageLoss(): ${e}`);\r\n                    messageLossProcessed = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return messageLossProcessed;\r\n    }\r\n\r\n    public onTrouterUserActivityStateAccepted(cv: string): void {\r\n        this.logger.debug(`onTrouterUserActivityStateAccepted cv: ${cv}`);\r\n        for (const path of Object.keys(this.listeners)) {\r\n            const listener = this.listeners[path];\r\n            if (listener.onTrouterUserActivityStateAccepted) {\r\n                try {\r\n                    listener.onTrouterUserActivityStateAccepted(cv);\r\n                } catch (e) {\r\n                    this.logger.error(`Listener '${path}' threw an exception from onTrouterUserActivityStateAccepted(): ${e}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public setUserActivityState(state: UserActivityState, correlationVector?: string): void {\r\n        if (state !== UserActivityState.Active && state !== UserActivityState.Inactive) {\r\n            throw new Error(`setUserActivityState called with unsupported value ${state}`);\r\n        }\r\n        this.logger.info(`setUserActivityState called with value ${UserActivityState[state]}`);\r\n\r\n        if (this.trouterServer && this.state() !== TrouterState.Unknown) {\r\n            this.trouterServer.setUserActivityState(state, correlationVector);\r\n        } else {\r\n            throw new Error('setUserActivityState called too early');\r\n        }\r\n    }\r\n\r\n\r\n    // Legacy API\r\n\r\n    public state(): TrouterState {\r\n        if (this.trouterServer !== undefined) {\r\n            return this.trouterServer.getState();\r\n        }\r\n\r\n        return TrouterState.Unknown;\r\n    }\r\n\r\n    public getServerState(): ServerState | undefined {\r\n        if (this.trouterServer !== undefined) {\r\n            return this.trouterServer.getServerState();\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    // tslint:disable-next-line:promise-function-async\r\n    public getTrouterUrlAsync(): Promise<string> {\r\n        if (this.trouterServer !== undefined) {\r\n            return this.trouterUrlPromise.getPromise();\r\n        } else {\r\n            return Promise.reject(new Error('TrouterService has not been started'));\r\n        }\r\n    }\r\n\r\n    public onStateChanged(callback: StateChangedListener | undefined): void {\r\n        this.logger.info('onStateChanged called');\r\n        if (callback === undefined) {\r\n            this.stateChangedListeners = this.stateChangedListeners.filter(\r\n                (listener) => ((<IWrappedStateChangedListener>listener).wrappedCallback === undefined));\r\n        } else {\r\n            this.offStateChanged(callback);\r\n            const wrapper = (state: TrouterState, info?: IConnectionInfo) => {\r\n                callback(state, info ? info.url : '');\r\n            };\r\n            (<IWrappedStateChangedListener>wrapper).wrappedCallback = callback;\r\n            this.stateChangedListeners.push(wrapper);\r\n        }\r\n    }\r\n\r\n    public offStateChanged(callback: StateChangedListener): boolean {\r\n        this.logger.info('offStateChanged called');\r\n        const sizeBeforeRemoval = this.stateChangedListeners.length;\r\n        this.stateChangedListeners = this.stateChangedListeners.filter(\r\n            (listener) => ((<IWrappedStateChangedListener>listener).wrappedCallback !== callback));\r\n\r\n        return (sizeBeforeRemoval > this.stateChangedListeners.length);\r\n    }\r\n\r\n    public addCallback(callback: TrouterConnectionListener): void {\r\n        this.logger.info('addListener called');\r\n        const index = this.stateChangedListeners.indexOf(callback, 0);\r\n        if (index === -1 && callback !== undefined) {\r\n            this.stateChangedListeners.push(callback);\r\n        }\r\n    }\r\n\r\n    public removeCallback(callback: TrouterConnectionListener): boolean {\r\n        this.logger.info('removeListener called');\r\n        const index = this.stateChangedListeners.indexOf(callback, 0);\r\n        if (index > -1) {\r\n            this.stateChangedListeners.splice(index, 1);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public registerMessageHandler(handler: MessageHandler) {\r\n        this.logger.info('registerMessageHandler is called');\r\n        this.messageHandlers.register(handler);\r\n    }\r\n\r\n    public clearMessageHandlers(): void {\r\n        this.logger.info('clearMessageHandlers is called');\r\n        this.messageHandlers.clear();\r\n    }\r\n\r\n    private notifyStateChanged(state: TrouterState, info?: IConnectionInfo): void {\r\n        this.logger.info(`notifyStateChanged called, will forward to ${this.stateChangedListeners.length} listeners`);\r\n        this.stateChangedListeners.forEach(callback => {\r\n            try {\r\n                callback(state, info);\r\n            } catch (error) {\r\n                this.logger.error(`Error in callback ${error}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    private tryMessageHandlers(request: Request, response: Response): boolean {\r\n        if (!this.messageHandlers.active()) {\r\n\r\n            return false;\r\n        }\r\n\r\n        let body: TrouterRequestBody | undefined;\r\n        let eventId: number | null = null;\r\n\r\n        try {\r\n            body = <TrouterRequestBody>JSON.parse(request.body);\r\n            eventId = (body && (body.evt || body.eventId)) || null;\r\n        } catch (e) { }\r\n\r\n        const message = {\r\n            eventId: eventId,\r\n            url: (this.connectionInfo ? this.connectionInfo.baseEndpointUrl : '') + request.path,\r\n            body: body,\r\n            rawBody: request.body,\r\n            headers: request.headers\r\n        };\r\n\r\n        const result = this.messageHandlers.handleMessage(message);\r\n        if (!result.isHandled) {\r\n\r\n            return false;\r\n        }\r\n\r\n        response.status = result.resultCode;\r\n        if (result.responseHeaders) {\r\n            response.headers = result.responseHeaders;\r\n        }\r\n        if (result.responseBody) {\r\n            response.body = result.responseBody;\r\n        }\r\n        response.send();\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function createTrouterService(logger: LogProvider): ITrouterServiceBase {\r\n    return new TrouterService(logger);\r\n}\r\n\r\nexport function getTrouterServiceVersion(): string {\r\n    return CLIENT_VERSION;\r\n}\r\n\r\nexport function replaceTrouterUrlBase(existingUrl: string, newBase: string): string {\r\n    const schemaSepPos = existingUrl.indexOf('://');\r\n    if (schemaSepPos >= 0) {\r\n        const pathSepPos = existingUrl.indexOf('/', schemaSepPos + 3);\r\n        if (pathSepPos >= 0) {\r\n            return newBase + existingUrl.substr(pathSepPos);\r\n        }\r\n    }\r\n\r\n    return '';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib_temp/TsTrouter.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_20__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@skype/tsregistrar\"\n// module id = 20\n// module chunks = 0","\"use strict\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexports.__esModule = true;\nexports.MAX_NUMBER_OF_TOKEN_FETCH_RETRIES = 3;\n// GCC High gov cloud URLs\nexports.GCCHIGH_TROUTER_SERVICE_URL = \"https://go.trouter.gov.teams.microsoft.us/v4/a\";\nexports.GCCHIGH_REGISTRAR_SERVICE_URL = \"https://registrar.gov.teams.microsoft.us/V3/registrations\";\n// GCC gov cloud URLs\nexports.GCC_TROUTER_SERVICE_URL = \"https://go.trouter.gcc.teams.microsoft.com/v4/a\";\n// DoD gov cloud URLs\nexports.DOD_TROUTER_SERVICE_URL = \"https://go.trouter.dod.teams.microsoft.us/v4/a\";\nexports.DOD_REGISTRAR_SERVICE_URL = \"https://registrar.dod.teams.microsoft.us/V3/registrations\";\n// Int URLs\nexports.INT_TROUTER_SERVICE_URL = \"https://go.trouter-int.skype.net/v4/a\";\nexports.INT_REGISTRAR_SERVICE_URL = \"https://edge.skype.net/registrar/testenv/v3/registrations\";\n// EUDB URLs\nexports.EUDB_TROUTER_SERVICE_URL = \"https://go-eu.trouter.teams.microsoft.com/v4/a\";\n// Public URLs\nexports.PUBLIC_TROUTER_SERVICE_URL = \"https://go.trouter.teams.microsoft.com/v4/a\";\nexports.PUBLIC_REGISTRAR_SERVICE_URL = \"https://teams.microsoft.com/registrar/prod/v3/registrations\";\n// Gov cloud types\nvar CloudType;\n(function (CloudType) {\n    CloudType[\"Public\"] = \"Public\";\n    CloudType[\"GccHigh\"] = \"GCC High\";\n    CloudType[\"Dod\"] = \"DoD\";\n})(CloudType = exports.CloudType || (exports.CloudType = {}));\nvar CloudPrefix;\n(function (CloudPrefix) {\n    CloudPrefix[\"OrgId\"] = \"orgid\";\n    CloudPrefix[\"Acs\"] = \"acs\";\n    CloudPrefix[\"Spool\"] = \"spool\";\n    CloudPrefix[\"GccHigh\"] = \"gcch\";\n    CloudPrefix[\"GccHighAcs\"] = \"gcch-acs\";\n    CloudPrefix[\"Dod\"] = \"dod\";\n    CloudPrefix[\"DodAcs\"] = \"dod-acs\";\n})(CloudPrefix = exports.CloudPrefix || (exports.CloudPrefix = {}));\nexports.EudbCountries = [\"europe\", \"france\", \"germany\", \"norway\", \"switzerland\", \"sweden\"];\n","\"use strict\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nvar core_http_1 = require(\"@azure/core-http\");\nvar constants_1 = require(\"./constants\");\nvar eventIds = new Map([\n    [\"chatMessageReceived\", 200],\n    [\"typingIndicatorReceived\", 245],\n    [\"readReceiptReceived\", 246],\n    [\"chatMessageEdited\", 247],\n    [\"chatMessageDeleted\", 248],\n    [\"chatThreadCreated\", 257],\n    [\"chatThreadPropertiesUpdated\", 258],\n    [\"chatThreadDeleted\", 259],\n    [\"participantsAdded\", 260],\n    [\"participantsRemoved\", 261]\n]);\nvar publicTeamsUserPrefix = \"8:orgid:\";\nvar dodTeamsUserPrefix = \"8:dod:\";\nvar gcchTeamsUserPrefix = \"8:gcch:\";\nvar teamsVisitorUserPrefix = \"8:teamsvisitor:\";\nvar phoneNumberPrefix = \"4:\";\nvar acsUserPrefix = \"8:acs:\";\nvar acsGcchUserPrefix = \"8:gcch-acs:\";\nvar acsDodUserPrefix = \"8:dod-acs:\";\nvar spoolUserPrefix = \"8:spool:\";\nexports.toMessageHandler = function (event, listener, resourceEndpoint, gatewayApiVersion) {\n    var eventId = eventIds.get(event);\n    return {\n        handleMessage: function (message) {\n            var genericPayload = null;\n            if (message === null || message === void 0 ? void 0 : message.rawBody) {\n                genericPayload = JSON.parse(message.rawBody);\n            }\n            if (genericPayload === null || genericPayload.eventId !== eventId) {\n                return undefined;\n            }\n            var eventPayload = toEventPayload(event, genericPayload, resourceEndpoint, gatewayApiVersion);\n            if (eventPayload === null) {\n                return undefined;\n            }\n            listener(eventPayload);\n            return { isHandled: true, resultCode: 200 };\n        }\n    };\n};\nvar toEventPayload = function (event, genericPayload, resourceEndpoint, gatewayApiVersion) {\n    if (event === \"chatMessageReceived\") {\n        var payload = genericPayload;\n        var eventPayload = {\n            threadId: payload.groupId,\n            sender: constructIdentifierKindFromMri(payload.senderId),\n            senderDisplayName: payload.senderDisplayName,\n            recipient: constructIdentifierKindFromMri(payload.recipientMri),\n            id: payload.messageId,\n            createdOn: new Date(payload.originalArrivalTime),\n            version: payload.version,\n            type: payload.messageType,\n            message: payload.messageBody,\n            metadata: parseJsonString(payload.acsChatMessageMetadata) || {},\n            attachments: transformEndpoint(parseJsonString(payload.attachments) || [], resourceEndpoint, gatewayApiVersion)\n        };\n        return eventPayload;\n    }\n    if (event === \"chatMessageEdited\") {\n        var payload = genericPayload;\n        var eventPayload = {\n            threadId: payload.groupId,\n            sender: constructIdentifierKindFromMri(payload.senderId),\n            senderDisplayName: payload.senderDisplayName,\n            recipient: constructIdentifierKindFromMri(payload.recipientMri),\n            id: payload.messageId,\n            createdOn: new Date(payload.originalArrivalTime),\n            version: payload.version,\n            message: payload.messageBody,\n            editedOn: new Date(payload.edittime),\n            type: payload.messageType,\n            metadata: parseJsonString(payload.acsChatMessageMetadata) || {},\n            attachments: transformEndpoint(parseJsonString(payload.attachments) || [], resourceEndpoint, gatewayApiVersion)\n        };\n        return eventPayload;\n    }\n    if (event === \"chatMessageDeleted\") {\n        var payload = genericPayload;\n        var eventPayload = {\n            threadId: payload.groupId,\n            sender: constructIdentifierKindFromMri(payload.senderId),\n            senderDisplayName: payload.senderDisplayName,\n            recipient: constructIdentifierKindFromMri(payload.recipientMri),\n            id: payload.messageId,\n            createdOn: new Date(payload.originalArrivalTime),\n            version: payload.version,\n            deletedOn: new Date(payload.deletetime),\n            type: payload.messageType\n        };\n        return eventPayload;\n    }\n    if (event === \"typingIndicatorReceived\") {\n        var payload = genericPayload;\n        var eventPayload = {\n            threadId: payload.groupId,\n            sender: constructIdentifierKindFromMri(payload.senderId),\n            senderDisplayName: payload.senderDisplayName,\n            recipient: constructIdentifierKindFromMri(payload.recipientMri),\n            version: payload.version,\n            receivedOn: new Date(payload.originalArrivalTime)\n        };\n        return eventPayload;\n    }\n    if (event === \"readReceiptReceived\") {\n        var payload = genericPayload;\n        var readReceiptMessageBody = JSON.parse(payload.messageBody);\n        var consumptionHorizon = readReceiptMessageBody.consumptionhorizon.split(\";\");\n        var eventPayload = {\n            threadId: payload.groupId,\n            sender: constructIdentifierKindFromMri(payload.senderId),\n            senderDisplayName: \"\",\n            recipient: constructIdentifierKindFromMri(payload.recipientMri),\n            chatMessageId: payload.messageId,\n            readOn: new Date(+consumptionHorizon[1])\n        };\n        return eventPayload;\n    }\n    if (event === \"chatThreadCreated\") {\n        var payload = genericPayload;\n        var createdByPayload = JSON.parse(unescape(payload.createdBy));\n        var membersPayload = JSON.parse(unescape(payload.members));\n        var createdBy = toChatParticipant(createdByPayload);\n        var chatParticipants = membersPayload.map(function (m) {\n            return toChatParticipant(m);\n        });\n        var eventPayload = {\n            threadId: payload.threadId,\n            createdOn: new Date(payload.createTime),\n            createdBy: createdBy,\n            version: payload.version,\n            participants: chatParticipants,\n            properties: toThreadProperties(JSON.parse(unescape(payload.properties)))\n        };\n        return eventPayload;\n    }\n    if (event === \"chatThreadPropertiesUpdated\") {\n        var payload = genericPayload;\n        var updatedByPayload = JSON.parse(unescape(payload.editedBy));\n        var updatedBy = toChatParticipant(updatedByPayload);\n        var eventPayload = {\n            threadId: payload.threadId,\n            updatedOn: new Date(payload.editTime),\n            updatedBy: updatedBy,\n            version: payload.version,\n            properties: toThreadProperties(JSON.parse(unescape(payload.properties)))\n        };\n        return eventPayload;\n    }\n    if (event === \"chatThreadDeleted\") {\n        var payload = genericPayload;\n        var deletedBy = toChatParticipant(JSON.parse(unescape(payload.deletedBy)));\n        var eventPayload = {\n            threadId: payload.threadId,\n            deletedOn: new Date(payload.deleteTime),\n            deletedBy: deletedBy,\n            version: payload.version\n        };\n        return eventPayload;\n    }\n    if (event === \"participantsAdded\") {\n        var payload = genericPayload;\n        var addedByPayload = JSON.parse(unescape(payload.addedBy));\n        var participantsAddedPayload = JSON.parse(unescape(payload.participantsAdded));\n        var addedBy = toChatParticipant(addedByPayload);\n        var chatParticipants = participantsAddedPayload.map(function (m) {\n            return toChatParticipant(m);\n        });\n        var eventPayload = {\n            threadId: payload.threadId,\n            addedOn: new Date(payload.time),\n            addedBy: addedBy,\n            version: payload.version,\n            participantsAdded: chatParticipants\n        };\n        return eventPayload;\n    }\n    if (event === \"participantsRemoved\") {\n        var payload = genericPayload;\n        var removedByPayload = JSON.parse(unescape(payload.removedBy));\n        var participantsRemovedPayload = JSON.parse(unescape(payload.participantsRemoved));\n        var removedBy = toChatParticipant(removedByPayload);\n        var chatParticipants = participantsRemovedPayload.map(function (m) {\n            return toChatParticipant(m);\n        });\n        var eventPayload = {\n            threadId: payload.threadId,\n            removedOn: new Date(payload.time),\n            removedBy: removedBy,\n            version: payload.version,\n            participantsRemoved: chatParticipants\n        };\n        return eventPayload;\n    }\n    return null;\n};\nvar toChatParticipant = function (payload) {\n    var _a;\n    var participant = {\n        id: constructIdentifierKindFromMri(payload.participantId),\n        displayName: payload.displayName,\n        metadata: parseJsonString((_a = payload.memberMetaData) !== null && _a !== void 0 ? _a : \"\") || {}\n    };\n    if (payload.shareHistoryTime) {\n        participant.shareHistoryTime = new Date(payload.shareHistoryTime);\n    }\n    return participant;\n};\nvar toThreadProperties = function (payload) {\n    var _a;\n    return {\n        topic: payload.topic,\n        metadata: parseJsonString((_a = payload.acsChatThreadMetadata) !== null && _a !== void 0 ? _a : \"\") || {}\n    };\n};\nexports.toLogProvider = function (logger) {\n    return {\n        log: function () {\n            var message = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                message[_i] = arguments[_i];\n            }\n            return logger.info(message);\n        },\n        warn: function () {\n            var message = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                message[_i] = arguments[_i];\n            }\n            return logger.warning(message);\n        },\n        error: function () {\n            var message = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                message[_i] = arguments[_i];\n            }\n            return logger.error(message);\n        },\n        debug: function () {\n            var message = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                message[_i] = arguments[_i];\n            }\n            return logger.verbose(message);\n        },\n        info: function () {\n            var message = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                message[_i] = arguments[_i];\n            }\n            return logger.verbose(message);\n        }\n    };\n};\nexports.toTelemetrySender = function (logger) {\n    return {\n        logEvent: function (clientEvent) { return logger.info(clientEvent); }\n    };\n};\nvar constructIdentifierKindFromMri = function (mri) {\n    if (mri.startsWith(publicTeamsUserPrefix)) {\n        return {\n            kind: \"microsoftTeamsUser\",\n            rawId: mri,\n            microsoftTeamsUserId: mri.substring(publicTeamsUserPrefix.length),\n            isAnonymous: false,\n            cloud: \"public\"\n        };\n    }\n    else if (mri.startsWith(dodTeamsUserPrefix)) {\n        return {\n            kind: \"microsoftTeamsUser\",\n            rawId: mri,\n            microsoftTeamsUserId: mri.substring(dodTeamsUserPrefix.length),\n            isAnonymous: false,\n            cloud: \"dod\"\n        };\n    }\n    else if (mri.startsWith(gcchTeamsUserPrefix)) {\n        return {\n            kind: \"microsoftTeamsUser\",\n            rawId: mri,\n            microsoftTeamsUserId: mri.substring(gcchTeamsUserPrefix.length),\n            isAnonymous: false,\n            cloud: \"gcch\"\n        };\n    }\n    else if (mri.startsWith(teamsVisitorUserPrefix)) {\n        return {\n            kind: \"microsoftTeamsUser\",\n            rawId: mri,\n            microsoftTeamsUserId: mri.substring(teamsVisitorUserPrefix.length),\n            isAnonymous: true\n        };\n    }\n    else if (mri.startsWith(phoneNumberPrefix)) {\n        return {\n            kind: \"phoneNumber\",\n            rawId: mri,\n            phoneNumber: mri.substring(phoneNumberPrefix.length)\n        };\n    }\n    else if (mri.startsWith(acsUserPrefix) ||\n        mri.startsWith(acsGcchUserPrefix) ||\n        mri.startsWith(acsDodUserPrefix) ||\n        mri.startsWith(spoolUserPrefix)) {\n        return { kind: \"communicationUser\", communicationUserId: mri };\n    }\n    else {\n        return { kind: \"unknown\", id: mri };\n    }\n};\nvar parseJsonString = function (str) {\n    if (str === undefined ||\n        str === null ||\n        str === \"\" ||\n        str === \"null\" ||\n        str === \"{}\" ||\n        str === \"[]\") {\n        return undefined;\n    }\n    return JSON.parse(str);\n};\nvar createMediaUrlString = function (urlString, resourceEndpoint, gatewayApiVersion) {\n    var url;\n    try {\n        url = new URL(urlString);\n        if (url.protocol === \"http:\" || url.protocol === \"https:\") {\n            // If its already a full url, substitute the origin\n            url = new URL(url.pathname, resourceEndpoint);\n        }\n    }\n    catch (_) {\n        // urlString is a likely a relative URL, so create a new one with the resourceEndpoint as base\n        try {\n            url = new URL(urlString, resourceEndpoint);\n        }\n        catch (_) {\n            // If we get here, then the urlString passed in is likely incorrect, so just pass it along\n            // As there's nothing we can do at this point.\n            return urlString;\n        }\n    }\n    // Append api-version query and return string\n    url.searchParams.set('api-version', gatewayApiVersion);\n    return url.toString();\n};\nvar isValidURL = function (str) {\n    var url;\n    try {\n        url = new URL(str);\n    }\n    catch (_) {\n        return false;\n    }\n    return url.protocol === \"http:\" || url.protocol === \"https:\";\n};\nvar transformEndpoint = function (attachments, resourceEndpoint, gatewayApiVersion) {\n    if (resourceEndpoint === undefined ||\n        resourceEndpoint === null ||\n        resourceEndpoint === \"\" ||\n        !isValidURL(resourceEndpoint)) {\n        return attachments;\n    }\n    attachments\n        .filter(function (e) { return e.attachmentType.toLowerCase() === \"image\".toLowerCase(); })\n        .map(function (attachment) {\n        if (attachment.previewUrl) {\n            attachment.previewUrl = createMediaUrlString(attachment.previewUrl, resourceEndpoint, gatewayApiVersion);\n        }\n        if (attachment.url) {\n            attachment.url = createMediaUrlString(attachment.url, resourceEndpoint, gatewayApiVersion);\n        }\n    });\n    return attachments;\n};\nexports.base64decode = function (encodedString) {\n    return !core_http_1.isNode ? atob(encodedString) : Buffer.from(encodedString, \"base64\").toString();\n};\nvar parseJWT = function (token) {\n    var _a = token === null || token === void 0 ? void 0 : token.split(\".\"), payload = _a[1];\n    if (payload === undefined) {\n        throw new Error(\"Invalid token\");\n    }\n    payload = payload.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    return JSON.parse(decodeURIComponent(escape(exports.base64decode(payload))));\n};\nexports.parseTokenCredential = function (credential) { return __awaiter(void 0, void 0, void 0, function () {\n    var accessToken, jwtToken, parsedJwtToken, identityMri, acsResourceId, cloudType, resourceLocation;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, credential.getToken()];\n            case 1:\n                accessToken = _a.sent();\n                jwtToken = accessToken === null || accessToken === void 0 ? void 0 : accessToken.token;\n                parsedJwtToken = parseJWT(jwtToken);\n                identityMri = parsedJwtToken.skypeid;\n                acsResourceId = parsedJwtToken.resourceId;\n                cloudType = getCloudTypeFromSkypeId(identityMri);\n                resourceLocation = parsedJwtToken.resourceLocation || \"\";\n                return [2 /*return*/, { jwtToken: jwtToken, acsResourceId: acsResourceId, identityMri: identityMri, cloudType: cloudType, resourceLocation: resourceLocation }];\n        }\n    });\n}); };\nfunction isEudbLocation(location) {\n    return !!location && !!constants_1.EudbCountries.find(function (euLocation) { return euLocation === location; });\n}\nexports.isEudbLocation = isEudbLocation;\nfunction getCloudTypeFromSkypeId(skypeId) {\n    var cloudPrefix = skypeId.substring(0, skypeId.indexOf(\":\"));\n    switch (cloudPrefix) {\n        case constants_1.CloudPrefix.OrgId:\n        case constants_1.CloudPrefix.Acs:\n        case constants_1.CloudPrefix.Spool: {\n            return constants_1.CloudType.Public;\n        }\n        case constants_1.CloudPrefix.GccHigh:\n        case constants_1.CloudPrefix.GccHighAcs: {\n            return constants_1.CloudType.GccHigh;\n        }\n        case constants_1.CloudPrefix.Dod:\n        case constants_1.CloudPrefix.DodAcs: {\n            return constants_1.CloudType.Dod;\n        }\n        default: {\n            return constants_1.CloudType.Public;\n        }\n    }\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nvar core_http_1 = require(\"@azure/core-http\");\nvar TrouterUtils_1 = require(\"./TrouterUtils\");\nvar constants_1 = require(\"./constants\");\nvar defaultSettings = {\n    version: \"1.0.0\",\n    registrationId: \"\",\n    sessionId: \"\",\n    pnhAppId: \"AcsWeb\",\n    pnhTemplate: \"AcsWeb_Chat_1.8\",\n    platform: \"SPOOL\",\n    platformUIVersion: \"0.0.0\",\n    environment: \"\",\n    productName: \"acs-chat-web\",\n    trouterServiceUrl: constants_1.PUBLIC_TROUTER_SERVICE_URL,\n    registrarServiceUrl: constants_1.PUBLIC_REGISTRAR_SERVICE_URL,\n    registrarRefreshTimeoutInMs: 350000,\n    timeoutOptions: {\n        connectionTimeoutMs: 20000,\n        fetchTimeoutMs: 10000,\n        pingTimeoutMs: 40000,\n        pongTimeoutMs: 5000,\n        maxBackoffMs: 50000,\n        requestTimeoutMs: 5000\n    },\n    maxRegistrationTimeInMs: 7200000\n};\nvar createDefaultSettings = function () {\n    var settings = defaultSettings;\n    settings.registrationId = core_http_1.generateUuid();\n    settings.sessionId = core_http_1.generateUuid();\n    return settings;\n};\nvar createIntSettings = function () {\n    var settings = createDefaultSettings();\n    settings.pnhAppId = \"cns-e2e-test\";\n    settings.pnhTemplate = \"cns-e2e-test:1.6\";\n    settings.registrarServiceUrl = constants_1.INT_REGISTRAR_SERVICE_URL;\n    settings.trouterServiceUrl = constants_1.INT_TROUTER_SERVICE_URL;\n    return settings;\n};\nvar createGccSettings = function () {\n    var settings = createDefaultSettings();\n    settings.registrarServiceUrl = constants_1.PUBLIC_REGISTRAR_SERVICE_URL;\n    settings.trouterServiceUrl = constants_1.GCC_TROUTER_SERVICE_URL;\n    return settings;\n};\nvar createGcchSettings = function () {\n    var settings = createDefaultSettings();\n    settings.registrarServiceUrl = constants_1.GCCHIGH_REGISTRAR_SERVICE_URL;\n    settings.trouterServiceUrl = constants_1.GCCHIGH_TROUTER_SERVICE_URL;\n    return settings;\n};\nvar createDodSettings = function () {\n    var settings = createDefaultSettings();\n    settings.registrarServiceUrl = constants_1.DOD_REGISTRAR_SERVICE_URL;\n    settings.trouterServiceUrl = constants_1.DOD_TROUTER_SERVICE_URL;\n    return settings;\n};\nvar createEudbSettings = function () {\n    var settings = createDefaultSettings();\n    settings.registrarServiceUrl = constants_1.PUBLIC_REGISTRAR_SERVICE_URL;\n    settings.trouterServiceUrl = constants_1.EUDB_TROUTER_SERVICE_URL;\n    return settings;\n};\nexports.createSettings = function (credential, options) { return __awaiter(void 0, void 0, void 0, function () {\n    var settings, parsedTokenCredential;\n    var _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (!((options === null || options === void 0 ? void 0 : options.environment) === \"INT\")) return [3 /*break*/, 1];\n                settings = createIntSettings();\n                return [3 /*break*/, 3];\n            case 1: return [4 /*yield*/, TrouterUtils_1.parseTokenCredential(credential)];\n            case 2:\n                parsedTokenCredential = _b.sent();\n                if (parsedTokenCredential.cloudType === constants_1.CloudType.GccHigh) {\n                    settings = createGcchSettings();\n                }\n                else if (parsedTokenCredential.cloudType === constants_1.CloudType.Dod) {\n                    settings = createDodSettings();\n                }\n                else if (parsedTokenCredential.resourceLocation === \"usgcc\") {\n                    settings = createGccSettings();\n                }\n                else if (parsedTokenCredential.cloudType === constants_1.CloudType.Public &&\n                    TrouterUtils_1.isEudbLocation(parsedTokenCredential.resourceLocation)) {\n                    settings = createEudbSettings();\n                }\n                else {\n                    settings = createDefaultSettings();\n                }\n                _b.label = 3;\n            case 3:\n                settings.maxRegistrationTimeInMs = (_a = options === null || options === void 0 ? void 0 : options.registrationTimeInMs) !== null && _a !== void 0 ? _a : defaultSettings.maxRegistrationTimeInMs;\n                return [2 /*return*/, settings];\n        }\n    });\n}); };\nexports.defaultTelemetrySettings = {\n    // TBD Can we hook up OpenTelemetry?\n    enabled: false\n};\n","\"use strict\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nvar tstrouter_1 = require(\"@skype/tstrouter\");\nvar TrouterUtils_1 = require(\"./TrouterUtils\");\nvar TrouterSettings_1 = require(\"./TrouterSettings\");\nvar constants_1 = require(\"./constants\");\nvar CommunicationSignalingClient = /** @class */ (function () {\n    function CommunicationSignalingClient(credential, logger, options) {\n        this.credential = credential;\n        this.logger = logger;\n        this.options = options;\n        this.stateChangedListener = null;\n        this.tokenFetchRetries = 0;\n        this.trouter = tstrouter_1.createTrouterService(TrouterUtils_1.toLogProvider(logger));\n    }\n    CommunicationSignalingClient.prototype.start = function () {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function () {\n            var _c, _d;\n            var _this = this;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        this.resourceEndpoint = ((_a = this.options) === null || _a === void 0 ? void 0 : _a.resourceEndpoint) || \"\";\n                        this.gatewayApiVersion = ((_b = this.options) === null || _b === void 0 ? void 0 : _b.gatewayApiVersion) || \"2023-11-07\";\n                        if (!(this.config === undefined)) return [3 /*break*/, 2];\n                        _c = this;\n                        _d = {};\n                        return [4 /*yield*/, TrouterSettings_1.createSettings(this.credential, this.options)];\n                    case 1:\n                        _c.config = (_d.trouterSettings = _e.sent(),\n                            _d.skypeTokenProvider = function (forceRefresh) { return __awaiter(_this, void 0, void 0, function () {\n                                var _a, _b;\n                                return __generator(this, function (_c) {\n                                    switch (_c.label) {\n                                        case 0:\n                                            if (!forceRefresh) return [3 /*break*/, 3];\n                                            this.tokenFetchRetries += 1;\n                                            if (!(this.tokenFetchRetries > constants_1.MAX_NUMBER_OF_TOKEN_FETCH_RETRIES)) return [3 /*break*/, 2];\n                                            return [4 /*yield*/, this.stop(true)];\n                                        case 1:\n                                            _c.sent();\n                                            throw new Error(\"Access token is expired and failed to fetch a valid one after \" + constants_1.MAX_NUMBER_OF_TOKEN_FETCH_RETRIES + \" retries\");\n                                        case 2: return [3 /*break*/, 4];\n                                        case 3:\n                                            this.tokenFetchRetries = 0;\n                                            _c.label = 4;\n                                        case 4:\n                                            _b = (_a = Promise).resolve;\n                                            return [4 /*yield*/, this.credential.getToken()];\n                                        case 5: return [2 /*return*/, _b.apply(_a, [(_c.sent()).token])];\n                                    }\n                                });\n                            }); },\n                            _d.telemetryConfig = {\n                                eventLogger: TrouterUtils_1.toTelemetrySender(this.logger),\n                                settings: TrouterSettings_1.defaultTelemetrySettings\n                            },\n                            _d);\n                        _e.label = 2;\n                    case 2:\n                        this.trouter.start(this.config);\n                        this.trouter.setUserActivityState(tstrouter_1.UserActivityState.Active);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    CommunicationSignalingClient.prototype.stop = function (isTokenExpired) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.trouter.offStateChanged(this.stateChangedListener);\n                this.trouter.clearMessageHandlers();\n                this.trouter.stop(isTokenExpired !== null && isTokenExpired !== void 0 ? isTokenExpired : this.tokenFetchRetries > constants_1.MAX_NUMBER_OF_TOKEN_FETCH_RETRIES);\n                return [2 /*return*/];\n            });\n        });\n    };\n    CommunicationSignalingClient.prototype.on = function (event, listener) {\n        if (event === \"connectionChanged\") {\n            this.trouter.offStateChanged(this.stateChangedListener);\n            this.stateChangedListener = function (state, _url) { return listener(state); };\n            this.trouter.onStateChanged(this.stateChangedListener);\n            return;\n        }\n        this.trouter.registerMessageHandler(TrouterUtils_1.toMessageHandler(event, listener, this.resourceEndpoint, this.gatewayApiVersion));\n    };\n    return CommunicationSignalingClient;\n}());\nexports.CommunicationSignalingClient = CommunicationSignalingClient;\n","\"use strict\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(require(\"./SignalingClient\"));\n"],"names":["root","factory","module","this","moduleId","installedModules","exports","i","l","call","__webpack_require__","m","modules","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","request","timeoutMs","fetchPromise","resolve","reject","fetch","then","response","clearTimeout","timeoutId","catch","error","setTimeout","url","race","timeoutPromise","obj","stringify","start","Date","now","reset","Timespan","logProvider","skypeTokenProvider","options","__extends","setPrototypeOf","__proto__","b","constructor","extendStatics","create","__","__awaiter","thisArg","_arguments","P","generator","Promise","step","next","e","result","done","fulfilled","rejected","apply","__generator","body","v","op","f","_","y","t","label","ops","pop","trys","length","push","g","sent","verb","throw","return","Symbol","iterator","message","_this","Error","logger","maxBackoffInMs","initialDelay","backoffCount","id","ExponentialDelay","idCounter","delay","taskName","timerHandle","calculateNextBackoffMs","info","backoffMs","cancelFunc","cancel","debug","Math","random","backoff","pow","fudge","round","min","DEFAULT_MAX_RETRIES_FOR_GET_TOKEN","DEFAULT_MAX_BACKOFF_TIME_IN_MS","backoffs","maxBackOffTime","maxRetryDelayMs","maxRetriesForGetToken","setTelemetryLogger","eventLogger","register","client","transports","_a","performRegistration","cachedRegistrationParams","unregister","unregisterRequest","registrarUrl","registrationId","method","mode","headers","accept","callRegistrar","cancelPendingRequests","keys","forEach","resendRegistration","eventName","registerRequest","payload","clientDescription","nodeId","toJson","startBackoff","initialRetryDelayMs","stopBackoff","getSkypeToken","retryCount","token","error_1","stringfiedError","err","cancelError_1","JSON","warn","cachedSkypetoken","stopwatch","req","_b","error_2","canceledError_1","details","_c","_d","error_3","_e","setSkypeTokenHeader","clone","fetchWithTimeout","requestTimeoutMs","status","statusText","sendTelemetryEvent","ok","json","skypetoken","set","properties","result_code","begin_timestamp","startTime","elapsed","duration","logEvent","clientEvent","RegistrarClient","require","__WEBPACK_EXTERNAL_MODULE_20__","Logger","constants","TROUTER_INIT","TROUTER_READY_EVENT","TROUTER_READY_TIMEOUT","TROUTER_TOKEN_REQUEST","TROUTER_TOKEN_GET_SUCCEEDED","TROUTER_TOKEN_GET_FAILED","TROUTER_RECONNECTING","RENEWAL","NEW_CONNECTION","ENDPOINT_REGISTRATION_FAILED","CLIENT_VERSION","HANDLED_MESSAGE_ACK","UNHANDLED_MESSAGE_ACK","FAILED_MESSAGE_ACK","UserActivityState","HttpHeaders","TrouterState","expirationTsInSec","getTime","ttlInSec","origin","pathname","correlationVector","base","createCorrelationVectorBase","extension","extend","increase","endChars","chars","charAt","floor","CorrelationVector","Function","eval","window","connectionId","connectedClientId","domId","unsecureUrl","c2cUrlBase","expirationTsSec","getRemainingTtlInSec","calculateTtlInSec","ServerState","UserActivityEventReason","__assign","assign","arguments","io","cv","ua","hr","ackTimeoutMs","cvHeader","requestJson","cvCounter","parse","startTS","shortUrl","replied","timedout","timeoutTimerId","receivedCv","updateCvHeader","on","target","targetCallback","dataCallback","incrementCorrelationVector","responseData","sendResponse","writeHead","write","chunk","end","args","ReconnectReason","manager","tokenProvider","initialUserActivityState","inIncallMode","connectionAttempt","isNavigatorOnline","onNavigatorOnlineStatusUpdateBound","onNavigatorOnlineStatusUpdate","bind","allocationErrorsInRow","unauthorizedErrorCount","pendingTimers","lastDisconnectReason","UNKNOWN_TRANSPORT","timeoutOptions","tokenBackoff","ExponentialBackoff","maxBackoffMs","clientID","location","hostname","clientInfo","safeString","connectionTracker","ConnectionTracker","getServerState","endpointId","clientCorrelationID","environment","applyConnectionTrackerOptions","incallModeTimeoutMs","fsm","TrouterFsm","useIncallMode","registration","fetchTimeoutMs","registrarClient","createRegistrarClient","registrarOptions","userActivityState","externalConnectParams","reconnectParams","navigator","onLine","addEventListener","stop","dontUnregister","removeEventListener","close","configure","trouterUrl","urlChanged","onReconnectRequired","Configuration","checkConnection","disconnectDetected","sendTelemetry","ClientEventName","CheckConnection","disableRegistrationsAndAutoReconnect","stopRegisterTimer","resetRegisterBackoff","disableAutoReconnect","allocateResult","surl","connectionExpireTimestampInSecs","getToken","useCache","retryCounter","trackStart","trackEnd","onTokenReceived","stack","msg","trackError","canRetryTokenFetchRequest","resetTokenBackoff","onTerminalError","requestFunction","startConnectionTimer","stopConnectionTimer","connectionTimeoutMs","connectionTimeoutId","onConnectingTimeout","startPingTimer","transportTypeName","pingTimeoutMs","pingTimerId","setInterval","onPingInterval","stopPingTimer","clearPingResponseTimer","clearInterval","shouldSkipRegistration","hasCustomRegisterTtl","registrarTtlSec","startRegisterTimer","registrationTimerId","ttl","dispatchUnregistered","timeForReregistrationSec","onRegistrationTimeout","buildSocketIoUrlParams","signatureData","connectparams","urlParams","tc","encodeURI","timeout","auth","epid","state","Unknown","userActivity","toEventObject","appendConnectedClientIds","buildQuery","startSocketIo","ioOptions","reconnect","query","socketio","stopSocketIo","socket","connect","onSocketConnecting","onSocketConnect","reason","onSocketConnectFailed","onSocketDisconnect","onSocketReconnect","onSocketReconnectFailed","onSocketReconnecting","onSocketError","onSocketMessage","eventArgs","onTrouterConnected","onTrouterReconnect","onTrouterMessageLoss","removeAllListeners","disconnect","dispatchConnected","onConnected","dispatchRegistered","onRegistered","onUnregistered","dispatchDownstreamRequest","ResponseData","onDownstreamRequest","dispatchReconnecting","onReconnecting","dispatchReconnectIsRequired","useConnectParamsFromCache","onReconnectIsRequired","dispatchDisconnected","onDisconnected","dispatchTrouterMessageLost","messageLossIndicators","onTrouterMessageLost","sendProcessedDroppedIndicators","processedMessageLossEvent","droppedIndicators","sendDownstreamEvent","sendAllocateRequest","trackNewConnection","serviceUrl","rp","se","parseInt","reconnectUrl","connectParams","appendCorrelationIds","appendEndpointId","responseStatusCode","allocateRequest","contentType","substring","responseObj","onAllocationResponse","startTimestamp","testNominalUrlConnectivity","trackProgress","onAllocationFailed","search","check","cor_id","encodeURIComponent","testRequest","toString","Accept","text","sendPingRequest","pingResponseTimerId","emit","onPingResponse","onPingResponseTimeout","pongTimeoutMs","setUserActivityState","userActivityObject","onSetUserActivityState","changed","sendUserActivityState","connected","Connected","sendUserActivityStateMultiple","Modified","forceReconnect","sendRegisterRequest","registrationTtl","isRegistrationTtlLowerThanKnownAllocationTtl","appId","pnhAppId","aesKey","languageId","platform","templateKey","pnhTemplateKey","platformUIVersion","productContext","TROUTER","context","path","onRegistrationSucceed","Registration","span","onRegistrationFailed","sendUnregisterRequest","onUnregistrationSucceed","Unregistration","onUnregistrationFailed","clearTimers","clearTimer","Number","key","restartIncallModeTimer","clearIncallModeTimerId","incallModeTimerId","onIncallModeTimer","enterIncallMode","incallTimeoutOptions","setMaxBackoffMs","exitIncallMode","isIncallMode","sendDisconnectTelemetryEvent","serverClosed","isActive","trackDisconnected","props","clearConnectedInfo","onConnecting","onConnectingFailed","getSessionLength","sessionLengthMs","duplicateDisconnectThresholdMs","errorObject","chainIdLogText","chainId","urlPath","indexOf","trackRequest","sendResponseError","replace","connectedUrl","calculateExpireTsInSec","trackConnected","isNewUrl","ServerInitiated","expediteIfPending","ccid","curlb","pos","substr","onConnectionParametersUpdated","onAllocationSucceed","increasePingResponseCount","map","components","join","isParamsOnly","params","slice","sep","str","cd","latencyMS","send","sentTS","trackResponse","errorMsg","remaining","activityEvent","activityEventObject","toEventJSON","timeoutReached","onUserActivityStateAccepted","userActivitySecondResendDelayMs","registerTimer","onActivityStateResponseTimeout","userActivityResponseTimeoutMs","event","responseCallback","timerId","timerDescription","getRegistrationTtl","allocationTtl","isLower","mergeSettings","telemetrySettings","enable","disable","currentCounter","retryLimitOnTokenFetch","retryLimit","TrouterConnection","messageHandlers","handler","some","item","clear","active","handleMessage","resultCode","isHandled","safeExecuteHandle","messageHandler","exception","MessageHandlerRegistry","provider","forceRefresh","cachedToken","getStateString","Active","Inactive","UserActivityObject","logFunc","listener","TrouterManagerFsm","baseEndpointUrl","processedMessageLoss","firstConnection","secondConnection","getState","startFirstConnection","connection","getConnectionCache","connectionCache","startSecondConnection","stopFirstConnection","storedFirstConnection","stopSecondConnection","stopSecondConnectionDelayed","lingeringConnectionDelayMs","forceStopLingeringConnection","switchConnections","tmp","doesSecondConnectionExist","ss","connectionInfo","newEndpointUrl","clientId","connectionTtlSec","onTrouterDisconnected","dispatchStopped","dispatchRegistrationState","isRegistered","registrationStateCallback","rsp","onTrouterRequest","onReconnectionRequired","onTrouterUserActivityStateAccepted","connectionParameters","setConnectionCache","indicators","filter","di","tag","etag","duplicates","messageLossProcessed","onGetTrouterConnectionCache","serialized","content","onSetTrouterConnectionCache","TrouterManager","getPromise","pendingPromise","pendingPromiseResolveRef","pendingPromiseRejectRef","resolveUrl","resolveCallback","rejectUrl","rejectCallback","resetUrl","TrouterUrlPromise","global","version","protocol","j","sockets","host","uri","util","parseUri","document","domain","port","uuri","uniqueUri","secure","merge","Socket","of","re","parts","exec","addition","chunkQuery","part","qs","split","kv","load","fn","readyState","pageLoaded","element","capture","attachEvent","xdomain","hasCORS","concat","defer","webkit","additional","deep","lastseen","seen","depth","prop","mixin","ctor","ctor2","inherit","isArray","Array","intersect","arr","arr2","longest","shortest","ret","toArray","enu","a","withCredentials","test","userAgent","EventEmitter","$events","addListener","once","self","removeListener","list","splice","listeners","parent","nativeJSON","parser","packets","reasons","advice","encodePacket","packet","type","endpoint","ack","data","adv","ev","ackId","encoded","encodePayload","decoded","decodePacket","match","regexp","pieces","opts","decodePayload","sessid","connectErrorCallback","isOpened","Transport","onData","clearCloseTimeout","connecting","reconnecting","setCloseTimeout","msgs","onPacket","setHeartbeatTimeout","onHeartbeat","onConnect","closeTimeout","onDisconnect","clearTimeouts","reopenTimeout","heartbeat","onOpen","onClose","prepareUrl","scheme","resource","ready","clearEventHandlers","Infinity","open","namespaces","buffer","doBuffer","disconnected","isXDomain","disconnectSync","SocketNamespace","publish","nsp","$emit","handshake","onError","getElementsByTagName","script","createElement","src","insertAt","parentNode","insertBefore","complete","removeChild","xhr","onreadystatechange","empty","responseText","getTransport","override","transport","xdomainCheck","sessionid","sid","connectTimeoutTimer","remainingTransports","tryNextTransport","heartbeatTimeout","heartbeatTimeoutTimer","setBuffer","wasConnecting","wasConnected","reconnectionAttempts","reconnectionTimer","maybeReconnect","reconnectionDelay","redoTransports","tryMultiple","maxAttempts","limit","flags","ackPackets","acks","namespace","lastArg","Flag","websocket","WS","MozWebSocket","WebSocket","onopen","onmessage","onclose","onerror","sendBuffer","XHR","post","posting","sendXHR","ackTimeoutTimer","onload","XDomainRequest","stateChange","setRequestHeader","usesXDomReq","socketProtocol","isXProtocol","XHRPolling","abort","x","scheduleFn","customSchedulerFn","asapFn","asap","vertxNext","flush","useSetTimeout","len","callback","queue","onFulfillment","onRejection","child","noop","PROMISE_ID","makePromise","_state","_result","subscribe","Constructor","promise","GET_THEN_ERROR","fulfillmentHandler","rejectionHandler","thenable","tryThen","sealed","fulfill","_label","FULFILLED","REJECTED","maybeThenable","originalThen","originalResolve","handleOwnThenable","isFunction","handleForeignThenable","selfFulfillment","objectOrFunction","handleMaybeThenable","getThen","_onerror","PENDING","_subscribers","publishRejection","settled","subscribers","detail","invokeCallback","TRY_CATCH_ERROR","succeeded","failed","hasCallback","tryCatch","cannotReturnOwn","resolver","input","_instanceConstructor","_input","_remaining","_enumerate","validationError","entries","nextId","needsResolver","initializePromise","needsNew","local","promiseToString","cast","_isArray","arg","scheduleFlush","browserWindow","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","process","isWorker","nextTick","observer","node","createTextNode","observe","characterData","iterations","port1","port2","postMessage","vertx","runOnLoop","runOnContext","useVertxTimer","_eachEntry","Enumerator","entry","_then","_settledAt","_willSettleAt","all","Resolve","Reject","_setScheduler","setScheduler","_setAsap","setAsap","_asap","polyfill","fun","cachedSetTimeout","defaultSetTimout","marker","cachedClearTimeout","defaultClearTimeout","draining","currentQueue","queueIndex","drainQueue","runTimeout","cleanUpNextTick","run","runClearTimeout","array","Item","title","browser","env","argv","versions","off","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","webpackPolyfill","deprecate","paths","children","stepName","operation","delta","ts","TrackerStep","Properties","numberOfPingReplies","connectedTimestamp","transportType","connectionNumber","enabled","numberOfStepsToMaintain","logHealthCheckError","sendProgressTimeoutSecs","logSendPingError","trouter_js_client_connected","trouter_js_client_disconnected","trouter_js_client_error","trouter_js_client_progress","trouter_js_client_response","trouter_js_client_request","trouter_js_client_registration","trouter_js_client_unregistration","trouter_js_client_check_connection","logfunc","steps","totalStepCount","beginTimestamp","eventLogSettings","connectedInfo","telemetrySender","sendProgress","Progress","cancelProgressTimer","progressTimeout","resetProgressSendTimer","timeoutSecs","setConnectedInfo","copyProperties","dest","source","eventProperties","progress","eventVersion","serverState","ttlInSecs","exc","createStep","addStep","progressHint","subOperation","totalSteps","connectionDuration","stepCount","connectionEstablishmentMs_Total","sessionLengthMS","Disconnected","hasError","requestID","httpMethod","bodyLength","requestTimeStamp","header","Request","responseTimestamp","responseCode","responseLength","Response","settings","max","k","newProgressTimeout","backoffId","ms","State","ConnectedSubstate","worker","incallModeEnabled","Initial","autoReconnect","connectedSubstate","Allocating","Handshaking","Connecting","RetrievingToken","setState","showIgnored","UnregisteringRetrievingToken","Unregistering","Registering","Registered","unauthorized","disconnectReason","NotRegistered","switchToIncallModeIfEnabled","onMissedResponse","TerminalError","onResponseHandlerName","first","Switching","startingCfg","ecsCfg","TelemetryEnabled","ClientTelemetryEventEnabled","res","cfg","trouterSettings","productName","sessionId","populateTelemetryOptions","telemetryConfig","TrouterConnectionUrl","trouterServiceUrl","registrarServiceUrl","pnhTemplate","pnhProductContext","pnhContext","maxRegistrationTimeInMs","trouterConnectTimeoutInMs","registrationStateCallbackForAcsDoNotUse","existingUrl","newBase","schemaSepPos","pathSepPos","stateChangedListeners","trouterUrlPromise","disableInternalSkypeTokenCache","addCacheAsBackupTo","trouterCfg","populateTrouterOptions","trouterServer","setEcsConfig","fullEcsData","registerListener","unregisterListener","endpointUrl","notifyStateChanged","bestPath","tryMessageHandlers","flowTags","getTrouterUrlAsync","onStateChanged","wrappedCallback","offStateChanged","wrapper","sizeBeforeRemoval","addCallback","removeCallback","index","registerMessageHandler","clearMessageHandlers","eventId","evt","rawBody","responseHeaders","responseBody","TrouterService","core_http_1","constants_1","TrouterUtils_1","tstrouter_1","TrouterSettings_1","require$$0"],"mappings":"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"}